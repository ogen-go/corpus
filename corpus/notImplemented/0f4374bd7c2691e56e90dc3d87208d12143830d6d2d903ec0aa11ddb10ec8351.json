{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Cosmo-Tech/cosmotech-api"
		},
		"file": {
			"name": "dataset.yaml",
			"size": 0,
			"path": "dataset/src/main/openapi/dataset.yaml",
			"byteSize": 29504,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Cosmo Tech Dataset Manager API\n  description: Cosmo Tech Dataset Manager API\n  version: 0.0.8-SNAPSHOT\n\nservers:\n- url: 'https://api.azure.cosmo-platform.com'\n- url: 'http://localhost:4010'\n\nsecurity:\n- oAuth2AuthCode: [ ]\n\ntags:\n- name: dataset\n  description: Dataset Management\n\npaths:\n  /organizations/{organization_id}/datasets:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: createDataset\n      tags:\n        - dataset\n      summary: Create a new Dataset\n      requestBody:\n        description: the Dataset to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n            examples:\n              BreweryADT:\n                $ref: '#/components/examples/BreweryADT'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              BreweryADT:\n                $ref: '#/components/examples/BreweryADT'\n      responses:\n        \"201\":\n          description: the dataset details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n              examples:\n                BreweryADT:\n                  $ref: '#/components/examples/BreweryADT'\n        \"400\":\n          description: Bad request\n    get:\n      operationId: findAllDatasets\n      tags:\n        - dataset\n      summary: List all Datasets\n      responses:\n        \"200\":\n          description: the list of Datasets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Dataset'\n              examples:\n                Two:\n                  $ref: '#/components/examples/TwoDatasets'\n  /organizations/{organization_id}/datasets/search:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: searchDatasets\n      tags:\n        - dataset\n      summary: Search Datasets\n      requestBody:\n        description: the Dataset search parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetSearch'\n            examples:\n              DatasetSearch:\n                $ref: '#/components/examples/DatasetSearch'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              DatasetSearch:\n                $ref: '#/components/examples/DatasetSearch'\n      responses:\n        \"200\":\n          description: the list of Datasets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Dataset'\n              examples:\n                Two:\n                  $ref: '#/components/examples/TwoDatasets'\n  /organizations/{organization_id}/datasets/copy:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: copyDataset\n      tags:\n        - dataset\n      summary: Copy a Dataset to another Dataset. Source must have a read capable connector and Target a write capable connector.\n      requestBody:\n        description: the Dataset copy parameters\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetCopyParameters'\n            examples:\n              BreweryDatasetCopyParameters:\n                $ref: '#/components/examples/BreweryDatasetCopyParameters'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              BreweryDatasetCopyParameters:\n                $ref: '#/components/examples/BreweryDatasetCopyParameters'\n      responses:\n        \"201\":\n          description: the Dataset copy operation parameters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatasetCopyParameters'\n              examples:\n                BreweryADT:\n                  $ref: '#/components/examples/BreweryDatasetCopyParameters'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Dataset specified as Source or Target is unknown or you don't have access to it\n  /organizations/{organization_id}/datasets/{dataset_id}:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: dataset_id\n        in: path\n        description: the Dataset identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: findDatasetById\n      tags:\n        - dataset\n      summary: Get the details of a Dataset\n      responses:\n        \"200\":\n          description: the Dataset details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n              examples:\n                BreweryADT:\n                  $ref: '#/components/examples/BreweryADT'\n        \"404\":\n          description: the Dataset specified is unknown or you don't have access to it\n    patch:\n      operationId: updateDataset\n      tags:\n        - dataset\n      summary: Update a dataset\n      requestBody:\n        description: the new Dataset details.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n            examples:\n              BreweryADTUpdate:\n                $ref: '#/components/examples/BreweryADTUpdate'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              BreweryADTUpdate:\n                $ref: '#/components/examples/BreweryADTUpdate'\n      responses:\n        \"200\":\n          description: the dataset details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n              examples:\n                BreweryADTUpdated:\n                  $ref: '#/components/examples/BreweryADTUpdated'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Dataset specified is unknown or you don't have access to it\n    delete:\n      operationId: deleteDataset\n      tags:\n        - dataset\n      summary: Delete a dataset\n      responses:\n        \"204\":\n          description: Request successful\n        \"404\":\n          description: the Dataset specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/datasets/{dataset_id}/compatibility:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: dataset_id\n        in: path\n        description: the Dataset identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: addOrReplaceDatasetCompatibilityElements\n      tags:\n        - dataset\n      summary: Add Dataset Compatibility elements.\n      requestBody:\n        description: the Dataset Compatibility elements\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/DatasetCompatibility\"\n              example:\n                TwoDatasetCompatibility:\n                  summary: 2 Dataset Compatibilities\n                  description: 2 Dataset Compatibilities\n                  value:\n                    - solutionKey: Brewery Solution\n                      minimumVersion: \"1.0.0\"\n                    - solutionKey: Brewery Solution\n                      minimumVersion: \"1.0.1\"\n      responses:\n        \"201\":\n          description: the Dataset Compatibility elements\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DatasetCompatibility'\n              examples:\n                TwoDatasetCompatibility:\n                  summary: 2 Dataset Compatibilities\n                  description: 2 Dataset Compatibilities\n                  value:\n                    - solutionKey: Brewery Solution\n                      minimumVersion: \"1.0.0\"\n                    - solutionKey: Brewery Solution\n                      minimumVersion: \"1.0.1\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: the Dataset specified is unknown or you don't have access to it\n    delete:\n      operationId: removeAllDatasetCompatibilityElements\n      tags:\n        - dataset\n      summary: Remove all Dataset Compatibility elements from the Dataset specified\n      responses:\n        \"204\":\n          description: the operation succeeded\n        \"404\":\n          description: the Dataset specified is unknown or you don't have access to it\n\n  /organizations/{organization_id}/datasets/validators:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: createValidator\n      tags:\n        - validator\n      summary: Register a new validator\n      requestBody:\n        description: the Validator to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Validator'\n            examples:\n              BreweryADTValidator:\n                $ref: '#/components/examples/BreweryADTValidator'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              BreweryADTValidator:\n                $ref: '#/components/examples/BreweryADTValidator'\n      responses:\n        \"201\":\n          description: the validator details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Validator'\n              examples:\n                BreweryADTValidator:\n                  $ref: '#/components/examples/BreweryADTValidator'\n        \"400\":\n          description: Bad request\n    get:\n      operationId: findAllValidators\n      tags:\n        - validator\n      summary: List all Validators\n      responses:\n        \"200\":\n          description: the validator details\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Validator'\n              examples:\n                Two:\n                  $ref: '#/components/examples/OneValidator'\n\n  /organizations/{organization_id}/datasets/validators/{validator_id}:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: validator_id\n        in: path\n        description: the Validator identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: findValidatorById\n      tags:\n        - validator\n      summary: Get the details of a validator\n      responses:\n        \"200\":\n          description: the Validator details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Validator'\n              examples:\n                BreweryADTValidator:\n                  $ref: '#/components/examples/BreweryADTValidator'\n        \"404\":\n          description: the Validator specified is unknown or you don't have access to it\n    delete:\n      operationId: deleteValidator\n      tags:\n        - validator\n      summary: Delete a validator\n      responses:\n        \"204\":\n          description: Request succeeded\n        \"404\":\n          description: the Validator specified is unknown or you don't have access to it\n  /organizations/{organization_id}/datasets/validators/{validator_id}/run:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: validator_id\n        in: path\n        description: the ValidatorRun identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: runValidator\n      tags:\n        - validator\n      summary: Run a Validator\n      requestBody:\n        description: the Validator to run\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidatorRun'\n            examples:\n              BreweryADTRunValidator:\n                $ref: '#/components/examples/BreweryADTRunValidator'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              BreweryADTRunValidator:\n                $ref: '#/components/examples/BreweryADTRunValidator'\n      responses:\n        \"201\":\n          description: the validator run details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidatorRun'\n              examples:\n                BreweryADTValidatorRun:\n                  $ref: '#/components/examples/BreweryADTValidatorRun'\n        \"400\":\n          description: Bad request\n  /organizations/{organization_id}/datasets/validators/{validator_id}/history:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: validator_id\n        in: path\n        description: the ValidatorRun identifier\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: createValidatorRun\n      tags:\n        - validator\n      summary: Register a new validator run\n      requestBody:\n        description: the Validator Run to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidatorRun'\n            examples:\n              BreweryADTValidatorRun:\n                $ref: '#/components/examples/BreweryADTValidatorRun'\n          application/yaml:\n            schema:\n              type: string\n              format: binary\n            examples:\n              BreweryADTValidatorRun:\n                $ref: '#/components/examples/BreweryADTValidatorRun'\n      responses:\n        \"201\":\n          description: the validator run details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidatorRun'\n              examples:\n                BreweryADTValidatorRun:\n                  $ref: '#/components/examples/BreweryADTValidatorRun'\n        \"400\":\n          description: Bad request\n    get:\n      operationId: findAllValidatorRuns\n      tags:\n        - validator\n      summary: List all Validator Runs\n      responses:\n        \"200\":\n          description: the validator run details\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ValidatorRun'\n              examples:\n                Two:\n                  $ref: '#/components/examples/ThreeValidatorRun'\n  /organizations/{organization_id}/datasets/validators/{validator_id}/history/{validatorrun_id}:\n    parameters:\n      - name: organization_id\n        in: path\n        description: the Organization identifier\n        required: true\n        schema:\n          type: string\n      - name: validator_id\n        in: path\n        description: the Validator identifier\n        required: true\n        schema:\n          type: string\n      - name: validatorrun_id\n        in: path\n        description: the Validator Run identifier\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: findValidatorRunById\n      tags:\n        - validator\n      summary: Get the details of a validator run\n      responses:\n        \"200\":\n          description: the Validator Run details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidatorRun'\n              examples:\n                BreweryADTValidatorRun:\n                  $ref: '#/components/examples/BreweryADTValidatorRun'\n        \"404\":\n          description: the ValidatorRun specified is unknown or you don't have access to it\n    delete:\n      operationId: deleteValidatorRun\n      tags:\n        - validator\n      summary: Delete a validator run\n      responses:\n        \"204\":\n          description: Request succeeded\n        \"404\":\n          description: the ValidatorRun specified is unknown or you don't have access to it\ncomponents:\n  securitySchemes:\n    oAuth2AuthCode:\n      type: oauth2\n      description: OAuth2 authentication\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize\n          scopes:\n            http://dev.api.cosmotech.com/platform: Platform scope\n  schemas:\n    DatasetSearch:\n      type: object\n      description: the search options\n      properties:\n        datasetTags:\n          type: array\n          description: the dataset tag list to search\n          items:\n            type: string\n      required:\n        - datasetTags\n    Dataset:\n      type: object\n      description: a Dataset\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the Dataset unique identifier\n        name:\n          type: string\n          description: the Dataset name\n        description:\n          type: string\n          description: the Dataset description\n        ownerId:\n          type: string\n          readOnly: true\n          description: the User id which own this Dataset\n        tags:\n          type: array\n          description: the list of tags\n          items:\n            type: string\n        connector:\n          description: the Connector setup bound to a Dataset\n          $ref: '#/components/schemas/DatasetConnector'\n        fragmentsIds:\n          type: array\n          description: the list of other Datasets ids to compose as fragments\n          items:\n            type: string\n        validatorId:\n          type: string\n          description: the validator id\n        compatibility:\n          type: array\n          description: the list of compatible Solutions versions\n          items:\n            $ref: '#/components/schemas/DatasetCompatibility'\n#      required:\n#        - name\n#        - connector\n    DatasetConnector:\n      type: object\n      description: a Connector setup\n      properties:\n        id:\n          type: string\n          description: the Connector id\n        name:\n          type: string\n          description: the Connector name\n        version:\n          type: string\n          description: the Connector version\n        parametersValues:\n          type: object\n          additionalProperties:\n              type: string\n#      required:\n#       - id\n    DatasetCompatibility:\n      type: object\n      description: a Dataset compatibility constraint to a Solution version open range\n      properties:\n        solutionKey:\n          type: string\n          description: the Solution key which group Solution versions\n        minimumVersion:\n          type: string\n          description: the Solution minimum version compatibility (version included)\n        maximumVersion:\n          type: string\n          description: the Solution maximum version compatibility (version included)\n      required:\n        - solutionKey\n    Validator:\n      type: object\n      description: a Validator to validate a Dataset\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the Validator id\n        name:\n          type: string\n          description: the Validator name\n        description:\n          type: string\n          description: the Validator description\n        repository:\n          type: string\n          description: the registry repository containing the Validator image\n        version:\n          type: string\n          description: the Validator version MAJOR.MINOR.PATCH. Must be aligned with an existing repository tag\n        ownerId:\n          type: string\n          readOnly: true\n          description: the User id which own this Validator\n        url:\n          type: string\n          description: an optional URL link to Validator page\n        tags:\n          type: array\n          description: the list of tags\n          items:\n            type: string\n      required:\n        - id\n        - name\n        - repository\n        - version\n    ValidatorRun:\n      type: object\n      description: a Validator Run\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the Validator Run id\n        validatorId:\n          type: string\n          readOnly: true\n          description: the Validator id\n        validatorName:\n          type: string\n          readOnly: true\n          description: the validator name\n        datasetId:\n          type: string\n          description: the Dataset id to run the validator on\n        datasetName:\n          type: string\n          readOnly: true\n          description: the Dataset name\n        state:\n          type: string\n          readOnly: true\n          description: the Validator Run state\n          enum: [\"Running\",\"Finished\",\"OnError\"]\n        containerId:\n          type: string\n          readOnly: true\n          description: the Validator Run container id\n        logs:\n          type: string\n          readOnly: true\n          description: the Validator Run logs\n      required:\n        - datasetId\n    DatasetCopyParameters:\n      type: object\n      description: the Dataset Copy Parameters\n      properties:\n        sourceId:\n          type: string\n          description: the source Dataset id\n        targetId:\n          type: string\n          description: the target Dataset id\n        options:\n          type: object\n          description: freeform options to path to connectors\n          additionalProperties: true\n  examples:\n    BreweryADT:\n      summary: Brewery ADT Dataset\n      description: Brewery Dataset in ADT example\n      value:\n        id: \"1\"\n        name: Brewery ADT reference\n        description: Brewery reference model in ADT\n        tags:\n          - ADT\n          - Brewery\n          - Reference\n        connector:\n          id: \"1\"\n          name: ADT Connector\n          version: \"1.0.0\"\n          ownerId: \"1\"\n          parametersValues:\n            AZURE_TENANT_ID: \"12345678\"\n            AZURE_CLIENT_ID: \"12345678\"\n            AZURE_CLIENT_SECRET: \"12345678\"\n            AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net\n            ADT_QUERY: SELECT * FROM digitaltwins\n            EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data\n        compatibility:\n          - solutionKey: Brewery Solution\n            minimumVersion: \"1.0.0\"\n    TwoDatasets:\n      summary: Two Datasets example\n      description: Two ADT Datasets example\n      value:\n        - id: \"1\"\n          name: Brewery ADT reference\n          description: Brewery reference model in ADT\n          tags:\n            - ADT\n            - Brewery\n            - Reference\n          connector:\n            id: \"1\"\n            name: ADT Connector\n            version: \"1.0.0\"\n            ownerId: \"1\"\n            parametersValues:\n              AZURE_TENANT_ID: \"12345678\"\n              AZURE_CLIENT_ID: \"12345678\"\n              AZURE_CLIENT_SECRET: \"12345678\"\n              AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net\n              ADT_QUERY: SELECT * FROM digitaltwins\n              EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data\n          compatibility:\n            - solutionKey: Brewery Solution\n              minimumVersion: \"1.0.0\"\n        - id: \"2\"\n          name: Brewery ADT future\n          description: Brewery future model in ADT\n          tags:\n            - ADT\n            - Brewery\n          connector:\n            id: \"1\"\n            name: ADT Connector\n            version: \"1.0.0\"\n            ownerId: \"1\"\n            parametersValues:\n              AZURE_TENANT_ID: \"12345678\"\n              AZURE_CLIENT_ID: \"12345678\"\n              AZURE_CLIENT_SECRET: \"12345678\"\n              AZURE_DIGITAL_TWINS_URL: myotherdt.api.weu.digitaltwins.azure.net\n              ADT_QUERY: SELECT * FROM digitaltwins\n              EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data\n    BreweryADTUpdate:\n      summary: Brewery ADT name update example\n      description: Brewery ADT reference model name update example\n      value:\n        name: Brewery ADT new reference\n    BreweryADTUpdated:\n      summary: Brewery ADT updated Dataset\n      description: Brewery Dataset in ADT name updated example\n      value:\n        id: \"1\"\n        name: Brewery ADT new reference\n        description: Brewery reference model in ADT\n        tags:\n          - ADT\n          - Brewery\n          - Reference\n        connector:\n          id: \"1\"\n          name: ADT Connector\n          version: \"1.0.0\"\n          ownerId: \"1\"\n          parametersValues:\n            AZURE_TENANT_ID: \"12345678\"\n            AZURE_CLIENT_ID: \"12345678\"\n            AZURE_CLIENT_SECRET: \"12345678\"\n            AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net\n            ADT_QUERY: SELECT * FROM digitaltwins\n            EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data\n        compatibility:\n          - solutionKey: Brewery Solution\n            minimumVersion: \"1.0.0\"\n    BreweryADTValidator:\n      summary: Brewery ADT Dataset Validator\n      description: a Validator for the Brewery Dataset from ADT in a Docker image\n      value:\n        id: \"1\"\n        name: Brewery ADT Validator\n        description: A Validator for the Brewery Dataset from ADT\n        repository: brewery_adt_validator\n        version: \"1.0.0\"\n        ownerId: \"1\"\n        url: https://github.com/brewery-adt-validator\n        tags:\n          - Brewery\n          - ADT\n    OneValidator:\n      summary: Dataset Validator list\n      description: a Validator list with one element\n      value:\n        - id: \"1\"\n          name: Brewery ADT Validator\n          description: A Validator for the Brewery Dataset from ADT\n          repository: brewery_adt_validator\n          version: \"1.0.0\"\n          ownerId: \"1\"\n          url: https://github.com/brewery-adt-validator\n          tags:\n            - Brewery\n            - ADT\n    BreweryADTValidatorRun:\n      summary: Brewery ADT Dataset Validator Run\n      description: a Validator Run for the Brewery Dataset from ADT in a Docker image\n      value:\n        id: 1\n        validatorId: \"1\"\n        validatorName: Brewery ADT Validator\n        datasetId: \"1\"\n        datasetName: Brewery ADT reference\n        state: Finished\n        containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa7\n        logs: Validation ended with success\\nBrewery ADT reference OK\n    ThreeValidatorRun:\n      summary: Brewery ADT Dataset Validator Run list\n      description: a list of Validator Run for the Brewery Dataset\n      value:\n        - id: \"1\"\n          validatorId: \"1\"\n          validatorName: Brewery ADT Validator\n          datasetId: \"1\"\n          datasetName: Brewery ADT reference\n          state: Finished\n          containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa7\n          logs: Validation ended with success\\nBrewery ADT reference OK\n        - id: \"2\"\n          validatorId: \"1\"\n          validatorName: Brewery ADT Validator\n          datasetId: \"1\"\n          datasetName: Brewery ADT reference\n          state: OnError\n          containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa8\n          logs: Validation ended with errors\\nBrewery ADT reference KO\n        - id: \"3\"\n          validatorId: \"1\"\n          validatorName: Brewery ADT Validator\n          datasetId: \"1\"\n          datasetName: Brewery ADT reference\n          state: Running\n          containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa9\n          logs: none\n    BreweryADTRunValidator:\n      summary: Brewery ADT Dataset Validator Run input\n      description: a Validator Run input for the Brewery Dataset from ADT in a Docker image\n      value:\n        datasetId: \"1\"\n    BreweryDatasetCopyParameters:\n      summary: Parameters for Dataset copy example\n      description: Parameters for Dataset copy from Dataset 1 to 2 example\n      value:\n        sourceId: \"1\"\n        targetId: \"2\"\n    DatasetSearch:\n      summary: Example for dataset search\n      description: Parameters to search for a dataset\n      value:\n        datasetTags:\n          - dataset\n",
			"canonicalURL": "/github.com/Cosmo-Tech/cosmotech-api@56c19a68914e91e0ac5ec3e3ec50952c8464a03b/-/blob/dataset/src/main/openapi/dataset.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Cosmo-Tech/cosmotech-api/blob/56c19a68914e91e0ac5ec3e3ec50952c8464a03b/dataset/src/main/openapi/dataset.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/organizations/{organization_id}/datasets/copy\": post: security: security \"oAuth2AuthCode\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}