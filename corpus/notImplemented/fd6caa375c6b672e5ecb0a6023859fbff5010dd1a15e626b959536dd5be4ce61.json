{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kyma-incubator/varkes"
		},
		"file": {
			"name": "pets_openapi.json",
			"size": 0,
			"path": "modules/openapi-mock/src/test/pets_openapi.json",
			"byteSize": 20640,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"version\": \"1.0.0\",\n      \"title\": \"Swagger Petstore\",\n      \"description\": \"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\",\n      \"termsOfService\": \"http://helloreverb.com/terms/\",\n      \"contact\": {\n        \"name\": \"Wordnik API Team\",\n        \"email\": \"foo@example.com\",\n        \"url\": \"http://madskristensen.net\"\n      },\n      \"license\": {\n        \"name\": \"MIT\",\n        \"url\": \"http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\"\n      }\n    },\n    \"servers\": [\n      {\n        \"url\": \"{protocol}://{hostName}/{basePath}\",\n        \"variables\": {\n          \"protocol\": {\n            \"enum\": [\n              \"http\",\n              \"https\"\n            ],\n            \"default\": \"http\"\n          },\n          \"hostName\": {\n            \"default\": \"company.com\"\n          },\n          \"basePath\": {\n            \"default\": \"api2\"\n          }\n        }\n      }\n    ],\n    \"security\": [\n      {\n        \"petStoreBasic\": [\n  \n        ],\n        \"petStoreApiKey\": [\n  \n        ]\n      },\n      {\n        \"petStoreOAuth\": [\n          \"view\"\n        ]\n      }\n    ],\n    \"paths\": {\n      \"/pets\": {\n        \"get\": {\n          \"description\": \"Returns all pets, optionally filtered by one or more criteria\",\n          \"operationId\": \"findPets\",\n          \"security\": [\n  \n          ],\n          \"parameters\": [\n            {\n              \"name\": \"Tags\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by one or more tags\",\n              \"required\": false,\n              \"style\": \"form\",\n              \"explode\": false,\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            {\n              \"name\": \"Type\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by type (dog, cat, or bird)\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"Age\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by age\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              }\n            },\n            {\n              \"name\": \"DOB\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by date of birth\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"date\"\n              }\n            },\n            {\n              \"name\": \"Address.City\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by city\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"Address.State\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by state\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"Address.ZipCode\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by zip code\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              }\n            },\n            {\n              \"name\": \"Vet.Name\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by veterinarian name\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"Vet.Address.City\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by veterinarian city\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"Vet.Address.State\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by veterinarian state\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"Vet.Address.ZipCode\",\n              \"in\": \"query\",\n              \"description\": \"Filters pets by veterinarian zip code\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"pet response\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/pet\"\n                    }\n                  }\n                },\n                \"application/xml\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/pet\"\n                    }\n                  }\n                },\n                \"text/xml\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/pet\"\n                    }\n                  }\n                },\n                \"text/html\": {\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"default\": {\n              \"description\": \"unexpected error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"application/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"text/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"text/html\": {\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"post\": {\n          \"description\": \"Creates a new pet in the store.\",\n          \"operationId\": \"addPet\",\n          \"requestBody\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/pet\"\n                }\n              }\n            },\n            \"description\": \"Pet to add to the store\",\n            \"required\": true\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"pet response\",\n              \"headers\": {\n                \"Location\": {\n                  \"description\": \"Swagger-Express-Middleware will automatically set this header appropriately\",\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"409\": {\n              \"description\": \"new pet conflicts with an existing pet (i.e. they have the same name)\"\n            },\n            \"default\": {\n              \"description\": \"unexpected error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/pets/{PetName}\": {\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/petName\"\n          }\n        ],\n        \"get\": {\n          \"description\": \"Returns a pet by name\",\n          \"operationId\": \"findPetByName\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"pet response\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/pet\"\n                  }\n                },\n                \"application/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/pet\"\n                  }\n                },\n                \"text/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/pet\"\n                  }\n                },\n                \"text/html\": {\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"default\": {\n              \"description\": \"unexpected error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"application/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"text/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"text/html\": {\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"patch\": {\n          \"description\": \"Updates a pet by name\",\n          \"security\": [\n            {\n              \"petStoreBasic\": [\n  \n              ],\n              \"petStoreApiKey\": [\n  \n              ]\n            },\n            {\n              \"petStoreOAuth\": [\n                \"view\",\n                \"edit\"\n              ]\n            }\n          ],\n          \"requestBody\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/pet\"\n                }\n              }\n            },\n            \"description\": \"The updated pet info\",\n            \"required\": true\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"pet response\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/pet\"\n                  }\n                },\n                \"application/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/pet\"\n                  }\n                },\n                \"text/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/pet\"\n                  }\n                },\n                \"text/html\": {\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"default\": {\n              \"description\": \"unexpected error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"application/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"text/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                },\n                \"text/html\": {\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"delete\": {\n          \"description\": \"deletes a single pet based on the name supplied\",\n          \"operationId\": \"deletePet\",\n          \"security\": [\n            {\n              \"petStoreBasic\": [\n  \n              ],\n              \"petStoreApiKey\": [\n  \n              ]\n            },\n            {\n              \"petStoreOAuth\": [\n                \"view\",\n                \"edit\",\n                \"delete\"\n              ]\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"pet deleted\"\n            },\n            \"default\": {\n              \"description\": \"unexpected error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/error\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/pets/{PetName}/photos\": {\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/petName\"\n          }\n        ],\n        \"get\": {\n          \"description\": \"get a list of the photos for a pet\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"the list of photos\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"properties\": {\n                        \"ID\": {\n                          \"type\": \"integer\",\n                          \"format\": \"int32\"\n                        },\n                        \"Label\": {\n                          \"type\": \"string\"\n                        },\n                        \"Description\": {\n                          \"type\": \"string\"\n                        },\n                        \"Photo\": {\n                          \"description\": \"information about the photo (size, file name, etc.)\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"post\": {\n          \"description\": \"adds a new pet photo\",\n          \"security\": [\n            {\n              \"petStoreBasic\": [\n  \n              ],\n              \"petStoreApiKey\": [\n  \n              ]\n            },\n            {\n              \"petStoreOAuth\": [\n                \"view\",\n                \"edit\",\n                \"create\"\n              ]\n            }\n          ],\n          \"requestBody\": {\n            \"content\": {\n              \"multipart/form-data\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"ID\": {\n                      \"description\": \"the photo ID (generated automatically)\",\n                      \"type\": \"integer\",\n                      \"format\": \"int32\",\n                      \"minimum\": 1\n                    },\n                    \"Label\": {\n                      \"description\": \"a label for the photo\",\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    },\n                    \"Description\": {\n                      \"description\": \"an optional description of the photo\",\n                      \"type\": \"string\"\n                    },\n                    \"Photo\": {\n                      \"description\": \"the pet photo\",\n                      \"type\": \"string\",\n                      \"minLength\": 1,\n                      \"maxLength\": 5000000,\n                      \"format\": \"binary\"\n                    }\n                  },\n                  \"required\": [\n                    \"Label\",\n                    \"Photo\"\n                  ]\n                }\n              }\n            }\n          },\n          \"responses\": {\n            \"201\": {\n              \"description\": \"the photo was saved\",\n              \"headers\": {\n                \"Location\": {\n                  \"description\": \"Swagger-Express-Middleware will automatically set this header appropriately\",\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"/pets/{PetName}/photos/{ID}\": {\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/petName\"\n          },\n          {\n            \"name\": \"ID\",\n            \"in\": \"path\",\n            \"description\": \"id of the photo\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"get\": {\n          \"description\": \"gets a pet photo\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"the photo blob\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"delete\": {\n          \"description\": \"deletes a pet photo\",\n          \"security\": [\n            {\n              \"petStoreBasic\": [\n  \n              ],\n              \"petStoreApiKey\": [\n  \n              ]\n            },\n            {\n              \"petStoreOAuth\": [\n                \"view\",\n                \"edit\",\n                \"delete\"\n              ]\n            }\n          ],\n          \"responses\": {\n            \"204\": {\n              \"description\": \"the photo was deleted\"\n            }\n          }\n        }\n      }\n    },\n    \"components\": {\n      \"parameters\": {\n        \"petName\": {\n          \"name\": \"PetName\",\n          \"in\": \"path\",\n          \"description\": \"name of the pet\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"securitySchemes\": {\n        \"petStoreBasic\": {\n          \"type\": \"http\",\n          \"description\": \"basic HTTP auth\",\n          \"scheme\": \"basic\"\n        },\n        \"petStoreApiKey\": {\n          \"type\": \"apiKey\",\n          \"name\": \"petStoreKey\",\n          \"in\": \"header\",\n          \"description\": \"requires an API key header\"\n        },\n        \"petStoreOAuth\": {\n          \"type\": \"oauth2\",\n          \"description\": \"OAuth2 security\",\n          \"flows\": {\n            \"password\": {\n              \"tokenUrl\": \"http://company.com/authorize\",\n              \"scopes\": {\n                \"view\": \"read only\",\n                \"edit\": \"can edit pets\",\n                \"create\": \"can create new pets\",\n                \"delete\": \"can delete pets\"\n              }\n            }\n          }\n        }\n      },\n      \"schemas\": {\n        \"pet\": {\n          \"required\": [\n            \"Name\",\n            \"Type\"\n          ],\n          \"properties\": {\n            \"Name\": {\n              \"type\": \"string\",\n              \"minLength\": 2,\n              \"pattern\": \"^[a-zA-Z0-9- ]+$\"\n            },\n            \"Age\": {\n              \"type\": \"integer\"\n            },\n            \"DOB\": {\n              \"type\": \"string\",\n              \"format\": \"date\"\n            },\n            \"Type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"cat\",\n                \"dog\",\n                \"bird\"\n              ]\n            },\n            \"Address\": {\n              \"$ref\": \"#/components/schemas/address\"\n            },\n            \"Vet\": {\n              \"$ref\": \"#/components/schemas/veterinarian\"\n            },\n            \"Tags\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"minLength\": 1\n              }\n            }\n          }\n        },\n        \"veterinarian\": {\n          \"required\": [\n            \"Name\"\n          ],\n          \"properties\": {\n            \"Name\": {\n              \"type\": \"string\",\n              \"minLength\": 1\n            },\n            \"Address\": {\n              \"$ref\": \"#/components/schemas/address\"\n            }\n          }\n        },\n        \"address\": {\n          \"required\": [\n            \"Street\",\n            \"City\",\n            \"State\",\n            \"ZipCode\"\n          ],\n          \"properties\": {\n            \"Street\": {\n              \"type\": \"string\",\n              \"minLength\": 1\n            },\n            \"City\": {\n              \"type\": \"string\",\n              \"minLength\": 1\n            },\n            \"State\": {\n              \"type\": \"string\",\n              \"minLength\": 2,\n              \"maxLength\": 2,\n              \"pattern\": \"^[A-Z]+$\"\n            },\n            \"ZipCode\": {\n              \"type\": \"integer\",\n              \"minimum\": 10000,\n              \"maximum\": 99999\n            }\n          }\n        },\n        \"error\": {\n          \"required\": [\n            \"Code\",\n            \"Message\"\n          ],\n          \"properties\": {\n            \"Code\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"Message\": {\n              \"type\": \"string\"\n            },\n            \"Pet\": {\n              \"$ref\": \"#/components/schemas/pet\"\n            }\n          }\n        }\n      }\n    }\n  }",
			"canonicalURL": "/github.com/kyma-incubator/varkes@811fec2004f72909dde1faf967a630cbe3d3147b/-/blob/modules/openapi-mock/src/test/pets_openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/kyma-incubator/varkes/blob/811fec2004f72909dde1faf967a630cbe3d3147b/modules/openapi-mock/src/test/pets_openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/pets\": post: security: security \"petStoreOAuth\" (index 2): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}