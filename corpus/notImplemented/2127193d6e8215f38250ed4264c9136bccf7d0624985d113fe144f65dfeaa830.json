{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ergon/airlock-microgateway-tutorials"
		},
		"file": {
			"name": "openapi-petstore.json",
			"size": 0,
			"path": "openapi/solution/config/openapi-petstore.json",
			"byteSize": 30719,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"OpenAPI Petstore\",\n    \"description\": \"This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters. For OAuth2 flow, you may use `user` as both username and password when asked to login.\",\n    \"license\": {\n      \"name\": \"Apache-2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about OpenAPI generator\",\n    \"url\": \"https://openapi-generator.tech\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\"\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\"\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Update an existing pet\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Pet\"\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"pet\"\n          }\n        ],\n        \"x-contentType\": \"application/json\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Pet\"\n        },\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"pet\"\n          }\n        ],\n        \"x-contentType\": \"application/json\"\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": true,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"default\": \"available\",\n                \"enum\": [\n                  \"available\",\n                  \"pending\",\n                  \"sold\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"pet\"\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": true,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"deprecated\": true,\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"pet\"\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"pet\"\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/body\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"pet\"\n          }\n        ],\n        \"x-contentType\": \"application/x-www-form-urlencoded\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"pet\"\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/body_1\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"pet\"\n          }\n        ],\n        \"x-contentType\": \"multipart/form-data\"\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ],\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"store\"\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"description\": \"order placed for purchasing the pet\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid Order\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"store\"\n          }\n        ],\n        \"x-contentType\": \"application/json\"\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generated exceptions\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"maximum\": 5,\n              \"minimum\": 1,\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"store\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"store\"\n          }\n        ]\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"user\"\n          }\n        ],\n        \"x-contentType\": \"application/json\"\n      }\n    },\n    \"/user/createWithArray\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithArrayInput\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UserArray\"\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"user\"\n          }\n        ],\n        \"x-contentType\": \"application/json\"\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UserArray\"\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"user\"\n          }\n        ],\n        \"x-contentType\": \"application/json\"\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": true,\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"style\": \"simple\",\n                \"explode\": false,\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when toekn expires\",\n                \"style\": \"simple\",\n                \"explode\": false,\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"user\"\n          }\n        ]\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"operationId\": \"logoutUser\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"user\"\n          }\n        ]\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing.\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"user\"\n          }\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Updated user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Updated user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid user supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"user\"\n          }\n        ],\n        \"x-contentType\": \"application/json\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"x-accepts\": \"application/json\",\n        \"x-tags\": [\n          {\n            \"tag\": \"user\"\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"title\": \"Pet Order\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          }\n        },\n        \"description\": \"An order for a pets from the pet store\",\n        \"example\": {\n          \"petId\": 6,\n          \"quantity\": 1,\n          \"id\": 0,\n          \"shipDate\": \"2000-01-23T04:56:07.000+00:00\",\n          \"complete\": false,\n          \"status\": \"placed\"\n        },\n        \"xml\": {\n          \"name\": \"Order\"\n        }\n      },\n      \"Category\": {\n        \"title\": \"Pet category\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"A category for a pet\",\n        \"example\": {\n          \"name\": \"name\",\n          \"id\": 6\n        },\n        \"xml\": {\n          \"name\": \"Category\"\n        }\n      },\n      \"User\": {\n        \"title\": \"a User\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\"\n          }\n        },\n        \"description\": \"A User who is purchasing from the pet store\",\n        \"example\": {\n          \"firstName\": \"firstName\",\n          \"lastName\": \"lastName\",\n          \"password\": \"password\",\n          \"userStatus\": 6,\n          \"phone\": \"phone\",\n          \"id\": 0,\n          \"email\": \"email\",\n          \"username\": \"username\"\n        },\n        \"xml\": {\n          \"name\": \"User\"\n        }\n      },\n      \"Tag\": {\n        \"title\": \"Pet Tag\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"A tag for a pet\",\n        \"example\": {\n          \"name\": \"name\",\n          \"id\": 1\n        },\n        \"xml\": {\n          \"name\": \"Tag\"\n        }\n      },\n      \"Pet\": {\n        \"title\": \"a Pet\",\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"photoUrl\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"tag\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"description\": \"A pet for sale in the pet store\",\n        \"example\": {\n          \"photoUrls\": [\n            \"photoUrls\",\n            \"photoUrls\"\n          ],\n          \"name\": \"doggie\",\n          \"id\": 0,\n          \"category\": {\n            \"name\": \"name\",\n            \"id\": 6\n          },\n          \"tags\": [\n            {\n              \"name\": \"name\",\n              \"id\": 1\n            },\n            {\n              \"name\": \"name\",\n              \"id\": 1\n            }\n          ],\n          \"status\": \"available\"\n        },\n        \"xml\": {\n          \"name\": \"Pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"title\": \"An uploaded response\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"Describes the result of uploading an image resource\",\n        \"example\": {\n          \"code\": 0,\n          \"type\": \"type\",\n          \"message\": \"message\"\n        }\n      },\n      \"body\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Updated name of the pet\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Updated status of the pet\"\n          }\n        }\n      },\n      \"body_1\": {}\n    },\n    \"requestBodies\": {\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"required\": true\n      },\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        },\n        \"required\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"/api/oauth/dialog\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/ergon/airlock-microgateway-tutorials@64e32a38f36a790f2f4e7cf918e2cdb6fa421876/-/blob/openapi/solution/config/openapi-petstore.json",
			"externalURLs": [
				{
					"url": "https://github.com/ergon/airlock-microgateway-tutorials/blob/64e32a38f36a790f2f4e7cf918e2cdb6fa421876/openapi/solution/config/openapi-petstore.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/pet/{petId}\": post: security: security \"petstore_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"complex form schema",
		"oauth2 security"
	]
}