{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/tezos/tezos"
		},
		"file": {
			"name": "jakarta-mempool-openapi.json",
			"size": 0,
			"path": "docs/api/jakarta-mempool-openapi.json",
			"byteSize": 129096,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Tezos RPC\",\n    \"description\": \"Tezos client RPC API.\",\n    \"version\": \"13.0~rc1\"\n  },\n  \"paths\": {\n    \"/ban_operation\": {\n      \"post\": {\n        \"description\": \"Remove an operation from the mempool if present, reverting its effect if it was applied. Add it to the set of banned operations to prevent it from being fetched/processed/injected in the future. Note: If the baker has already received the operation, then it's necessary to restart it to flush the operation from it.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"A Tezos operation ID (Base58Check-encoded)\",\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/unistring\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/filter\": {\n      \"get\": {\n        \"description\": \"Get the configuration of the mempool filter. The minimal_fees are in mutez. Each field minimal_nanotez_per_xxx is a rational number given as a numerator and a denominator, e.g. \\\"minimal_nanotez_per_gas_unit\\\": [ \\\"100\\\", \\\"1\\\" ].\",\n        \"parameters\": [\n          {\n            \"name\": \"include_default\",\n            \"in\": \"query\",\n            \"description\": \"Show fields equal to their default value (set by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"description\": \"Set the configuration of the mempool filter. **If any of the fields is absent from the input JSON, then it is set to the default value for this field (i.e. its value in the default configuration), even if it previously had a different value.** If the input JSON does not describe a valid configuration, then the configuration is left unchanged. Also return the new configuration (which may differ from the input if it had omitted fields or was invalid). You may call [./tezos-client rpc get '/chains/main/mempool/filter?include_default=true'] to see an example of JSON describing a valid configuration.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {}\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/monitor_operations\": {\n      \"get\": {\n        \"description\": \"Monitor the mempool operations.\",\n        \"parameters\": [\n          {\n            \"name\": \"applied\",\n            \"in\": \"query\",\n            \"description\": \"Include applied operations (set by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"refused\",\n            \"in\": \"query\",\n            \"description\": \"Include refused operations\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"outdated\",\n            \"in\": \"query\",\n            \"description\": \"Include outdated operations\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"branch_refused\",\n            \"in\": \"query\",\n            \"description\": \"Include branch refused operations\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"branch_delayed\",\n            \"in\": \"query\",\n            \"description\": \"Include branch delayed operations (set by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"description\": \"An operation's shell header.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"hash\": {\n                        \"$ref\": \"#/components/schemas/Operation_hash\"\n                      },\n                      \"protocol\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                        ]\n                      },\n                      \"branch\": {\n                        \"$ref\": \"#/components/schemas/block_hash\"\n                      },\n                      \"contents\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                        }\n                      },\n                      \"signature\": {\n                        \"$ref\": \"#/components/schemas/Signature\"\n                      },\n                      \"error\": {\n                        \"$ref\": \"#/components/schemas/error_opt\"\n                      }\n                    },\n                    \"required\": [\n                      \"hash\",\n                      \"protocol\",\n                      \"branch\",\n                      \"contents\",\n                      \"signature\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/pending_operations\": {\n      \"get\": {\n        \"description\": \"List the prevalidated operations.\",\n        \"parameters\": [\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"applied\",\n            \"in\": \"query\",\n            \"description\": \"Include applied operations (true by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"refused\",\n            \"in\": \"query\",\n            \"description\": \"Include refused operations (true by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"outdated\",\n            \"in\": \"query\",\n            \"description\": \"Include outdated operations (true by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"branch_refused\",\n            \"in\": \"query\",\n            \"description\": \"Include branch refused operations (true by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"branch_delayed\",\n            \"in\": \"query\",\n            \"description\": \"Include branch delayed operations (true by default)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"title\": \"new_encoding_pending_operations\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"applied\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"description\": \"An operation's shell header.\",\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"hash\": {\n                                \"$ref\": \"#/components/schemas/Operation_hash\"\n                              },\n                              \"branch\": {\n                                \"$ref\": \"#/components/schemas/block_hash\"\n                              },\n                              \"contents\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                }\n                              },\n                              \"signature\": {\n                                \"$ref\": \"#/components/schemas/Signature\"\n                              }\n                            },\n                            \"required\": [\n                              \"hash\",\n                              \"branch\",\n                              \"contents\",\n                              \"signature\"\n                            ]\n                          }\n                        },\n                        \"refused\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"description\": \"An operation's shell header.\",\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"hash\": {\n                                \"$ref\": \"#/components/schemas/Operation_hash\"\n                              },\n                              \"protocol\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                ]\n                              },\n                              \"branch\": {\n                                \"$ref\": \"#/components/schemas/block_hash\"\n                              },\n                              \"contents\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                }\n                              },\n                              \"signature\": {\n                                \"$ref\": \"#/components/schemas/Signature\"\n                              },\n                              \"error\": {\n                                \"$ref\": \"#/components/schemas/error\"\n                              }\n                            },\n                            \"required\": [\n                              \"hash\",\n                              \"protocol\",\n                              \"branch\",\n                              \"contents\",\n                              \"signature\",\n                              \"error\"\n                            ]\n                          }\n                        },\n                        \"outdated\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"description\": \"An operation's shell header.\",\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"hash\": {\n                                \"$ref\": \"#/components/schemas/Operation_hash\"\n                              },\n                              \"protocol\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                ]\n                              },\n                              \"branch\": {\n                                \"$ref\": \"#/components/schemas/block_hash\"\n                              },\n                              \"contents\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                }\n                              },\n                              \"signature\": {\n                                \"$ref\": \"#/components/schemas/Signature\"\n                              },\n                              \"error\": {\n                                \"$ref\": \"#/components/schemas/error\"\n                              }\n                            },\n                            \"required\": [\n                              \"hash\",\n                              \"protocol\",\n                              \"branch\",\n                              \"contents\",\n                              \"signature\",\n                              \"error\"\n                            ]\n                          }\n                        },\n                        \"branch_refused\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"description\": \"An operation's shell header.\",\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"hash\": {\n                                \"$ref\": \"#/components/schemas/Operation_hash\"\n                              },\n                              \"protocol\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                ]\n                              },\n                              \"branch\": {\n                                \"$ref\": \"#/components/schemas/block_hash\"\n                              },\n                              \"contents\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                }\n                              },\n                              \"signature\": {\n                                \"$ref\": \"#/components/schemas/Signature\"\n                              },\n                              \"error\": {\n                                \"$ref\": \"#/components/schemas/error\"\n                              }\n                            },\n                            \"required\": [\n                              \"hash\",\n                              \"protocol\",\n                              \"branch\",\n                              \"contents\",\n                              \"signature\",\n                              \"error\"\n                            ]\n                          }\n                        },\n                        \"branch_delayed\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"description\": \"An operation's shell header.\",\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"hash\": {\n                                \"$ref\": \"#/components/schemas/Operation_hash\"\n                              },\n                              \"protocol\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                ]\n                              },\n                              \"branch\": {\n                                \"$ref\": \"#/components/schemas/block_hash\"\n                              },\n                              \"contents\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                }\n                              },\n                              \"signature\": {\n                                \"$ref\": \"#/components/schemas/Signature\"\n                              },\n                              \"error\": {\n                                \"$ref\": \"#/components/schemas/error\"\n                              }\n                            },\n                            \"required\": [\n                              \"hash\",\n                              \"protocol\",\n                              \"branch\",\n                              \"contents\",\n                              \"signature\",\n                              \"error\"\n                            ]\n                          }\n                        },\n                        \"unprocessed\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"description\": \"An operation's shell header.\",\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"hash\": {\n                                \"$ref\": \"#/components/schemas/Operation_hash\"\n                              },\n                              \"protocol\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                ]\n                              },\n                              \"branch\": {\n                                \"$ref\": \"#/components/schemas/block_hash\"\n                              },\n                              \"contents\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                }\n                              },\n                              \"signature\": {\n                                \"$ref\": \"#/components/schemas/Signature\"\n                              }\n                            },\n                            \"required\": [\n                              \"hash\",\n                              \"protocol\",\n                              \"branch\",\n                              \"contents\",\n                              \"signature\"\n                            ]\n                          }\n                        }\n                      },\n                      \"required\": [\n                        \"applied\",\n                        \"refused\",\n                        \"outdated\",\n                        \"branch_refused\",\n                        \"branch_delayed\",\n                        \"unprocessed\"\n                      ]\n                    },\n                    {\n                      \"title\": \"old_encoding_pending_operations\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"applied\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"description\": \"An operation's shell header.\",\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"hash\": {\n                                \"$ref\": \"#/components/schemas/Operation_hash\"\n                              },\n                              \"branch\": {\n                                \"$ref\": \"#/components/schemas/block_hash\"\n                              },\n                              \"contents\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                }\n                              },\n                              \"signature\": {\n                                \"$ref\": \"#/components/schemas/Signature\"\n                              }\n                            },\n                            \"required\": [\n                              \"hash\",\n                              \"branch\",\n                              \"contents\",\n                              \"signature\"\n                            ]\n                          }\n                        },\n                        \"refused\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"oneOf\": [\n                                {\n                                  \"$ref\": \"#/components/schemas/Operation_hash\"\n                                },\n                                {\n                                  \"description\": \"An operation's shell header.\",\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"protocol\": {\n                                      \"type\": \"string\",\n                                      \"enum\": [\n                                        \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                      ]\n                                    },\n                                    \"branch\": {\n                                      \"$ref\": \"#/components/schemas/block_hash\"\n                                    },\n                                    \"contents\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                      }\n                                    },\n                                    \"signature\": {\n                                      \"$ref\": \"#/components/schemas/Signature\"\n                                    },\n                                    \"error\": {\n                                      \"$ref\": \"#/components/schemas/error\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"protocol\",\n                                    \"branch\",\n                                    \"contents\",\n                                    \"signature\",\n                                    \"error\"\n                                  ]\n                                }\n                              ]\n                            }\n                          }\n                        },\n                        \"outdated\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"oneOf\": [\n                                {\n                                  \"$ref\": \"#/components/schemas/Operation_hash\"\n                                },\n                                {\n                                  \"description\": \"An operation's shell header.\",\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"protocol\": {\n                                      \"type\": \"string\",\n                                      \"enum\": [\n                                        \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                      ]\n                                    },\n                                    \"branch\": {\n                                      \"$ref\": \"#/components/schemas/block_hash\"\n                                    },\n                                    \"contents\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                      }\n                                    },\n                                    \"signature\": {\n                                      \"$ref\": \"#/components/schemas/Signature\"\n                                    },\n                                    \"error\": {\n                                      \"$ref\": \"#/components/schemas/error\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"protocol\",\n                                    \"branch\",\n                                    \"contents\",\n                                    \"signature\",\n                                    \"error\"\n                                  ]\n                                }\n                              ]\n                            }\n                          }\n                        },\n                        \"branch_refused\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"oneOf\": [\n                                {\n                                  \"$ref\": \"#/components/schemas/Operation_hash\"\n                                },\n                                {\n                                  \"description\": \"An operation's shell header.\",\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"protocol\": {\n                                      \"type\": \"string\",\n                                      \"enum\": [\n                                        \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                      ]\n                                    },\n                                    \"branch\": {\n                                      \"$ref\": \"#/components/schemas/block_hash\"\n                                    },\n                                    \"contents\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                      }\n                                    },\n                                    \"signature\": {\n                                      \"$ref\": \"#/components/schemas/Signature\"\n                                    },\n                                    \"error\": {\n                                      \"$ref\": \"#/components/schemas/error\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"protocol\",\n                                    \"branch\",\n                                    \"contents\",\n                                    \"signature\",\n                                    \"error\"\n                                  ]\n                                }\n                              ]\n                            }\n                          }\n                        },\n                        \"branch_delayed\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"oneOf\": [\n                                {\n                                  \"$ref\": \"#/components/schemas/Operation_hash\"\n                                },\n                                {\n                                  \"description\": \"An operation's shell header.\",\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"protocol\": {\n                                      \"type\": \"string\",\n                                      \"enum\": [\n                                        \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n                                      ]\n                                    },\n                                    \"branch\": {\n                                      \"$ref\": \"#/components/schemas/block_hash\"\n                                    },\n                                    \"contents\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n                                      }\n                                    },\n                                    \"signature\": {\n                                      \"$ref\": \"#/components/schemas/Signature\"\n                                    },\n                                    \"error\": {\n                                      \"$ref\": \"#/components/schemas/error\"\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"protocol\",\n                                    \"branch\",\n                                    \"contents\",\n                                    \"signature\",\n                                    \"error\"\n                                  ]\n                                }\n                              ]\n                            }\n                          }\n                        },\n                        \"unprocessed\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"oneOf\": [\n                                {\n                                  \"$ref\": \"#/components/schemas/Operation_hash\"\n                                },\n                                {\n                                  \"$ref\": \"#/components/schemas/next_operation\"\n                                }\n                              ]\n                            }\n                          }\n                        }\n                      },\n                      \"required\": [\n                        \"applied\",\n                        \"refused\",\n                        \"outdated\",\n                        \"branch_refused\",\n                        \"branch_delayed\",\n                        \"unprocessed\"\n                      ]\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/request_operations\": {\n      \"post\": {\n        \"description\": \"Request the operations of our peers or a specific peer if specified via a query parameter.\",\n        \"parameters\": [\n          {\n            \"name\": \"peer_id\",\n            \"in\": \"query\",\n            \"description\": \"A cryptographic node identity (Base58Check-encoded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {}\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {}\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/unban_all_operations\": {\n      \"post\": {\n        \"description\": \"Clear the set of banned operations.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {}\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/unban_operation\": {\n      \"post\": {\n        \"description\": \"Remove an operation from the set of banned operations (nothing happens if it was not banned).\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"A Tezos operation ID (Base58Check-encoded)\",\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/unistring\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"013-PtJakart.block_header.alpha.full_header\": {\n        \"title\": \"Shell header\",\n        \"description\": \"Block header's shell-related content. It contains information such as the block level, its predecessor and timestamp.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"level\": {\n            \"type\": \"integer\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647\n          },\n          \"proto\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 255\n          },\n          \"predecessor\": {\n            \"$ref\": \"#/components/schemas/block_hash\"\n          },\n          \"timestamp\": {\n            \"$ref\": \"#/components/schemas/timestamp.protocol\"\n          },\n          \"validation_pass\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 255\n          },\n          \"operations_hash\": {\n            \"$ref\": \"#/components/schemas/Operation_list_list_hash\"\n          },\n          \"fitness\": {\n            \"$ref\": \"#/components/schemas/fitness\"\n          },\n          \"context\": {\n            \"$ref\": \"#/components/schemas/Context_hash\"\n          },\n          \"payload_hash\": {\n            \"$ref\": \"#/components/schemas/value_hash\"\n          },\n          \"payload_round\": {\n            \"type\": \"integer\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647\n          },\n          \"proof_of_work_nonce\": {\n            \"type\": \"string\",\n            \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n          },\n          \"seed_nonce_hash\": {\n            \"$ref\": \"#/components/schemas/cycle_nonce\"\n          },\n          \"liquidity_baking_toggle_vote\": {\n            \"$ref\": \"#/components/schemas/013-PtJakart.liquidity_baking_toggle_vote\"\n          },\n          \"signature\": {\n            \"$ref\": \"#/components/schemas/Signature\"\n          }\n        },\n        \"required\": [\n          \"level\",\n          \"proto\",\n          \"predecessor\",\n          \"timestamp\",\n          \"validation_pass\",\n          \"operations_hash\",\n          \"fitness\",\n          \"context\",\n          \"payload_hash\",\n          \"payload_round\",\n          \"proof_of_work_nonce\",\n          \"liquidity_baking_toggle_vote\",\n          \"signature\"\n        ]\n      },\n      \"013-PtJakart.contract_id\": {\n        \"title\": \"A contract handle\",\n        \"description\": \"A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"013-PtJakart.entrypoint\": {\n        \"title\": \"entrypoint\",\n        \"description\": \"Named entrypoint to a Michelson smart contract\",\n        \"oneOf\": [\n          {\n            \"title\": \"default\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"default\"\n            ]\n          },\n          {\n            \"title\": \"root\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"root\"\n            ]\n          },\n          {\n            \"title\": \"do\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"do\"\n            ]\n          },\n          {\n            \"title\": \"set_delegate\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"set_delegate\"\n            ]\n          },\n          {\n            \"title\": \"remove_delegate\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"remove_delegate\"\n            ]\n          },\n          {\n            \"title\": \"named\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"013-PtJakart.inlined.endorsement\": {\n        \"description\": \"An operation's shell header.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"branch\": {\n            \"$ref\": \"#/components/schemas/block_hash\"\n          },\n          \"operations\": {\n            \"$ref\": \"#/components/schemas/013-PtJakart.inlined.endorsement_mempool.contents\"\n          },\n          \"signature\": {\n            \"$ref\": \"#/components/schemas/Signature\"\n          }\n        },\n        \"required\": [\n          \"branch\",\n          \"operations\"\n        ]\n      },\n      \"013-PtJakart.inlined.endorsement_mempool.contents\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"kind\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"endorsement\"\n            ]\n          },\n          \"slot\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 65535\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647\n          },\n          \"round\": {\n            \"type\": \"integer\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647\n          },\n          \"block_payload_hash\": {\n            \"$ref\": \"#/components/schemas/value_hash\"\n          }\n        },\n        \"required\": [\n          \"kind\",\n          \"slot\",\n          \"level\",\n          \"round\",\n          \"block_payload_hash\"\n        ]\n      },\n      \"013-PtJakart.inlined.preendorsement\": {\n        \"description\": \"An operation's shell header.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"branch\": {\n            \"$ref\": \"#/components/schemas/block_hash\"\n          },\n          \"operations\": {\n            \"$ref\": \"#/components/schemas/013-PtJakart.inlined.preendorsement.contents\"\n          },\n          \"signature\": {\n            \"$ref\": \"#/components/schemas/Signature\"\n          }\n        },\n        \"required\": [\n          \"branch\",\n          \"operations\"\n        ]\n      },\n      \"013-PtJakart.inlined.preendorsement.contents\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"kind\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"preendorsement\"\n            ]\n          },\n          \"slot\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 65535\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647\n          },\n          \"round\": {\n            \"type\": \"integer\",\n            \"minimum\": -2147483648,\n            \"maximum\": 2147483647\n          },\n          \"block_payload_hash\": {\n            \"$ref\": \"#/components/schemas/value_hash\"\n          }\n        },\n        \"required\": [\n          \"kind\",\n          \"slot\",\n          \"level\",\n          \"round\",\n          \"block_payload_hash\"\n        ]\n      },\n      \"013-PtJakart.liquidity_baking_toggle_vote\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"off\",\n          \"on\",\n          \"pass\"\n        ]\n      },\n      \"013-PtJakart.michelson.v1.primitives\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"ABS\",\n          \"IF\",\n          \"SOURCE\",\n          \"DUG\",\n          \"False\",\n          \"DIG\",\n          \"SAPLING_VERIFY_UPDATE\",\n          \"bls12_381_g2\",\n          \"BLAKE2B\",\n          \"lambda\",\n          \"sapling_state\",\n          \"Pair\",\n          \"INT\",\n          \"big_map\",\n          \"sapling_transaction_deprecated\",\n          \"storage\",\n          \"RIGHT\",\n          \"view\",\n          \"SHA256\",\n          \"AND\",\n          \"VIEW\",\n          \"string\",\n          \"NIL\",\n          \"list\",\n          \"STEPS_TO_QUOTA\",\n          \"RENAME\",\n          \"CHECK_SIGNATURE\",\n          \"NEVER\",\n          \"unit\",\n          \"MAP\",\n          \"nat\",\n          \"never\",\n          \"ADD\",\n          \"IMPLICIT_ACCOUNT\",\n          \"SHA512\",\n          \"contract\",\n          \"LSL\",\n          \"constant\",\n          \"chain_id\",\n          \"bls12_381_g1\",\n          \"address\",\n          \"COMPARE\",\n          \"SUB_MUTEZ\",\n          \"SLICE\",\n          \"DROP\",\n          \"or\",\n          \"BALANCE\",\n          \"CONCAT\",\n          \"chest_key\",\n          \"MUL\",\n          \"FAILWITH\",\n          \"Elt\",\n          \"key_hash\",\n          \"MIN_BLOCK_TIME\",\n          \"DIP\",\n          \"MEM\",\n          \"XOR\",\n          \"key\",\n          \"UPDATE\",\n          \"Some\",\n          \"parameter\",\n          \"operation\",\n          \"EMPTY_MAP\",\n          \"None\",\n          \"SWAP\",\n          \"option\",\n          \"AMOUNT\",\n          \"set\",\n          \"KECCAK\",\n          \"signature\",\n          \"CHAIN_ID\",\n          \"HASH_KEY\",\n          \"IF_LEFT\",\n          \"CREATE_ACCOUNT\",\n          \"LT\",\n          \"VOTING_POWER\",\n          \"UNPACK\",\n          \"TICKET\",\n          \"SELF\",\n          \"mutez\",\n          \"TRANSFER_TOKENS\",\n          \"LE\",\n          \"SOME\",\n          \"CREATE_CONTRACT\",\n          \"Unit\",\n          \"SAPLING_EMPTY_STATE\",\n          \"NONE\",\n          \"ADDRESS\",\n          \"GE\",\n          \"SIZE\",\n          \"int\",\n          \"SENDER\",\n          \"pair\",\n          \"CAR\",\n          \"NOT\",\n          \"timestamp\",\n          \"CDR\",\n          \"ITER\",\n          \"SHA3\",\n          \"PUSH\",\n          \"LEFT\",\n          \"ISNAT\",\n          \"True\",\n          \"Right\",\n          \"PACK\",\n          \"IF_CONS\",\n          \"TOTAL_VOTING_POWER\",\n          \"bls12_381_fr\",\n          \"SET_DELEGATE\",\n          \"EMPTY_SET\",\n          \"NEQ\",\n          \"LAMBDA\",\n          \"bytes\",\n          \"PAIRING_CHECK\",\n          \"LOOP\",\n          \"Left\",\n          \"bool\",\n          \"LSR\",\n          \"EMPTY_BIG_MAP\",\n          \"SPLIT_TICKET\",\n          \"tx_rollup_l2_address\",\n          \"LEVEL\",\n          \"PAIR\",\n          \"READ_TICKET\",\n          \"map\",\n          \"UNPAIR\",\n          \"GT\",\n          \"ticket\",\n          \"sapling_transaction\",\n          \"NOW\",\n          \"IF_NONE\",\n          \"OR\",\n          \"GET_AND_UPDATE\",\n          \"UNIT\",\n          \"CONTRACT\",\n          \"CAST\",\n          \"JOIN_TICKETS\",\n          \"EDIV\",\n          \"EQ\",\n          \"LOOP_LEFT\",\n          \"chest\",\n          \"OPEN_CHEST\",\n          \"EXEC\",\n          \"GET\",\n          \"NEG\",\n          \"SELF_ADDRESS\",\n          \"DUP\",\n          \"CONS\",\n          \"SUB\",\n          \"APPLY\",\n          \"code\"\n        ]\n      },\n      \"013-PtJakart.mutez\": {\n        \"$ref\": \"#/components/schemas/positive_bignum\"\n      },\n      \"013-PtJakart.operation.alpha.contents\": {\n        \"oneOf\": [\n          {\n            \"title\": \"Endorsement\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"endorsement\"\n                ]\n              },\n              \"slot\": {\n                \"type\": \"integer\",\n                \"minimum\": 0,\n                \"maximum\": 65535\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"round\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"block_payload_hash\": {\n                \"$ref\": \"#/components/schemas/value_hash\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"slot\",\n              \"level\",\n              \"round\",\n              \"block_payload_hash\"\n            ]\n          },\n          {\n            \"title\": \"Preendorsement\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"preendorsement\"\n                ]\n              },\n              \"slot\": {\n                \"type\": \"integer\",\n                \"minimum\": 0,\n                \"maximum\": 65535\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"round\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"block_payload_hash\": {\n                \"$ref\": \"#/components/schemas/value_hash\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"slot\",\n              \"level\",\n              \"round\",\n              \"block_payload_hash\"\n            ]\n          },\n          {\n            \"title\": \"Seed_nonce_revelation\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"seed_nonce_revelation\"\n                ]\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"nonce\": {\n                \"type\": \"string\",\n                \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"level\",\n              \"nonce\"\n            ]\n          },\n          {\n            \"title\": \"Double_endorsement_evidence\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"double_endorsement_evidence\"\n                ]\n              },\n              \"op1\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.inlined.endorsement\"\n              },\n              \"op2\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.inlined.endorsement\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"op1\",\n              \"op2\"\n            ]\n          },\n          {\n            \"title\": \"Double_preendorsement_evidence\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"double_preendorsement_evidence\"\n                ]\n              },\n              \"op1\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.inlined.preendorsement\"\n              },\n              \"op2\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.inlined.preendorsement\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"op1\",\n              \"op2\"\n            ]\n          },\n          {\n            \"title\": \"Double_baking_evidence\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"double_baking_evidence\"\n                ]\n              },\n              \"bh1\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.block_header.alpha.full_header\"\n              },\n              \"bh2\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.block_header.alpha.full_header\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"bh1\",\n              \"bh2\"\n            ]\n          },\n          {\n            \"title\": \"Activate_account\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"activate_account\"\n                ]\n              },\n              \"pkh\": {\n                \"$ref\": \"#/components/schemas/Ed25519.Public_key_hash\"\n              },\n              \"secret\": {\n                \"type\": \"string\",\n                \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"pkh\",\n              \"secret\"\n            ]\n          },\n          {\n            \"title\": \"Proposals\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"proposals\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"period\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"proposals\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Protocol_hash\"\n                }\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"period\",\n              \"proposals\"\n            ]\n          },\n          {\n            \"title\": \"Ballot\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"ballot\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"period\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"proposal\": {\n                \"$ref\": \"#/components/schemas/Protocol_hash\"\n              },\n              \"ballot\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"nay\",\n                  \"yay\",\n                  \"pass\"\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"period\",\n              \"proposal\",\n              \"ballot\"\n            ]\n          },\n          {\n            \"title\": \"Reveal\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"reveal\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"public_key\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"public_key\"\n            ]\n          },\n          {\n            \"title\": \"Transaction\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"transaction\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"amount\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"destination\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.transaction_destination\"\n              },\n              \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"entrypoint\": {\n                    \"$ref\": \"#/components/schemas/013-PtJakart.entrypoint\"\n                  },\n                  \"value\": {\n                    \"oneOf\": [\n                      {\n                        \"title\": \"Int\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"int\": {\n                            \"$ref\": \"#/components/schemas/bignum\"\n                          }\n                        },\n                        \"required\": [\n                          \"int\"\n                        ]\n                      },\n                      {\n                        \"title\": \"String\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"string\": {\n                            \"$ref\": \"#/components/schemas/unistring\"\n                          }\n                        },\n                        \"required\": [\n                          \"string\"\n                        ]\n                      },\n                      {\n                        \"title\": \"Bytes\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"bytes\": {\n                            \"type\": \"string\",\n                            \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                          }\n                        },\n                        \"required\": [\n                          \"bytes\"\n                        ]\n                      },\n                      {\n                        \"title\": \"Sequence\",\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                        }\n                      },\n                      {\n                        \"title\": \"Prim__generic\",\n                        \"description\": \"Generic primitive (any number of args with or without annotations)\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"prim\": {\n                            \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n                          },\n                          \"args\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                            }\n                          },\n                          \"annots\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"required\": [\n                          \"prim\"\n                        ]\n                      }\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"entrypoint\",\n                  \"value\"\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"amount\",\n              \"destination\"\n            ]\n          },\n          {\n            \"title\": \"Origination\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"origination\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"balance\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"delegate\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"script\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.scripted.contracts\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"balance\",\n              \"script\"\n            ]\n          },\n          {\n            \"title\": \"Delegation\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"delegation\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"delegate\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\"\n            ]\n          },\n          {\n            \"title\": \"Set_deposits_limit\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"set_deposits_limit\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"limit\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\"\n            ]\n          },\n          {\n            \"title\": \"Failing_noop\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"failing_noop\"\n                ]\n              },\n              \"arbitrary\": {\n                \"$ref\": \"#/components/schemas/unistring\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"arbitrary\"\n            ]\n          },\n          {\n            \"title\": \"Register_global_constant\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"register_global_constant\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"value\": {\n                \"oneOf\": [\n                  {\n                    \"title\": \"Int\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"int\": {\n                        \"$ref\": \"#/components/schemas/bignum\"\n                      }\n                    },\n                    \"required\": [\n                      \"int\"\n                    ]\n                  },\n                  {\n                    \"title\": \"String\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"string\": {\n                        \"$ref\": \"#/components/schemas/unistring\"\n                      }\n                    },\n                    \"required\": [\n                      \"string\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Bytes\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"bytes\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                      }\n                    },\n                    \"required\": [\n                      \"bytes\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Sequence\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                    }\n                  },\n                  {\n                    \"title\": \"Prim__generic\",\n                    \"description\": \"Generic primitive (any number of args with or without annotations)\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"prim\": {\n                        \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n                      },\n                      \"args\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                        }\n                      },\n                      \"annots\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"required\": [\n                      \"prim\"\n                    ]\n                  }\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"value\"\n            ]\n          },\n          {\n            \"title\": \"Tx_rollup_origination\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"tx_rollup_origination\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"tx_rollup_origination\": {}\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"tx_rollup_origination\"\n            ]\n          },\n          {\n            \"title\": \"Tx_rollup_submit_batch\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"tx_rollup_submit_batch\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.tx_rollup_id\"\n              },\n              \"content\": {\n                \"type\": \"string\",\n                \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n              },\n              \"burn_limit\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\",\n              \"content\"\n            ]\n          },\n          {\n            \"title\": \"Tx_rollup_commit\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"tx_rollup_commit\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.tx_rollup_id\"\n              },\n              \"commitment\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"level\": {\n                    \"type\": \"integer\",\n                    \"minimum\": -2147483648,\n                    \"maximum\": 2147483647\n                  },\n                  \"messages\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/Message_result_hash\"\n                    }\n                  },\n                  \"predecessor\": {\n                    \"nullable\": true,\n                    \"oneOf\": [\n                      {\n                        \"title\": \"Some\",\n                        \"oneOf\": [\n                          {\n                            \"$ref\": \"#/components/schemas/Commitment_hash\"\n                          }\n                        ]\n                      }\n                    ]\n                  },\n                  \"inbox_merkle_root\": {\n                    \"$ref\": \"#/components/schemas/Inbox_list_hash\"\n                  }\n                },\n                \"required\": [\n                  \"level\",\n                  \"messages\",\n                  \"predecessor\",\n                  \"inbox_merkle_root\"\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\",\n              \"commitment\"\n            ]\n          },\n          {\n            \"title\": \"Tx_rollup_return_bond\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"tx_rollup_return_bond\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.tx_rollup_id\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\"\n            ]\n          },\n          {\n            \"title\": \"Tx_rollup_finalize_commitment\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"tx_rollup_finalize_commitment\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.tx_rollup_id\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\"\n            ]\n          },\n          {\n            \"title\": \"Tx_rollup_remove_commitment\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"tx_rollup_remove_commitment\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.tx_rollup_id\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\"\n            ]\n          },\n          {\n            \"title\": \"Tx_rollup_rejection\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"tx_rollup_rejection\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.tx_rollup_id\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"message\": {\n                \"oneOf\": [\n                  {\n                    \"title\": \"Batch\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"batch\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                      }\n                    },\n                    \"required\": [\n                      \"batch\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Deposit\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"deposit\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"sender\": {\n                            \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n                          },\n                          \"destination\": {\n                            \"$ref\": \"#/components/schemas/Tx_rollup_l2_address\"\n                          },\n                          \"ticket_hash\": {\n                            \"$ref\": \"#/components/schemas/script_expr\"\n                          },\n                          \"amount\": {\n                            \"$ref\": \"#/components/schemas/int64\"\n                          }\n                        },\n                        \"required\": [\n                          \"sender\",\n                          \"destination\",\n                          \"ticket_hash\",\n                          \"amount\"\n                        ]\n                      }\n                    },\n                    \"required\": [\n                      \"deposit\"\n                    ]\n                  }\n                ]\n              },\n              \"message_position\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"message_path\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Inbox_list_hash\"\n                }\n              },\n              \"message_result_hash\": {\n                \"$ref\": \"#/components/schemas/Message_result_hash\"\n              },\n              \"message_result_path\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Message_result_list_hash\"\n                }\n              },\n              \"previous_message_result\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"context_hash\": {\n                    \"$ref\": \"#/components/schemas/Context_hash\"\n                  },\n                  \"withdraw_list_hash\": {\n                    \"$ref\": \"#/components/schemas/Withdraw_list_hash\"\n                  }\n                },\n                \"required\": [\n                  \"context_hash\",\n                  \"withdraw_list_hash\"\n                ]\n              },\n              \"previous_message_result_path\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Message_result_list_hash\"\n                }\n              },\n              \"proof\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"version\": {\n                    \"type\": \"integer\",\n                    \"minimum\": -32768,\n                    \"maximum\": 32767\n                  },\n                  \"before\": {\n                    \"oneOf\": [\n                      {\n                        \"title\": \"Value\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"value\": {\n                            \"$ref\": \"#/components/schemas/Context_hash\"\n                          }\n                        },\n                        \"required\": [\n                          \"value\"\n                        ]\n                      },\n                      {\n                        \"title\": \"Node\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"node\": {\n                            \"$ref\": \"#/components/schemas/Context_hash\"\n                          }\n                        },\n                        \"required\": [\n                          \"node\"\n                        ]\n                      }\n                    ]\n                  },\n                  \"after\": {\n                    \"oneOf\": [\n                      {\n                        \"title\": \"Value\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"value\": {\n                            \"$ref\": \"#/components/schemas/Context_hash\"\n                          }\n                        },\n                        \"required\": [\n                          \"value\"\n                        ]\n                      },\n                      {\n                        \"title\": \"Node\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"node\": {\n                            \"$ref\": \"#/components/schemas/Context_hash\"\n                          }\n                        },\n                        \"required\": [\n                          \"node\"\n                        ]\n                      }\n                    ]\n                  },\n                  \"state\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"oneOf\": [\n                        {\n                          \"title\": \"Inode\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"inode\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"length\": {\n                                  \"$ref\": \"#/components/schemas/int64\"\n                                },\n                                \"proofs\": {\n                                  \"type\": \"array\",\n                                  \"items\": {\n                                    \"oneOf\": [\n                                      {\n                                        \"nullable\": true,\n                                        \"oneOf\": [\n                                          {\n                                            \"title\": \"some\",\n                                            \"oneOf\": [\n                                              {\n                                                \"$ref\": \"#/components/schemas/Context_hash\"\n                                              }\n                                            ]\n                                          }\n                                        ]\n                                      },\n                                      {\n                                        \"nullable\": true,\n                                        \"oneOf\": [\n                                          {\n                                            \"title\": \"some\",\n                                            \"oneOf\": [\n                                              {\n                                                \"$ref\": \"#/components/schemas/Context_hash\"\n                                              }\n                                            ]\n                                          }\n                                        ]\n                                      }\n                                    ]\n                                  }\n                                }\n                              },\n                              \"required\": [\n                                \"length\",\n                                \"proofs\"\n                              ]\n                            }\n                          },\n                          \"required\": [\n                            \"inode\"\n                          ]\n                        },\n                        {\n                          \"title\": \"other_elts\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"other_elts\": {\n                              \"oneOf\": [\n                                {\n                                  \"title\": \"Node\",\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"node\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                          \"oneOf\": [\n                                            {\n                                              \"type\": \"string\",\n                                              \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                                            },\n                                            {\n                                              \"oneOf\": [\n                                                {\n                                                  \"title\": \"Value\",\n                                                  \"type\": \"object\",\n                                                  \"properties\": {\n                                                    \"value\": {\n                                                      \"$ref\": \"#/components/schemas/Context_hash\"\n                                                    }\n                                                  },\n                                                  \"required\": [\n                                                    \"value\"\n                                                  ]\n                                                },\n                                                {\n                                                  \"title\": \"Node\",\n                                                  \"type\": \"object\",\n                                                  \"properties\": {\n                                                    \"node\": {\n                                                      \"$ref\": \"#/components/schemas/Context_hash\"\n                                                    }\n                                                  },\n                                                  \"required\": [\n                                                    \"node\"\n                                                  ]\n                                                }\n                                              ]\n                                            }\n                                          ]\n                                        }\n                                      }\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"node\"\n                                  ]\n                                },\n                                {\n                                  \"title\": \"other_elts\",\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"other_elts\": {\n                                      \"oneOf\": [\n                                        {\n                                          \"title\": \"Value\",\n                                          \"type\": \"object\",\n                                          \"properties\": {\n                                            \"value\": {\n                                              \"oneOf\": [\n                                                {\n                                                  \"title\": \"short_bytes\",\n                                                  \"type\": \"string\",\n                                                  \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                                                },\n                                                {\n                                                  \"title\": \"medium_bytes\",\n                                                  \"type\": \"string\",\n                                                  \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                                                },\n                                                {\n                                                  \"title\": \"long_bytes\",\n                                                  \"description\": \"This case is void. No data is accepted.\"\n                                                },\n                                                {\n                                                  \"title\": \"unlimited_bytes\",\n                                                  \"type\": \"string\",\n                                                  \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                                                }\n                                              ]\n                                            }\n                                          },\n                                          \"required\": [\n                                            \"value\"\n                                          ]\n                                        },\n                                        {\n                                          \"title\": \"Inode_extender\",\n                                          \"type\": \"object\",\n                                          \"properties\": {\n                                            \"inode_extender\": {\n                                              \"type\": \"object\",\n                                              \"properties\": {\n                                                \"length\": {\n                                                  \"$ref\": \"#/components/schemas/int64\"\n                                                },\n                                                \"segment\": {\n                                                  \"type\": \"string\",\n                                                  \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                                                },\n                                                \"proof\": {\n                                                  \"$ref\": \"#/components/schemas/Context_hash\"\n                                                }\n                                              },\n                                              \"required\": [\n                                                \"length\",\n                                                \"segment\",\n                                                \"proof\"\n                                              ]\n                                            }\n                                          },\n                                          \"required\": [\n                                            \"inode_extender\"\n                                          ]\n                                        }\n                                      ]\n                                    }\n                                  },\n                                  \"required\": [\n                                    \"other_elts\"\n                                  ]\n                                }\n                              ]\n                            }\n                          },\n                          \"required\": [\n                            \"other_elts\"\n                          ]\n                        }\n                      ]\n                    }\n                  }\n                },\n                \"required\": [\n                  \"version\",\n                  \"before\",\n                  \"after\",\n                  \"state\"\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\",\n              \"level\",\n              \"message\",\n              \"message_position\",\n              \"message_path\",\n              \"message_result_hash\",\n              \"message_result_path\",\n              \"previous_message_result\",\n              \"previous_message_result_path\",\n              \"proof\"\n            ]\n          },\n          {\n            \"title\": \"Tx_rollup_dispatch_tickets\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"tx_rollup_dispatch_tickets\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"tx_rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.tx_rollup_id\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"minimum\": -2147483648,\n                \"maximum\": 2147483647\n              },\n              \"context_hash\": {\n                \"$ref\": \"#/components/schemas/Context_hash\"\n              },\n              \"message_index\": {\n                \"type\": \"integer\",\n                \"minimum\": -1073741824,\n                \"maximum\": 1073741823\n              },\n              \"message_result_path\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Message_result_list_hash\"\n                }\n              },\n              \"tickets_info\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"contents\": {\n                      \"oneOf\": [\n                        {\n                          \"title\": \"Int\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"int\": {\n                              \"$ref\": \"#/components/schemas/bignum\"\n                            }\n                          },\n                          \"required\": [\n                            \"int\"\n                          ]\n                        },\n                        {\n                          \"title\": \"String\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"string\": {\n                              \"$ref\": \"#/components/schemas/unistring\"\n                            }\n                          },\n                          \"required\": [\n                            \"string\"\n                          ]\n                        },\n                        {\n                          \"title\": \"Bytes\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"bytes\": {\n                              \"type\": \"string\",\n                              \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                            }\n                          },\n                          \"required\": [\n                            \"bytes\"\n                          ]\n                        },\n                        {\n                          \"title\": \"Sequence\",\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                          }\n                        },\n                        {\n                          \"title\": \"Prim__generic\",\n                          \"description\": \"Generic primitive (any number of args with or without annotations)\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"prim\": {\n                              \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n                            },\n                            \"args\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                              }\n                            },\n                            \"annots\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"required\": [\n                            \"prim\"\n                          ]\n                        }\n                      ]\n                    },\n                    \"ty\": {\n                      \"oneOf\": [\n                        {\n                          \"title\": \"Int\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"int\": {\n                              \"$ref\": \"#/components/schemas/bignum\"\n                            }\n                          },\n                          \"required\": [\n                            \"int\"\n                          ]\n                        },\n                        {\n                          \"title\": \"String\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"string\": {\n                              \"$ref\": \"#/components/schemas/unistring\"\n                            }\n                          },\n                          \"required\": [\n                            \"string\"\n                          ]\n                        },\n                        {\n                          \"title\": \"Bytes\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"bytes\": {\n                              \"type\": \"string\",\n                              \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                            }\n                          },\n                          \"required\": [\n                            \"bytes\"\n                          ]\n                        },\n                        {\n                          \"title\": \"Sequence\",\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                          }\n                        },\n                        {\n                          \"title\": \"Prim__generic\",\n                          \"description\": \"Generic primitive (any number of args with or without annotations)\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"prim\": {\n                              \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n                            },\n                            \"args\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                              }\n                            },\n                            \"annots\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          },\n                          \"required\": [\n                            \"prim\"\n                          ]\n                        }\n                      ]\n                    },\n                    \"ticketer\": {\n                      \"$ref\": \"#/components/schemas/013-PtJakart.contract_id\"\n                    },\n                    \"amount\": {\n                      \"$ref\": \"#/components/schemas/int64\"\n                    },\n                    \"claimer\": {\n                      \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n                    }\n                  },\n                  \"required\": [\n                    \"contents\",\n                    \"ty\",\n                    \"ticketer\",\n                    \"amount\",\n                    \"claimer\"\n                  ]\n                }\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"tx_rollup\",\n              \"level\",\n              \"context_hash\",\n              \"message_index\",\n              \"message_result_path\",\n              \"tickets_info\"\n            ]\n          },\n          {\n            \"title\": \"Transfer_ticket\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"transfer_ticket\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"ticket_contents\": {\n                \"oneOf\": [\n                  {\n                    \"title\": \"Int\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"int\": {\n                        \"$ref\": \"#/components/schemas/bignum\"\n                      }\n                    },\n                    \"required\": [\n                      \"int\"\n                    ]\n                  },\n                  {\n                    \"title\": \"String\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"string\": {\n                        \"$ref\": \"#/components/schemas/unistring\"\n                      }\n                    },\n                    \"required\": [\n                      \"string\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Bytes\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"bytes\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                      }\n                    },\n                    \"required\": [\n                      \"bytes\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Sequence\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                    }\n                  },\n                  {\n                    \"title\": \"Prim__generic\",\n                    \"description\": \"Generic primitive (any number of args with or without annotations)\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"prim\": {\n                        \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n                      },\n                      \"args\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                        }\n                      },\n                      \"annots\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"required\": [\n                      \"prim\"\n                    ]\n                  }\n                ]\n              },\n              \"ticket_ty\": {\n                \"oneOf\": [\n                  {\n                    \"title\": \"Int\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"int\": {\n                        \"$ref\": \"#/components/schemas/bignum\"\n                      }\n                    },\n                    \"required\": [\n                      \"int\"\n                    ]\n                  },\n                  {\n                    \"title\": \"String\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"string\": {\n                        \"$ref\": \"#/components/schemas/unistring\"\n                      }\n                    },\n                    \"required\": [\n                      \"string\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Bytes\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"bytes\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                      }\n                    },\n                    \"required\": [\n                      \"bytes\"\n                    ]\n                  },\n                  {\n                    \"title\": \"Sequence\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                    }\n                  },\n                  {\n                    \"title\": \"Prim__generic\",\n                    \"description\": \"Generic primitive (any number of args with or without annotations)\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"prim\": {\n                        \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n                      },\n                      \"args\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                        }\n                      },\n                      \"annots\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"required\": [\n                      \"prim\"\n                    ]\n                  }\n                ]\n              },\n              \"ticket_ticketer\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.contract_id\"\n              },\n              \"ticket_amount\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"destination\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.contract_id\"\n              },\n              \"entrypoint\": {\n                \"$ref\": \"#/components/schemas/unistring\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"ticket_contents\",\n              \"ticket_ty\",\n              \"ticket_ticketer\",\n              \"ticket_amount\",\n              \"destination\",\n              \"entrypoint\"\n            ]\n          },\n          {\n            \"title\": \"Sc_rollup_originate\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"sc_rollup_originate\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"boot_sector\": {\n                \"$ref\": \"#/components/schemas/unistring\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"boot_sector\"\n            ]\n          },\n          {\n            \"title\": \"Sc_rollup_add_messages\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"sc_rollup_add_messages\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.rollup_address\"\n              },\n              \"message\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/unistring\"\n                }\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\",\n              \"message\"\n            ]\n          },\n          {\n            \"title\": \"Sc_rollup_cement\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"sc_rollup_cement\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.rollup_address\"\n              },\n              \"commitment\": {\n                \"$ref\": \"#/components/schemas/commitment_hash\"\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\",\n              \"commitment\"\n            ]\n          },\n          {\n            \"title\": \"Sc_rollup_publish\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"kind\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"sc_rollup_publish\"\n                ]\n              },\n              \"source\": {\n                \"$ref\": \"#/components/schemas/Signature.Public_key_hash\"\n              },\n              \"fee\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.mutez\"\n              },\n              \"counter\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"gas_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"storage_limit\": {\n                \"$ref\": \"#/components/schemas/positive_bignum\"\n              },\n              \"rollup\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.rollup_address\"\n              },\n              \"commitment\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"compressed_state\": {\n                    \"$ref\": \"#/components/schemas/state_hash\"\n                  },\n                  \"inbox_level\": {\n                    \"type\": \"integer\",\n                    \"minimum\": -2147483648,\n                    \"maximum\": 2147483647\n                  },\n                  \"predecessor\": {\n                    \"$ref\": \"#/components/schemas/commitment_hash\"\n                  },\n                  \"number_of_messages\": {\n                    \"type\": \"integer\",\n                    \"minimum\": -2147483648,\n                    \"maximum\": 2147483647\n                  },\n                  \"number_of_ticks\": {\n                    \"type\": \"integer\",\n                    \"minimum\": -2147483648,\n                    \"maximum\": 2147483647\n                  }\n                },\n                \"required\": [\n                  \"compressed_state\",\n                  \"inbox_level\",\n                  \"predecessor\",\n                  \"number_of_messages\",\n                  \"number_of_ticks\"\n                ]\n              }\n            },\n            \"required\": [\n              \"kind\",\n              \"source\",\n              \"fee\",\n              \"counter\",\n              \"gas_limit\",\n              \"storage_limit\",\n              \"rollup\",\n              \"commitment\"\n            ]\n          }\n        ]\n      },\n      \"013-PtJakart.rollup_address\": {\n        \"title\": \"A smart contract rollup address\",\n        \"description\": \"A smart contract rollup is identified by a base58 address starting with scr1\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"013-PtJakart.scripted.contracts\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"oneOf\": [\n              {\n                \"title\": \"Int\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"int\": {\n                    \"$ref\": \"#/components/schemas/bignum\"\n                  }\n                },\n                \"required\": [\n                  \"int\"\n                ]\n              },\n              {\n                \"title\": \"String\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"string\": {\n                    \"$ref\": \"#/components/schemas/unistring\"\n                  }\n                },\n                \"required\": [\n                  \"string\"\n                ]\n              },\n              {\n                \"title\": \"Bytes\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"bytes\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                  }\n                },\n                \"required\": [\n                  \"bytes\"\n                ]\n              },\n              {\n                \"title\": \"Sequence\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                }\n              },\n              {\n                \"title\": \"Prim__generic\",\n                \"description\": \"Generic primitive (any number of args with or without annotations)\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"prim\": {\n                    \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n                  },\n                  \"args\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                    }\n                  },\n                  \"annots\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"required\": [\n                  \"prim\"\n                ]\n              }\n            ]\n          },\n          \"storage\": {\n            \"oneOf\": [\n              {\n                \"title\": \"Int\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"int\": {\n                    \"$ref\": \"#/components/schemas/bignum\"\n                  }\n                },\n                \"required\": [\n                  \"int\"\n                ]\n              },\n              {\n                \"title\": \"String\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"string\": {\n                    \"$ref\": \"#/components/schemas/unistring\"\n                  }\n                },\n                \"required\": [\n                  \"string\"\n                ]\n              },\n              {\n                \"title\": \"Bytes\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"bytes\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n                  }\n                },\n                \"required\": [\n                  \"bytes\"\n                ]\n              },\n              {\n                \"title\": \"Sequence\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                }\n              },\n              {\n                \"title\": \"Prim__generic\",\n                \"description\": \"Generic primitive (any number of args with or without annotations)\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"prim\": {\n                    \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n                  },\n                  \"args\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                    }\n                  },\n                  \"annots\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"required\": [\n                  \"prim\"\n                ]\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"code\",\n          \"storage\"\n        ]\n      },\n      \"013-PtJakart.transaction_destination\": {\n        \"title\": \"A destination of a transaction\",\n        \"description\": \"A destination notation compatible with the contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash, a base58 originated contract hash, or a base58 originated transaction rollup.\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"013-PtJakart.tx_rollup_id\": {\n        \"title\": \"A tx rollup handle\",\n        \"description\": \"A tx rollup notation as given to an RPC or inside scripts, is a base58 tx rollup hash\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Commitment_hash\": {\n        \"title\": \"A commitment ID (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Context_hash\": {\n        \"title\": \"A hash of context (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Ed25519.Public_key_hash\": {\n        \"title\": \"An Ed25519 public key hash (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Inbox_list_hash\": {\n        \"title\": \"A merkle root hash for inboxes (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Message_result_hash\": {\n        \"title\": \"A message result hash (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Message_result_list_hash\": {\n        \"title\": \"A merklised message result list hash (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Operation_hash\": {\n        \"title\": \"A Tezos operation ID (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Operation_list_list_hash\": {\n        \"title\": \"A list of list of operations (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Protocol_hash\": {\n        \"title\": \"A Tezos protocol ID (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Signature\": {\n        \"title\": \"A Ed25519, Secp256k1 or P256 signature (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Signature.Public_key\": {\n        \"title\": \"A Ed25519, Secp256k1, or P256 public key (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Signature.Public_key_hash\": {\n        \"title\": \"A Ed25519, Secp256k1, or P256 public key hash (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Tx_rollup_l2_address\": {\n        \"title\": \"The hash of a BLS public key used to identify a L2 ticket holders (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"Withdraw_list_hash\": {\n        \"title\": \"A list of withdraw orders (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"bignum\": {\n        \"title\": \"Big number\",\n        \"description\": \"Decimal representation of a big number\",\n        \"type\": \"string\"\n      },\n      \"block_hash\": {\n        \"title\": \"A block identifier (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"commitment_hash\": {\n        \"title\": \"The hash of a commitment of a smart contract rollup (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"cycle_nonce\": {\n        \"title\": \"A nonce hash (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"error\": {\n        \"description\": \"The full list of errors is available with the global RPC `GET errors`\"\n      },\n      \"error_opt\": {\n        \"description\": \"An optional error-trace (None indicates no error). The full list of errors is available with the global RPC `GET errors`\"\n      },\n      \"fitness\": {\n        \"title\": \"Block fitness\",\n        \"description\": \"The fitness, or score, of a block, that allow the Tezos to decide which chain is the best. A fitness value is a list of byte sequences. They are compared as follows: shortest lists are smaller; lists of the same length are compared according to the lexicographical order.\",\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\",\n          \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n        }\n      },\n      \"int64\": {\n        \"title\": \"64 bit integers\",\n        \"description\": \"Decimal representation of 64 bit integers\",\n        \"type\": \"string\"\n      },\n      \"micheline.013-PtJakart.michelson_v1.expression\": {\n        \"oneOf\": [\n          {\n            \"title\": \"Int\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"int\": {\n                \"$ref\": \"#/components/schemas/bignum\"\n              }\n            },\n            \"required\": [\n              \"int\"\n            ]\n          },\n          {\n            \"title\": \"String\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"string\": {\n                \"$ref\": \"#/components/schemas/unistring\"\n              }\n            },\n            \"required\": [\n              \"string\"\n            ]\n          },\n          {\n            \"title\": \"Bytes\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"bytes\": {\n                \"type\": \"string\",\n                \"pattern\": \"^([a-zA-Z0-9][a-zA-Z0-9])*$\"\n              }\n            },\n            \"required\": [\n              \"bytes\"\n            ]\n          },\n          {\n            \"title\": \"Sequence\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n            }\n          },\n          {\n            \"title\": \"Prim__generic\",\n            \"description\": \"Generic primitive (any number of args with or without annotations)\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"prim\": {\n                \"$ref\": \"#/components/schemas/013-PtJakart.michelson.v1.primitives\"\n              },\n              \"args\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/micheline.013-PtJakart.michelson_v1.expression\"\n                }\n              },\n              \"annots\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"required\": [\n              \"prim\"\n            ]\n          }\n        ]\n      },\n      \"next_operation\": {\n        \"description\": \"An operation's shell header.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"protocol\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\"\n            ]\n          },\n          \"branch\": {\n            \"$ref\": \"#/components/schemas/block_hash\"\n          },\n          \"contents\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/013-PtJakart.operation.alpha.contents\"\n            }\n          },\n          \"signature\": {\n            \"$ref\": \"#/components/schemas/Signature\"\n          }\n        },\n        \"required\": [\n          \"protocol\",\n          \"branch\",\n          \"contents\",\n          \"signature\"\n        ]\n      },\n      \"positive_bignum\": {\n        \"title\": \"Positive big number\",\n        \"description\": \"Decimal representation of a positive big number\",\n        \"type\": \"string\"\n      },\n      \"script_expr\": {\n        \"title\": \"A script expression ID (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"state_hash\": {\n        \"title\": \"The hash of the VM state of a smart contract rollup (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"timestamp.protocol\": {\n        \"description\": \"A timestamp as seen by the protocol: second-level precision, epoch based.\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      },\n      \"unistring\": {\n        \"title\": \"Universal string representation\",\n        \"description\": \"Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.\",\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"invalid_utf8_string\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"minimum\": 0,\n                  \"maximum\": 255\n                }\n              }\n            },\n            \"required\": [\n              \"invalid_utf8_string\"\n            ]\n          }\n        ]\n      },\n      \"value_hash\": {\n        \"title\": \"Hash of a consensus value (Base58Check-encoded)\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/unistring\"\n          }\n        ]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/gitlab.com/tezos/tezos@e3e4880a808bba2d1417288e1407895f31c42aad/-/blob/docs/api/jakarta-mempool-openapi.json",
			"externalURLs": [
				{
					"url": "https://gitlab.com/tezos/tezos/blob/e3e4880a808bba2d1417288e1407895f31c42aad/docs/api/jakarta-mempool-openapi.json",
					"serviceKind": "GITLAB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/monitor_operations\": get: responses: 200: contents: application/json: generate schema: item: field contents: item: oneOf: collect variants: oneOf[10]: field parameters: field entrypoint: oneOf: oneOf R013PtJakartEntrypoint: variant R013PtJakartEntrypoint0: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}