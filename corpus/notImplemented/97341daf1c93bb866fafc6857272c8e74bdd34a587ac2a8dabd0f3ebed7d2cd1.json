{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/InterDigitalInc/AdvantEDGE"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "go-packages/meep-service-mgmt-client/api/swagger.yaml",
			"byteSize": 66502,
			"content": "openapi: 3.0.2\ninfo:\n  title: AdvantEDGE MEC Service Management API\n  description: \"MEC Service Management Service is AdvantEDGE's implementation of [ETSI\\\n    \\ MEC ISG MEC011 Application Enablement API](https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.01.01_60/gs_MEC011v020101p.pdf)\\\n    \\ \u003cp\u003e[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt)\\\n    \\ \u003cp\u003e**Micro-service**\u003cbr\u003e[meep-app-enablement](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-app-enablement/server/service-mgmt)\\\n    \\ \u003cp\u003e**Type \u0026 Usage**\u003cbr\u003eEdge Service used by edge applications that want to get\\\n    \\ information about services in the network \u003cp\u003e**Note**\u003cbr\u003eAdvantEDGE supports\\\n    \\ all of Service Management API endpoints (see below).\"\n  contact:\n    name: InterDigital AdvantEDGE Support\n    email: AdvantEDGE@InterDigital.com\n  license:\n    name: Apache 2.0\n    url: https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE\n  version: 2.1.1\nexternalDocs:\n  description: \"ETSI GS MEC011 Application Enablement API, V2.1.1\"\n  url: https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.01.01_60/gs_MEC011v020101p.pdf\nservers:\n- url: https://localhost/sandboxname/mec_service_mgmt/v1\ntags:\n- name: mec_service_mgmt\npaths:\n  /services:\n    get:\n      tags:\n      - mec_service_mgmt\n      description: This method retrieves information about a list of mecService resources.\n        This method is typically used in \"service availability query\" procedure\n      operationId: Services_GET\n      parameters:\n      - name: ser_instance_id\n        in: query\n        description: A MEC application instance may use multiple ser_instance_ids\n          as an input parameter to query the availability of a list of MEC service\n          instances. Either \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\" or\n          none of them shall be present.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      - name: ser_name\n        in: query\n        description: A MEC application instance may use multiple ser_names as an input\n          parameter to query the availability of a list of MEC service instances.\n          Either \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\" or none of them\n          shall be present.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      - name: ser_category_id\n        in: query\n        description: A MEC application instance may use ser_category_id as an input\n          parameter to query the availability of a list of MEC service instances in\n          a serCategory. Either \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\"\n          or none of them shall be present.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: consumed_local_only\n        in: query\n        description: Indicate whether the service can only be consumed by the MEC  applications\n          located in the same locality (as defined by  scopeOfLocality) as this service\n          instance.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n      - name: is_local\n        in: query\n        description: Indicate whether the service is located in the same locality\n          (as  defined by scopeOfLocality) as the consuming MEC application.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n      - name: scope_of_locality\n        in: query\n        description: A MEC application instance may use scope_of_locality as an input  parameter\n          to query the availability of a list of MEC service instances  with a certain\n          scope of locality.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                minItems: 0\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceInfo'\n                x-content-type: application/json\n          links:\n            getIndividualmecService:\n              $ref: '#/components/links/GetIndividualmecService'\n            putIndividualmecService:\n              $ref: '#/components/links/PutIndividualmecService'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"414\":\n          description: It is used to indicate that the server is refusing to process\n            the request because the request URI is longer than the server is willing\n            or able to process.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /services/{serviceId}:\n    get:\n      tags:\n      - mec_service_mgmt\n      description: This method retrieves information about a mecService resource.\n        This method is typically used in \"service availability query\" procedure\n      operationId: ServicesServiceId_GET\n      parameters:\n      - name: serviceId\n        in: path\n        description: Represents a MEC service instance.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInfo'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/services:\n    get:\n      tags:\n      - mec_service_mgmt\n      description: This method retrieves information about a list of mecService resources.\n        This method is typically used in \"service availability query\" procedure\n      operationId: AppServices_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: ser_instance_id\n        in: query\n        description: A MEC application instance may use multiple ser_instance_ids\n          as an input parameter to query the availability of a list of MEC service\n          instances. Either \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\" or\n          none of them shall be present.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      - name: ser_name\n        in: query\n        description: A MEC application instance may use multiple ser_names as an input\n          parameter to query the availability of a list of MEC service instances.\n          Either \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\" or none of them\n          shall be present.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      - name: ser_category_id\n        in: query\n        description: A MEC application instance may use ser_category_id as an input\n          parameter to query the availability of a list of MEC service instances in\n          a serCategory. Either \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\"\n          or none of them shall be present.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: consumed_local_only\n        in: query\n        description: Indicate whether the service can only be consumed by the MEC  applications\n          located in the same locality (as defined by  scopeOfLocality) as this service\n          instance.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n      - name: is_local\n        in: query\n        description: Indicate whether the service is located in the same locality\n          (as  defined by scopeOfLocality) as the consuming MEC application.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n      - name: scope_of_locality\n        in: query\n        description: A MEC application instance may use scope_of_locality as an input  parameter\n          to query the availability of a list of MEC service instances  with a certain\n          scope of locality.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                minItems: 0\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceInfo'\n                x-content-type: application/json\n          links:\n            getIndividualmecService:\n              $ref: '#/components/links/GetIndividualmecService'\n            putIndividualmecService:\n              $ref: '#/components/links/PutIndividualmecService'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"414\":\n          description: It is used to indicate that the server is refusing to process\n            the request because the request URI is longer than the server is willing\n            or able to process.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    post:\n      tags:\n      - mec_service_mgmt\n      description: This method is used to create a mecService resource. This method\n        is typically used in \"service availability update and new service registration\"\n        procedure\n      operationId: AppServices_POST\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ServicesPost'\n      responses:\n        \"201\":\n          description: \"Upon success, the HTTP response shall include a Location HTTP\\\n            \\ header that contains the resource URI of the created resource.\"\n          headers:\n            location:\n              description: The resource URI of the created resource\n              style: simple\n              explode: false\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInfo'\n          links:\n            getIndividualmecService:\n              $ref: '#/components/links/GetIndividualmecService'\n            putIndividualmecService:\n              $ref: '#/components/links/PutIndividualmecService'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/services/{serviceId}:\n    get:\n      tags:\n      - mec_service_mgmt\n      description: This method retrieves information about a mecService resource.\n        This method is typically used in \"service availability query\" procedure\n      operationId: AppServicesServiceId_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: serviceId\n        in: path\n        description: Represents a MEC service instance.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInfo'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    put:\n      tags:\n      - mec_service_mgmt\n      description: This method updates the information about a mecService resource\n      operationId: AppServicesServiceId_PUT\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: serviceId\n        in: path\n        description: Represents a MEC service instance.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ServicesServiceId'\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInfo'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition Failed. It is used when a condition has failed\\\n            \\ during conditional requests,  e.g. when using ETags to avoid write conflicts.\"\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      tags:\n      - mec_service_mgmt\n      description: 'This method deletes a mecService resource. This method is typically\n        used in the service deregistration procedure. '\n      operationId: AppServicesServiceId_DELETE\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: serviceId\n        in: path\n        description: Represents a MEC service instance.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/subscriptions:\n    get:\n      tags:\n      - mec_service_mgmt\n      description: \"The GET method may be used to request information about all subscriptions\\\n        \\ for this requestor. Upon success, the response contains entity body with\\\n        \\ all the subscriptions for the requestor.\"\n      operationId: ApplicationsSubscriptions_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: \"Upon success, a response body containing the list of links\\\n            \\ to the requested subscriptions is returned.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionLinkList'\n          links:\n            getIndividualmecSerMgmtApiSubscriptionLinkList:\n              $ref: '#/components/links/GetIndividualmecSerMgmtApiSubscriptionLinkList'\n            delIndividualmecSerMgmtApiSubscriptionLinkList:\n              $ref: '#/components/links/DelIndividualmecSerMgmtApiSubscriptionLinkList'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    post:\n      tags:\n      - mec_service_mgmt\n      description: \"The POST method may be used to create a new subscription. One\\\n        \\ example use case is to create a new subscription to the MEC service availability\\\n        \\ notifications. Upon success, the response contains entity body describing\\\n        \\ the created subscription.\"\n      operationId: ApplicationsSubscriptions_POST\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsSubscriptions'\n      responses:\n        \"201\":\n          description: Entity body in the request contains a subscription to the MEC\n            service availability notifications that is to be created.\n          headers:\n            location:\n              description: The resource URI of the created resource\n              style: simple\n              explode: false\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SerAvailabilityNotificationSubscription'\n          links:\n            getIndividualmecSerMgmtApiSubscription:\n              $ref: '#/components/links/GetIndividualmecSerMgmtApiSubscription'\n            delIndividualmecSerMgmtApiSubscription:\n              $ref: '#/components/links/DelIndividualmecSerMgmtApiSubscription'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      callbacks:\n        serviceAvailabilityNotification:\n          $ref: '#/components/callbacks/ServiceAvailabilityNotification'\n  /applications/{appInstanceId}/subscriptions/{subscriptionId}:\n    get:\n      tags:\n      - mec_service_mgmt\n      description: \"The GET method requests information about a subscription for this\\\n        \\ requestor. Upon success, the response contains entity body with the subscription\\\n        \\ for the requestor.\"\n      operationId: ApplicationsSubscription_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: subscriptionId\n        in: path\n        description: Represents a subscription to the notifications from the MEC platform.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: \"Upon success, a response body containing the requested subscription\\\n            \\ is returned.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SerAvailabilityNotificationSubscription'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      tags:\n      - mec_service_mgmt\n      description: This method deletes a mecSrvMgmtSubscription. This method is typically\n        used in \"Unsubscribing from service availability event notifications\" procedure.\n      operationId: ApplicationsSubscription_DELETE\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: subscriptionId\n        in: path\n        description: Represents a subscription to the notifications from the MEC platform.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /transports:\n    get:\n      tags:\n      - mec_service_mgmt\n      description: This method retrieves information about a list of available transports.\n        This method is typically used by a service-producing application to discover\n        transports provided by the MEC platform in the \"transport information query\"\n        procedure\n      operationId: Transports_GET\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                minItems: 0\n                type: array\n                items:\n                  $ref: '#/components/schemas/TransportInfo'\n                x-content-type: application/json\n          links:\n            getTransportInfo:\n              $ref: '#/components/links/GetTransportInfo'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\ncomponents:\n  schemas:\n    CategoryRef:\n      required:\n      - href\n      - id\n      - name\n      - version\n      type: object\n      properties:\n        href:\n          type: string\n          description: Reference of the catalogue\n          format: uri\n        id:\n          type: string\n          description: Unique identifier of the category\n        name:\n          type: string\n          description: \"Name of the category, example values include RNI, Location\\\n            \\ \u0026 Bandwidth Management\"\n        version:\n          type: string\n          description: Category version\n      description: This type represents the category reference\n      example:\n        name: name\n        href: http://example.com/aeiou\n        id: id\n        version: version\n    CategoryRefs:\n      minItems: 0\n      type: array\n      description: Categories of services about which to report events.\n      items:\n        $ref: '#/components/schemas/CategoryRef'\n      x-schema-name: CategoryRefs\n    EndPointInfoAddresses:\n      required:\n      - addresses\n      type: object\n      properties:\n        addresses:\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/EndPointInfoAddresses_addresses'\n      description: Entry point information of the service as one or more pairs of\n        IP address and port\n    EndPointInfoAlternative:\n      required:\n      - alternative\n      type: object\n      properties:\n        alternative:\n          type: object\n      description: \"Entry point information of the service in a format defined by\\\n        \\ an implementation, or in an external specification.\"\n    EndPointInfoUris:\n      required:\n      - uris\n      type: object\n      properties:\n        uris:\n          minItems: 0\n          type: array\n          items:\n            type: string\n            description: Entry point information of the service\n            format: uri\n      description: \"Entry point information of the service as string, formatted according\\\n        \\ to URI syntax\"\n    LinkType:\n      type: object\n      properties:\n        href:\n          type: string\n          description: URI referring to a resource\n          format: uri\n          example: /mecSerMgmtApi/example\n      description: This type represents a type of link and may be referenced from\n        data structures\n      example:\n        href: /mecSerMgmtApi/example\n    SubscriptionLinkList:\n      required:\n      - _links\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/SubscriptionLinkList__links'\n      description: This type represents a list of links related to currently existing\n        subscriptions for a MEC application instance. This information is returned\n        when sending a request to receive current subscriptions.\n      example:\n        _links:\n          subscriptions:\n          - subscriptionType: subscriptionType\n            href: http://example.com/aeiou\n          - subscriptionType: subscriptionType\n            href: http://example.com/aeiou\n          self:\n            href: /mecSerMgmtApi/example\n    ProblemDetails:\n      type: object\n      properties:\n        type:\n          type: string\n          description: A URI reference according to IETF RFC 3986 that identifies\n            the problem type\n          format: uri\n        title:\n          type: string\n          description: \"A short, human-readable summary of the problem type\"\n        status:\n          type: integer\n          description: The HTTP status code for this occurrence of the problem\n          format: uint32\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of\n            the problem\n        instance:\n          type: string\n          description: A URI reference that identifies the specific occurrence of\n            the problem\n          format: uri\n    GrantType:\n      type: string\n      description: OAuth 2.0 grant type\n      example: OAUTH2_CLIENT_CREDENTIALS\n      enum:\n      - OAUTH2_AUTHORIZATION_CODE\n      - OAUTH2_IMPLICIT_GRANT\n      - OAUTH2_RESOURCE_OWNER\n      - OAUTH2_CLIENT_CREDENTIALS\n    OAuth2Info:\n      required:\n      - grantTypes\n      - tokenEndpoint\n      properties:\n        grantTypes:\n          maxItems: 4\n          minItems: 1\n          type: array\n          description: List of supported OAuth 2.0 grant types.\n          items:\n            $ref: '#/components/schemas/GrantType'\n        tokenEndpoint:\n          type: string\n          description: The token endpoint\n          format: uri\n      description: Parameters related to use of OAuth 2.0\n      example:\n        tokenEndpoint: http://example.com/aeiou\n        grantTypes:\n        - OAUTH2_CLIENT_CREDENTIALS\n        - OAUTH2_CLIENT_CREDENTIALS\n        - OAUTH2_CLIENT_CREDENTIALS\n        - OAUTH2_CLIENT_CREDENTIALS\n    SecurityInfo:\n      type: object\n      properties:\n        oAuth2Info:\n          $ref: '#/components/schemas/OAuth2Info'\n      description: This type represents security information related to a transport\n      example:\n        oAuth2Info:\n          tokenEndpoint: http://example.com/aeiou\n          grantTypes:\n          - OAUTH2_CLIENT_CREDENTIALS\n          - OAUTH2_CLIENT_CREDENTIALS\n          - OAUTH2_CLIENT_CREDENTIALS\n          - OAUTH2_CLIENT_CREDENTIALS\n    Self:\n      required:\n      - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/LinkType'\n      description: Self-referring URI.\n      readOnly: true\n      example:\n        self:\n          href: /mecSerMgmtApi/example\n    SerAvailabilityNotificationSubscription:\n      required:\n      - callbackReference\n      - subscriptionType\n      type: object\n      properties:\n        subscriptionType:\n          type: string\n          description: Shall be set to SerAvailabilityNotificationSubscription.\n        callbackReference:\n          type: string\n          description: URI selected by the MEC application instance to receive notifications\n            on the subscribed MEC service availability information. This shall be\n            included in both the request and the response.\n          format: uri\n        _links:\n          $ref: '#/components/schemas/Self'\n        filteringCriteria:\n          $ref: '#/components/schemas/SerAvailabilityNotificationSubscription_filteringCriteria'\n      description: This type represents a subscription to the notifications from the  MEC\n        platform regarding the availability of a MEC service or a list of MEC services.\n      example:\n        filteringCriteria:\n          serNames:\n          - serNames\n          - serNames\n          serInstanceIds:\n          - serInstanceIds\n          - serInstanceIds\n          serCategories:\n          - name: name\n            href: http://example.com/aeiou\n            id: id\n            version: version\n          - name: name\n            href: http://example.com/aeiou\n            id: id\n            version: version\n          states:\n          - ACTIVE\n          - ACTIVE\n          isLocal: true\n        subscriptionType: subscriptionType\n        _links:\n          self:\n            href: /mecSerMgmtApi/example\n        callbackReference: http://example.com/aeiou\n    ServiceAvailabilityNotification:\n      required:\n      - _links\n      - notificationType\n      - serviceReferences\n      type: object\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to SerAvailabilityNotification.\n        serviceReferences:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceAvailabilityNotification_serviceReferences'\n        _links:\n          $ref: '#/components/schemas/Subscription'\n      description: This type represents the service availability information.\n    SerializerType:\n      type: string\n      description: The enumeration  represents types of serializers\n      enum:\n      - JSON\n      - XML\n      - PROTOBUF3\n    LocalityType:\n      type: string\n      description: \"The scope of locality as expressed by \\\"consumedLocalOnly\\\" and\\\n        \\ \\\"isLocal\\\". If absent, defaults to MEC_HOST\"\n      enum:\n      - MEC_SYSTEM\n      - MEC_HOST\n      - NFVI_POP\n      - ZONE\n      - ZONE_GROUP\n      - NFVI_NODE\n    ServiceState:\n      type: string\n      description: This enumeration defines the possible states of a service.\n      enum:\n      - ACTIVE\n      - INACTIVE\n    ServiceStates:\n      minItems: 0\n      type: array\n      description: \"States of the services about which to report events. If the event\\\n        \\ is  a state change, this filter represents the state after the change.\"\n      items:\n        $ref: '#/components/schemas/ServiceState'\n      x-schema-name: ServiceStates\n    SerInstanceId:\n      type: string\n      description: Identifier of the service instance assigned by the MEC platform.\n      readOnly: true\n    SerInstanceIds:\n      minItems: 0\n      type: array\n      description: Identifiers of service instances about which to report events.\n      items:\n        $ref: '#/components/schemas/SerInstanceId'\n      x-schema-name: SerInstanceIds\n    SerName:\n      type: string\n      description: The name of the service. This is how the service producing MEC\n        application identifies the service instance it produces.\n    SerNames:\n      minItems: 0\n      type: array\n      description: Names of services about which to report events.\n      items:\n        $ref: '#/components/schemas/SerName'\n      x-schema-name: SerNames\n    ServiceInfoPost:\n      required:\n      - serName\n      - serializer\n      - state\n      - version\n      type: object\n      properties:\n        serInstanceId:\n          $ref: '#/components/schemas/SerInstanceId'\n        serName:\n          $ref: '#/components/schemas/SerName'\n        serCategory:\n          $ref: '#/components/schemas/CategoryRef'\n        version:\n          type: string\n          description: Service version\n        state:\n          $ref: '#/components/schemas/ServiceState'\n        transportId:\n          type: string\n          description: \"Identifier of the platform-provided transport to be used by\\\n            \\ the service. Valid identifiers may be obtained using the \\\"Transport\\\n            \\ information query\\\" procedure. May be present in POST requests to signal\\\n            \\ the use of a platform-provided transport for the service, and shall\\\n            \\ be absent otherwise.\"\n          writeOnly: true\n        transportInfo:\n          $ref: '#/components/schemas/TransportInfo'\n        serializer:\n          $ref: '#/components/schemas/SerializerType'\n        scopeOfLocality:\n          $ref: '#/components/schemas/LocalityType'\n        consumedLocalOnly:\n          type: boolean\n          description: Indicate whether the service can only be consumed by the MEC\n            applications located in the same locality (as defined by scopeOfLocality)\n            as this  service instance.\n        isLocal:\n          type: boolean\n          description: Indicate whether the service is located in the same locality\n            (as defined by scopeOfLocality) as the consuming MEC application.\n      description: This type represents the general information of a MEC service.\n      oneOf:\n      - required:\n        - transportId\n      - required:\n        - transportInfo\n    ServiceInfo:\n      required:\n      - serName\n      - serializer\n      - state\n      - transportInfo\n      - version\n      type: object\n      properties:\n        serInstanceId:\n          $ref: '#/components/schemas/SerInstanceId'\n        serName:\n          $ref: '#/components/schemas/SerName'\n        serCategory:\n          $ref: '#/components/schemas/CategoryRef'\n        version:\n          type: string\n          description: Service version\n        state:\n          $ref: '#/components/schemas/ServiceState'\n        transportInfo:\n          $ref: '#/components/schemas/TransportInfo'\n        serializer:\n          $ref: '#/components/schemas/SerializerType'\n        scopeOfLocality:\n          $ref: '#/components/schemas/LocalityType'\n        consumedLocalOnly:\n          type: boolean\n          description: Indicate whether the service can only be consumed by the MEC\n            applications located in the same locality (as defined by scopeOfLocality)\n            as this  service instance.\n        isLocal:\n          type: boolean\n          description: Indicate whether the service is located in the same locality\n            (as defined by scopeOfLocality) as the consuming MEC application.\n      description: This type represents the general information of a MEC service.\n      example:\n        serInstanceId: rnisInstance1\n        serName: myRnis\n        serCategory:\n          href: catItem1\n          id: id12345\n          name: RNI\n          version: v2\n        version: 2.2.1\n        state: ACTIVE\n        transportInfo:\n          id: TransId12345\n          name: REST\n          description: REST API\n          type: REST_HTTP\n          protocol: HTTP\n          version: \"2.0\"\n          endpoint:\n            uris:\n            - https://my.callback.com/sandboxname/rni/v2/\n        serializer: JSON\n        scopeOfLocality: MEC_SYSTEM\n    Subscription:\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/LinkType'\n      description: A link to the related subscription\n    TransportInfo:\n      required:\n      - endpoint\n      - id\n      - name\n      - protocol\n      - security\n      - type\n      - version\n      type: object\n      properties:\n        id:\n          type: string\n          description: The identifier of this transport\n        name:\n          type: string\n          description: The name of this transport\n        description:\n          type: string\n          description: Human-readable description of this transport\n        type:\n          $ref: '#/components/schemas/TransportType'\n        protocol:\n          type: string\n          description: The name of the protocol used. Shall be set to HTTP for a REST\n            API.\n        version:\n          type: string\n          description: The version of the protocol used\n        endpoint:\n          type: object\n          description: This type represents information about a transport endpoint\n          oneOf:\n          - $ref: '#/components/schemas/EndPointInfoUris'\n          - $ref: '#/components/schemas/EndPointInfoAddresses'\n          - $ref: '#/components/schemas/EndPointInfoAlternative'\n        security:\n          $ref: '#/components/schemas/SecurityInfo'\n        implSpecificInfo:\n          type: object\n          description: Additional implementation specific details of the transport\n      description: This type represents the general information of a MEC service.\n      example:\n        implSpecificInfo: {}\n        protocol: protocol\n        endpoint: \"\"\n        security:\n          oAuth2Info:\n            tokenEndpoint: http://example.com/aeiou\n            grantTypes:\n            - OAUTH2_CLIENT_CREDENTIALS\n            - OAUTH2_CLIENT_CREDENTIALS\n            - OAUTH2_CLIENT_CREDENTIALS\n            - OAUTH2_CLIENT_CREDENTIALS\n        name: name\n        description: description\n        id: id\n        type: REST_HTTP\n        version: version\n    TransportType:\n      type: string\n      description: The enumeration TransportType represents types of transports\n      enum:\n      - REST_HTTP\n      - MB_TOPIC_BASED\n      - MB_ROUTING\n      - MB_PUBSUB\n      - RPC\n      - RPC_STREAMING\n      - WEBSOCKET\n    EndPointInfoAddresses_addresses:\n      required:\n      - host\n      - port\n      type: object\n      properties:\n        host:\n          type: string\n          description: Host portion of the address\n        port:\n          type: integer\n          description: Port portion of the address\n          format: uint32\n      description: A IP address and port pair\n    SubscriptionLinkList__links_subscriptions:\n      required:\n      - href\n      - subscriptionType\n      type: object\n      properties:\n        href:\n          type: string\n          description: URI referring to a resource\n          format: uri\n        subscriptionType:\n          type: string\n          description: Type of the subscription. The values are as defined in the\n            \"subscriptionType\" attribute for each different Mp1 event subscription\n            data type.\n      description: A link to a subscription.\n      example:\n        subscriptionType: subscriptionType\n        href: http://example.com/aeiou\n    SubscriptionLinkList__links:\n      required:\n      - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/LinkType'\n        subscriptions:\n          type: array\n          description: The MEC application instance's subscriptions\n          items:\n            $ref: '#/components/schemas/SubscriptionLinkList__links_subscriptions'\n      description: Self-referring URI.\n      example:\n        subscriptions:\n        - subscriptionType: subscriptionType\n          href: http://example.com/aeiou\n        - subscriptionType: subscriptionType\n          href: http://example.com/aeiou\n        self:\n          href: /mecSerMgmtApi/example\n    SerAvailabilityNotificationSubscription_filteringCriteria:\n      type: object\n      not:\n        required:\n        - serCategories\n        - serInstanceIds\n        - serNames\n      properties:\n        serInstanceIds:\n          $ref: '#/components/schemas/SerInstanceIds'\n        serNames:\n          $ref: '#/components/schemas/SerNames'\n        serCategories:\n          $ref: '#/components/schemas/CategoryRefs'\n        states:\n          $ref: '#/components/schemas/ServiceStates'\n        isLocal:\n          type: boolean\n          description: Indicate whether the service is located in the same locality\n            (as defined by scopeOfLocality) as the consuming MEC application.\n      description: \"Filtering criteria to match services for which events are requested\\\n        \\ to be reported. If absent, matches all services. All child attributes are\\\n        \\ combined with the logical  \\\"AND\\\" operation.\"\n      example:\n        serNames:\n        - serNames\n        - serNames\n        serInstanceIds:\n        - serInstanceIds\n        - serInstanceIds\n        serCategories:\n        - name: name\n          href: http://example.com/aeiou\n          id: id\n          version: version\n        - name: name\n          href: http://example.com/aeiou\n          id: id\n          version: version\n        states:\n        - ACTIVE\n        - ACTIVE\n        isLocal: true\n    ServiceAvailabilityNotification_serviceReferences:\n      required:\n      - changeType\n      - serInstanceId\n      - serName\n      - state\n      type: object\n      properties:\n        link:\n          $ref: '#/components/schemas/LinkType'\n        serName:\n          $ref: '#/components/schemas/SerName'\n        serInstanceId:\n          $ref: '#/components/schemas/SerInstanceId'\n        state:\n          $ref: '#/components/schemas/ServiceState'\n        changeType:\n          type: string\n          description: \"Type of the change. Valid values:\\n ADDED: The service was\\\n            \\ newly added.\\n  REMOVED: The service was removed.\\n  STATE_CHANGED:\\\n            \\ Only the state of the service was changed. \\n  ATTRIBUTES_CHANGED: At\\\n            \\ least one attribute of the service other than state was changed. The\\\n            \\ change may or may not include changing the state.\"\n          enum:\n          - ADDED\n          - REMOVED\n          - STATE_CHANGED\n          - ATTRIBUTES_CHANGED\n      description: List of links to services whose availability has changed.\n  responses:\n    ApplicationsSubscriptions200:\n      description: \"Upon success, a response body containing the list of links to\\\n        \\ the requested subscriptions is returned.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SubscriptionLinkList'\n      links:\n        getIndividualmecSerMgmtApiSubscriptionLinkList:\n          $ref: '#/components/links/GetIndividualmecSerMgmtApiSubscriptionLinkList'\n        delIndividualmecSerMgmtApiSubscriptionLinkList:\n          $ref: '#/components/links/DelIndividualmecSerMgmtApiSubscriptionLinkList'\n    ApplicationsSubscriptions201:\n      description: Entity body in the request contains a subscription to the MEC service\n        availability notifications that is to be created.\n      headers:\n        location:\n          description: The resource URI of the created resource\n          style: simple\n          explode: false\n          schema:\n            type: string\n            format: uri\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SerAvailabilityNotificationSubscription'\n      links:\n        getIndividualmecSerMgmtApiSubscription:\n          $ref: '#/components/links/GetIndividualmecSerMgmtApiSubscription'\n        delIndividualmecSerMgmtApiSubscription:\n          $ref: '#/components/links/DelIndividualmecSerMgmtApiSubscription'\n    ApplicationsSubscription200:\n      description: \"Upon success, a response body containing the requested subscription\\\n        \\ is returned.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SerAvailabilityNotificationSubscription'\n    Services200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            minItems: 0\n            type: array\n            items:\n              $ref: '#/components/schemas/ServiceInfo'\n            x-content-type: application/json\n      links:\n        getIndividualmecService:\n          $ref: '#/components/links/GetIndividualmecService'\n        putIndividualmecService:\n          $ref: '#/components/links/PutIndividualmecService'\n    Services201:\n      description: \"Upon success, the HTTP response shall include a Location HTTP\\\n        \\ header that contains the resource URI of the created resource.\"\n      headers:\n        location:\n          description: The resource URI of the created resource\n          style: simple\n          explode: false\n          schema:\n            type: string\n            format: uri\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ServiceInfo'\n      links:\n        getIndividualmecService:\n          $ref: '#/components/links/GetIndividualmecService'\n        putIndividualmecService:\n          $ref: '#/components/links/PutIndividualmecService'\n    ServicesServiceId200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ServiceInfo'\n    Transports200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            minItems: 0\n            type: array\n            items:\n              $ref: '#/components/schemas/TransportInfo'\n            x-content-type: application/json\n      links:\n        getTransportInfo:\n          $ref: '#/components/links/GetTransportInfo'\n    \"400\":\n      description: Bad Request. It is used to indicate that incorrect parameters were\n        passed to the request.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"401\":\n      description: Unauthorized. It is used when the client did not submit the appropriate\n        credentials.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"403\":\n      description: 'Forbidden. The operation is not allowed given the current status\n        of the resource. '\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"404\":\n      description: Not Found. It is used when a client provided a URI that cannot\n        be mapped  to a valid resource URI.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"409\":\n      description: \"Conflict. The operation cannot be executed currently, due to a\\\n        \\ conflict with  the state of the resource. Typically, this is because the\\\n        \\ application  instance resource is in NOT_INSTANTIATED state.\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"412\":\n      description: \"Precondition Failed. It is used when a condition has failed during\\\n        \\ conditional requests,  e.g. when using ETags to avoid write conflicts.\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"414\":\n      description: It is used to indicate that the server is refusing to process the\n        request because the request URI is longer than the server is willing or able\n        to process.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"429\":\n      description: Too Many Requests. It is used when a rate limiter has triggered.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n  parameters:\n    Path.AppInstanceId:\n      name: appInstanceId\n      in: path\n      description: Represents a MEC application instance. Note that the appInstanceId\n        is allocated by the MEC platform manager.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    Path.SubscriptionId:\n      name: subscriptionId\n      in: path\n      description: Represents a subscription to the notifications from the MEC platform.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    Path.ServiceId:\n      name: serviceId\n      in: path\n      description: Represents a MEC service instance.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    Query.SerCategoryId:\n      name: ser_category_id\n      in: query\n      description: A MEC application instance may use ser_category_id as an input\n        parameter to query the availability of a list of MEC service instances in\n        a serCategory. Either \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\"\n        or none of them shall be present.\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    Query.SerInstanceId:\n      name: ser_instance_id\n      in: query\n      description: A MEC application instance may use multiple ser_instance_ids as\n        an input parameter to query the availability of a list of MEC service instances.\n        Either \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\" or none of them\n        shall be present.\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    Query.SerName:\n      name: ser_name\n      in: query\n      description: A MEC application instance may use multiple ser_names as an input\n        parameter to query the availability of a list of MEC service instances. Either\n        \"ser_instance_id\" or \"ser_name\" or \"ser_category_id\" or none of them shall\n        be present.\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    Query.LocalityType:\n      name: scope_of_locality\n      in: query\n      description: A MEC application instance may use scope_of_locality as an input  parameter\n        to query the availability of a list of MEC service instances  with a certain\n        scope of locality.\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    Query.IsLocal:\n      name: is_local\n      in: query\n      description: Indicate whether the service is located in the same locality (as  defined\n        by scopeOfLocality) as the consuming MEC application.\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: boolean\n    Query.ConsumedLocalOnly:\n      name: consumed_local_only\n      in: query\n      description: Indicate whether the service can only be consumed by the MEC  applications\n        located in the same locality (as defined by  scopeOfLocality) as this service\n        instance.\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: boolean\n  examples:\n    ServiceInfo:\n      value:\n        serInstanceId: rnisInstance1\n        serName: myRnis\n        serCategory:\n          href: catItem1\n          id: id12345\n          name: RNI\n          version: v2\n        version: 2.2.1\n        state: ACTIVE\n        transportInfo:\n          id: TransId12345\n          name: REST\n          description: REST API\n          type: REST_HTTP\n          protocol: HTTP\n          version: \"2.0\"\n          endpoint:\n            uris:\n            - https://my.callback.com/sandboxname/rni/v2/\n        serializer: JSON\n        scopeOfLocality: MEC_SYSTEM\n  requestBodies:\n    ApplicationsSubscriptions:\n      description: Entity body in the request contains a subscription to the MEC application\n        termination notifications that is to be created.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SerAvailabilityNotificationSubscription'\n          example:\n            subscriptionType: SerAvailabilityNotificationSubscription\n            callbackReference: http://my.callback.com/mec_service_mgmt_ser_availabilities/some-id\n            filteringCriteria:\n              serNames:\n              - myRnis\n              states:\n              - ACTIVE\n              - INACTIVE\n              isLocal: true\n      required: true\n    Services:\n      description: New ServiceInfo with updated \"state\" is included as entity body\n        of the request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ServiceInfo'\n      required: true\n    ServicesPost:\n      description: New ServiceInfo with updated \"state\" is included as entity body\n        of the request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ServiceInfoPost'\n          example:\n            serName: myRnis\n            serCategory:\n              href: catItem1\n              id: id12345\n              name: RNI\n              version: v2\n            version: 2.2.1\n            state: ACTIVE\n            transportInfo:\n              id: TransId12345\n              name: REST\n              description: REST API\n              type: REST_HTTP\n              protocol: HTTP\n              version: \"2.0\"\n              endpoint:\n                uris:\n                - https://my.callback.com/sandboxname/rni/v2/\n            serializer: JSON\n            scopeOfLocality: MEC_SYSTEM\n      required: true\n    ServicesServiceId:\n      description: New ServiceInfo with updated \"state\" is included as entity body\n        of the request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ServiceInfo'\n      required: true\n    ServiceAvailabilityNotification:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ServiceAvailabilityNotification'\n      required: true\n  links:\n    GetIndividualmecService:\n      operationId: Sm_ServicesServiceId_GET\n      parameters:\n        serviceId: $response.body#/serviceId\n      description: \"The `serviceId` value returned in the response can be used as\\\n        \\ the `serviceId` parameter in `GET /services/{serviceId}`\"\n    PutIndividualmecService:\n      operationId: Sm_ServicesServiceId_PUT\n      parameters:\n        serviceId: $response.body#/serviceId\n      description: \"The `serviceId` value returned in the response can be used as\\\n        \\ the `serviceId` parameter in `PUT /services/{serviceId}`\"\n    GetTransportInfo:\n      operationId: Sm_AppServices_POST\n      parameters:\n        transportId: $response.body#/0/id\n      description: \"The `id` value returned in the response can be used as the `transportId`\\\n        \\ parameter in `POST /applications/{appInstanceId}/services`. The first transport\\\n        \\ is provided as the link as wildcards are not supported\"\n    GetIndividualmecSerMgmtApiSubscription:\n      operationId: Sm_ApplicationsSubscription_GET\n      parameters:\n        description: \"regex = \\\\/mec_service_mgmt\\\\/v1\\\\/applications\\\\/.*\\\\/subscriptions\\\\\\\n          /.*\\\\/(.*);subscriptionId = href.match(regex)[1];// where \\\"href\\\" is an\\\n          \\ attribute within the subscription attribute within the _links attribute\"\n        subscriptionId: TBC\n      description: \"The `subscriptionId` value returned in the response can be used\\\n        \\ as the `subscriptionId` parameter in `GET /applications/{appInstanceId}/subscriptions/{subscriptionId}`\"\n    DelIndividualmecSerMgmtApiSubscription:\n      operationId: Sm_ApplicationsSubscription_DELETE\n      parameters:\n        description: \"regex = \\\\/mec_service_mgmt\\\\/v1\\\\/applications\\\\/.*\\\\/subscriptions\\\\\\\n          /(.*);subscriptionId = href.match(regex)[1];// where \\\"href\\\" is an attribute\\\n          \\ within the subscription attribute within the _links attribute\"\n        subscriptionId: TBC\n      description: \"The `subscriptionId` value returned in the response can be used\\\n        \\ as the `subscriptionId` parameter in `DELETE /applications/{appInstanceId}/subscriptions/{subscriptionId}`\"\n    GetIndividualmecSerMgmtApiSubscriptionLinkList:\n      operationId: Sm_ApplicationsSubscription_GET\n      parameters:\n        description: \"regex = \\\\/mec_service_mgmt\\\\/v1\\\\/applications\\\\/.*\\\\/subscriptions\\\\\\\n          /(.*);subscriptionId = href.match(regex)[1];// where \\\"href\\\" is an attribute\\\n          \\ within the subscription attribute within the _links attribute\"\n        subscriptionId: TBC\n      description: \"The `subscriptionId` value returned in the response can be used\\\n        \\ as the `subscriptionId` parameter in `GET /applications/{appInstanceId}/subscriptions/{subscriptionId}`\"\n    DelIndividualmecSerMgmtApiSubscriptionLinkList:\n      operationId: Sm_ApplicationsSubscription_DELETE\n      parameters:\n        description: \"regex = \\\\/mec_service_mgmt\\\\/v1\\\\/applications\\\\/.*\\\\/subscriptions\\\\\\\n          /(.*);subscriptionId = href.match(regex)[1];// where \\\"href\\\" is an attribute\\\n          \\ within the subscription attribute within the _links attribute\"\n        subscriptionId: TBC\n      description: \"The `subscriptionId` value returned in the response can be used\\\n        \\ as the `subscriptionId` parameter in `DELETE /applications/{appInstanceId}/subscriptions/{subscriptionId}`\"\n  callbacks:\n    ServiceAvailabilityNotification:\n      '{$request.body#/callbackReference}':\n        post:\n          tags:\n          - callbacks\n          description: \"'Represents the service availability information that  is\\\n            \\ used in the following cases - when the MEC platform announces the newly\\\n            \\ available\\n services to the authorized relevant MEC applications (e.g.\\\n            \\ \\n the applications that indicate the services as \\\"optional\\\" \\n or\\\n            \\ \\\"required\\\") that are subscribed to the corresponding \\n service availability\\\n            \\ notifications\\n-  when the MEC platform notifies the authorized relevant\\\n            \\  applications that are subscribed to the corresponding  service availability\\\n            \\ notifications about the service availability changes.'\"\n          operationId: Sm_ServiceAvailabilityNotification_POST\n          requestBody:\n            $ref: '#/components/requestBodies/ServiceAvailabilityNotification'\n          responses:\n            \"200\":\n              description: \"Expected responses from callback consumer, if it accepts\\\n                \\ the callback\"\n",
			"canonicalURL": "/github.com/InterDigitalInc/AdvantEDGE@f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/-/blob/go-packages/meep-service-mgmt-client/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/InterDigitalInc/AdvantEDGE/blob/f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/go-packages/meep-service-mgmt-client/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/services/{serviceId}\": get: responses: 400: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"sum types with same names",
		"unsupported content types"
	]
}