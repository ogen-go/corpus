{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alpacahq/alpaca-docs"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "oas/oauth/openapi.yaml",
			"byteSize": 4147,
			"content": "openapi: 3.0.0\ninfo:\n  title: OAuth API\n  version: 1.0.0\n  description: |-\n    The OAuth API allows you to request market data and manage portfolios on behalf of your end-users. \n\n    For more information, visit https://alpaca.markets/docs/build-apps_services-with-alpaca/oauth-guide/.\n  contact:\n    name: Alpaca Support\n    email: support@alpaca.markets\n    url: 'https://alpaca.markets/support'\n  termsOfService: 'https://s3.amazonaws.com/files.alpaca.markets/disclosures/library/TermsAndConditions.pdf'\nservers:\n  - url: 'https://data.alpaca.markets/v2'\n    description: Production\n  - description: Sandbox\n    url: 'https://data.sandbox.alpaca.markets/v2'\ntags:\n  - name: OAuth\n  - name: Crypto Pricing Data API\n  - name: Stock Pricing Data API\npaths:\n  '/v2/stocks/{symbol}/bars':\n    get:\n      tags:\n        - Stock Pricing Data API\n      summary: Bars\n      parameters:\n        - name: Apca-Api-Key-Id\n          in: header\n          schema:\n            type: string\n          example: '{{APCA_API_KEY_ID}}'\n        - name: Apca-Api-Secret-Key\n          in: header\n          schema:\n            type: string\n          example: '{{APCA_API_SECRET_KEY}}'\n        - name: start\n          in: query\n          schema:\n            type: string\n          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.\n          example: '2020-04-01T0:00:00Z'\n        - name: end\n          in: query\n          schema:\n            type: string\n          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.\n          example: '2021-08-26T11:00:00Z'\n        - name: timeframe\n          in: query\n          schema:\n            type: string\n          description: 'Timeframe for the aggregation. Values are customizeable, frequently used examples: 1Min, 15Min, 1Hour, 1Day.'\n          example: 1Min\n        - name: symbol\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The symbol to query for\n          example: AAPL\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n      operationId: 'getBarsStocks' #simply copying the id used in the data spec\n      description: 'The bars API returns aggregate historical data for the requested securities'\n    parameters:\n      - schema:\n          type: string\n        name: symbol\n        in: path\n        required: true\n  '/v2/stocks/{symbol}/trades':\n    get:\n      tags:\n        - Stock Pricing Data API\n      summary: Trades\n      operationId: getTradesStocks #just using same values from the data api\n      description: The Trades API provides historcial trade data for a given ticker symbol on a specified date. Returns trades for the queried stock signal.\n      parameters:\n        - name: Apca-Api-Key-Id\n          in: header\n          schema:\n            type: string\n          example: '{{APCA_API_KEY_ID}}'\n        - name: Apca-Api-Secret-Key\n          in: header\n          schema:\n            type: string\n          example: '{{APCA_API_SECRET_KEY}}'\n        - name: start\n          in: query\n          schema:\n            type: string\n          description: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.\n          example: '2020-04-01T0:00:00Z'\n        - name: end\n          in: query\n          schema:\n            type: string\n          description: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.\n          example: '2021-08-26T11:00:00Z'\n        - name: symbol\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The symbol to query for\n          example: AAPL\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\ncomponents:\n  securitySchemes:\n    API_Key:\n      name: APCA-API-KEY-ID\n      type: apiKey\n      in: header\n    API_Secret:\n      name: APCA-API-SECRET-KEY\n      type: apiKey\n      in: header\n",
			"canonicalURL": "/github.com/alpacahq/alpaca-docs@7cec702640ecf11a47e80f9c4b28bfaff6f59a4e/-/blob/oas/oauth/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/alpacahq/alpaca-docs/blob/7cec702640ecf11a47e80f9c4b28bfaff6f59a4e/oas/oauth/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v2/stocks/{symbol}/bars\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}