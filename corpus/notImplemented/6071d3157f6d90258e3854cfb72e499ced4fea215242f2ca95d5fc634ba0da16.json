{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OperationCode/resources_api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "app/static/openapi.yaml",
			"byteSize": 40919,
			"content": "openapi: 3.0.1\n\nservers:\n- url: https://resources.operationcode.org/api/v1\n  description: Default Server\ninfo:\n  title: Operation Code Resources API\n  version: '1.0'\n  x-logo:\n    url: 'https://operation-code-assets.s3.us-east-2.amazonaws.com/branding/logos/small-blue-logo.png'\n    altText: 'Operation Code Logo'\n    backgroundColor: '#252e3e'\n    href: 'https://operationcode.org/contact'\n  description: |\n    # Introduction\n    Operation Code Resources API is a collection of programming and cyber security learning resources curated by and for the Operation Code community.\n\n    # Authentication\n    Create (POST) and update (PUT) routes are protected and require an API key. API key requests to the `/apikey` endpoint require valid Operation Code credentials in the request body.\n\n    If you are not already a member of our community, join Operation Code [HERE](https://operationcode.org/join).\n\n    When you create a request to an authenticated route, you *MUST* include the header `x-apikey` along with your API key.\n\n    # Versioning\n    To ensure contracts with the api are not broken with future updates, you may supply a version number in your request header.\n    Include an `X-Api-Version` header with a valid version in your request:\n      ```\n      X-Api-Version: 1.0\n      ```\n    ### Default Versions\n    By default, any non-versioned request will default to the newest version of the API. Users of the API are strongly encouraged to specify the requested version to avoid unexpected changes when new versions are added.\n\n\n  contact:\n    name: Operation Code\n    url: https://operationcode.org/contact\n\npaths:\n  /apikey:\n    post:\n      summary: API Key Request\n      description: Request API key by providing valid Operation Code credentials\n      tags:\n        - Request Key\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApiKeyRequest'\n        required: true\n      responses:\n        200:\n          description: API key response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiKeyResponse'\n              example:\n                apiVersion: '1.0'\n                credentials:\n                  apikey: '1234567890'\n                  email: 'your@email.com'\n                status: 'ok'\n                status_code: 200\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          description: Unauthorized Access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                apiVersion: '1.0'\n                errors:\n                  unauthorized:\n                    message: 'The email or password you submitted is incorrect'\n                status: 'Unauthorized'\n                status_code: 401\n\n  /apikey/rotate:\n    post:\n      summary: API Key Rotation\n      description: Rotate the API key provided in the x-apikey header\n      tags:\n        - Rotate Key\n      responses:\n        200:\n          description: API key rotation response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiKeyResponse'\n              example:\n                apiVersion: '1.0'\n                credentials:\n                  apikey: '1234567890'\n                  email: 'your@email.com'\n                status: 'ok'\n                status_code: 200\n        401:\n          $ref: '#/components/responses/UnauthorizedNoApiKey'\n\n  /search:\n    get:\n      summary: Search\n      description: Searches for resources containing a given keyword. For example, to search for any resource containing the term `binary trees`, make a `GET` request to `search?q=binary trees` Note\u0026#58; The `page` attribute in the response of the `/search` endpoint begins with `0`, but the `page` attribute in the response of the `List Resources` endpoint begins with `1`.\n      tags:\n        - Search\n      parameters:\n        - in: query\n          name: q\n          description: Keyword(s) to search for across all of the data\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: free\n          required: false\n          description: Whether the resource is free or not. To search for *free* resources, make a `GET` request to `/search?free=true`.\n          schema:\n            type: boolean\n        - in: query\n          name: languages\n          required: false\n          description: Language(s) of the resource to search. For example, to filter for JavaScript and Python resources, make a `GET` request to `/search?languages=python\u0026languages=javascript`.\n          schema:\n            type: array\n        - in: query\n          name: category\n          required: false\n          description: Category of the resource. For example, to filter for book resources, make a `GET` request to `/search?category=books`.\n          schema:\n            type: string\n      responses:\n        200:\n          description: Search results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResponse'\n              example:\n                apiVersion: '1.0'\n                resources:\n                  - category': 'Tutorials'\n                    created_at: '2019-05-25 18:52:15'\n                    downvotes: 0\n                    id: 953\n                    languages:\n                      - 'C'\n                    last_updated: '2019-05-25 18:52:15'\n                    name: 'C Tutorial'\n                    notes: 'Learn C with our popular C tutorial, which will take you from the very basics of C all the way through sophisticated topics like binary trees and data structures.'\n                    free: true\n                    times_clicked: 0\n                    upvotes: 0\n                    url: 'https://www.cprogramming.com/tutorial/c-tutorial.html'\n                number_of_pages: 1\n                page: 0\n                records_per_page: 20\n                status: 'ok'\n                status_code: 200\n                total_count: 1\n        404:\n          $ref: '#/components/responses/NotFound'\n  /categories:\n    get:\n      summary: List Categories\n      description: Gets a list of all available categories.\n      tags:\n        - List Categories\n      responses:\n        200:\n          description: A list of categories\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoriesResponse'\n              example:\n                  apiVersion: '1.0'\n                  categories:\n                    - id: 1\n                      name: 'Books'\n                    - id: 2\n                      name: 'Code Challenges'\n                    - id: 3\n                      name: 'Getting Started'\n                    - id: 4\n                      name: 'Tutorials'\n                    - id: 5\n                      name: 'Online Courses'\n                    - id: 6\n                      name: 'Jobs'\n                    - id: 7\n                      name: 'Tools'\n                    - id: 8\n                      name: 'Programming for Kids'\n                    - id: 9\n                      name: 'REPL/Code Simulators'\n                    - id: 10\n                      name: 'Design'\n                    - id: 11\n                      name: 'Computer Hardware'\n                    - id: 12\n                      name: 'Computer Networking'\n                    - id: 13\n                      name: 'Cloud IDEs'\n                    - id: 14\n                      name: 'Docker'\n                    - id: 15\n                      name: 'Regular Expressions'\n                    - id: 16\n                      name: 'Mentorship'\n                    - id: 17\n                      name: 'News'\n                    - id: 18\n                      name: 'Back End Dev'\n                    - id: 19\n                      name: 'Mobile Dev'\n                    - id: 20\n                      name: 'Cheat Sheets'\n                    - id: 21\n                      name: 'Open Source'\n                    - id: 22\n                      name: 'Front End Dev'\n                    - id: 23\n                      name: 'Web Design'\n                  status: 'ok'\n                  status_code: 200\n                  total_count: 23\n        404:\n          $ref: '#/components/responses/NotFound'\n  /categories/{id}:\n    get:\n      summary: Get Category\n      description: Gets more details about a specific category, given the Category ID\n      tags:\n        - Get Category\n      parameters:\n      - name: id\n        in: path\n        description: Category ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Category details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoryResponse'\n              example:\n                apiVersion: '1.0'\n                category:\n                  id: 1\n                  name: 'Books'\n                status: 'ok'\n                status_code: 200\n        404:\n          $ref: '#/components/responses/NotFound'\n  /languages:\n    get:\n      summary: List Languages\n      description: Gets list of all available language entries.\n      tags:\n        - List Languages\n      responses:\n        200:\n          description: A list of languages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Language'\n              example:\n                apiVersion: '1.0'\n                languages:\n                  - id: 1\n                    name: 'multiple'\n                  - id: 2\n                    name: 'Python'\n                  - id: 3\n                    name: 'Unix/Linux/*nix'\n                  - id: 4\n                    name: 'Bash'\n                  - id: 5\n                    name: 'C'\n                  - id: 6\n                    name: 'Sysadmin'\n                  - id: 7\n                    name: 'JavaScript'\n                  - id: 8\n                    name: 'HTML'\n                  - id: 9\n                    name: 'PHP'\n                  - id: 10\n                    name: 'Ruby'\n                  - id: 11\n                    name: 'Aspectwerkz'\n                  - id: 12\n                    name: 'Artificial Intelligence'\n                  - id: 13\n                    name: 'C++'\n                  - id: 14\n                    name: 'MongoDB'\n                  - id: 15\n                    name: 'SQL'\n                  - id: 16\n                    name: 'R'\n                  - id: 17\n                    name: 'GraphQL'\n                  - id: 18\n                    name: 'Swift'\n                  - id: 19\n                    name: 'Android'\n                  - id: 20\n                    name: 'CSS'\n                  - id: 21\n                    name: 'jQuery'\n                  - id: 22\n                    name: 'Git'\n                status: 'ok'\n                status_code: 200\n                total_count: 22\n        404:\n          $ref: '#/components/responses/NotFound'\n  /languages/{id}:\n    get:\n      summary: Get Language\n      description: Gets more details about a specific language, given the language ID\n      tags:\n        - Get Language\n      parameters:\n      - name: id\n        in: path\n        description: Language ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Language details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Language'\n              example:\n                apiVersion: '1.0'\n                language:\n                  id: 2\n                  name: 'Python'\n                status: 'ok'\n                status_code: 200\n        404:\n          $ref: '#/components/responses/NotFound'\n  /resources/{id}:\n    get:\n      summary: Get Resource\n      description: Gets more details about a specific resource, given the resource ID\n      tags:\n        - Get Resource\n      parameters:\n      - name: id\n        in: path\n        description: Resource ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Resource details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n              example:\n                apiVersion: '1.0'\n                resource:\n                  category: 'Books'\n                  created_at: '2019-06-15 17:55:32'\n                  downvotes: 0\n                  id: 3\n                  languages: []\n                  last_updated: '2019-06-15 17:55:32'\n                  name: 'Free Tech Books'\n                  notes: 'Focuses on general computer science concepts rather than a specific language'\n                  free: true\n                  times_clicked: 0\n                  upvotes: 0\n                  url: 'http://www.freetechbooks.com/'\n                  user_vote_direction: null\n                status: 'ok'\n                status_code: 200\n        404:\n          $ref: '#/components/responses/NotFound'\n    put:\n      summary: Update Resource\n      description: Updates an existing learning resource entry. The request body should be a JSON object containing the properties to be updated and their corresponding new values.\n      tags:\n        - Update Resource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRequest'\n            example:\n              name: 'Updated Book Title'\n        required: true\n      parameters:\n        - name: id\n          in: path\n          description: Resource ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: Updated resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n              example:\n                apiVersion: '1.0'\n                resource:\n                  category: 'Tutorial'\n                  created_at: '2019-07-21 15:41:19'\n                  downvotes: 0\n                  id: 2137\n                  languages: []\n                  last_updated: '2019-07-22 16:05:53'\n                  name: 'Updated Book Title'\n                  notes: null\n                  free: true\n                  times_clicked: 3\n                  upvotes: 1\n                  url: 'http://www.test.com'\n                  user_vote_direction: null\n                status: 'ok'\n                status_code: 200\n        404:\n          $ref: '#/components/responses/NotFound'\n        401:\n          $ref: '#/components/responses/UnauthorizedNoApiKey'\n        422:\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                apiVersion: '1.0'\n                errors:\n                  invalid-params:\n                      message: 'The following params were invalid: url. Resource id 2137 already has this URL.'\n                      params:\n                        - 'url'\n                      resource: 'https://resources.operationcode.org/api/v1/2137'\n                status: 'Unprocessable Entity'\n                status_code: 422\n      security:\n      - ApiKeyAuth: []\n  /resources/{id}/click:\n    put:\n      summary: Update Resource - Increment Number of Views\n      description: |\n        Increments the `times_clicked` property of a resource. The intention of this endpoint is to collect data about how popular a resource is based on how many times it is accessed. Please set up your integration to increment the `times_clicked` property when a user clicks through to view a resource.\n      tags:\n        - Update Resource\n      parameters:\n      - name: id\n        in: path\n        description: Resource ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Updated resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n              example:\n                apiVersion: '1.0'\n                resource:\n                    category: 'Books'\n                    created_at: '2019-04-28 22:18:34'\n                    downvotes: 0\n                    id: 10\n                    languages: []\n                    last_updated: '2019-07-26 13:47:52'\n                    name: 'Thinking Forth'\n                    notes: null\n                    free: true\n                    times_clicked: 2\n                    upvotes: 0\n                    url: 'http://thinking-forth.sourceforge.net/'\n                status: 'ok'\n                status_code: 200\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /resources/{id}/upvote:\n    put:\n      summary: Upvote Resource\n      description: |\n        Increments the `upvotes` property of a resource. If the user has already upvoted the resource, `upvotes` property will decrement since a user is limited to only one vote per resource. Also, if the user has already downvoted the resource, hitting this endpoint will increment `upvotes` property while decrementing `downvotes` property.\n      tags:\n        - Update Resource\n      parameters:\n        - name: id\n          in: path\n          description: Resource ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: Upvoted resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n              example:\n                apiVersion: '1.0'\n                resource:\n                  category: 'Books'\n                  created_at: '2020-01-07 22:06:45'\n                  downvotes: 0\n                  id: 5\n                  languages: []\n                  last_updated: '2020-03-12 23:17:52'\n                  name: 'Teach Your Kids to Code'\n                  notes: null\n                  free: false\n                  times_clicked: 0\n                  upvotes: 1\n                  url: 'http://teachyourkidstocode.com/'\n                  user_vote_direction: 'upvote'\n                status: 'ok'\n                status_code: 200\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /resources/{id}/downvote:\n    put:\n      summary: Downvote Resource\n      description: |\n        Increments the `downvotes` property of a resource. If the user has already downvoted the resource, `downvotes` property will decrement since a user is limited to only one vote per resource. Also, if the user has already upvoted the resource, hitting this endpoint will increment `downvotes` property while decrementing `upvotes` property.\n      tags:\n        - Update Resource\n      parameters:\n        - name: id\n          in: path\n          description: Resource ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: Downvoted resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n              example:\n                apiVersion: '1.0'\n                resource:\n                  category: 'Books'\n                  created_at: '2020-01-07 22:06:45'\n                  downvotes: 1\n                  id: 5\n                  languages: []\n                  last_updated: '2020-03-12 23:17:52'\n                  name: 'Teach Your Kids to Code'\n                  notes: null\n                  free: false\n                  times_clicked: 0\n                  upvotes: 0\n                  url: 'http://teachyourkidstocode.com/'\n                  user_vote_direction: 'downvote'\n                status: 'ok'\n                status_code: 200\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /resources:\n    get:\n      summary: List Resources\n      description: Gets list of all available resource entries or filtered entries based on provided criteria. Note\u0026#58; The `page` attribute in the response of the `/search` endpoint begins with `0`, but the `page` attribute in the response of the `List Resources` endpoint begins with `1`.\n      tags:\n        - List Resources\n      parameters:\n        - in: query\n          name: free\n          required: false\n          description: Whether the resource is free or not. To search for *free* resources, make a `GET` request to `/resources?free=true`.\n          schema:\n            type: boolean\n        - in: query\n          name: languages\n          required: false\n          description: Language(s) of the resource. For example, to filter for Python and JavaScript resources, make a `GET` request to `/resources?languages=python\u0026languages=javascript`\n          schema:\n            type: string\n        - in: query\n          name: category\n          required: false\n          description: Category of resource. For example, to filter for book resources, make a `GET` request to `/resources?category=books`.\n          schema:\n            type: string\n        - in: query\n          name: updated_after\n          required: false\n          description: Filters resources that were updated after the specified date. To get all resources updated after July 17, 2019, use `/resources?updated_after=2019-07-17`\n          schema:\n            type: string\n            format: date-time\n\n      responses:\n        200:\n          description: A list of resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FilteredResourcesResponse'\n              example:\n                apiVersion: '1.0'\n                resources:\n                  - category': 'Tutorial'\n                    created_at: '2019-07-21 15:41:19'\n                    downvotes: 0\n                    id: 2137\n                    languages: []\n                    last_updated: '2019-07-22 17:39:50'\n                    name: 'Some, but not ALL of the knowledge'\n                    notes: null\n                    free: true\n                    times_clicked: 3\n                    upvotes: 1\n                    url: 'http://www.test.com'\n                    user_vote_direction: null\n                has_next: false\n                has_prev: false\n                number_of_pages: 1\n                page: 1\n                records_per_page: 20\n                status: 'ok'\n                status_code: 200\n                total_count: 1\n        404:\n          $ref: '#/components/responses/NotFound'\n\n        422:\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                apiVersion: '1.0'\n                errors:\n                  unprocessable-entity:\n                    message: 'The value for \"updated_after\" is invalid'\n                status: 'Unprocessable Entity'\n                status_code: 422\n\n    post:\n      summary: Create Resources\n      description: Creates new learning resources. The structure of the request is a list of resource objects. The required properties for each new resource are `category`, `name`, `free`, and `url`.\n      tags:\n        - Create Resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateResourcesRequest'\n            example:\n              - category: 'Tutorial'\n                name: 'CSS Tutorial'\n                free: true\n                url: 'https://www.w3schools.com/css/'\n        required: true\n      responses:\n        200:\n          description: Created resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceList'\n              example:\n                apiVersion: '1.0'\n                resources:\n                  - category: 'Tutorial'\n                    created_at: '2019-07-21 15:41:19'\n                    downvotes: 0\n                    id: 2137\n                    languages:\n                      - 'CSS'\n                    last_updated: '2019-07-22 16:05:53'\n                    name: 'CSS Tutorial'\n                    notes: null\n                    free: true\n                    times_clicked: 3\n                    upvotes: 1\n                    url: 'https://www.w3schools.com/css/'\n                    user_vote_direction: null\n                status: 'ok'\n                status_code: 200\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/UnauthorizedNoApiKey'\n        422:\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example:\n                  apiVersion: '1.0'\n                  errors:\n                    - index: 0\n                      invalid-params:\n                        message: 'The following params were invalid: url. Resource id 2137 already has this URL.'\n                        params:\n                          - url\n                        resource: 'https://resources.operationcode.org/api/v1/2137'\n                      missing-params:\n                          message: 'The following params were missing: name, category, free.'\n                          params:\n                            - name\n                            - category\n                            - free\n                  status: 'Unprocessable Entity'\n                  status_code: 422\n      security:\n      - ApiKeyAuth: []\n\ncomponents:\n  schemas:\n\n    Error:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n          description: API version\n        errors:\n          $ref: '#/components/schemas/ErrorData'\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n    ErrorData:\n      type: object\n      description: The response errors\n      properties:\n        missing-params:\n          type: object\n          properties:\n            params:\n              description: The associated parameters.\n              type: array\n              items:\n                type: string\n            message:\n              description: Error message\n              type: string\n        invalid-params:\n          type: object\n          properties:\n            params:\n              description: The associated parameters.\n              type: array\n              items:\n                type: string\n            message:\n              description: Error message\n              type: string\n            resource:\n              description: An href link to the resource with a duplicate url\n              type: string\n        unauthorized:\n          type: object\n          properties:\n            message:\n              description: Error message\n              type: string\n        missing-body:\n          type: object\n          properties:\n            message:\n              description: Error message\n              type: string\n        unprocessable-entity:\n          type: object\n          properties:\n            message:\n              description: Error message\n              type: string\n        bad-request:\n          type: object\n          properties:\n            message:\n              description: Error message\n              type: string\n        not-found:\n          type: object\n          properties:\n            message:\n              description: Error message\n              type: string\n    ErrorResponse:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n          description: API version\n        errors:\n          $ref: '#/components/schemas/ErrorDataList'\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n\n    ErrorDataList:\n      type: array\n      items:\n        type: object\n        properties:\n          index:\n            type: integer\n            description: The index of the invalid resource\n          missing-params:\n            type: object\n            properties:\n              params:\n                description: The associated parameters.\n                type: array\n                items:\n                  type: string\n              message:\n                description: Error message\n                type: string\n          invalid-params:\n            type: object\n            properties:\n              params:\n                description: The associated parameters.\n                type: array\n                items:\n                  type: string\n              message:\n                description: Error message\n                type: string\n              resource:\n                description: An href link to the resource with a duplicate url\n                type: string\n          unauthorized:\n            type: object\n            properties:\n              message:\n                description: Error message\n                type: string\n          missing-body:\n            type: object\n            properties:\n              message:\n                description: Error message\n                type: string\n          unprocessable-entity:\n            type: object\n            properties:\n              message:\n                description: Error message\n                type: string\n          bad-request:\n            type: object\n            properties:\n              message:\n                description: Error message\n                type: string\n          not-found:\n            type: object\n            properties:\n              message:\n                description: Error message\n                type: string\n\n\n    Resource:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n          description: API version\n        resource:\n          $ref: '#/components/schemas/ResourceData'\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n\n    CategoriesResponse:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n        category:\n          $ref: '#/components/schemas/CategoryDataList'\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n        total_count:\n          type: integer\n    CategoryResponse:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n        category:\n          $ref: '#/components/schemas/CategoryData'\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n        total_count:\n          type: integer\n    CategoryData:\n      type: object\n      properties:\n          id:\n            type: integer\n            description: Category ID\n          name:\n            type: string\n            description: Category name\n    CategoryDataList:\n      type: array\n      items:\n        $ref: '#/components/schemas/CategoryData'\n\n    Language:\n      type: object\n      description: Language or topic presented in the resource\n      properties:\n        apiVersion:\n          type: string\n          description: API version\n        languages:\n          $ref: '#/components/schemas/LanguageData'\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n        total_count:\n          type: integer\n          description: Total languages retrieved\n    LanguageData:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Language ID\n        name:\n          type: string\n          description: Language Name\n\n\n    CreateResourcesRequest:\n      allOf:\n        - $ref: '#/components/schemas/ResourcesRequest'\n        # - required: [category, name, free, url]\n\n    ResourcesRequest:\n      type: array\n      items:\n        type: object\n        properties:\n          category:\n            type: string\n            description: Category\n          languages:\n            type: array\n            description: List of languages\n            items:\n              type: string\n          name:\n            type: string\n            description: Resource name\n          notes:\n            type: string\n            description: Resource notes\n          free:\n            type: boolean\n            description: True or false for whether resource is free\n          url:\n            type: string\n            description: Resource url\n    ResourceRequest:\n      type: object\n      properties:\n        category:\n          type: string\n          description: Category\n        languages:\n          type: array\n          description: List of languages\n          items:\n            type: string\n        name:\n          type: string\n          description: Resource name\n        notes:\n          type: string\n          description: Resource notes\n        free:\n          type: boolean\n          description: True or false for whether resource is free\n        url:\n          type: string\n          description: Resource url\n\n    ResourceData:\n      type: object\n      properties:\n        category:\n          type: string\n          description: Category\n        created_at:\n          type: string\n          format: date-time\n          description: Date created\n        downvotes:\n          type: integer\n          description: Negative ratings\n        id:\n          type: integer\n          description: Resource ID\n        last_updated:\n          type: string\n          format: date-time\n          description: Date updated\n        languages:\n          type: array\n          description: List of languages\n          items:\n            type: string\n        name:\n          type: string\n          description: Resource name\n        notes:\n          type: string\n          description: Resource notes\n        free:\n          type: boolean\n          description: True or false for whether resource is free\n        upvotes:\n          type: integer\n          description: Positive ratings\n        url:\n          type: string\n          description: Resource url\n        user_vote_direction:\n          type: string\n          nullable: true\n          description: Vote direction of a logged in user\n\n    ResourceList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceData'\n\n    SearchResponse:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n          description: API version\n        resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceData'\n        number_of_pages:\n          type: integer\n          description: Total pages\n        page:\n          type: integer\n          description: Current page\n        records_per_page:\n          type: integer\n          description: Records per page\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n        total_count:\n          type: integer\n          description: Total resources retrieved\n\n    FilteredResourcesResponse:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n          description: API version\n        resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceData'\n        has_next:\n          type: boolean\n          description: Additional pages\n        has_previous:\n          type: boolean\n          description: Previous pages\n        number_of_pages:\n          type: integer\n          description: Total pages\n        page:\n          type: integer\n          description: Current page\n        records_per_page:\n          type: integer\n          description: Records per page\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n        total_count:\n          type: integer\n          description: Total resources retrieved\n\n##############################\n# API Request and Response\n##############################\n    ApiKeyRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          description: A valid e-mail address registered with Operation Code\n        password:\n          type: string\n          description: Password\n    ApiKeyResponse:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n          description: API version\n        credentials:\n          $ref: '#/components/schemas/ApiKeyResponseData'\n        status:\n          type: string\n          description: Status message\n        status_code:\n          type: integer\n          description: Status code\n    ApiKeyResponseData:\n      type: object\n      properties:\n        apikey:\n          type: string\n          description: API key\n        created_at:\n          type: string\n          format: date-time\n          description: Date created\n        email:\n          type: string\n          description: E-mail address\n        last_updated:\n          type: string\n          format: date-time\n          description: Date updated\n\n##############################\n# Error Responses\n##############################\n  responses:\n    NotFound:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            apiVersion: '1.0'\n            errors:\n              not-found:\n                message: 'The resource you requested does not exist.'\n            status: 'Not Found'\n            status_code: 404\n\n    Unauthorized:\n      description: Unauthorized access\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example: |\n            {\n              'apiVersion': '1.0',\n              'errors': {\n                'unauthorized': {\n                  'message': 'The email or password you submitted is incorrect'\n                }\n              },\n              'status': 'Unauthorized',\n              'status_code': 401\n            }\n\n    UnauthorizedNoApiKey:\n      description: Unauthorized access\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            apiVersion: '1.0'\n            errors:\n              unauthorized:\n                message: 'You must provide a valid API token in the x-apikey header.'\n            status: 'Unauthorized'\n            status_code: 401\n\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            apiVersion: '1.0'\n            errors:\n              bad-request:\n                message: \"400 Bad Request: Failed to decode JSON object: Expecting ',' delimiter: line 3 column 2 (char 25)\"\n            status: 'Bad Request'\n            status_code: 400\n\n  securitySchemes:\n    ApiKeyAuth:\n      description: API key authentication\n      type: apiKey\n      name: x-apikey\n      in: header\n\n##################\n# Groups and Tags\n##################\ntags:\n  - name: List Resources\n  - name: Get Resource\n  - name: Create Resources\n  - name: Update Resource\n  - name: List Categories\n  - name: Get Category\n  - name: List Languages\n  - name: Get Language\n  - name: Search\n  - name: Request Key\nx-tagGroups:\n  - name: API Key Request\n    tags:\n      - Request Key\n  - name: Search\n    tags:\n      - Search\n  - name: Resources\n    tags:\n      - List Resources\n      - Get Resource\n      - Create Resources\n      - Update Resource\n  - name: Categories\n    tags:\n      - List Categories\n      - Get Category\n  - name: Languages\n    tags:\n      - List Languages\n      - Get Language\n",
			"canonicalURL": "/github.com/OperationCode/resources_api@4e79f8928f90f2a195577d79e070d1c146276293/-/blob/app/static/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OperationCode/resources_api/blob/4e79f8928f90f2a195577d79e070d1c146276293/app/static/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"languages\": any type parameter not implemented",
	"NotImplemented": [
		"any type parameter"
	]
}