{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zowe/docs-site"
		},
		"file": {
			"name": "gateway.json",
			"size": 0,
			"path": "api_definitions/gateway.json",
			"byteSize": 39126,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"description\": \"REST API for the API Gateway service, which is a component of the API\\nMediation Layer. Use this API to perform tasks such as logging in with the\\nmainframe credentials and checking authorization to mainframe resources.\",\n        \"version\": \"1.3.0\",\n        \"title\": \"API Gateway\"\n    },\n    \"tags\": [\n        {\n            \"name\": \"Security\",\n            \"description\": \"Mainframe authentication and authorization operations\"\n        },\n        {\n            \"name\": \"Services\",\n            \"description\": \"Information about services running behind the API Gateway\"\n        },\n        {\n            \"name\": \"Diagnostic\",\n            \"description\": \"Operations which showing diagnostic information\"\n        }\n    ],\n    \"paths\": {\n        \"/auth/login\": {\n            \"post\": {\n                \"tags\": [\"Security\"],\n                \"summary\": \"Authenticate mainframe user credentials and return authentication token.\",\n                \"description\": \"Use the `/login` API to authenticate mainframe user credentials and return authentication token. It is also possible to authenticate using the x509 client certificate authentication, if enabled.\\n\\n**Request:**\\n\\nThe login request requires the user credentials in one of the following formats:\\n  * Basic access authentication\\n  * JSON body, which provides an object with the user credentials\\n  * HTTP header containing the client certificate\\n\\n**Response:**\\n\\nThe response is an empty body and a token in a secure HttpOnly cookie named `apimlAuthenticationToken`.\\n\",\n                \"operationId\": \"loginUsingPOST\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/LoginRequest\"\n                            }\n                        }\n                    },\n                    \"description\": \"Specifies the user credentials to be authenticated.\"\n                },\n                \"security\": [\n                    {\n                        \"LoginBasicAuth\": []\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Authenticated\",\n                        \"headers\": {\n                            \"Set-Cookie\": {\n                                \"description\": \"Cookie named apimlAuthenticationToken contains authentication\\ntoken.\",\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"405\": {\n                        \"description\": \"Method Not Allowed\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal error\"\n                    }\n                }\n            }\n        },\n        \"/auth/query\": {\n            \"get\": {\n                \"tags\": [\"Security\"],\n                \"summary\": \"Validate the authentication token.\",\n                \"description\": \"Use the `/query` API to validate the token and retrieve the information associated with the token.\\n\\n **HTTP Headers:**\\n\\nThe query request requires the token in one of the following formats:\\n  * Cookie named `apimlAuthenticationToken`.\\n  * Bearer authentication \\n*Header example:* Authorization: Bearer *token*\\n\\n**Request payload:**\\n\\nThe request body is empty.\\n\\n**Response Payload:**\\n\\nThe response is a JSON object, which contains information associated with the token.\\n\",\n                \"operationId\": \"validateUsingGET\",\n                \"security\": [\n                    {\n                        \"CookieAuth\": []\n                    },\n                    {\n                        \"Bearer\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Authentication\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"405\": {\n                        \"description\": \"Method Not Allowed\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal error\"\n                    }\n                }\n            }\n        },\n        \"/auth/ticket\": {\n            \"post\": {\n                \"tags\": [\"Security\"],\n                \"summary\": \"Generate a passticket for the user associated with a token.\",\n                \"description\": \"Use the `/ticket` API to request a passticket for the user associated with a token.\\n\\nThis endpoint is protect by a client certificate.\\n\\n**HTTP Headers:**\\n\\nThe ticket request requires the token in one of the following formats:  \\n  * Cookie named `apimlAuthenticationToken`.\\n  * Bearer authentication\\n  \\n*Header example:* Authorization: Bearer *token*\\n\\n**Request payload:**\\n\\nThe request takes one parameter, the name of the application for which the passticket should be generated. This parameter must be supplied.\\n\\n**Response Payload:**\\n\\nThe response is a JSON object, which contains information associated with the ticket.\\n\",\n                \"operationId\": \"GenerateTicketUsingPOST\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/TicketRequest\"\n                            }\n                        }\n                    },\n                    \"description\": \"Specifies the name of the application for which the passticket should be generated.\"\n                },\n                \"security\": [\n                    {\n                        \"CookieAuth\": []\n                    },\n                    {\n                        \"Bearer\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TicketResponse\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Incorrect applicationName parameter. The parameter is not provided, is invalid or not defined to security.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Zowe token is not provided, is invalid or is expired.\"\n                    },\n                    \"403\": {\n                        \"description\": \"A client certificate is not provided or is expired.\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"405\": {\n                        \"description\": \"Method Not Allowed\"\n                    },\n                    \"500\": {\n                        \"description\": \"The external security manager failed to generate a PassTicket for the user and application specified.\"\n                    }\n                }\n            }\n        },\n\n        \"/auth/refresh\": {\n            \"post\": {\n                \"tags\": [\"Security\"],\n                \"summary\": \"Refresh authentication token.\",\n                \"description\": \"**Note:** This endpoint is disabled by default.\\n\\nUse the `/refresh` API to request a new JWT authentication token for the user associated with provided token.\\nThe old token is invalidated and new token is issued with refreshed expiration time.\\n\\nThis endpoint is protect by a client certificate.\\n\\n**HTTP Headers:**\\n\\nThe ticket request requires the token in one of the following formats:  \\n  * Cookie named `apimlAuthenticationToken`.\\n  * Bearer authentication\\n  \\n*Header example:* Authorization: Bearer *token*\",\n                \"operationId\": \"RefreshTokenUsingPOST\",\n                \"security\": [\n                    {\n                        \"CookieAuth\": []\n                    },\n                    {\n                        \"Bearer\": []\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Authenticated\",\n                        \"headers\": {\n                            \"Set-Cookie\": {\n                                \"description\": \"Cookie named apimlAuthenticationToken contains authentication token.\",\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Zowe token is not provided, is invalid or is expired.\"\n                    },\n                    \"403\": {\n                        \"description\": \"A client certificate is not provided or is expired.\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found. The endpoint is not enabled or not propperly configured\"\n                    },\n                    \"405\": {\n                        \"description\": \"Method Not Allowed\"\n                    },\n                    \"500\": {\n                        \"description\": \"Process of refreshing token has failed unexpectedly.\"\n                    }\n                }\n            }\n        },\n\n\n        \"/auth/logout\": {\n            \"post\": {\n                \"tags\": [\"Security\"],\n                \"summary\": \"Invalidate mainframe user session.\",\n                \"description\": \"Use the `/logout` API to invalidate mainframe user session.\\n\\n The cookie named `apimlAuthenticationToken` will be removed.\\n\",\n                \"operationId\": \"logoutUsingPOST\",\n                \"security\": [\n                    {\n                        \"CookieAuth\": []\n                    },\n                    {\n                        \"Bearer\": []\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Invalidated user session\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal error\"\n                    }\n                }\n            }\n        },\n        \"/version\": {\n            \"get\": {\n                \"tags\": [\"Diagnostic\"],\n                \"summary\": \"Return version information of API Mediation Layer and Zowe\",\n                \"description\": \"Use the `/version` API to get the version information of API Mediation Layer and Zowe.\\nThe version information includes version, build number and commit hash.\\nIn the response can be only API ML version information or API ML and Zowe version information, this depends on API ML installed as part of Zowe build or as standalone application.\",\n                \"operationId\": \"VersionInfoUsingGET\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/VersionInfo\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/auth/keys/public/all\": {\n            \"get\": {\n                \"tags\": [\"Security\"],\n                \"summary\": \"Returns all public keys to verify JWT tokens validity\",\n                \"description\": \"This endpoint return all possible JWKs, which can verify sign outside the Gateway. It can contain public keys of Zowe and z/OSMF.\",\n                \"operationId\": \"GetAllPublicKeysUsingGET\",\n                \"security\": [\n                    {\n                        \"CookieAuth\": []\n                    },\n                    {\n                        \"Bearer\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JWKSet\"\n                                }\n                            }\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Internal error\"\n                    }\n                }\n            }\n        },\n        \"/auth/keys/public/current\": {\n            \"get\": {\n                \"tags\": [\"Security\"],\n                \"summary\": \"Returns public keys to verify JWT tokens, which can be generated now\",\n                \"description\": \"This endpoint return all possible JWKs, which can verify sign outside the Gateway for this moment. It filters JWK by current settings of Zowe and z/OSMF.\",\n                \"operationId\": \"GetCurrentPublicKeysUsingGET\",\n                \"security\": [\n                    {\n                        \"CookieAuth\": []\n                    },\n                    {\n                        \"Bearer\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JWKSet\"\n                                }\n                            }\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Internal error\"\n                    }\n                }\n            }\n        },\n        \"/services\": {\n            \"get\": {\n                \"tags\": [\"Services\"],\n                \"summary\": \"Returns detailed information about all or selected services\",\n                \"description\": \"Use this endpoint to obtain detailed information about all services, their APIs, and instances. You can also select services only for the specific API ID. This endpoint is protected by the `APIML.SERVICES` resource in the `ZOWE` class. At least `READ` access is required.\",\n                \"operationId\": \"servicesUsingGET\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"apiId\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"The API ID of requested services\",\n                        \"required\": false,\n                        \"example\": \"zowe.apiml.gateway\"\n                    }\n                ],\n                \"security\": [\n                    {\n                        \"CookieAuth\": []\n                    },\n                    {\n                        \"Bearer\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {\n                            \"Content-version\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                },\n                                \"description\": \"Specifies a version of the response\"\n                            }\n                        },\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ServiceInfo\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Internal error\"\n                    }\n                }\n            }\n        },\n\n        \"/services/{serviceId}\": {\n            \"get\": {\n                \"tags\": [\"Services\"],\n                \"summary\": \"Returns detailed information about the requested service\",\n                \"description\": \"Use this endpoint to obtain detailed information about the service, its APIs, and its instances. This endpoint is protected by the `APIML.SERVICES` resource in the `ZOWE` class. At least `READ` access is required.\",\n                \"operationId\": \"servicesUsingGETSpecific\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"serviceId\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"required\": true,\n                        \"description\": \"Service ID of the requested service\"\n                    }\n                ],\n                \"security\": [\n                    {\n                        \"CookieAuth\": []\n                    },\n                    {\n                        \"Bearer\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {\n                            \"Content-version\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                },\n                                \"description\": \"Specifies a version of the response\"\n                            }\n                        },\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ServiceInfo\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Requested service does not exist\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal error\"\n                    }\n                }\n            }\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"/gateway\"\n        }\n    ],\n    \"components\": {\n        \"securitySchemes\": {\n            \"LoginBasicAuth\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            },\n            \"Bearer\": {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            },\n            \"CookieAuth\": {\n                \"type\": \"apiKey\",\n                \"name\": \"apimlAuthenticationToken\",\n                \"in\": \"cookie\"\n            }\n        },\n        \"schemas\": {\n            \"LoginRequest\": {\n                \"type\": \"object\",\n                \"title\": \"Credentials\",\n                \"properties\": {\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\"username\", \"password\"],\n                \"example\": {\n                    \"username\": \"John\",\n                    \"password\": \"qwerty\"\n                }\n            },\n            \"Authentication\": {\n                \"type\": \"object\",\n                \"title\": \"Authentication\",\n                \"properties\": {\n                    \"userId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Specifies the identity of the logged-in user.\"\n                    },\n                    \"domain\": {\n                        \"type\": \"string\",\n                        \"description\": \"Specifies the name of the security domain where the user has been\\nlogged-in.\"\n                    },\n                    \"creation\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"Specifies the UNIX timestamp of the login time, in UTC.\"\n                    },\n                    \"expiration\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"Specifies the UNIX timestamp of the token expiration time, in UTC.\"\n                    }\n                },\n                \"example\": {\n                    \"userId\": \"John\",\n                    \"domain\": \"SAFRealm\",\n                    \"creation\": \"2019-05-13T12:47:04.000+0000\",\n                    \"expiration\": \"2019-05-14T12:47:04.000+0000\"\n                }\n            },\n            \"TicketRequest\": {\n                \"type\": \"object\",\n                \"title\": \"Application name\",\n                \"properties\": {\n                    \"applicationName\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\"applicationName\"],\n                \"example\": {\n                    \"applicationName\": \"ZOWEAPPL\"\n                }\n            },\n            \"TicketResponse\": {\n                \"type\": \"object\",\n                \"title\": \"PassTicket\",\n                \"properties\": {\n                    \"token\": {\n                        \"type\": \"string\",\n                        \"description\": \"Specifies the token that was supplied in the header.\"\n                    },\n                    \"userId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Specifies the user associated with the token.\"\n                    },\n                    \"applicationName\": {\n                        \"type\": \"string\",\n                        \"description\": \"Specifies the application name associated with the passticket. Note that the Gateway user must be authorized to generate passtickets for this application name.\"\n                    },\n                    \"ticket\": {\n                        \"type\": \"string\",\n                        \"description\": \"Specifies a passticket for the pair, userId and applicationName.\"\n                    }\n                },\n                \"example\": {\n                    \"token\": \"eyJhbGciOiJSUzI1N\",\n                    \"userId\": \"John\",\n                    \"applicationName\": \"ZOWEAPPL\",\n                    \"ticket\": \"LZTKEEDQ\"\n                }\n            },\n            \"ServiceInfo\": {\n                \"type\": \"object\",\n                \"description\": \"Represents information about a service registered to API ML\",\n                \"properties\": {\n                    \"apiml\": {\n                        \"type\": \"object\",\n                        \"description\": \"Information about the service and its APIs\",\n                        \"properties\": {\n                            \"apiInfo\": {\n                                \"type\": \"array\",\n                                \"description\": \"List of APIs that are provided by the service\",\n                                \"items\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"apiId\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Specifies the API identifier that is registered in the API ML installation. The API ID uniquely identifies the API in the API ML. The apiId can be used to locate the same APIs that are provided by different service instances. The API developer defines this ID. The apiId must be a string of up to 64 characters that uses lowercase alphanumeric characters and a dot (`.`).\",\n                                            \"example\": \"zowe.sample\"\n                                        },\n                                        \"basePath\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Specifies the URL prefix for all API paths, relative to the gateway host. It must start with a leading slash `/`\",\n                                            \"example\": \"/zowesample/api/v1\"\n                                        },\n                                        \"baseUrl\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Specifies an absolute URL prefix that is used to access the API service via the API Gateway\",\n                                            \"example\": \"https://sys1.acme.net:7554/zowesample/api/v1\"\n                                        },\n                                        \"defaultApi\": {\n                                            \"type\": \"boolean\",\n                                            \"description\": \"Specifies that this API is the default one shown in the API Catalog. If no apiInfo objects have `defaultApi` set to `true`, the default API is the one with the highest API version.\"\n                                        },\n                                        \"documentationUrl\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Specifies the link to the external documentation. A link to the external documentation can be included along with the OpenAPI documentation.\",\n                                            \"example\": \"https://docs.zowe.org/\"\n                                        },\n                                        \"gatewayUrl\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Specifies the base path at the API Gateway where the API is available\",\n                                            \"example\": \"api/v1\"\n                                        },\n                                        \"swaggerUrl\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"https://sys1.acme.net:7554/casample/api/v1/apiDocs\"\n                                        },\n                                        \"version\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Specifies the API version. This parameter is used to correctly retrieve the API documentation according to requested version of the API.\",\n                                            \"example\": \"1.0.0\"\n                                        }\n                                    }\n                                }\n                            },\n                            \"authentication\": {\n                                \"type\": \"array\",\n                                \"description\": \"List of authentication schemes that are supported by all instances\",\n                                \"items\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"applid\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"This value specifies that a service accepts PassTickets in the Authorization header of the HTTP requests using the basic authentication scheme. This applies only when the schem is `httpBasicPassTicket`.\",\n                                            \"example\": \"TSTAPPL\"\n                                        },\n                                        \"scheme\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"This parameter specifies a service authentication scheme.\",\n                                            \"example\": \"zoweJwt\"\n                                        },\n                                        \"supportsSso\": {\n                                            \"description\": \"Specifies whether the service supports Zowe Single-Sign-On\",\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                }\n                            },\n                            \"service\": {\n                                \"type\": \"object\",\n                                \"description\": \"Information about the service\",\n                                \"properties\": {\n                                    \"description\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"Sample Spring Boot API service that provides Zowe-conformant REST API\"\n                                    },\n                                    \"homePageUrl\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Home page of the service accessible via API Gateway\",\n                                        \"example\": \"https://sys1.acme.net:7554/casample/ui/v1/\"\n                                    },\n                                    \"title\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Specifies the human readable name of the API service instance\",\n                                        \"example\": \"Zowe Sample API Service\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"instances\": {\n                        \"type\": \"array\",\n                        \"description\": \"Dictionary of the instances of the service. The key is the instance ID.\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"instanceId\": {\n                                    \"$ref\": \"#/components/schemas/InstanceInfo\"\n                                }\n                            }\n                        }\n                    },\n                    \"serviceId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The service ID of the service. It uniquely identifies one or more instance of a microservice in the API ML and is used as part of the service URL path in the API ML Gateway address space. Additionally, the API ML Gateway uses the service ID for routing to the API service instances. When two API services use the same service ID, the API Gateway considers the services as clones of each other. An incoming API request can be routed to either of them through utilized load balancing mechanism.\",\n                        \"example\": \"zowesample\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"The status of the service base on availability of its instances. It is UP when at least one instance is UP, otherwise DOWN.\",\n                        \"example\": \"UP\"\n                    }\n                }\n            },\n            \"InstanceInfo\": {\n                \"type\": \"object\",\n                \"description\": \"Represents one instance of the service the is registered to the API ML\",\n                \"properties\": {\n                    \"homePageUrl\": {\n                        \"type\": \"string\",\n                        \"description\": \"Home page of the instance\",\n                        \"example\": \"https://sys1.acme.net:10080/\"\n                    },\n                    \"hostname\": {\n                        \"type\": \"string\",\n                        \"description\": \"Hostname of the system where the instance is running\",\n                        \"example\": \"sys1.acme.net\"\n                    },\n                    \"customMetadata\": {\n                        \"type\": \"object\",\n                        \"description\": \"Additional metadata that can been provided by the API service for this instance\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"The status of the instance in the Discovery Service. Possible values: UP, DOWN, STARTING, OUT_OF_SERVICE, UNKNOWN\",\n                        \"example\": \"UP\"\n                    },\n                    \"ipAddr\": {\n                        \"type\": \"string\",\n                        \"description\": \"IP address of the system where the instance is running\",\n                        \"example\": \"192.168.1.139\"\n                    },\n                    \"port\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Port of the instance\",\n                        \"example\": 10080\n                    },\n                    \"protocol\": {\n                        \"type\": \"string\",\n                        \"description\": \"protocol that is used by the instance (`https` or `http`)\",\n                        \"example\": \"https\"\n                    },\n                    \"healthCheckUrl\": {\n                        \"type\": \"string\",\n                        \"description\": \"Specifies the health check endpoint of this instance\",\n                        \"example\": \"https://sys1.acme.net:10080/actuator/health\"\n                    },\n                    \"statusPageUrl\": {\n                        \"type\": \"string\",\n                        \"description\": \"Specifies the status endpoint of this instance\",\n                        \"example\": \"https://sys1.acme.net:10080/actuator/info\"\n                    }\n                }\n            },\n            \"VersionInfoDetails\": {\n                \"description\": \"Version information\",\n                \"properties\": {\n                    \"version\": {\n                        \"type\": \"string\"\n                    },\n                    \"buildNumber\": {\n                        \"type\": \"string\"\n                    },\n                    \"commitHash\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": {\n                    \"version\": \"1.4.0\",\n                    \"buildNumber\": \"123\",\n                    \"commitHash\": \"1a3b5c7\"\n                }\n            },\n            \"VersionInfo\": {\n                \"properties\": {\n                    \"zowe\": {\n                        \"$ref\": \"#/components/schemas/VersionInfoDetails\"\n                    },\n                    \"apiml\": {\n                        \"$ref\": \"#/components/schemas/VersionInfoDetails\"\n                    }\n                }\n            },\n            \"JWKSet\": {\n                \"properties\": {\n                    \"keys\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/JWK\"\n                        }\n                    }\n                },\n                \"example\": {\n                    \"keys\": [\n                        {\n                            \"kty\": \"RSA\",\n                            \"e\": \"AQAB\",\n                            \"use\": \"sig\",\n                            \"kid\": \"ozG_ySMHRsVQFmN1mVBeS-WtCupY1r-K7ewben09IBg\",\n                            \"alg\": \"RS256\",\n                            \"n\": \"wRdwksGIAR2A4cHsoOsYcGp5AmQl5ZjF5xIPXeyjkaLHmNTMvjixdWso1ecVlVeg_6pIXzMRhmOvmjXjz1PLfI2GD3drmeqsStjISWdDfH_rIQCYc9wYbWIZ3bQ0wFRDaVpZ6iOZ2iNcIevvZQKNw9frJthKSMM52JtsgwrgN--Ub2cKWioU_d52SC2SfDzOdnChqlU7xkqXwKXSUqcGM92A35dJJXkwbZhAHnDy5FST1HqYq27MOLzBkChw1bJQHZtlSqkxcHPxphnnbFKQmwRVUvyC5kfBemX-7Mzp1wDogt5lGvBAf3Eq8rFxaevAke327rM7q2KqO_LDMN2J-Q\"\n                        },\n                        {\n                            \"kty\": \"RSA\",\n                            \"e\": \"AQAB\",\n                            \"n\": \"jpEmp7mNnx8bi_nF2lqLEkN1cxUn1qLavU2EAy70XmX9rZSx1hlA1k8St1apD678oI-Ob38Mab-vTrnk9nvJgs6e67mtsm00OP1mpGHzQSY2WDwA5OGLv-9FeDI6HThAH1cEz148pRBtiN9VkVM-OzV2-vqH5hXO2vnSneUnnIlMVZ1-J7G5WIPJLDxodXWFqne8l56SYIRWz62rTK0Hwe0ghAMrsiTz0eVKgfVr76rP0hIYZMwC3b1bxfhjwUOuQxjEeYMh2jEL-5Nv2IcEfOzXYEOC_IrD_rLa4m4nfBs-JJiw4hOgHvjzdNz9EzV0D-HSWrInHXEd_gWjDn4sFw\"\n                        }\n                    ]\n                }\n            },\n            \"JWK\": {\n                \"properties\": {\n                    \"n\": {\n                        \"type\": \"string\"\n                    },\n                    \"e\": {\n                        \"type\": \"string\"\n                    },\n                    \"d\": {\n                        \"type\": \"string\"\n                    },\n                    \"p\": {\n                        \"type\": \"string\"\n                    },\n                    \"q\": {\n                        \"type\": \"string\"\n                    },\n                    \"dp\": {\n                        \"type\": \"string\"\n                    },\n                    \"dq\": {\n                        \"type\": \"string\"\n                    },\n                    \"qi\": {\n                        \"type\": \"string\"\n                    },\n                    \"oth\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"r\": {\n                                \"type\": \"string\"\n                            },\n                            \"d\": {\n                                \"type\": \"string\"\n                            },\n                            \"t\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                },\n                \"example\": {\n                    \"kty\": \"RSA\",\n                    \"e\": \"AQAB\",\n                    \"use\": \"sig\",\n                    \"kid\": \"ozG_ySMHRsVQFmN1mVBeS-WtCupY1r-K7ewben09IBg\",\n                    \"alg\": \"RS256\",\n                    \"n\": \"wRdwksGIAR2A4cHsoOsYcGp5AmQl5ZjF5xIPXeyjkaLHmNTMvjixdWso1ecVlVeg_6pIXzMRhmOvmjXjz1PLfI2GD3drmeqsStjISWdDfH_rIQCYc9wYbWIZ3bQ0wFRDaVpZ6iOZ2iNcIevvZQKNw9frJthKSMM52JtsgwrgN--Ub2cKWioU_d52SC2SfDzOdnChqlU7xkqXwKXSUqcGM92A35dJJXkwbZhAHnDy5FST1HqYq27MOLzBkChw1bJQHZtlSqkxcHPxphnnbFKQmwRVUvyC5kfBemX-7Mzp1wDogt5lGvBAf3Eq8rFxaevAke327rM7q2KqO_LDMN2J-Q\"\n                }\n            }\n        }\n    }\n}\n",
			"canonicalURL": "/github.com/zowe/docs-site@f90885dbbbe6077c5b8339dccb10b7b531b047de/-/blob/api_definitions/gateway.json",
			"externalURLs": [
				{
					"url": "https://github.com/zowe/docs-site/blob/f90885dbbbe6077c5b8339dccb10b7b531b047de/api_definitions/gateway.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/services\": get: security: security \"CookieAuth\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}