{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-user"
		},
		"file": {
			"name": "application.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.user.application/org.wso2.carbon.identity.rest.api.user.application.v1/src/main/resources/application.yaml",
			"byteSize": 8539,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e-\n    This is the RESTful API for user visible application management in WSO2 Identity Server.\n  version: \"v1\"\n  title: WSO2 Identity Server - User Application Management API\n  contact:\n    name: WSO2 Identity Server\n    url: 'https://wso2.com/identity-and-access-management'\n    email: architecture@wso2.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  - url: 'https://localhost:9443/t/{tenant-domain}/api/users/v1'\n    variables:\n      tenant-domain:\n        default: carbon.super\n        description: Tenant domain in which the API is invoked\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\npaths:\n  /me/applications:\n    get:\n      tags:\n        - Application Listing\n      summary: List applications.\n      description: |\n        This API provides the capability to retrieve\n        the list of applications to an authorized user.\n      operationId: getApplications\n      parameters:\n        - $ref: '#/components/parameters/attributesQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/offsetQueryParam'\n        - $ref: '#/components/parameters/filterQueryParam'\n        - $ref: '#/components/parameters/sortOrderQueryParam'\n        - $ref: '#/components/parameters/sortByQueryParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationListResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n        '501':\n          $ref: '#/components/responses/NotImplemented'\n  '/me/applications/{applicationId}':\n    get:\n      tags:\n        - Application Listing\n      summary: Get application by Id.\n      description: \u003e\n        This API provides the capability to retrieve an application to an authorized user. \n      operationId: getApplication\n      parameters:\n        - name: applicationId\n          in: path\n          description: Id of the application.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationResponse'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  parameters:\n    limitQueryParam:\n      in: query\n      name: limit\n      required: false\n      description: Maximum number of records to return.\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n        default: 30\n        example: 10\n    offsetQueryParam:\n      in: query\n      name: offset\n      required: false\n      description: Number of records to skip for pagination.\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n        default: 0\n        example: 5\n    filterQueryParam:\n      in: query\n      name: filter\n      required: false\n      description: Condition to filter the retrieval of records.\n      schema:\n        type: string\n      examples:\n        sw:\n          value: name sw sales\n          summary: filter by sw operator\n        ew:\n          value: name ew force\n          summary: filter by ew operator\n        co:\n          value: name co sales\n          summary: filter by co operator\n        eq:\n          value: name eq salesforce\n          summary: filter by eq operator\n    sortOrderQueryParam:\n      in: query\n      name: sortOrder\n      required: false\n      description: |\n        Define the order by which the retrieved records should be sorted.\n        _This parameter is not supported yet._\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n        example: asc\n    sortByQueryParam:\n      in: query\n      name: sortBy\n      required: false\n      description: |\n        Attribute by which the retrieved records should be sorted.\n        _This parameter is not supported yet._\n      schema:\n        type: string\n      example: name\n    attributesQueryParam:\n      in: query\n      name: attributes\n      required: false\n      description: \u003e-\n        Define only the required attributes to be sent in the response object as a comma-separated string.\n      schema:\n        type: string\n      example: name,description,logo\n  responses:\n    NotFound:\n      description: The specified resource is not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized.\n    ServerError:\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotImplemented:\n      description: Not Implemented.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: Bad Request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Forbidden:\n      description: Resource Forbidden.\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth/authorize'\n          tokenUrl: 'https://localhost:9443/oauth/token'\n          scopes: {}\n        password:\n          tokenUrl: 'https://localhost:9443/oauth/token'\n          scopes: {}\n  schemas:\n    ApplicationListResponse:\n      type: object\n      properties:\n        totalResults:\n          type: integer\n          description: The total number of results matching the query.\n          example: 30\n        startIndex:\n          type: integer\n          description: The 1-based index of the first result in the current set of results.\n          example: 5\n        count:\n          type: integer\n          description: Number of results returned in response.\n          example: 1\n        applications:\n          type: array\n          description: Applications matching the query.\n          items:\n            $ref: '#/components/schemas/ApplicationResponse'\n        links:\n          type: array\n          description: Navigation links.\n          items:\n            $ref: '#/components/schemas/Link'\n          example:\n            - href: '/t/carbon.super/api/user/v1/me/applications?offset=10\u0026limit=10'\n              rel: 'next'\n            - href: '/t/carbon.super/api/user/v1/me/applications?offset=0\u0026limit=5'\n              rel: 'previous'\n            - href: '/t/carbon.super/api/user/v1/me/applications?offset=0\u0026limit=10'\n              rel: 'first'\n            - href: '/t/carbon.super/api/user/v1/me/applications?offset=20\u0026limit=10'\n              rel: 'last'\n\n    ApplicationResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 85e3f4b8-0d22-4181-b1e3-1651f71b88bd\n        name:\n          type: string\n          example: Salesforce\n        description:\n          type: string\n          example: Customer relationship management application\n        image:\n          type: string\n          format: uri\n          example: 'https://example.com/logo/mysalesforce-logo.png'\n        accessUrl:\n          type: string\n          format: uri\n          example: 'https://example.my.salesforce.com/'\n    Link:\n      type: object\n      properties:\n        href:\n          type: string\n          format: uri\n          description: Path to the target resource.\n        rel:\n          type: string\n          description: Describes how the current context is related to the target resource.\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: UAM-10000\n        message:\n          type: string\n          example: Some Error Message\n        description:\n          type: string\n          example: Some Error Description\n        traceId:\n          type: string\n          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\n",
			"canonicalURL": "/github.com/wso2/identity-api-user@65a783723f43928af9a15ede87312635232d7b87/-/blob/components/org.wso2.carbon.identity.api.user.application/org.wso2.carbon.identity.rest.api.user.application.v1/src/main/resources/application.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-user/blob/65a783723f43928af9a15ede87312635232d7b87/components/org.wso2.carbon.identity.api.user.application/org.wso2.carbon.identity.rest.api.user.application.v1/src/main/resources/application.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/me/applications\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}