{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/zoho.people/openapi.yaml",
			"byteSize": 44139,
			"content": "openapi: 3.0.0\ninfo:\n  title: Zoho People API\n  description: \u003e\n    This is a generated connector for [Zoho\n    People](https://www.zoho.com/people/overview.html) OpenAPI specification.\n\n    Zoho People API provides the capability to integrate HR modules with\n    third-party applications. With Zoho People API, you can extract employees' data and form data in XML or JSON format to develop new applications or integrate with your existing business applications.\n  version: v2\n  x-ballerina-display:\n    label: Zoho People\n    iconPath: \"icon.png\"\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n\n    Create a [Zoho People account](https://www.zoho.com/people/) and obtain tokens by following [this guide](https://www.zoho.com/people/oauth-steps.html).\nservers:\n  - description: API server\n    url: https://people.zoho.com/people/api\nsecurity:\n  - OAuth2: []\n  - Bearer: []\ntags:\n  - name: Forms\n  - name: Leave\n  - name: Cases\n  - name: Onboarding\n  - name: Attendance\npaths:\n  /forms/{inputType}/{formLinkName}/insertRecord:\n    post:\n      summary: Add a record to the form.\n      operationId: insertRecord\n      tags:\n        - Forms\n      parameters:\n        - name: inputType\n          in: path\n          required: true\n          description: Type of inputs(json or xml)\n          schema:\n            type: string\n        - name: formLinkName\n          in: path\n          required: true\n          description: Form Lable Name\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/InputData'\n        description: Input data in stringify JSON format or XML format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormRecordResponse'\n          description: Success\n  /forms/{inputType}/{formLinkName}/updateRecord:\n    post:\n      summary: Modify the field values of the specified record.\n      operationId: updateRecord\n      tags:\n        - Forms\n      parameters:\n        - name: inputType\n          in: path\n          required: true\n          description: Type of inputs(json or xml)\n          schema:\n            type: string\n        - name: formLinkName\n          in: path\n          required: true\n          description: Form Lable Name\n          schema:\n            type: string\n        - name: recordId\n          in: query\n          required: true\n          description: Specifies the record Id of the record being fetched.\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/InputData'\n        description: Input data in stringify JSON format or XML format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormRecordResponse'\n          description: Success\n  /department/records:\n    post:\n      summary: Add various departments one by one\n      operationId: addDepartment\n      tags:\n        - Forms\n      parameters:\n        - name: xmlData\n          in: query\n          required: true\n          description: Input data in stringify XML format\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepartmentResponse'\n          description: Success\n  /forms/{formLinkName}/getRecords:\n    get:\n      summary: \u003e-\n        Fetch bulk records along with its tabular section details from\n        particular forms. (maximum:200 records per api calls)\n      operationId: getBulkRecords\n      tags:\n        - Forms\n      parameters:\n        - name: formLinkName\n          in: path\n          required: true\n          description: Form Lable Name\n          schema:\n            type: string\n        - name: sIndex\n          in: query\n          required: false\n          description: starting index of the records to fetch (record index starts from 1)\n          schema:\n            type: integer\n        - name: limit\n          in: query\n          required: false\n          description: \u003e-\n            number of records to be fetched in the current request (maximum 200\n            records)\n          schema:\n            type: integer\n        - name: SearchColumn\n          in: query\n          required: false\n          description: Search EMPLOYEEID or EMPLOYEEMAILALIAS\n          schema:\n            type: string\n        - name: SearchValue\n          in: query\n          required: false\n          description: Search Employeeid of the employee or the Employee MailID\n          schema:\n            type: string\n        - name: modifiedtime\n          in: query\n          required: false\n          description: \u003e-\n            To fetch records added \u0026 modified after the given time . value\n            should be  timestamp in milliseconds\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Records'\n          description: Success\n  /forms/{formLinkName}/getDataByID:\n    get:\n      summary: Display the record of a specific form indexed using a Record ID\n      operationId: getSingleRecord\n      tags:\n        - Forms\n      parameters:\n        - name: formLinkName\n          in: path\n          required: true\n          description: Form Lable Name\n          schema:\n            type: string\n        - name: recordId\n          in: query\n          required: true\n          description: \u003e-\n            Specifies the record Id of the record being fetched. The record Id\n            can be identified using the getBulkRecords operation.\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Records'\n          description: Success\n  /forms/{formLinkName}/getRecordByID:\n    get:\n      summary: \u003e-\n        Fetch all the record of a specific form indexed using a Record ID by\n        section-wise\n      operationId: getRecordByID\n      tags:\n        - Forms\n      parameters:\n        - name: formLinkName\n          in: path\n          required: true\n          description: Form Lable Name\n          schema:\n            type: string\n        - name: recordId\n          in: query\n          required: true\n          description: \u003e-\n            Specifies the record Id of the record being fetched. The record Id\n            can be identified using the getBulkRecords operation.\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Records'\n          description: Success\n  /forms:\n    get:\n      summary: \u003e-\n        Retrieve the list of forms and its details available in your Zoho People\n        account.\n      operationId: getForms\n      tags:\n        - Forms\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDetailResponse'\n          description: Success\n  /forms/json/leave/insertRecord:\n    post:\n      summary: Add leave records using Add Leave API\n      operationId: addLeave\n      tags:\n        - Leave\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/InputData'\n        description: Input data in stringify JSON format\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormRecordResponse'\n          description: Success\n  /leave/addBalance:\n    post:\n      summary: To modify an employee's leave balance\n      operationId: addLeaveBalance\n      tags:\n        - Leave\n      parameters:\n        - name: dateFormat\n          in: query\n          required: false\n          description: \u003e-\n            Specify the date format (Org date format will be considered if\n            nothing is specified)\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BalanceData'\n        description: Balance data to insert in Json string format\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BalanceDataResponse'\n          description: Success\n  /forms/leave/getDataByID:\n    post:\n      summary: Fetch the record of leave from indexed using a Record ID\n      operationId: getSingleLeaveRecord\n      tags:\n        - Leave\n      parameters:\n        - name: recordId\n          in: query\n          required: true\n          description: \u003e-\n            Specifies the record Id of the leave record being fetched. The\n            record Id can be identified using the fetch Records API.\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveDetail'\n          description: Success\n  /leave/getLeaveTypeDetails:\n    get:\n      summary: Get leave types of a specific employee\n      operationId: getLeaveTypes\n      tags:\n        - Leave\n      parameters:\n        - name: userId\n          in: query\n          required: true\n          description: Employee Id/Employee MailId/Record Id of the Employee\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveTypes'\n          description: Success\n  /leave/getHolidays:\n    get:\n      summary: \u003e-\n        Fetch specific holidays of any employees using their employee ID, email\n        ID and record ID parameters.\n      operationId: getHolidays\n      tags:\n        - Leave\n      parameters:\n        - name: userId\n          in: query\n          required: true\n          description: Employee Id/Employee MailId/Record Id of the Employee\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Holidays'\n          description: Success\n  /leave/v2/holidays/get:\n    get:\n      summary: Fetch the holidays of a location, shift or for an employee.\n      operationId: getAllHolidays\n      tags:\n        - Leave\n      parameters:\n        - name: location\n          in: query\n          required: false\n          description: Location name\n          schema:\n            type: string\n        - name: shift\n          in: query\n          required: false\n          description: Shift name\n          schema:\n            type: string\n        - name: employee\n          in: query\n          required: false\n          description: Emp ID or Email ID or Erecno of the employee\n          schema:\n            type: string\n        - name: upcoming\n          in: query\n          required: false\n          description: To get the holidays for the next 365 days\n          schema:\n            type: boolean\n        - name: from\n          in: query\n          required: false\n          description: From date\n          schema:\n            type: string\n        - name: to\n          in: query\n          required: false\n          description: To date\n          schema:\n            type: string\n        - name: dateFormat\n          in: query\n          required: false\n          description: Date format used to specify From and To as String\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllHolidays'\n          description: Success\n  /v2/leavetracker/reports/user:\n    get:\n      summary: Get user report for current leave year.\n      operationId: getLeaveReportOfUser\n      tags:\n        - Leave\n      parameters:\n        - name: employee\n          in: query\n          required: true\n          description: Erecno of the employee\n          schema:\n            type: integer\n        - name: to\n          in: query\n          required: false\n          description: Report till date of the current year\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveReport'\n          description: Success\n  /hrcases/addcase:\n    post:\n      summary: Add case\n      operationId: addCase\n      tags:\n        - Cases\n      parameters:\n        - name: categoryId\n          in: query\n          required: true\n          description: Specify the category ID\n          schema:\n            type: integer\n        - name: subject\n          in: query\n          required: true\n          description: Specify the subject of the case\n          schema:\n            type: string\n        - name: description\n          in: query\n          required: false\n          description: Specify the description of the case\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatedCase'\n          description: Success\n  /hrcases/viewcase:\n    get:\n      summary: View case details\n      operationId: viewCaseDetails\n      tags:\n        - Cases\n      parameters:\n        - name: recordId\n          in: query\n          required: true\n          description: Specify the record ID of the case\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaseDetailsResponse'\n          description: Success\n  /hrcases/getAllCases:\n    get:\n      summary: List all case details\n      operationId: getAllCases\n      tags:\n        - Cases\n      parameters:\n        - name: index\n          in: query\n          required: true\n          description: Specify the index of the listing\n          schema:\n            type: integer\n        - name: status\n          in: query\n          required: false\n          description: \u003e-\n            String of status IDs separated by (,) comma - (Open- \"1\", In\n            Progress- \"2\", Awaiting action from Requestor- \"3\", On Hold- \"4\",\n            Closed- \"5\") - empty for all status\n          schema:\n            type: string\n        - name: categoryId\n          in: query\n          required: false\n          description: Category IDs separated by (,) comma\n          schema:\n            type: string\n        - name: query\n          in: query\n          required: false\n          description: Specify the query string of the case\n          schema:\n            type: string\n        - name: requestorErecno\n          in: query\n          required: false\n          description: Employee record IDs separated by (,) comma\n          schema:\n            type: string\n        - name: periodOfTime\n          in: query\n          required: false\n          description: \u003e-\n            Send single time limit(Today - 0, Yesterday - 1, Past 7 days - 2,\n            Past 30 days - 3)\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaseList'\n          description: Success\n  /hrcases/listCategory:\n    get:\n      summary: List categories that a user case raise query to\n      operationId: viewListOfCategories\n      tags:\n        - Cases\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaseCategory'\n          description: Success\n  /{onboardingType}/triggerOnboarding:\n    post:\n      summary: Trigger onboarding for an existing candidate or employee\n      operationId: triggerOnboarding\n      tags:\n        - Onboarding\n      parameters:\n        - name: onboardingType\n          in: path\n          required: true\n          description: Select either one type for onboarding - `Employee` or `Candidate`\n          schema:\n            type: string\n        - name: userId\n          in: query\n          required: true\n          description: Specify the record ID of the candidate employee\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse'\n          description: Success​\n  /attendance/bulkImport:\n    post:\n      summary: Import bulk check-in and check-out details of the employees\n      operationId: importBulkAttendance\n      tags:\n        - Attendance\n      parameters:\n        - name: dateFormat\n          in: query\n          required: false\n          description: Format for date (Eg- yyyy-MM-dd HH:mm:ss)\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AttendanceImportData'\n        description: Input data in stringify JSON array format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkAttendance'\n          description: Success\n  /attendance:\n    post:\n      summary: Capture the check-in and check-out entries of an individual employee\n      operationId: createAttendance\n      tags:\n        - Attendance\n      parameters:\n        - name: dateFormat\n          in: query\n          required: true\n          description: Specify the correct date format(eg- dd/MM/yyyy HH:mm:ss )\n          schema:\n            type: string\n        - name: checkIn\n          in: query\n          required: false\n          description: Specify the check-in time of an employee\n          schema:\n            type: string\n        - name: checkOut\n          in: query\n          required: false\n          description: Specify the check-out time of an employee\n          schema:\n            type: string\n        - name: empId\n          in: query\n          required: false\n          description: Specify the employee ID of an employee. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n        - name: emailId\n          in: query\n          required: false\n          description: Specify the email ID of an employee. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n        - name: mapId\n          in: query\n          required: false\n          description: Specify the mapper ID of an employee. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AttendanceEntry'\n          description: Success\n  /attendance/getAttendanceEntries:\n    post:\n      summary: Get the employee attendance entries.\n      operationId: getAttendanceEntries\n      tags:\n        - Attendance\n      parameters:\n        - name: dateFormat\n          in: query\n          required: false\n          description: Specify the response date format\n          schema:\n            type: string\n        - name: date\n          in: query\n          required: false\n          description: Specify the date in organisation date format\n          schema:\n            type: string\n        - name: erecno\n          in: query\n          required: false\n          description: Specify employee erecno\n          schema:\n            type: string\n        - name: empId\n          in: query\n          required: false\n          description: Specify employee id. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n        - name: emailId\n          in: query\n          required: false\n          description: Specify employee email id. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n        - name: mapId\n          in: query\n          required: false\n          description: Specify mapper id. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttendanceEntries'\n          description: Success\n  /attendance/fetchLatestAttEntries:\n    get:\n      summary: \u003e-\n        Get the latest attendance entries with Regularisation entries that has\n        been added/updated within the latest minutes(given in param)\n      operationId: getLatestAttendance\n      tags:\n        - Attendance\n      parameters:\n        - name: duration\n          in: query\n          required: true\n          description: \u003e-\n            Duration in minutes within which the latest entries should be\n            fetched\n          schema:\n            type: integer\n        - name: dateTimeFormat\n          in: query\n          required: false\n          description: \u003e-\n            Format of the date and time of Attendance entries in response is\n            returned\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LatestAttendance'\n          description: Success\n  /attendance/updateUserShift:\n    post:\n      summary: Map employees to respective shifts\n      operationId: updateUserShift\n      tags:\n        - Attendance\n      parameters:\n        - name: empId\n          in: query\n          required: true\n          description: Employee ID of an employee\n          schema:\n            type: string\n        - name: shiftName\n          in: query\n          required: true\n          description: Shift to be mapped\n          schema:\n            type: string\n        - name: fdate\n          in: query\n          required: false\n          description: From date\n          schema:\n            type: string\n        - name: tdate\n          in: query\n          required: false\n          description: To date\n          schema:\n            type: string\n        - name: dateFormat\n          in: query\n          required: false\n          description: \u003e-\n            Correct date format. Date Format of organisation or specify the\n            format\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShiftUpdate'\n          description: Success\n  /attendance/getShiftConfiguration:\n    get:\n      summary: Fetch the shift configuration details of an employee\n      operationId: getShiftDetails\n      tags:\n        - Attendance\n      parameters:\n        - name: empId\n          in: query\n          required: false\n          description: Employee ID of an employee. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n        - name: emailId\n          in: query\n          required: false\n          description: Mail ID of the employee. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n        - name: mapId\n          in: query\n          required: false\n          description: Mapper ID of the employee. Out of the 3 parameters - empId, emailId \u0026 mapId, at least one of them must be given as an input to map the entry of an employee.\n          schema:\n            type: string\n        - name: sdate\n          in: query\n          required: true\n          description: Start date\n          schema:\n            type: string\n        - name: edate\n          in: query\n          required: true\n          description: End date\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShiftDetails'\n          description: Success\ncomponents:\n  schemas:\n    FormDetailResponse:\n      properties:\n        response:\n          properties:\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/FormDetail'\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            errors:\n              oneOf:\n                - type: object\n                - type: array\n                  items:\n                    type: object\n    FormDetail:\n      properties:\n        componentId:\n          type: integer\n        iscustom:\n          type: boolean\n        displayName:\n          type: string\n        formLinkName:\n          type: string\n        PermissionDetails:\n          $ref: '#/components/schemas/PermissionDetails'\n        isVisible:\n          type: boolean\n        viewDetails:\n          $ref: '#/components/schemas/ViewDetails'\n    ViewDetails:\n      properties:\n        view_Id:\n          type: integer\n        view_Name:\n          type: string\n    PermissionDetails:\n      properties:\n        Add:\n          type: integer\n        Edit:\n          type: integer\n        View:\n          type: integer\n    Records:\n      properties:\n        response:\n          properties:\n            result:\n              type: array\n              items:\n                type: object\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            errors:\n              oneOf:\n                - type: object\n                - type: array\n                  items:\n                    type: object\n    DepartmentResponse:\n      properties:\n        Response:\n          type: integer\n        pkId:\n          type: string\n        code:\n          type: integer\n        message:\n          oneOf:\n            - type: string\n            - type: object\n            - type: array\n              items:\n                type: object\n        errorcode:\n          type: integer\n        Response status:\n          type: integer\n    LeaveReport:\n      properties:\n        employeeName:\n          type: string\n        employeeId:\n          type: string\n        leavetypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/LeaveInfo'\n    LeaveInfo:\n      properties:\n        taken:\n          type: integer\n        leavetypeName:\n          type: string\n        available:\n          type: integer\n        type:\n          type: string\n        leavetypeColor:\n          type: string\n        leavetypeID:\n          type: integer\n    LeaveTypes:\n      properties:\n        response:\n          properties:\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/LeaveType'\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            error_msg:\n              type: string\n            error_code:\n              type: integer\n            errors:\n              $ref: '#/components/schemas/Errors'\n    LeaveType:\n      properties:\n        Name:\n          type: string\n        PermittedCount:\n          type: integer\n        AvailedCount:\n          type: integer\n        Id:\n          oneOf:\n            - type: string\n            - type: integer\n        Unit:\n          type: string\n        BalanceCount:\n          oneOf:\n            - type: string\n            - type: integer\n    Holidays:\n      properties:\n        response:\n          properties:\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/Holiday'\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            error_msg:\n              type: string\n            error_code:\n              type: integer\n            errors:\n              $ref: '#/components/schemas/Errors'\n    AllHolidays:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Holiday'\n        message:\n          type: string\n        uri:\n          type: string\n        status:\n          type: integer\n        error_msg:\n          type: string\n        error_code:\n          type: integer\n    Holiday:\n      properties:\n        isRestrictedHoliday:\n          type: boolean\n        ShiftName:\n          type: string\n        Remarks:\n          type: string\n        LocationId:\n          type: string\n        ShiftId:\n          type: string\n        Id:\n          oneOf:\n            - type: string\n            - type: integer\n        Date:\n          type: string\n        isHalfday:\n          type: boolean\n        Name:\n          type: string\n        LocationName:\n          type: string\n        Session:\n          type: integer\n        fromDate:\n          type: string\n        toDate:\n          type: string\n    Fields:\n      properties:\n        comptype:\n          type: string\n        Options:\n          type: object\n        description:\n          type: string\n        labelname:\n          type: string\n        ismandatory:\n          type: boolean\n        displayType:\n          type: string\n        ReferedFormId:\n          type: integer\n        isPrimary:\n          type: boolean\n        displayname:\n          type: string\n        autofillvalue:\n          type: string\n        formcomponentid:\n          type: integer\n        ReferedFormName:\n          type: string\n        ReferedFieldId:\n          type: integer\n        ReferedFieldName:\n          type: string\n        maxLength:\n          type: integer\n    FormFields:\n      properties:\n        response:\n          properties:\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/Fields'\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            errors:\n              $ref: '#/components/schemas/Errors'\n    BalanceData:\n      required:\n        - balanceData\n      properties:\n        balanceData:\n          type: string\n    BalanceDataResponse:\n      properties:\n        response:\n          properties:\n            result:\n              type: object\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            errors:\n              oneOf:\n                - type: object\n                - type: array\n                  items:\n                    type: object\n    Leave:\n      properties:\n        Employee_ID:\n          type: string\n        DayDetails:\n          type: object\n        Leavetype.ID:\n          type: string\n        From:\n          type: string\n        Unit:\n          type: string\n        ApprovalStatus:\n          type: string\n        Daystaken:\n          type: string\n        Reasonforleave:\n          type: string\n        TeamEmailID:\n          type: string\n        Leavetype:\n          type: string\n        To:\n          type: string\n        Employee_ID.ID:\n          type: string\n        DateOfRequest:\n          type: string\n    LeaveDetail:\n      properties:\n        response:\n          properties:\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/Leave'\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            errors:\n              $ref: '#/components/schemas/Errors'\n    CreatedCase:\n      properties:\n        response:\n          properties:\n            result:\n              properties:\n                zp_recordId:\n                  type: string\n                caseId:\n                  type: string\n                desc:\n                  type: string\n                status:\n                  type: string\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            errors:\n              $ref: '#/components/schemas/CaseErrors'\n    FileList:\n      properties:\n        fileName:\n          type: string\n        downloadUrl:\n          type: string\n        filesize:\n          type: string\n        fileUploadId:\n          type: string\n    Agent:\n      properties:\n        empid:\n          type: string\n        allowPickup:\n          type: boolean\n        valueId:\n          type: string\n        erecno:\n          type: string\n        employeePhoto:\n          type: string\n        name:\n          type: string\n        details:\n          type: string\n        typeId:\n          type: string\n        type:\n          type: string\n        zuid:\n          type: string\n        employeeEmailAlias:\n          type: string\n    PermittedCaseStatus:\n      properties:\n        sequence:\n          type: string\n        optionValue:\n          type: string\n        fcid:\n          type: string\n        optionId:\n          type: string\n        systemValue:\n          type: string\n    PermittedCasePriority:\n      properties:\n        sequence:\n          type: string\n        optionValue:\n          type: string\n        fcid:\n          type: string\n        optionId:\n          type: string\n        systemValue:\n          type: string\n    PermittedCaseSource:\n      properties:\n        sequence:\n          type: string\n        isReopenDisabled:\n          type: boolean\n        optionValue:\n          type: string\n        fcid:\n          type: string\n        optionId:\n          type: string\n        systemValue:\n          type: string\n    Requestor:\n      properties:\n        empid:\n          type: string\n        erecno:\n          type: string\n        employeePhoto:\n          type: string\n        name:\n          type: string\n        zuid:\n          type: string\n        employeeEmailAlias:\n          type: string\n    CaseDetail:\n      properties:\n        sourceId:\n          type: string\n        agentId:\n          type: string\n        agent:\n          $ref: '#/components/schemas/Agent'\n        permittedCaseStatus:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermittedCaseStatus'\n        permittedCasePriority:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermittedCasePriority'\n        subject:\n          type: string\n        description:\n          type: string\n        source:\n          type: string\n        categoryName:\n          type: string\n        priorityId:\n          type: string\n        isAgent:\n          type: boolean\n        caseId:\n          type: string\n        createdTime:\n          type: string\n        permittedCaseSource:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermittedCaseSource'\n        isEscalatedUser:\n          type: boolean\n        agentValueId:\n          type: string\n        agentTypeId:\n          type: string\n        priority:\n          type: string\n        requestor:\n          $ref: '#/components/schemas/Requestor'\n        agentDetails:\n          type: string\n        statusId:\n          type: string\n        categoryIcon:\n          type: string\n        categoryId:\n          type: string\n        status:\n          type: string\n    SLA:\n      properties:\n        nextViolation:\n          type: string\n        currentStatus:\n          type: integer\n        isViolated:\n          type: boolean\n    CaseDetails:\n      properties:\n        assignedToList:\n          type: boolean\n        filesList:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileList'\n        caseDetails:\n          $ref: '#/components/schemas/CaseDetail'\n        needCategoryChange:\n          type: boolean\n        sla:\n          $ref: '#/components/schemas/SLA'\n    CaseDetailsResponse:\n      properties:\n        response:\n          properties:\n            result:\n              $ref: '#/components/schemas/CaseDetails'\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            errors:\n              $ref: '#/components/schemas/CaseErrors'\n    HrcaseList:\n      properties:\n        agent:\n          $ref: '#/components/schemas/Agent'\n        subject:\n          type: string\n        SLA:\n          $ref: '#/components/schemas/SLA'\n        priority:\n          type: string\n        categoryName:\n          type: string\n        requestor:\n          $ref: '#/components/schemas/Requestor'\n        priorityId:\n          type: string\n        recordId:\n          type: string\n        statusId:\n          type: string\n        caseId:\n          type: string\n        createdTime:\n          type: string\n        categoryId:\n          type: string\n        status:\n          type: string\n        hasAttachment:\n          type: boolean\n    CaseList:\n      properties:\n        response:\n          properties:\n            result:\n              properties:\n                hrcaseList:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/HrcaseList'\n                isNextAvailable:\n                  type: boolean\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n    CaseCategory:\n      properties:\n        response:\n          properties:\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/CaseCategoryResult'\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n    SubCategory:\n      properties:\n        subcategoryname:\n          type: string\n        subCategoryId:\n          type: string\n    CaseCategoryResult:\n      properties:\n        isAgent:\n          type: boolean\n        categoryIcon:\n          type: string\n        isEnabled:\n          type: boolean\n        subCategoryList:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubCategory'\n        categoryShortDescription:\n          type: string\n        enable_moderation:\n          type: boolean\n        serviceId:\n          type: string\n        applicableLocations:\n          type: array\n          items: {}\n        categoryName:\n          type: string\n        categoryId:\n          type: string\n    CaseErrors:\n      properties:\n        desc:\n          type: string\n        status:\n          type: string\n    OnboardingResponse:\n      properties:\n        msg:\n          type: string\n        Success:\n          type: boolean\n    OnboardingType:\n      type: string\n      enum:\n        - Employee\n        - Candidate\n    FormRecordResponse:\n      properties:\n        response:\n          properties:\n            result:\n              properties:\n                pkId:\n                  type: string\n                message:\n                  type: string\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: integer\n            errors:\n              oneOf:\n                - type: object\n                - type: array\n                  items:\n                    type: object\n    InputData:\n      required:\n        - inputData\n      properties:\n        inputData:\n          type: string\n    AttendanceImportData:\n      required:\n        - data\n      properties:\n        data:\n          type: string\n    BulkAttendance:\n      properties:\n        response:\n          type: string\n    AttendanceEntry:\n      properties:\n        inputType_in:\n          type: integer\n        inputType_out:\n          type: integer\n        tdate:\n          type: string\n        fdate:\n          type: string\n        punchIn:\n          type: string\n        dateFormat:\n          type: string\n        response:\n          type: string\n        tsecs:\n          type: integer\n        msg:\n          type: string\n    AttendanceEntryInfo:\n      properties:\n        checkIn:\n          type: string\n        checkOut_Location:\n          type: string\n        sourceOfPunchOut:\n          type: string\n        checkIn_Location:\n          type: string\n        checkOut:\n          type: string\n        sourceOfPunchIn:\n          type: string\n    AttendanceEntries:\n      properties:\n        firstIn:\n          type: string\n        totalHrs:\n          type: string\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/AttendanceEntryInfo'\n        lastOut_Location:\n          type: string\n        lastOut:\n          type: string\n        allowedToCheckIn:\n          type: boolean\n        firstIn_Location:\n          type: string\n        status:\n          type: string\n    LatestAttendanceEntries:\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        entries:\n          type: array\n          items:\n            type: object\n        erecNo:\n          type: integer\n        employeeId:\n          type: string\n        emailId:\n          type: string\n    LatestAttendance:\n      properties:\n        response:\n          properties:\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/LatestAttendanceEntries'\n            message:\n              type: string\n            uri:\n              type: string\n            status:\n              type: string\n    ShiftUpdate:\n      properties:\n        result:\n          properties:\n            msg:\n              type: string\n        msg:\n          type: string\n    ShiftList:\n      properties:\n        date:\n          type: string\n        shiftId:\n          type: string\n        shiftName:\n          type: string\n        shiftColor:\n          type: string\n        shiftStartTime:\n          type: string\n        shiftEndTime:\n          type: string\n        isWeekend:\n          type: boolean\n    UserShiftDetails:\n      properties:\n        employeeName:\n          type: string\n        erecno:\n          type: string\n        employeePhoto:\n          type: string\n        locationId:\n          type: string\n        emailId:\n          type: string\n        employeeId:\n          type: string\n        isShiftEditable:\n          type: boolean\n        shiftList:\n          type: array\n          items:\n            $ref: '#/components/schemas/ShiftList'\n    ShiftDetails:\n      properties:\n        userShiftDetails:\n          $ref: '#/components/schemas/UserShiftDetails'\n    Errors:\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.zoho.com/oauth/v2/auth\n          tokenUrl: https://accounts.zoho.com/oauth/v2/token\n          scopes: {}\n    Bearer:\n      type: http\n      scheme: bearer\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/zoho.people/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/zoho.people/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/forms/json/leave/insertRecord\": post: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}