{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-server"
		},
		"file": {
			"name": "fetch-remote.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.server.fetch.remote/org.wso2.carbon.identity.api.server.fetch.remote.v1/src/main/resources/fetch-remote.yaml",
			"byteSize": 30278,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e\n    This document specifies an **Remote Fetch Configuration RESTful API** for\n    **WSO2 Identity Server**. This supports Restful APIs for reomtefetch\n    configuration management. The APIs provide the capability to\n    add/update/delete/patch remotefetch configurations in the identity server.\n    In addition, APIs are available to trigger revision deployement for given\n    remote fetch configuration.\n  version: \"v1\"\n  title: WSO2 Identity Server - Remotedetch Configuration Management API definition\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    name: WSO2\n    url: 'http://wso2.com/products/identity-server/'\n    email: architecture@wso2.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\npaths:\n  /remote-fetch:\n    get:\n      tags:\n        - Remote Fetch Configurations\n      summary: |\n        List remote fetch configurations\n      description:\n        This API provides the capability to retrieve the list of remotefetch\n        configurations.\u003cbr\u003e \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n        * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n        * internal_login\n      operationId: getRemoteFetchConfigs\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteFetchConfigurationListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '501':\n          description: Not Implemented\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n        - Remote Fetch Configurations\n      summary: |\n        Add a new remotefetch configuration\n      description: \u003e\n        This API provides the capability to create a new remotefetch\n        configuration. \u003cbr\u003e\n\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_login\n      operationId: addRemoteFetch\n      responses:\n        '201':\n          description: Successfully created.\n          headers:\n            Location:\n              description: Location of the newly created remotefetch configuration.\n              schema:\n                type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoteFetchConfigurationPOSTRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/RemoteFetchConfigurationPOSTRequest'\n        description: This represents the remotefetch configuration to be created.\n        required: true\n  '/remote-fetch/{id}':\n    get:\n      tags:\n        - Remote Fetch Configurations\n      summary: |\n        Retrieve remotefetch Configuration by remotefetch Configuration's ID\n      description: \u003e\n        This API provides the capability to retrieve the Remote Fetch\n        Configuration details by using its ID.\u003cbr\u003e \u003cb\u003ePermission required:\u003c/b\u003e\n        \u003cbr\u003e\n            * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_login\n      operationId: getRemoteFetch\n      parameters:\n        - name: id\n          in: path\n          description: ID of the remotefetch Configuration.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteFetchConfigurationGetResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/RemoteFetchConfigurationGetResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n        - Remote Fetch Configurations\n      summary: |\n        Patch a remotefetch Configuration property by ID.\n      description: \u003e\n        This API provides the capability to update a remotefetch Configuration\n        property using patch request. Patch is supported only for key-value\n        pairs. \u003cbr\u003e \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_login\n      operationId: updateRemoteFetch\n      parameters:\n        - name: id\n          in: path\n          description: ID of the remotefetch Configuration.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully Updated\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoteFetchConfigurationPatchRequest'\n        required: true\n    delete:\n      tags:\n        - Remote Fetch Configurations\n      summary: \u003e\n        Delete a remotefetch Configuration by using the remotefetch\n        Configuration's ID.\n      description: \u003e\n        This API provides the capability to delete a remotefetch Configuration\n        by giving its ID. \u003cbr\u003e \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_login\n      operationId: deleteRemoteFetch\n      parameters:\n        - name: id\n          in: path\n          description: ID of the remotefetch Configuration\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Successfully Deleted\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/remote-fetch/{id}/trigger':\n    post:\n      tags:\n        - Remote fetch Configuration Trigger\n      summary: |\n        Trigger a remote fetch configuration.\n      description: \u003e\n        This API pprovides the capability to trigger given remotefetch\n        configuration. \u003cbr\u003e \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_login\n      operationId: triggerRemoteFetch\n      parameters:\n        - name: id\n          in: path\n          description: ID of the remote fetch configuration.\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Accepted.\n          headers:\n            Location:\n              description: Location of the triggered remotefetch configuration.\n              schema:\n                type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/remote-fetch/{id}/status':\n    get:\n      tags:\n        - Remote fetch Configuration Status\n      summary: |\n        Retrieve latest Deployment status of remotefetch configuration.\n      description: \u003e\n        This API provides the status of remote fetch configuration. The status\n        hold deployment status and the deployment failure details . \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * None \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_login\n      operationId: getStatus\n      parameters:\n        - name: id\n          in: path\n          description: ID of the remote fetch configuration.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/remote-fetch/webhook/sp':\n    post:\n      tags:\n        - Remote Fetch Webhook\n      summary: |\n        Web hook endpoint for remote fetch configuration.\n      description: \u003e\n        This API provides the capability to handle web hook request from remote repository. \u003cbr\u003e\n      operationId: handleWebHook\n      responses:\n        '202':\n          description: Successful Response\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PushEventWebHookPOSTRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PushEventWebHookPOSTRequest'\nservers:\n  # Added by API Auto Mocking Plugin\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/Thumimku/Remotefetch/v1\n  - description: SwaggerHub API Auto Mocking\n    url: 'https://virtserver.swaggerhub.com/Thumimku/Remotedetch/v1'\n  - url: 'https://localhost:9443/t/{tenant-domain}/api/server/v1'\n    variables:\n      tenant-domain:\n        default: carbon.super\ncomponents:\n  parameters:\n    limitQueryParam:\n      in: query\n      name: limit\n      required: false\n      description: |\n        Maximum number of records to return.\n      schema:\n        type: integer\n        format: int32\n    offsetQueryParam:\n      in: query\n      name: offset\n      required: false\n      description: |\n        Number of records to skip for pagination.\n      schema:\n        type: integer\n        format: int32\n    filterQueryParam:\n      in: query\n      name: filter\n      required: false\n      description: \u003e\n        Condition to filter the retrieval of records. Supports 'sw', 'co', 'ew'\n        and 'eq' operations and also complex queries with 'and' operations. E.g.\n        /identity-providers?filter=name+sw+\"google\"+and+isEnabled+eq+\"true\"\n      schema:\n        type: string\n    sortQueryParam:\n      in: query\n      name: sortOrder\n      required: false\n      description: |\n        Defines the order in which the retrieved records should be sorted.\n        _This parameter is not supported yet_\n      schema:\n        type: string\n        enum:\n          - ASC\n          - DESC\n    sortByQueryParam:\n      in: query\n      name: sortBy\n      required: false\n      description: |\n        Attribute by which the retrieved records should be sorted.\n        _This parameter is not supported yet_\n      schema:\n        type: string\n    requiredAttributesQueryParam:\n      in: query\n      name: requiredAttributes\n      required: false\n      description: |\n        Specifies the required parameters in the response.\n        _This parameter is not supported yet_\n      schema:\n        type: string\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth/authorize'\n          tokenUrl: 'https://localhost:9443/oauth/token'\n          scopes: {}\n  schemas:\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          example: RFE-00000\n        message:\n          type: string\n          example: Some Error Message\n        description:\n          type: string\n          example: Some Error Description\n        traceId:\n          type: string\n          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\n    RemoteFetchConfigurationListResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 10\n        remotefetchConfigurations:\n          type: array\n          items:\n            $ref: '#/components/schemas/RemoteFetchConfigurationListItem'\n    StatusListResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 10\n        successfulDeployments:\n          type: integer\n          example: 1\n        failedDeployments:\n          type: integer\n          example: 1\n        lastSynchronizedTime:\n          type: string\n          example: '2020-03-29 07:36:08.0'\n        remoteFetchRevisionStatuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/StatusListItem'\n    RemoteFetchConfigurationListItem:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 00000000-13e9-4ed5-afaf-000000000000\n        isEnabled:\n          type: boolean\n          default: true\n          example: true\n        name:\n          type: string\n          example: testSP\n        repositoryManagerType:\n          type: string\n          example: GIT\n        actionListenerType:\n          type: string\n          example: POOLING\n        configurationDeployerType:\n          type: string\n          example: SP\n        successfulDeployments:\n          type: integer\n          example: 1\n        failedDeployments:\n          type: integer\n          example: 1\n        lastDeployed:\n          type: string\n          example: 10-04-2020\n    StatusListItem:\n      type: object\n      properties:\n        itemName:\n          type: string\n          example: pickup\n        deployedTime:\n          type: string\n          example: '2020-03-29 07:36:08.0'\n        deployedStatus:\n          type: string\n          example: SUCCESS\n        deploymentErrorReport:\n          type: string\n          example: \"Service Provider Deployment Error Occured\"\n    RemoteFetchConfigurationPOSTRequest:\n      type: object\n      properties:\n        remoteFetchName:\n          type: string\n          example: testSP\n        isEnabled:\n          type: boolean\n          default: true\n          example: true\n        repositoryManager:\n          $ref: '#/components/schemas/RepositoryManager'\n        actionListener:\n          $ref: '#/components/schemas/ActionListener'\n        configurationDeployer:\n          $ref: '#/components/schemas/ConfigurationDeployer'\n    RemoteFetchConfigurationPatchRequest:\n      type: object\n      properties:\n        remoteFetchName:\n          type: string\n          example: testSP\n        isEnabled:\n          type: boolean\n          default: true\n          example: true\n    RepositoryManager:\n      type: object\n      properties:\n        type:\n          type: string\n          description: The operation to be performed\n          enum:\n            - GIT\n          example: GIT\n        attributes:\n          $ref: '#/components/schemas/RepositoryManagerAttributes'\n    RepositoryManagerAttributes:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          example: sample access token\n        username:\n          type: string\n          example: Jhon Doe\n        uri:\n          type: string\n          example: 'https://github.com/TestUser/TestGit.git'\n        branch:\n          type: string\n          example: master\n        directory:\n          type: string\n          example: SP/\n    ActionListener:\n      type: object\n      properties:\n        type:\n          type: string\n          description: The operation to be performed\n          enum:\n            - POLLING\n            - WEB HOOK\n          example: WEB HOOK\n        attributes:\n          $ref: '#/components/schemas/ActionListenerAttributes'\n    ActionListenerAttributes:\n      type: object\n      properties:\n        frequency:\n          type: string\n          example: 60\n    ConfigurationDeployer:\n      type: object\n      properties:\n        type:\n          type: string\n          description: The operation to be performed\n          enum:\n            - SP\n          example: SP\n        attributes:\n          $ref: '#/components/schemas/ConfigurationDeployerAttributes'\n    ConfigurationDeployerAttributes:\n      type: object\n    RemoteFetchConfigurationGetResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 00000000-13e9-4ed5-afaf-000000000000\n        isEnabled:\n          type: boolean\n          default: true\n          example: true\n        remoteFetchName:\n          type: string\n          example: testSP\n        repositoryManagerType:\n          type: string\n          example: GIT\n        actionListenerType:\n          type: string\n          example: POOLING\n        configurationDeployerType:\n          type: string\n          example: SP\n        repositoryManagerAttributes:\n          $ref: '#/components/schemas/RepositoryManagerAttributes'\n        actionListenerAttributes:\n          $ref: '#/components/schemas/ActionListenerAttributes'\n        configurationDeployerAttributes:\n          $ref: '#/components/schemas/ConfigurationDeployerAttributes'\n        status:\n          $ref: '#/components/schemas/StatusListResponse'\n    PushEventWebHookPOSTRequest:\n      type: object\n      properties:\n        ref:\n          type: string\n        before:\n          type: string\n        after:\n          type: string\n        created:\n          type: boolean\n        deleted:\n          type: boolean\n        forced:\n          type: boolean\n        base_ref:\n          type: string\n        compare:\n          type: string\n        pusher:\n          type: object\n          properties:\n            name:\n              type: string\n            email:\n              type: string\n        sender:\n          type: object\n          properties:\n            login:\n              type: string\n            id:\n              type: integer\n            node_id:\n              type: string\n            avatar_url:\n              type: string\n            gravatar_id:\n              type: string\n            url:\n              type: string\n            html_url:\n              type: string\n            followers_url:\n              type: string\n            following_url:\n              type: string\n            gists_url:\n              type: string\n            starred_url:\n              type: string\n            subscriptions_url:\n              type: string\n            organizations_url:\n              type: string\n            repos_url:\n              type: string\n            events_url:\n              type: string\n            received_events_url:\n              type: string\n            type:\n              type: string\n            site_admin:\n              type: boolean\n        commits:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              tree_id:\n                type: string\n              distinct:\n                type: boolean\n              message:\n                type: string\n              timestamp:\n                type: string\n              url:\n                type: string\n              author:\n                type: object\n                properties:\n                  username:\n                    type: string\n                  name:\n                    type: string\n                  email:\n                    type: string\n              committer:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  email:\n                    type: string\n                  username:\n                    type: string\n              added:\n                type: array\n                items:\n                  type: string\n              removed:\n                type: array\n                items:\n                  type: string\n              modified:\n                type: array\n                items:\n                  type: string\n        head_commit:\n          type: object\n          properties:\n            id:\n              type: string\n            tree_id:\n              type: string\n            distinct:\n              type: boolean\n            message:\n              type: string\n            timestamp:\n              type: string\n            url:\n              type: string\n            author:\n              type: object\n              properties:\n                username:\n                  type: string\n                name:\n                  type: string\n                email:\n                  type: string\n            committer:\n              type: object\n              properties:\n                name:\n                  type: string\n                email:\n                  type: string\n                username:\n                  type: string\n            added:\n              type: array\n              items:\n                type: string\n            removed:\n              type: array\n              items:\n                type: string\n            modified:\n              type: array\n              items:\n                type: string\n        repository:\n          type: object\n          properties:\n            id:\n              type: integer\n            node_id:\n              type: string\n            name:\n              type: string\n            full_name:\n              type: string\n            private:\n              type: boolean\n            owner:\n              type: object\n              properties:\n                name:\n                  type: string\n                email:\n                  type: string\n                login:\n                  type: string\n                id:\n                  type: integer\n                node_id:\n                  type: string\n                avatar_url:\n                  type: string\n                gravatar_id:\n                  type: string\n                url:\n                  type: string\n                html_url:\n                  type: string\n                followers_url:\n                  type: string\n                following_url:\n                  type: string\n                gists_url:\n                  type: string\n                starred_url:\n                  type: string\n                subscriptions_url:\n                  type: string\n                organizations_url:\n                  type: string\n                repos_url:\n                  type: string\n                events_url:\n                  type: string\n                received_events_url:\n                  type: string\n                type:\n                  type: string\n                site_admin:\n                  type: boolean\n            html_url:\n              type: string\n            description:\n              type: string\n            fork:\n              type: boolean\n            url:\n              type: string\n            forks_url:\n              type: string\n            keys_url:\n              type: string\n            collaborators_url:\n              type: string\n            teams_url:\n              type: string\n            hooks_url:\n              type: string\n            issue_events_url:\n              type: string\n            events_url:\n              type: string\n            assignees_url:\n              type: string\n            branches_url:\n              type: string\n            tags_url:\n              type: string\n            blobs_url:\n              type: string\n            git_tags_url:\n              type: string\n            git_refs_url:\n              type: string\n            trees_url:\n              type: string\n            statuses_url:\n              type: string\n            languages_url:\n              type: string\n            stargazers_url:\n              type: string\n            contributors_url:\n              type: string\n            subscribers_url:\n              type: string\n            subscription_url:\n              type: string\n            commits_url:\n              type: string\n            git_commits_url:\n              type: string\n            comments_url:\n              type: string\n            issue_comment_url:\n              type: string\n            contents_url:\n              type: string\n            compare_url:\n              type: string\n            merges_url:\n              type: string\n            archive_url:\n              type: string\n            downloads_url:\n              type: string\n            issues_url:\n              type: string\n            pulls_url:\n              type: string\n            milestones_url:\n              type: string\n            notifications_url:\n              type: string\n            labels_url:\n              type: string\n            releases_url:\n              type: string\n            deployments_url:\n              type: string\n            created_at:\n              type: integer\n            updated_at:\n              type: string\n            pushed_at:\n              type: integer\n            git_url:\n              type: string\n            ssh_url:\n              type: string\n            clone_url:\n              type: string\n            svn_url:\n              type: string\n            homepage:\n              type: string\n            size:\n              type: integer\n            stargazers_count:\n              type: integer\n            watchers_count:\n              type: integer\n            language:\n              type: string\n            has_issues:\n              type: boolean\n            has_projects:\n              type: boolean\n            has_downloads:\n              type: boolean\n            has_wiki:\n              type: boolean\n            has_pages:\n              type: boolean\n            forks_count:\n              type: integer\n            mirror_url:\n              type: string\n            archived:\n              type: boolean\n            disabled:\n              type: boolean\n            open_issues_count:\n              type: integer\n            license:\n              type: string\n            forks:\n              type: integer\n            open_issues:\n              type: integer\n            watchers:\n              type: integer\n            default_branch:\n              type: string\n            stargazers:\n              type: integer\n            master_branch:\n              type: string\n",
			"canonicalURL": "/github.com/wso2/identity-api-server@1c81f70117e6130228ac537f8526ad3655061b43/-/blob/components/org.wso2.carbon.identity.api.server.fetch.remote/org.wso2.carbon.identity.api.server.fetch.remote.v1/src/main/resources/fetch-remote.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-server/blob/1c81f70117e6130228ac537f8526ad3655061b43/components/org.wso2.carbon.identity.api.server.fetch.remote/org.wso2.carbon.identity.api.server.fetch.remote.v1/src/main/resources/fetch-remote.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/remote-fetch/{id}\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}