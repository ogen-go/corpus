{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "openlinksw.com-osdb-1.0.0-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/openlinksw.com-osdb-1.0.0-openapi.yaml",
			"byteSize": 35551,
			"content": "openapi: 3.0.0\nservers:\n  - description: OSDB demo server\n    url: https://osdb.openlinksw.com/osdb\ninfo:\n  contact:\n    email: osdb@openlinksw.com\n    x-twitter: OpenLink\n  description: An OpenAPI description of the OpenLink Smart Data Bot REST API v1\n  license:\n    name: CC-BY-SA\n    url: https://creativecommons.org/licenses/by-sa/3.0/legalcode\n  title: OSDB REST API v1\n  version: 1.0.0\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://twitter.com/OpenLink/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://osdb.openlinksw.com/osdb/osdb_rest_api.openapi.json\n      version: \"3.0\"\n  x-providerName: openlinksw.com\n  x-serviceName: osdb\npaths:\n  \"/api/v1/actions/{serviceId}\":\n    get:\n      description: Returns an array of action descriptions for the actions supported by the\n        given service\n      operationId: listActions\n      parameters:\n        - description: Service ID of the service for which actions are to be listed\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/actions/:service_id\n                method: list_actions\n                response:\n                  - action_id: read\n                    description: List a container's details and contents\n                    entry_point:\n                      content_types:\n                        - application/ld+json\n                        - text/turtle\n                      description: Retrieve a description of an LDP resource or container\n                      encoding_types: null\n                      http_method: GET\n                      name: LDP Read - Retrieve a resource description\n                      parameters:\n                        - description: The URL of an LDPR or LDPC. LDPCs must be terminated\n                            by /\n                          display_name: Resource URL\n                          parameter_name: ldpResourceUri\n                          permitted_values: null\n                          required: 1\n                          type: uri\n                      url: null\n                      url_template: (ldpResourceUri)\n                  - action_id: update\n                    description: Update an LDP RDF resource\n                    entry_point:\n                      content_types:\n                        - text/html\n                      description: Update an RDF resource (LDP-RS) including containers\n                        (LDPCs)\n                      encoding_types:\n                        - text/turtle\n                      http_method: PUT\n                      name: LDP-RS Update - Update an RDF resource\n                      parameters:\n                        - description: The URL of an LDPR or LDPC. LDPCs must be terminated\n                            by /\n                          display_name: Resource URL\n                          parameter_name: ldpResourceUri\n                          permitted_values: null\n                          required: 1\n                          type: uri\n                      url: null\n                      url_template: (ldpResourceUri)\n                  - action_id: delete\n                    description: Delete an LDP resource\n                    entry_point:\n                      content_types: \"\"\n                      description: Deletes an LDP resource or container\n                      encoding_types: null\n                      http_method: DELETE\n                      name: LDP Delete - Delete an LDP resource\n                      parameters:\n                        - description: The URL of an LDPR or LDPC. LDPCs must be terminated\n                            by /\n                          display_name: Resource URL\n                          parameter_name: ldpResourceUri\n                          permitted_values: null\n                          required: 1\n                          type: uri\n                      url: null\n                      url_template: (ldpResourceUri)\n                  - action_id: create\n                    description: Create an LDP RDF resource\n                    entry_point:\n                      content_types:\n                        - text/html\n                      description: Create an RDF resource (LDP-RS) including containers\n                        (LDPCs)\n                      encoding_types:\n                        - text/turtle\n                      http_method: POST\n                      name: LDP-RS Create - Create an RDF resource\n                      parameters:\n                        - description: The suggested name (slug) for the new resource\n                          display_name: Suggested name\n                          parameter_name: Slug\n                          permitted_values: null\n                          required: 1\n                          type: header\n                        - description: The URL of an LDPR or LDPC. LDPCs must be terminated\n                            by /\n                          display_name: Resource URL\n                          parameter_name: ldpResourceUri\n                          permitted_values: null\n                          required: 1\n                          type: uri\n                      url: null\n                      url_template: (ldpResourceUri)\n                status: success\n              schema:\n                $ref: \"#/components/schemas/ListActionsResponse\"\n          description: An array of action descriptions for the actions supported by the\n            given service.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: List actions\n      tags:\n        - OSDB\n  \"/api/v1/actions/{serviceId}/{actionId}\":\n    get:\n      description: Returns a description of a given service action.\n      operationId: describeAction\n      parameters:\n        - description: Service ID of the service supporting the action.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: Action ID of the action to describe.\n          in: path\n          name: actionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/actions/:service_id/:action_id\n                method: describe_action\n                response:\n                  action_id: products\n                  description: Returns information about the Uber products offered at a\n                    given location\n                  entry_point:\n                    content_types:\n                      - application/json\n                      - text/turtle\n                      - application/rdf+xml\n                      - application/ld+json\n                    description: \u003e-\n                      The Products endpoint returns information about the Uber\n                      products offered at a given location. \n                          The response includes the display name and other details about each product.\n                          \n                          This endpoint does not reflect real-time availability of the products. Please use the Time \n                          Estimates endpoint to determine real-time availability and ETAs of products.\n\n                          In some markets, the list of products returned from this endpoint may vary by the time of \n                          day due to time restrictions on when that product may be utilized.\n                    encoding_types: null\n                    http_method: GET\n                    name: Products â€” Uber products at a given location\n                    parameters:\n                      - description: Longitude component of location\n                        display_name: Longitude\n                        parameter_name: longitude\n                        permitted_values: null\n                        required: 1\n                        type: query\n                      - description: Latitude component of location\n                        display_name: Latitude\n                        parameter_name: latitude\n                        permitted_values: null\n                        required: 1\n                        type: query\n                    url: https://sandbox-api.uber.com/v1/products\n                    url_template: https://sandbox-api.uber.com/v1/products(?latitude,longitude)\n                status: success\n              schema:\n                $ref: \"#/components/schemas/DescribeActionResponse\"\n          description: A single action description\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: Describe action\n      tags:\n        - OSDB\n  \"/api/v1/actions/{serviceId}/{actionId}/exec\":\n    post:\n      description: \u003e-\n        Executes a registered service action and returns any output from the\n        action.\n\n        The data returned in the POST response body may be: \n\n        * the raw action output, \n\n        * a URL encapsulating the action request which executes the action when dereferenced  (only for actions using GET), \n\n        * RDF generated from the action output,\n\n        * a URL to an RDF viewer's display of the generated RDF.\n\n\n        Any parameters required by the action are supplied as a JSON object in the POST body. The parameter types supported are: \"query\", \"header\", \"uri\", \"path\" and \"body\".  The parameter type determines where a supplied parameter value is inserted into the HTTP request constructed by OSDB to invoke the target service action. In addition to native parameters required by the service action, 'Execute action' accepts some OSDB-specific parameters.\u003cbr/\u003e\u003cbr/\u003e\n\n\n        **Examples**\n\n        * ```curl -ik -X POST -d '{ \"latitude\":\"37.7759792\", \"longitude\":\"-122.41823\" }' -H 'Content-Type: application/json' https://osdb.openlinksw.com/osdb/api/v1/actions/uber/products/exec```  \n\n        * ```curl -ikL -X POST -d '{ \"latitude\":\"37.7759792\", \"longitude\":\"-122.41823\", \"osdb:output_type\":\"generate_rdf\", \"osdb:response_format\":\"application/rdf+xml\" }' -H 'Content-Type: application/json' https://osdb.openlinksw.com/osdb/api/v1/actions/uber/products/exec``` \n\n        * ```curl -ikL -X POST -d '{ \"latitude\":\"37.7759792\", \"longitude\":\"-122.41823\", \"osdb:output_type\":\"display_rdf\" }' -H 'Content-Type: application/json' https://osdb.openlinksw.com/osdb/api/v1/actions/uber/products/exec``` \n\n        * ```curl -ik -X POST -d '{ \"q\":\"skiing\", \"osdb:response_format\": \"application/rdf+xml\" }' -H 'Content-Type: application/json' https://osdb.openlinksw.com/osdb/api/v1/actions/facet/search/exec``` \n\n        * ```curl -ik -X POST -d '{ \"q\":\"skiing\", \"osdb:output_type\": \"url_only\" }' -H 'Content-Type: application/json' https://osdb.openlinksw.com/osdb/api/v1/actions/facet/search/exec``` \n\n        * ```curl -ik -X POST -d '{ \"Content-Location\": \"http://demo.openlinksw.co.uk/pubs\", \"osdb:body_data_src_url\": \"http://ods-qa.openlinksw.com/DAV/home/osdb/pubs.csv\", \"extractor\": \"csv\", \"osdb:response_format\": \"application/rdf+xml\", \"osdb:body_data_encoding\": \"text/csv\" }' -H 'Content-Type: application/json' https://osdb.openlinksw.com/osdb/api/v1/actions/csv_transformer/transform/exec```\n      operationId: executeAction\n      parameters:\n        - description: Service ID of the service supporting the action.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: Action ID of the action to execute.\n          in: path\n          name: actionId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              example1_uber_products:\n                value:\n                  latitude: \"37.7759792\"\n                  longitude: \"-122.41823\"\n            schema:\n              $ref: \"#/components/schemas/ExecBody\"\n        description: Any parameters required by the action are supplied as a JSON object in\n          the request body. The properties of this object depend on the service\n          action being invoked.\n      responses:\n        2XX:\n          content:\n            \"*/*\":\n              example:\n                description: The response from an action varies depending on the target\n                  service invoked by the action.\n          description: Response from an OSDB action invocation.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: Execute action\n      tags:\n        - OSDB\n  \"/api/v1/actions/{serviceId}/{actionId}/help\":\n    get:\n      description: Returns the help text for a given service action\n      operationId: actionHelp\n      parameters:\n        - description: Service ID of the service supporting the action.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n        - description: Action ID of the action for which help text is being requested.\n          in: path\n          name: actionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/actions/:service_id/:action_id/help\n                method: action_help\n                response:\n                  action_id: search\n                  help_text: \u003e\n                    \n                    Action options:\n\n\n                    -s, --same_as [same_as]\n                    \tEnables owl:sameAs inferencing for facet search\n                    \tRequired: no\n                    \tPermitted values: yes\n                    -v, --view_type [view_type]\n                    \tSets the default view orientation\n                    \tRequired: no\n                    \tPermitted values: entity-types, attribute-names\n                    -l, --limit [limit]\n                    \tLimits the number of result set entities returned\n                    \tRequired: no\n                    -o, --offset [offset]\n                    \tSets the result set page size for scrolling\n                    \tRequired: no\n                    -q, --q \u003cq\u003e\n                    \tA word or phrase to be used for the Facet free text search. Multiple words should be delimited by '+'\n                    \tRequired: yes\n                    -u, --url_only [url_only]\n                    \tReturn only the action URL, not the action results\n                    \tRequired: no\n                    -r, --response_format [response_format]\n                    \tSets the response media type through an Accept header.\n                    \tRequired: no\n                    \tPermitted values: application/json, application/rdf+xml, text/html, text/turtle\n                    -t, --quality_values [quality_values]\n                    \tQuality value string. e.g. application/json;q=1.0,text/turtle;q=0.8,*/*;q=0.5. \n                    \t--response_format takes precedence.\n                    \tRequired: no\n                  service_id: facet\n                status: success\n              schema:\n                $ref: \"#/components/schemas/ActionHelpResponse\"\n          description: Action help text\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: Action help\n      tags:\n        - OSDB\n  /api/v1/login:\n    get:\n      description: Logs a user into the OSDB server, authenticating them by their WebID and\n        returning an OSDB session ID in cookie osdb.sid\n      operationId: login\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/login\n                method: login\n                response:\n                  user: http://ods-qa.openlinksw.com:8896/DAV/home/nobody/cmsb_ex_webid_170223.ttl#identity\n                status: success\n              schema:\n                $ref: \"#/components/schemas/LoginResponse\"\n          description: Confirmation of a successful OSDB login.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: Login\n      tags:\n        - OSDB\n  /api/v1/logout:\n    get:\n      description: Logs a user out of the OSDB server, ending their OSDB session\n      operationId: logout\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/logout\n                method: logout\n                response:\n                  user: http://ods-qa.openlinksw.com:8896/DAV/home/nobody/cmsb_ex_webid_170223.ttl#identity\n                status: success\n              schema:\n                $ref: \"#/components/schemas/LogoutResponse\"\n          description: Confirmation of a successful OSDB logout.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: Logout\n      tags:\n        - OSDB\n  /api/v1/services:\n    get:\n      description: Returns descriptions of all services registered with the OSDB server.\n      operationId: listServices\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/services\n                method: list_services\n                response:\n                  - description: Host-independent Linked Data Platform service\n                    import_source_uri: http://ods-qa.openlinksw.com:8896/DAV/home/nobody/ldp_svc.host_independent.ttl\n                    service_id: ldp_generic\n                    service_name: LDP generic\n                  - description: null\n                    import_source_uri: http://ods-qa.openlinksw.com:8896/DAV/home/nobody/fct_svc.ki.170103.cmsb.ttl\n                    service_id: anonymous_facet\n                    service_name: anonymous_facet\n                status: success\n              schema:\n                $ref: \"#/components/schemas/ListServicesResponse\"\n          description: An array of service descriptions for all services registered with\n            the OSDB server\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: List services\n      tags:\n        - OSDB\n    post:\n      description: Loads a service description into the OSDB Service Registry\n      operationId: loadService\n      requestBody:\n        content:\n          application/json:\n            example:\n              service_description_url: http://ods-qa.openlinksw.com:8896/DAV/home/nobody/csv_extractor_svc.ods-qa.170109.ttl\n              service_moniker: csv_extractor\n            schema:\n              properties:\n                service_description_url:\n                  description: The URL of the resource containing the service description\n                    to load.\n                  type: string\n                service_moniker:\n                  description: \"Service ID to be used to uniquely identify the service.\n                    (Optional: Required for anonymous services or to override\n                    the service name in the service description.)\"\n                  type: string\n              required:\n                - service_description_url\n              type: object\n        description: Service to register with OSDB\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/services\n                method: load_service\n                response: Loaded service description\n                status: success\n              schema:\n                properties:\n                  api:\n                    description: The path of the REST API method\n                    type: string\n                  method:\n                    description: The name of the REST API method\n                    type: string\n                  response:\n                    description: Confirmation message\n                    type: string\n                  status:\n                    default: success\n                    enum:\n                      - success\n                    type: string\n                required:\n                  - status\n                  - method\n                  - api\n                  - response\n                type: object\n          description: loadService response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: Load service\n      tags:\n        - OSDB\n  \"/api/v1/services/{serviceId}\":\n    delete:\n      description: Removes a service description from the OSDB Service Registry\n      operationId: unloadService\n      parameters:\n        - description: Service ID of the service to be unloaded\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/services\n                method: unload_service\n                response: Unloaded service csv_transformer from the Service Registry\n                status: success\n              schema:\n                properties:\n                  api:\n                    description: The path of the REST API method\n                    type: string\n                  method:\n                    description: The name of the REST API method\n                    type: string\n                  response:\n                    description: Confirmation message\n                    type: string\n                  status:\n                    default: success\n                    enum:\n                      - success\n                    type: string\n                required:\n                  - status\n                  - method\n                  - api\n                  - response\n                type: object\n          description: unloadService response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: Unload service\n      tags:\n        - OSDB\n    get:\n      description: Returns a description of a given service\n      operationId: describeService\n      parameters:\n        - description: Service ID of the service to describe.\n          in: path\n          name: serviceId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                api: /osdb/api/v1/services/:service_id\n                method: describe_service\n                response:\n                  description: Host-independent Linked Data Platform service\n                  import_source_uri: http://ods-qa.openlinksw.com:8896/DAV/home/nobody/ldp_svc.host_independent.ttl\n                  service_id: ldp_generic\n                  service_name: LDP generic\n                status: success\n              schema:\n                $ref: \"#/components/schemas/DescribeServiceResponse\"\n          description: A single service description\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorModel\"\n          description: Error response\n      summary: Describe service\n      tags:\n        - OSDB\ncomponents:\n  schemas:\n    ActionDescription:\n      properties:\n        action_id:\n          description: A unique one word identifier for the action.\n          type: string\n        description:\n          description: A short description of the action.\n          type: string\n        entry_point:\n          $ref: \"#/components/schemas/EntryPoint\"\n      required:\n        - action_id\n        - entry_point\n      type: object\n    ActionHelp:\n      properties:\n        action_id:\n          description: A unique one word identifier for the action.\n          type: string\n        help_text:\n          description: The help text for the action.\n          type: string\n        service_id:\n          description: A unique one word identifier for the service.\n          type: string\n      required:\n        - service_id\n        - action_id\n        - help_text\n      type: object\n    ActionHelpResponse:\n      properties:\n        api:\n          description: The path of the REST API method\n          type: string\n        method:\n          description: The name of the REST API method\n          type: string\n        response:\n          $ref: \"#/components/schemas/ActionHelp\"\n        status:\n          default: success\n          enum:\n            - success\n          type: string\n      required:\n        - status\n        - method\n        - api\n        - response\n      type: object\n    DescribeActionResponse:\n      properties:\n        api:\n          description: The path of the REST API method\n          type: string\n        method:\n          description: The name of the REST API method\n          type: string\n        response:\n          $ref: \"#/components/schemas/ActionDescription\"\n        status:\n          default: success\n          enum:\n            - success\n          type: string\n      required:\n        - status\n        - method\n        - api\n        - response\n      type: object\n    DescribeServiceResponse:\n      properties:\n        api:\n          description: The path of the REST API method\n          type: string\n        method:\n          description: The name of the REST API method\n          type: string\n        response:\n          $ref: \"#/components/schemas/ServiceDescription\"\n        status:\n          default: success\n          enum:\n            - success\n          type: string\n      required:\n        - status\n        - method\n        - api\n        - response\n      type: object\n    EntryPoint:\n      properties:\n        content_types:\n          description: The supported MIME type(s) for an EntryPoint response.\n          items:\n            type: string\n          type: array\n        description:\n          description: A short description of the action. Optional - may be null.\n          type: string\n        encoding_types:\n          description: The supported MIME type(s) for an EntryPoint request. Null if not\n            applicable.\n          items:\n            type: string\n          type: array\n        http_method:\n          description: The HTTP method used by the EntryPoint.\n          enum:\n            - GET\n            - PUT\n            - POST\n            - DELETE\n          type: string\n        name:\n          description: A word or short phrase to be used as the action's display name.\n            Optional - may be null.\n          type: string\n        parameters:\n          description: Descriptions of the EntryPoint parameters. Null if not applicable.\n          items:\n            $ref: \"#/components/schemas/EntryPointParameter\"\n          type: array\n        url:\n          description: The EntryPoint URL. It will be non-null if url_template is null.\n          format: uri\n          type: string\n        url_template:\n          description: The EntryPoint's URL template. Only required if the entry point URL\n            is parameterized. Property 'url' will be null if url_template is\n            non-null.\n          format: uri-template\n          type: string\n      required:\n        - http_method\n        - url\n        - url_template\n        - name\n        - description\n        - encoding_types\n        - content_types\n        - parameters\n      type: object\n    EntryPointParameter:\n      properties:\n        description:\n          description: A short description of the parameter for use in the OSDB Action\n            Console. Optional - may be null.\n          type: string\n        display_name:\n          description: The parameter's display name in the OSDB Action Console. Optional -\n            may be null.\n          type: string\n        parameter_name:\n          description: The parameter name as present in the HTTP request. e.g. the key name\n            in a query string key-value pair.\n          type: string\n        permitted_values:\n          description: If the parameter accepts only a limited set of values, the allowed\n            set of values. Null if not applicable.\n          items:\n            type: string\n          type: array\n        required:\n          description: A flag indicating if the parameter is optional.\n          format: int32\n          maximum: 1\n          minimum: 0\n          type: integer\n        type:\n          description: The type of the parameter, indicating its location in the HTTP\n            request.\n          enum:\n            - query\n            - header\n            - uri\n            - path\n            - body\n          type: string\n      required:\n        - parameter_name\n        - display_name\n        - description\n        - type\n        - required\n        - permitted_values\n      type: object\n    ErrorModel:\n      properties:\n        api:\n          description: The path of the REST API method reporting the error\n          type: string\n        method:\n          description: The name of the REST API method reporting the error\n          type: string\n        response:\n          description: A message describing the error\n          type: string\n        status:\n          default: error\n          enum:\n            - error\n          type: string\n      type: object\n    ExecBody:\n      properties:\n        action_specific_property1:\n          description: An example action specific property. There may be 0, 1 or more\n            action specific properties, each holding an action specific\n            parameter value.\n          type: string\n        action_specific_property2:\n          description: An example action specific property. There may be 0, 1 or more\n            action specific properties, each holding an action specific\n            parameter value.\n          type: string\n        osdb:body_data_encoding:\n          description: The media type of the data associated with osdb:body_data_raw or\n            osdb:body_data_src_url. In the case of osdb:body_data_raw, this is\n            the media type before base64 encoding.\n          type: string\n        osdb:body_data_raw:\n          description: Input data for the action (e.g. CSV data). The data must be base64\n            encoded by the client. Alternatively, clients can use\n            osdb:body_data_src_url to supply the input data via a web-accessible\n            document.\n          format: byte\n          type: string\n        osdb:body_data_src_url:\n          description: URL of a resource containing input data for the action (e.g. CSV\n            data). Clients can instead use osdb:body_data_raw to supply the\n            input data directly.\n          format: uri\n          type: string\n        osdb:output_type:\n          description: An OSDB-specific parameter controlling the action output type. If\n            omitted, the native action output is returned.\n          enum:\n            - url_only\n            - generate_rdf\n            - display_rdf\n          type: string\n        osdb:response_format:\n          description: Preferred response MIME type. This must be an output MIME type\n            supported natively by the action or, if 'osdb:output_type' is set to\n            'generate_rdf', a Virtuoso Sponger output format. i.e.\n            'application/ld+json', 'text/turtle' or 'application/rdf+xml'.\n          type: string\n      type: object\n    ListActionsResponse:\n      properties:\n        api:\n          description: The path of the REST API method\n          type: string\n        method:\n          description: The name of the REST API method\n          type: string\n        response:\n          items:\n            $ref: \"#/components/schemas/ActionDescription\"\n          type: array\n        status:\n          default: success\n          enum:\n            - success\n          type: string\n      required:\n        - status\n        - method\n        - api\n        - response\n      type: object\n    ListServicesResponse:\n      properties:\n        api:\n          description: The path of the REST API method\n          type: string\n        method:\n          description: The name of the REST API method\n          type: string\n        response:\n          items:\n            $ref: \"#/components/schemas/ServiceDescription\"\n          type: array\n        status:\n          default: success\n          enum:\n            - success\n          type: string\n      required:\n        - status\n        - method\n        - api\n        - response\n      type: object\n    LoginResponse:\n      properties:\n        api:\n          description: The path of the REST API method\n          type: string\n        method:\n          description: The name of the REST API method\n          type: string\n        response:\n          properties:\n            user:\n              description: The WebID of the user who has logged in.\n              type: string\n          required:\n            - user\n          type: object\n        status:\n          default: success\n          enum:\n            - success\n          type: string\n      required:\n        - status\n        - method\n        - api\n        - response\n      type: object\n    LogoutResponse:\n      properties:\n        api:\n          description: The path of the REST API method\n          type: string\n        method:\n          description: The name of the REST API method\n          type: string\n        response:\n          properties:\n            user:\n              description: The WebID of the user who has logged out.\n              type: string\n          required:\n            - user\n          type: object\n        status:\n          default: success\n          enum:\n            - success\n          type: string\n      required:\n        - status\n        - method\n        - api\n        - response\n      type: object\n    ServiceDescription:\n      properties:\n        description:\n          description: A short description of the service.\n          type: string\n        import_source_uri:\n          description: The URI of the source service description document used to load the\n            service into OSDB.\n          format: uri\n          type: string\n        service_id:\n          description: A unique one word identifier for the service.\n          type: string\n        service_name:\n          description: A word or phrase naming the service.\n          type: string\n      required:\n        - service_id\n        - service_name\n        - import_source_uri\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/openlinksw.com-osdb-1.0.0-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/openlinksw.com-osdb-1.0.0-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/actions/{serviceId}/{actionId}/exec\": post: responses: HTTP code pattern not implemented",
	"NotImplemented": [
		"HTTP code pattern"
	]
}