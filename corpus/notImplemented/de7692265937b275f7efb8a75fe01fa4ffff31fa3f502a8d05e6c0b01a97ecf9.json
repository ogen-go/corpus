{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/derf/travelynx"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "public/static/api.yml",
			"byteSize": 7183,
			"content": "# Copyright (C) 2020 Daniel Friesel\n#\n# SPDX-License-Identifier: CC0-1.0\nopenapi: 3.0.3\ninfo:\n  title: travelynx\n  version: 0.1.0\n  description: Travelynx API\nservers:\n  - url: 'https://travelynx.de/api/v1'\n  - url: 'https://travellynx.de/api/v1'\n  - url: 'https://travelynx.finalrewind.org/api/v1'\ntags:\n  - name: Status\n    description: 'Query check-in and journey status'\n  - name: Travel\n    description: 'Check into and out of trains'\n  - name: Import\n    description: 'Import a journey'\npaths:\n  '/status/{token}':\n    get:\n      tags:\n        - Status\n      summary: Retrieves a user's status\n      parameters:\n        - in: path\n          name: token\n          schema:\n            $ref: '#/components/schemas/token'\n          required: true\n          description: Status Token\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/status'\n  '/travel':\n    post:\n      tags:\n        - Travel\n      summary: Check into or out of a train\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n              - $ref: '#/components/schemas/checkinRequest'\n              - $ref: '#/components/schemas/checkoutRequest'\n              - $ref: '#/components/schemas/undoRequest'\n            examples:\n              checkin:\n                value: {\"action\": \"checkin\", \"token\": \"FIXME\"}\n              checkout:\n                value: {\"action\": \"checkout\", \"token\": \"FIXME\"}\n              undo:\n                value: {\"action\": \"undo\", \"token\": \"FIXME\"}\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/travelResponse'\ncomponents:\n  schemas:\n    token:\n      type: string\n      description: Status Token as configured on Travelynx User Panel\n    status:\n      type: object\n      properties:\n        deprecated:\n          type: boolean\n          example: false\n          description: if true, this API version is no longer supported and will be removed in the future\n        checkedIn:\n          type: boolean\n          example: true\n          description: Is the user currently checked into a train?\n        fromStation:\n          $ref: '#/components/schemas/departureStatus'\n        toStation:\n          $ref: '#/components/schemas/arrivalStatus'\n        intermediateStops:\n          type: array\n          items:\n            $ref: '#/components/schemas/intermediateStop'\n        train:\n          $ref: '#/components/schemas/train'\n        actionTime:\n          type: number\n          example: 1556083434\n          description: checkin/checkout epoch\n    travelRequest:\n      type: object\n      discriminator:\n        propertyName: action\n        mapping:\n          checkin: checkinRequest\n          checkout: checkoutRequest\n          undo: undoRequest\n      properties:\n        token:\n          type: string\n        action:\n          type: string\n          enum: ['checkin', 'checkout', 'undo']\n      required:\n        - token\n        - action\n    checkinRequest:\n      allOf:\n      - $ref: '#/components/schemas/travelRequest'\n      - type: object\n        properties:\n          train:\n            type: object\n            properties:\n              type:\n                type: string\n                example: \"ICE\"\n              no:\n                type: string\n                example: \"209\"\n          fromStation:\n            $ref: '#/components/schemas/station'\n          toStation:\n            $ref: '#/components/schemas/station'\n          comment:\n            type: string\n        required: ['train', 'fromStation']\n    checkoutRequest:\n      allOf:\n        - $ref: '#/components/schemas/travelRequest'\n        - type: object\n          properties:\n            force:\n              type: boolean\n              description: \"If true: perform checkout now. May lead to log entries without arrival time\"\n              default: false\n            toStation:\n              $ref: '#/components/schemas/station'\n            comment:\n              type: string\n          required: ['toStation']\n    undoRequest:\n      allOf:\n      - $ref: '#/components/schemas/travelRequest'\n      - type: object\n    travelResponse:\n      type: object\n      properties:\n        deprecated:\n          type: boolean\n          example: false\n          description: if true, this API version is no longer supported and will be removed in the future\n        success:\n          type: boolean\n          example: true\n        status:\n          $ref: '#/components/schemas/status'\n    departureStatus:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"Essen Hbf\"\n        ds100:\n          type: string\n          example: \"EE\"\n        uic:\n          type: number\n          example: 8000098\n        latitude:\n          type: number\n          example: 51.451355\n        longitude:\n          type: number\n          example: 7.014793\n        scheduledTime:\n          type: number\n          example: 1556083680\n        realtime:\n          type: number\n          example: 1556083680\n    arrivalStatus:\n      type: object\n      description: If journey destination is not yet known, all fields are null\n      nullable: true\n      properties:\n        name:\n          type: string\n          example: \"Essen Stadtwald\"\n        ds100:\n          type: string\n          example: \"EESA\"\n        uic:\n          type: number\n          example: 8001896\n        latitude:\n          type: number\n          example: 51.422853\n        longitude:\n          type: number\n          example: 7.023296\n        scheduledTime:\n          type: number\n          example: 1556083980\n          nullable: true\n          description: If arrival time is not yet known, this field is null\n        realtime:\n          type: number\n          example: 1556083980\n          nullable: true\n          description: If arrival time is not yet known, this field is null\n    intermediateStop:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"Essen SÃ¼d\"\n        scheduledArrival:\n          type: number\n          example: 1556083800\n          nullable: true\n        realArrival:\n          type: number\n          example: 1556083800\n          nullable: true\n        scheduledDeparture:\n          type: number\n          example: 1556083860\n          nullable: true\n        realDeparture:\n          type: number\n          example: 1556083860\n          nullable: true\n    train:\n      type: object\n      properties:\n        type:\n          type: string\n          example: \"S\"\n        line:\n          type: string\n          example: \"6\"\n        no:\n          type: string\n          example: \"30634\"\n        id:\n          type: string\n          example: \"7512500863736016593\"\n          description: IRIS-specific train ID\n    station:\n      oneOf:\n      - type: string\n        description: Station Name\n        example: \"Essen Hbf\"\n      - type: string\n        description: DS100 Code\n        example: \"EE\"\n      - type: number\n        description: EVA number\n        example: 8000098\n",
			"canonicalURL": "/github.com/derf/travelynx@18c575f6fe6a2855b46bde6066d7045f2798c559/-/blob/public/static/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/derf/travelynx/blob/18c575f6fe6a2855b46bde6066d7045f2798c559/public/static/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/travel\": post: requestBody: contents: application/json: generate schema: oneOf: collect variants: oneOf[0]: allOf: field fromStation: oneOf: collect variants: Station: sum types with same names not implemented",
	"NotImplemented": [
		"sum types with same names"
	]
}