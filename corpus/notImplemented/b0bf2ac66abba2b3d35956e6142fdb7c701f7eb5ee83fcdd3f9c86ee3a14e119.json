{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/docs-is"
		},
		"file": {
			"name": "identity-governance.yaml",
			"size": 0,
			"path": "en/docs/apis/restapis/identity-governance.yaml",
			"byteSize": 12550,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e-\n    This is the RESTful API for identity governance configurations in WSO2\n    Identity Server\n  version: \"v1\"\n  title: WSO2 Identity Server - Governance connectors Admin API\n  contact:\n    name: WSO2 Identity Server\n    url: 'https://wso2.com/identity-and-access-management'\n    email: architecture@wso2.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Management\n    description: Secured Admin-only calls\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\npaths:\n  /identity-governance/:\n    get:\n      tags:\n        - Management\n      summary: Retrieve governance connector categories.\n      operationId: getCategories\n      description: |\n        Retrieve governance connector categories.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n          * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      parameters:\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/offsetQueryParam'\n        - $ref: '#/components/parameters/filterQueryParam'\n        - $ref: '#/components/parameters/sortQueryParam'\n      responses:\n        '200':\n          description: Governance connector categories.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CategoriesRes'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n        '501':\n          $ref: '#/components/responses/NotImplemented'\n  '/identity-governance/{category-id}':\n    get:\n      tags:\n        - Management\n      summary: Retrieve governance connectors of a category.\n      operationId: getConnectorCategory\n      description: |\n        Retrieve governance connectors of a category. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      parameters:\n        - $ref: '#/components/parameters/categoryIdPathParam'\n      responses:\n        '200':\n          description: Requested governance connector category.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoryRes'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/identity-governance/{category-id}/connectors':\n    get:\n      tags:\n        - Management\n      summary: Retrieve governance connectors of a category.\n      operationId: getConnectorsOfCategory\n      description: |\n        Retrieve governance connectors of a category.\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      parameters:\n        - $ref: '#/components/parameters/categoryIdPathParam'\n      responses:\n        '200':\n          description: Requested governance connector category.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConnectorRes'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/identity-governance/{category-id}/connectors/{connector-id}':\n    get:\n      tags:\n        - Management\n      summary: Retrieve governance connector.\n      operationId: getConnector\n      description: |\n        Retrieve governance connector.\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      parameters:\n        - $ref: '#/components/parameters/categoryIdPathParam'\n        - $ref: '#/components/parameters/connectorIdPathParam'\n      responses:\n        '200':\n          description: Requested governance connector.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorRes'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      tags:\n        - Management\n      summary: Patch governance connector.\n      operationId: patchConnector\n      description: |\n        Patch governance connector.\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      parameters:\n        - $ref: '#/components/parameters/categoryIdPathParam'\n        - $ref: '#/components/parameters/connectorIdPathParam'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK'\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorsPatchReq'\n        description: governance-connector to update\nservers:\n  - url: https://localhost:9443/t/{tenant-domain}/api/server/v1/\ncomponents:\n  parameters:\n    limitQueryParam:\n      in: query\n      name: limit\n      required: false\n      description: Maximum number of records to return.\n      schema:\n        type: integer\n        format: int32\n    offsetQueryParam:\n      in: query\n      name: offset\n      required: false\n      description: Number of records to skip for pagination.\n      schema:\n        type: integer\n        format: int32\n    filterQueryParam:\n      in: query\n      name: filter\n      required: false\n      description: Condition to filter the retrieval of records.\n      schema:\n        type: string\n    sortQueryParam:\n      in: query\n      name: sort\n      required: false\n      description: Define the order in which the retrieved records should be sorted.\n      schema:\n        type: string\n    categoryIdPathParam:\n      in: path\n      name: category-id\n      required: true\n      description: Id of the connector category.\n      schema:\n        type: string\n    connectorIdPathParam:\n      in: path\n      name: connector-id\n      required: true\n      description: Id of the connector.\n      schema:\n        type: string\n  responses:\n    Unauthorized:\n      description: Unauthorized.\n    ServerError:\n      description: Internal Server Error.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotImplemented:\n      description: Not Implemented.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: Not Found.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    InvalidInput:\n      description: Bad Request.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    OK:\n      description: OK.\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth/authorize'\n          tokenUrl: 'https://localhost:9443/oauth/token'\n          scopes: {}\n  schemas:\n    CategoriesRes:\n      type: object\n      description: Governance connector category response.\n      properties:\n        id:\n          type: string\n          description: Connector category id.\n          example: QWNjb3VudCBNYW5hZ2VtZW50IFBvbGljaWVz\n        name:\n          type: string\n          description: Connector category name.\n          example: Account Management Policies\n        self:\n          type: string\n          description: Path to retrieve the full connector information.\n          example: /t/carbon.super/api/server/v1/identity-governance/QWNjb3VudCBNYW5hZ2VtZW50IFBvbGljaWVz\n        connectors:\n          type: array\n          description: Connectors of the category with minimal attributes.\n          items:\n            $ref: '#/components/schemas/CategoryConnectorsRes'\n    CategoryConnectorsRes:\n      type: object\n      description: Governance connector response with minimal attributes.\n      properties:\n        id:\n          type: string\n          description: Connector id.\n          example: c3VzcGVuc2lvbi5ub3RpZmljYXRpb24\n        self:\n          type: string\n          description: Path to retrieve the full connector information.\n          example: /t/carbon.super/api/server/v1/identity-governance/QWNjb3VudCBNYW5hZ2VtZW50IFBvbGljaWVz/connectors/c3VzcGVuc2lvbi5ub3RpZmljYXRpb24\n    CategoryRes:\n      type: object\n      description: Governance connector category response.\n      properties:\n        name:\n          type: string\n          description: Connector category name.\n          example: Account Management Policies\n        connectors:\n          type: array\n          description: Connectors of the category with minimal attributes.\n          items:\n            $ref: '#/components/schemas/ConnectorRes'\n    ConnectorRes:\n      type: object\n      description: Governance connector response.\n      properties:\n        id:\n          type: string\n          description: Connector id.\n          example: c3VzcGVuc2lvbi5ub3RpZmljYXRpb24\n        name:\n          type: string\n          description: Connector name.\n          example: suspension.notification\n        category:\n          type: string\n          description: Connector category.\n          example: Account Management Policies\n        friendlyName:\n          type: string\n          description: Connector friendly name.\n          example: Lock Idle Accounts\n        order:\n          type: integer\n          description: Connector order.\n          example: 0\n        subCategory:\n          type: string\n          description: Connector subcategory.\n          example: DEFAULT\n        properties:\n          type: array\n          description: Define any additional properties if required.\n          items:\n            $ref: '#/components/schemas/PropertyRes'\n    PropertyRes:\n      type: object\n      description: Governance connector property.\n      properties:\n        name:\n          type: string\n          description: Property name.\n          example: suspension.notification.enable\n        value:\n          type: string\n          description: Property value.\n          example: 'false'\n        displayName:\n          type: string\n          description: Property display name.\n          example: Enable\n        description:\n          type: string\n          description: Property description.\n          example: Enable account suspend notifications.\n    ConnectorsPatchReq:\n      type: object\n      description: Governance connector property patch request.\n      required:\n        - operation\n        - properties\n      properties:\n        operation:\n          type: string\n          description: Governance connector properties patch operation.\n          enum:\n            - UPDATE\n          example: UPDATE\n        properties:\n          type: array\n          description: Governance connector properties to patch.\n          items:\n            $ref: '#/components/schemas/PropertyReq'\n    PropertyReq:\n      type: object\n      description: Governance connector property to patch.\n      required:\n        - name\n        - value\n      properties:\n        name:\n          type: string\n          description: Property name.\n          example: suspension.notification.enable\n        value:\n          type: string\n          description: Property value.\n          example: 'false'\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: AAA-00000\n        message:\n          type: string\n          example: Some Error Message\n        description:\n          type: string\n          example: Some Error Description\n        traceId:\n          type: string\n          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047",
			"canonicalURL": "/github.com/wso2/docs-is@f2d50568ff23afffacf786beeec7725e7e41fd60/-/blob/en/docs/apis/restapis/identity-governance.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/docs-is/blob/f2d50568ff23afffacf786beeec7725e7e41fd60/en/docs/apis/restapis/identity-governance.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/identity-governance/\": get: responses: 500: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}