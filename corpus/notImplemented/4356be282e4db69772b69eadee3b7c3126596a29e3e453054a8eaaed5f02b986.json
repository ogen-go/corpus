{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/openapi-examples-validator"
		},
		"file": {
			"name": "schema-with-schema-combiner-invalid.yaml",
			"size": 0,
			"path": "test/data/v3/additional-properties/schema-with-schema-combiner-invalid.yaml",
			"byteSize": 2861,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: 'http://petstore.swagger.io/v1'\npaths:\n  '/pets/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successfull response\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/Bird'\n                  - $ref: '#/components/schemas/Cat'\n                  - $ref: '#/components/schemas/Dog'\n              examples:\n                'Dog example':\n                  value:\n                    name: 'Dog 1'\n                    bark: true\n                    breed: 'Dingo'\n                'Cat example':\n                  value:\n                    name: 'Cat 1'\n                    hunts: true\n                    age: 3\n                'Bird example':\n                  value:\n                    name: 'Birb'\n                    sizeWings: 'smol'\n        '404':\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                code: 1000\n                message: 'could not find pet'\n                extra_property: 'test' # not allowed and outside of JSON schema combiner, should be picked up\ncomponents:\n  schemas:\n    Error:\n      type: object\n      properties:\n        code:\n          type: number\n        message:\n          type: string\n    Pet:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n    Dog:\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          required:\n            - bark\n            - breed\n          properties:\n            bark:\n              type: boolean\n            breed:\n              type: string\n              enum: [ Dingo, Husky, Retriever, Shepherd ]\n    Cat:\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          required:\n            - hunts\n            - age\n          properties:\n            hunts:\n              type: boolean\n            age:\n              type: integer\n    Bird:\n      anyOf:\n        - type: object\n          required:\n            - name\n            - sizeWings\n          properties:\n            name:\n              type: string\n            sizeWings:\n              type: string\n        - type: object\n          required:\n            - name\n            - eggSize\n          properties:\n            name:\n              type: string\n            sizeEggs:\n              type: string\n",
			"canonicalURL": "/npm/openapi-examples-validator@55801f5eb3784f16ad0ad71a82b294795f01f78a/-/blob/test/data/v3/additional-properties/schema-with-schema-combiner-invalid.yaml",
			"externalURLs": []
		}
	},
	"Error": "notImplemented: path \"/pets/{petId}\": get: responses: 200: contents: application/json: generate schema: oneOf: collect variants: oneOf[0]: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}