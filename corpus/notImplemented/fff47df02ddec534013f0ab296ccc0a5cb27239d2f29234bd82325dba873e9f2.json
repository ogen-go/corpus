{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/rama-cli"
		},
		"file": {
			"name": "one.yaml",
			"size": 0,
			"path": "src/test/resources/OA3OldFiles/one.yaml",
			"byteSize": 4368,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: apiteam@swagger.io\n    url: http://swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://petstore.swagger.io/api\npaths:\n  /pets:\n    post:\n      description: Creates a new pet in the store.  Duplicates are allowed\n      operationId: addPet\n      requestBody:\n        description: Pet to add to the store\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/Cat'\n                - $ref: '#/components/schemas/Dog'\n      responses:\n        '200':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        '300':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/Cat'\n                - $ref: '#/components/schemas/Dog'\n                properties:\n                  testProp1:\n                    type: string\n                  testProp2:\n                    type: string\n                    \n        '301':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - $ref: '#/components/schemas/Cat'\n                - $ref: '#/components/schemas/Dog'\n        '302':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                anyOf:\n                - $ref: '#/components/schemas/Cat'\n                - $ref: '#/components/schemas/Dog'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pets/{id}:\n    get:\n      description: Returns a user based on a single ID, if the user does not have access to the pet\n      operationId: find pet by id\n      parameters:\n        - name: id\n          in: path\n          description: ID of pet to fetch\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n               oneOf:\n                - $ref: '#/components/schemas/Cat'\n                - $ref: '#/components/schemas/Dog'\ncomponents:\n  schemas:\n    Pet:\n      allOf:\n        - $ref: '#/components/schemas/NewPet'\n        - required:\n          - id\n          properties:\n            id:\n              type: integer\n              format: int64\n\n    NewPet:\n      required:\n        - name  \n      properties:\n        name:\n          type: string\n        tag:\n          type: string    \n\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n          \n    Dog:     # \"Dog\" is a value for the pet_type property (the discriminator value)\n      allOf: # Combines the main `Pet` schema with `Dog`-specific properties \n        - $ref: '#/components/schemas/Pet'\n      type: object\n          # all other properties specific to a `Dog`\n      properties:\n         bark:\n           type: boolean\n         breed:\n           type: string\n           enum: [Dingo, Husky, Retriever, Shepherd]\n         food:\n            type: string\n               \n    Cat:     # \"Cat\" is a value for the pet_type property (the discriminator value)\n      oneOf: # Combines the main `Pet` schema with `Cat`-specific properties \n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          # all other properties specific to a `Cat`\n          properties:\n            hunts:\n              type: boolean\n            age:\n              type: integer\n",
			"canonicalURL": "/github.com/restful-ma/rama-cli@f7af76ebeb88d323c3be7df22b3d984066a3a903/-/blob/src/test/resources/OA3OldFiles/one.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/rama-cli/blob/f7af76ebeb88d323c3be7df22b3d984066a3a903/src/test/resources/OA3OldFiles/one.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/pets\": post: requestBody: contents: application/json: generate schema: oneOf: oneOf AddPetReq: variant Cat: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}