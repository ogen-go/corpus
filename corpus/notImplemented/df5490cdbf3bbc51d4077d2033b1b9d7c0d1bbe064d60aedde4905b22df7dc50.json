{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/edgexfoundry/edgex-go"
		},
		"file": {
			"name": "support-notifications.yaml",
			"size": 0,
			"path": "openapi/v2/support-notifications.yaml",
			"byteSize": 89318,
			"content": "openapi: 3.0.0\ninfo:\n  title: Edgex Foundry - Support Notifications API\n  description: This is the definition of the API for the Support Notifications service in the EdgeX Foundry IOT microservice platform. Support Notifications provides functionality for sending notifications via email/REST from the EdgeX Foundry platform.\n  version: 2.3.0\n\nservers:\n  - url: http://localhost:59860/api/v2\n    description: URL for local development and testing\n\ncomponents:\n  schemas:\n    AddNotificationRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"A request to add a new notification.\"\n      type: object\n      properties:\n        notification:\n          $ref: '#/components/schemas/CreateNotification'\n      required:\n        - notification\n    AddSubscriptionRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"A request to add a new subscription.\"\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/CreateSubscription'\n      required:\n        - subscription\n    BaseRequest:\n      description: \"Defines basic properties which all use-case specific request DTO instances should support.\"\n      type: object\n      properties:\n        requestId:\n          description: \"Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor.\"\n          type: string\n          format: uuid\n          example: \"e6e8a2f4-eb14-4649-9e2b-175247911369\"\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n      required:\n        - apiVersion\n    BaseResponse:\n      description: \"Defines basic properties which all use-case specific response DTO instances should support\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n        requestId:\n          description: \"Uniquely identifies the request that resulted in this response.\"\n          type: string\n          format: uuid\n          example: \"e6e8a2f4-eb14-4649-9e2b-175247911369\"\n        statusCode:\n          description: \"A numeric code signifying the operational status of the response.\"\n          type: integer\n        message:\n          description: \"A field that can contain a free-form message, such as an error message.\"\n          type: string\n    BaseWithIdResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"Defines basic properties which all use-case specific response DTO instances should support\"\n      type: object\n      properties:\n        id:\n          description: \"The unique identifier for the instance.\"\n          type: string\n          format: uuid\n    BaseWithTotalCountResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"Defines basic properties which all use-case specific response DTO instances should support\"\n      type: object\n      properties:\n        totalCount:\n          description: \"The total count of all multi instances.\"\n          type: integer\n    RESTAddress:\n      description: \"The REST address shows the information indicating how to contact a specific endpoint by HTTP protocol.\"\n      type: object\n      properties:\n        type:\n          description: \"Indicates the type of transport to be used in delivering the notification. May be one of the following values: REST, EMAIL.\"\n          type: string\n          enum:\n            - REST\n            - EMAIL\n          example: \"REST\"\n        host:\n          description: \"The host targeted by the action.\"\n          type: string\n        port:\n          description: \"The port to address on the targeted host.\"\n          type: integer\n        path:\n          description: \"The HTTP path at the targeted host for fulfillment of the notification.\"\n          type: string\n        httpMethod:\n          description: \"Indicates which Http verb should be used for the REST endpoint.\"\n          type: string\n      required:\n        - type\n        - host\n        - port\n        - httpMethod\n    EmailAddress:\n      description: \"The EmailAddress identifies an array of email addresses to which notifications are delivered.\"\n      type: object\n      properties:\n        type:\n          description: \"Indicates the type of transport to be used in delivering the notification. May be one of the following values: REST, EMAIL.\"\n          type: string\n          enum:\n            - REST\n            - EMAIL\n          example: \"EMAIL\"\n        recipients:\n          description: \"Recipients (emails) who are interested in receiving notifications.\"\n          type: array\n          items:\n            type: string\n      required:\n        - type\n        - recipients\n    ErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response type for returning a generic error to the caller.\"\n      type: object\n    ConfigResponse:\n      description: \"An object containing the service's configuration. Please refer the configuration documentation of each service for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org).\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n        config:\n          description: \"A string-ified representation of the service's configuration. For purposes of this specification, a string has been used since configuration structure differs from service to service.\"\n          type: object\n    MetricsResponse:\n      description: \"A response from the /metrics endpoint providing memory and cpu utilization stats.\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n        metrics:\n          type: object\n          properties:\n            memAlloc:\n              description: \"Alloc is bytes of allocated heap objects which is a uint64 type integer.\"\n              type: integer\n            memFrees:\n              description: \"Frees is the cumulative count of heap objects freed which is a uint64 type integer.\"\n              type: integer\n            memLiveObjects:\n              description: \"The uint64 type integer of live objects is Mallocs - Frees.\"\n              type: integer\n            memMallocs:\n              description: \"The cumulative count of heap objects allocated which is a uint64 type integer.\"\n              type: integer\n            memSys:\n              description: \"The total bytes of memory obtained from the OS which is a uint64 type integer.\"\n              type: integer\n            memTotalAlloc:\n              description: \"Cumulative bytes allocated for heap objects which is a uint64 type integer.\"\n              type: integer\n            cpuBusyAvg:\n              description: \"A uint8 type integer indicates the average level of CPU utilization\"\n              type: number\n    Notification:\n      description: \"Defines the content included in a notification\"\n      type: object\n      properties:\n        category:\n          description: \"Categorizes the notification.\"\n          type: string\n        content:\n          description: \"The actual content to be sent as the body of the notification.\"\n          type: string\n        contentType:\n          description: \"Indicates the MIME type/Content-type of the notification's content.\"\n          type: string\n        created:\n          description: \"A timestamp indicating when the notification was created.\"\n          type: integer\n        description:\n          description: \"An optional description of the notification's intent.\"\n          type: string\n        id:\n          description: \"Uniquely identifies the notification\"\n          type: string\n          format: uuid\n        labels:\n          description: \"Arbitrary labels that can be applied to notifications for further categorization or identification.\"\n          type: array\n          items:\n            type: string\n        modified:\n          description: \"A timestamp indicating when the notification was last modified.\"\n          type: integer\n        sender:\n          description: \"Identifies the sender of a notification, usually the name of sender.\"\n          type: string\n        severity:\n          description: \"Indicates the level of severity for the notification. Current accepted values include: MINOR, NORMAL, CRITICAL\"\n          type: string\n          enum:\n            - MINOR\n            - NORMAL\n            - CRITICAL\n        status:\n          description: \"A status indicating the current processing status of the notification. Accepted values are: NEW, PROCESSED, ESCALATED\"\n          type: string\n          enum:\n            - NEW\n            - PROCESSED\n            - ESCALATED\n    CreateNotification:\n      description: \"Defines the content included in a notification\"\n      type: object\n      properties:\n        category:\n          description: \"Categorizes the notification.\"\n          type: string\n        content:\n          description: \"The actual content to be sent as the body of the notification.\"\n          type: string\n        contentType:\n          description: \"Indicates the MIME type/Content-type of the notification's content.\"\n          type: string\n        description:\n          description: \"An optional description of the notification's intent.\"\n          type: string\n        labels:\n          description: \"Arbitrary labels that can be applied to notifications for further categorization or identification.\"\n          type: array\n          items:\n            type: string\n        sender:\n          description: \"Identifies the sender of a notification, usually the name of sender.\"\n          type: string\n        severity:\n          description: \"Indicates the level of severity for the notification. Current accepted values include: MINOR, NORMAL, CRITICAL\"\n          type: string\n          enum:\n            - MINOR\n            - NORMAL\n            - CRITICAL\n        status:\n          description: \"A status indicating the current processing status of the notification. Accepted values are: NEW, PROCESSED, ESCALATED\"\n          type: string\n          enum:\n            - NEW\n            - PROCESSED\n            - ESCALATED\n      required:\n        - content\n        - sender\n        - severity\n    NotificationResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response type for returning a notification to the caller.\"\n      type: object\n      properties:\n        notification:\n          $ref: '#/components/schemas/Notification'\n    MultiNotificationsResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseWithTotalCountResponse'\n      description: \"A response type for returning Notifications to the caller.\"\n      type: object\n      properties:\n        notifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/Notification'\n    PingResponse:\n      description: \"Provides a response containing the API version and current server timestamp.\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n        timestamp:\n          description: \"Outputs the current server timestamp in RFC1123 format\"\n          example: \"Mon, 02 Jan 2006 15:04:05 MST\"\n          type: string\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n    Subscription:\n      description: \"Define address information for a party interested in receiving notifications.\"\n      type: object\n      properties:\n        id:\n          description: \"Uniquely identifies the subscription\"\n          type: string\n          format: uuid\n        created:\n          description: \"A timestamp indicating when the subscription was created.\"\n          type: integer\n        modified:\n          description: \"A timestamp indicating when the subscription was last modified.\"\n          type: integer\n        name:\n          description: \"A meaningful identifier for the subscription.\"\n          type: string\n        channels:\n          description: \"Indicates how this subscription is capable of receiving notifications.\"\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/RESTAddress'\n              - $ref: '#/components/schemas/EmailAddress'\n        categories:\n          description: \"Links the subscription to one or more categories of notification.\"\n          type: array\n          items:\n            type: string\n        labels:\n          description: \"Arbitrary labels that can be applied to the subscription for further categorization or identification.\"\n          type: array\n          items:\n            type: string\n        description:\n          description: \"An optional description of the subscription's intent.\"\n          type: string\n        receiver:\n          description: \"The name of the party interested in the notification.\"\n          type: string\n        resendLimit:\n          description: \"The retry limit for attempts to send notifications.\"\n          type: integer\n        resendInterval:\n          description: \"The interval in ISO 8691 format of resending the notification.\"\n          type: string\n        adminState:\n          description: Admin state\n          type: string\n          enum:\n            - LOCKED\n            - UNLOCKED\n    CreateSubscription:\n      description: \"Create address information for a party interested in receiving notifications.\"\n      type: object\n      properties:\n        name:\n          description: \"A meaningful identifier for the subscription.\"\n          type: string\n        channels:\n          description: \"Indicates how this subscription is capable of receiving notifications.\"\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/RESTAddress'\n              - $ref: '#/components/schemas/EmailAddress'\n        categories:\n          description: \"Links the subscription to one or more categories of notification.\"\n          type: array\n          items:\n            type: string\n        labels:\n          description: \"Arbitrary labels that can be applied to the subscription for further categorization or identification.\"\n          type: array\n          items:\n            type: string\n        description:\n          description: \"An optional description of the subscription's intent.\"\n          type: string\n        receiver:\n          description: \"The name of the party interested in the notification.\"\n          type: string\n        resendLimit:\n          description: \"The retry limit for attempts to send notifications.\"\n          type: integer\n        resendInterval:\n          description: \"The interval in ISO 8691 format of resending the notification.\"\n          type: string\n        adminState:\n          description: Admin state\n          type: string\n          enum:\n            - LOCKED\n            - UNLOCKED\n      required:\n        - name\n        - channels\n        - receiver\n        - adminState\n    UpdateSubscription:\n      description: \"Update address information for a party interested in receiving notifications.\"\n      type: object\n      properties:\n        id:\n          description: \"Uniquely identifies the subscription\"\n          type: string\n          format: uuid\n        name:\n          description: \"A meaningful identifier for the subscription.\"\n          type: string\n        channels:\n          description: \"Indicates how this subscription is capable of receiving notifications.\"\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/RESTAddress'\n              - $ref: '#/components/schemas/EmailAddress'\n        categories:\n          description: \"Links the subscription to one or more categories of notification.\"\n          type: array\n          items:\n            type: string\n        labels:\n          description: \"Arbitrary labels that can be applied to the subscription for further categorization or identification.\"\n          type: array\n          items:\n            type: string\n        description:\n          description: \"An optional description of the subscription's intent.\"\n          type: string\n        receiver:\n          description: \"The name of the party interested in the notification.\"\n          type: string\n        resendLimit:\n          description: \"The retry limit for attempts to send notifications.\"\n          type: integer\n        resendInterval:\n          description: \"The interval in ISO 8691 format of resending the notification.\"\n          type: string\n        adminState:\n          description: Admin state (locked/unlocked)\n          type: string\n    SubscriptionResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response type for returning a Subscription to the caller.\"\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n    MultiSubscriptionsResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseWithTotalCountResponse'\n      description: \"A response type for returning Subscriptions to the caller.\"\n      type: object\n      properties:\n        subscriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n    Transmission:\n      description: \"Records an individual attempt to send a notification, whether successful or not.\"\n      type: object\n      properties:\n        channel:\n          oneOf:\n            - $ref: '#/components/schemas/RESTAddress'\n            - $ref: '#/components/schemas/EmailAddress'\n        created:\n          description: \"A timestamp indicating when the transmission was created.\"\n          type: integer\n        id:\n          description: \"Uniquely identifies the transmission\"\n          type: string\n          format: uuid\n        notificationId:\n          description: \"The id of the notification to be sent\"\n          type: string\n          format: uuid\n        subscriptionName:\n          description: \"The name of the subscription interested in the notification.\"\n          type: string\n        records:\n          description: \"Contains the result of all attempts to deliver this particular transmission.\"\n          type: array\n          items:\n            $ref: '#/components/schemas/TransmissionRecord'\n        resendCount:\n          description: \"Indicates how many time resend has been attempted for the transmission.\"\n          type: integer\n        status:\n          description: \"Indicates the most recent success/failure of a given transmission attempt. Accepted values are: ACKNOWLEDGED, FAILED, SENT, RESENDING, ESCALATED\"\n          type: string\n          enum:\n            - ACKNOWLEDGED\n            - FAILED\n            - SENT\n            - ESCALATED\n            - RESENDING\n    TransmissionRecord:\n      description: \"Records the result of an individual attempt to transmit a notification.\"\n      type: object\n      properties:\n        status:\n          description: \"Indicates the success/failure of a given transmission attempt. Accepted values are: ACKNOWLEDGED, FAILED, SENT, ESCALATED\"\n          type: string\n          enum:\n            - ACKNOWLEDGED\n            - FAILED\n            - SENT\n            - ESCALATED\n        response:\n          description: \"Records any response received when attempting the transmission. An HTTP error or SMTP failure will be logged here.\"\n          type: string\n        sent:\n          description: \"The timestamp of the transmission attempt.\"\n          type: integer\n    TransmissionResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n      description: \"A response type for returning a Transmission to the caller.\"\n      type: object\n      properties:\n        transmission:\n          $ref: '#/components/schemas/Transmission'\n    MultiTransmissionsResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseWithTotalCountResponse'\n      description: \"A response type for returning Transmissions to the caller.\"\n      type: object\n      properties:\n        transmissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transmission'\n    UpdateSubscriptionRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: \"A request to update an existing Subscription. 'id' or 'name' must be populated in order to identify the subscription. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered.\"\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/UpdateSubscription'\n      required:\n        - subscription\n    VersionResponse:\n      description: \"A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service.\"\n      type: object\n      properties:\n        apiVersion:\n          description: \"A version number shows the API version in DTOs.\"\n          type: string\n          example: v2\n        version:\n          description: \"The latest version supported by the service.\"\n          type: string\n        serviceName:\n          description: \"Outputs the name of the service the response is from\"\n          type: string\n    SecretRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseRequest'\n      description: Defines the secret data to be stored\n      type: object\n      properties:\n        path:\n          description: Specifies the type or location of the secret to store\n          type: string\n        secretData:\n          description: A list of the key/value pairs of secret data to store\n          type: array\n          items:\n            $ref: '#/components/schemas/SecretDataKeyValue'\n      required:\n        - path\n        - secrets\n    SecretDataKeyValue:\n      description: Defines a key/value pair of secret data\n      type: object\n      properties:\n        key:\n          description: The key to identify the secret data\n          type: string\n          example: \"appsecret\"\n        value:\n          description: The value of the secret data\n          type: string\n          example: \"appsecret-value\"\n      required:\n        - key\n        - value\n  parameters:\n    offsetParam:\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n        default: 0\n      description: \"The number of items to skip before starting to collect the result set.\"\n    limitParam:\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        minimum: -1\n        default: 20\n      description: \"The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.\"\n    correlatedRequestHeader:\n      in: header\n      name: X-Correlation-ID\n      description: \"A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.\"\n      schema:\n        type: string\n        format: uuid\n      example: \"14a42ea6-c394-41c3-8bcd-a29b9f5e6835\"\n  headers:\n    correlatedResponseHeader:\n      description: \"A response header that returns the unique correlation ID used to initiate the request.\"\n      schema:\n        type: string\n        format: uuid\n      example: \"14a42ea6-c394-41c3-8bcd-a29b9f5e6835\"\n  examples:\n    200Example:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 200\n    202Example:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 202\n    400Example:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 400\n        message: \"Bad Request\"\n    404Example:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 404\n        message: \"Not Found\"\n    416Example:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 416\n        message: \"Range Not Satisfiable\"\n    500Example:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 500\n        message: \"Internal Server Error\"\n    SubscriptionRequestExample:\n      value:\n        - apiVersion: \"v2\"\n          subscription:\n            name: subscriptionA\n            channels:\n              - type: EMAIL\n                recipients:\n                  - 123@gamil.com\n                  - abc@gamil.com\n              - type: REST\n                host: 123.123.0.1\n                port: 123\n                httpMethod: GET\n            categories:\n              - daily-notify\n            labels:\n              - daily\n            receiver: receiverA\n            resendLimit: 0\n            resendInterval: 1h\n            adminState: UNLOCKED\n    UpdateSubscriptionsExample:\n      value:\n        - apiVersion: \"v2\"\n          statusCode: 200\n        - apiVersion: \"v2\"\n          statusCode: 404\n          message: \"Not Found\"\n        - apiVersion: \"v2\"\n          statusCode: 500\n          message: \"Internal Server Error\"\n    SubscriptionResponseExample:\n      value:\n        apiVersion: v2\n        statusCode: 200\n        subscription:\n          id: 25d4a9d3-0a9b-469f-8ce0-4a5ba1f7b152\n          name: subscriptionB\n          channels:\n            - type: EMAIL\n              recipients:\n                - 123@gamil.com\n                - abc@gamil.com\n            - type: REST\n              host: 123.123.0.1\n              port: 123\n              httpMethod: GET\n          receiver: receiverA\n          categories:\n            - daily-notify\n          labels:\n            - daily\n          created: 1616659630356\n          modified: 1616660213552\n          resendInterval: 1h\n          adminState: UNLOCKED\n    MultiSubscriptionsResponseExample:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 200\n        totalCount: 3\n        subscriptions:\n            - id: 25d4a9d3-0a9b-469f-8ce0-4a5ba1f7b152\n              name: subscriptionB\n              channels:\n                - type: EMAIL\n                  recipients:\n                    - 123@gamil.com\n                    - abc@gamil.com\n                - type: REST\n                  host: 123.123.0.1\n                  port: 123\n                  httpMethod: GET\n              receiver: receiverA\n              categories:\n                - daily-notify\n              labels:\n                - daily\n              created: 1616659630356\n              modified: 1616660213552\n              resendInterval: 1h\n              adminState: UNLOCKED\n    NotificationRequestExample:\n      value:\n        - apiVersion: \"v2\"\n          notification:\n            category: \"daily-notify\"\n            content: \"content\"\n            contentType: \"string\"\n            description: \"device notice\"\n            labels:\n              - daily\n            sender: \"core-metadata\"\n            severity: \"CRITICAL\"\n            status: \"NEW\"\n    NotificationResponseExample:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 200\n        notification:\n          id: e6e8a2f4-eb14-4649-9e2b-175247911369\n          category: \"daily-notify\"\n          contentType: \"string\"\n          description: \"device notice\"\n          labels:\n            - daily\n          sender: \"core-metadata\"\n          severity: \"CRITICAL\"\n          status: \"PROCESSED\"\n          created: 1616659630356\n          modified: 1616660213552\n    MultiNotificationResponseExample:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 200\n        totalCount: 3\n        notifications:\n          - id: e6e8a2f4-eb14-4649-9e2b-175247911369\n            category: \"daily-notify\"\n            contentType: \"string\"\n            description: \"device notice\"\n            labels:\n              - daily\n            sender: \"core-metadata\"\n            severity: \"CRITICAL\"\n            status: \"PROCESSED\"\n            created: 1616659630356\n            modified: 1616660213552\n    TransmissionResponseExample:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 200\n        transmission:\n          id: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n          notificationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n          subscriptionName: \"subscriptionA\"\n          channel:\n            - type: \"REST\"\n              host: \"localhost\"\n              port: 59860\n              httpMethod: \"POST\"\n          records:\n            - status: \"SENT\"\n              response: \"POST request for /\"\n              sent: 1616659630356\n          status: \"SENT\"\n          created: 1616659630356\n    MultiTransmissionResponseExample:\n      value:\n        apiVersion: \"v2\"\n        statusCode: 200\n        totalCount: 3\n        transmissions:\n          - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n            notificationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n            subscriptionName: \"subscriptionA\"\n            channel:\n              - type: \"REST\"\n                host: \"localhost\"\n                port: 59860\n                httpMethod: \"POST\"\n            records:\n              - status: \"SENT\"\n                response: \"POST request for /\"\n                sent: 1616659630356\n            status: \"SENT\"\n            created: 1616659630356\n    MultiPOSTStatusExample:\n      value:\n        - apiVersion: \"v2\"\n          requestId: \"592b98aa-1e4e-46f2-992a-9e6ef844270f\"\n          statusCode: 201\n          id: \"6f52dc3c-5548-4142-baa6-052ac4bece93\"\n          message: \"\"\n        - apiVersion: \"v2\"\n          requestId: \"d3742440-c319-4a9f-a488-b54cf992e143\"\n          statusCode: 409\n          message: \"Duplicated\"\n        - apiVersion: \"v2\"\n          requestId: \"791846bd-e702-4c7a-9d22-3ceee2f08427\"\n          statusCode: 500\n          message: \"Internal Server Error\"\npaths:\n  /cleanup:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    delete:\n      summary: \"Deletes all notifications and the corresponding transmissions.\"\n      responses:\n        '202':\n          description: \"Request has been accepted\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n              examples:\n                202Example:\n                  $ref: '#/components/examples/202Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /cleanup/age/{age}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: age\n        in: path\n        required: true\n        schema:\n          type: integer\n        description: \"Indicates the age of a notification in ticks\"\n    delete:\n      summary: \"Deletes notifications which have age and is less than the specified one, where the age of Notification is calculated by subtracting its last modification timestamp from the current timestamp. Note that the corresponding transmissions will also be deleted.\"\n      responses:\n        '202':\n          description: \"Request has been accepted\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n              examples:\n                202Example:\n                  $ref: '#/components/examples/202Example'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                202Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /notification:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      summary: \"Adds one or more notifications to be sent.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AddNotificationRequest'\n            examples:\n              NotificationRequestExample:\n                $ref: '#/components/examples/NotificationRequestExample'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/BaseWithIdResponse'\n              examples:\n                MultiPOSTStatusExample:\n                  $ref: '#/components/examples/MultiPOSTStatusExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /notification/start/{start}/end/{end}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: start\n        in: path\n        required: true\n        schema:\n          type: integer\n        description: \"The beginning timestamp of the range of notifications to be returned.\"\n      - name: end\n        in: path\n        required: true\n        schema:\n          type: integer\n        description: \"The ending timestamp of the range of notifications to be returned.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Allows querying of notifications by their creation timestamp within a given time range, sorted in descending order. Results are paginated.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiNotificationsResponse'\n              examples:\n                MultiNotificationResponseExample:\n                  $ref: '#/components/examples/MultiNotificationResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /notification/age/{age}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: age\n        in: path\n        required: true\n        schema:\n          type: integer\n        description: \"Indicates the age of a notification in ticks\"\n    delete:\n      summary: \"Deletes the processed notifications if the current timestamp minus their last modification timestamp is less than the age parameter, and the corresponding transmissions will also be deleted.  Please notice that this API is only for processed notifications (status = PROCESSED). If the deletion purpose includes each kind of notifications, please refer to /cleanup API.\"\n      responses:\n        '202':\n          description: \"Request has been accepted\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n              examples:\n                202Example:\n                  $ref: '#/components/examples/202Example'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /notification/category/{category}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: category\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The category of the notifications you wish to load.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of notifications associated with the given category.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiNotificationsResponse'\n              examples:\n                MultiNotificationResponseExample:\n                  $ref: '#/components/examples/MultiNotificationResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /notification/label/{label}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: label\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The label of the notifications you wish to load.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of notifications associated with the given label.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiNotificationsResponse'\n              examples:\n                MultiNotificationResponseExample:\n                  $ref: '#/components/examples/MultiNotificationResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /notification/id/{id}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The ID that identifies the notification.\"\n    get:\n      summary: \"Returns a notification by ID.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n              examples:\n                NotificationResponseExample:\n                  $ref: '#/components/examples/NotificationResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                404Example:\n                  $ref: '#/components/examples/404Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n    delete:\n      summary: \"Deletes a notification by ID and all of its associated transmissions.\"\n      responses:\n        '200':\n          description: \"Delete successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                200Example:\n                  $ref: '#/components/examples/200Example'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                404Example:\n                  $ref: '#/components/examples/404Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /notification/status/{status}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: status\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The status of the notifications you wish to load.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of notifications with the specified status.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiNotificationsResponse'\n              examples:\n                MultiNotificationResponseExample:\n                  $ref: '#/components/examples/MultiNotificationResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /notification/subscription/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The name of the subscription.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of notifications to which the specified subscription is interested.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiNotificationsResponse'\n              examples:\n                MultiNotificationResponseExample:\n                  $ref: '#/components/examples/MultiNotificationResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /subscription:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      summary: \"Adds one or more new subscriptions.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AddSubscriptionRequest'\n            examples:\n              SubscriptionRequestExample:\n                $ref: '#/components/examples/SubscriptionRequestExample'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/BaseWithIdResponse'\n              examples:\n                MultiPOSTStatusExample:\n                  $ref: '#/components/examples/MultiPOSTStatusExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: An unexpected error occurred on the server\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n    patch:\n      summary: \"Updates one or more existing Subscriptions. You might do this in order to add an additional channel if you want another endpoint/person to receive the notification.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdateSubscriptionRequest'\n            examples:\n              SubscriptionRequestExample:\n                $ref: '#/components/examples/SubscriptionRequestExample'\n      responses:\n        '207':\n          description: \"Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/ErrorResponse'\n                    - $ref: '#/components/schemas/BaseWithIdResponse'\n              examples:\n                UpdateSubscriptionsExample:\n                  $ref: '#/components/examples/UpdateSubscriptionsExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: An unexpected error occurred on the server\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /subscription/all:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Allows paginated retrieval of subscriptions, sorted by created timestamp descending.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiSubscriptionsResponse'\n              examples:\n                MultiSubscriptionsResponseExample:\n                  $ref: '#/components/examples/MultiSubscriptionsResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /subscription/category/{category}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: category\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The category of the subscriptions you wish to load.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of subscriptions associated with the specified category.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiSubscriptionsResponse'\n              examples:\n                MultiSubscriptionsResponseExample:\n                  $ref: '#/components/examples/MultiSubscriptionsResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /subscription/label/{label}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: label\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The label of the subscriptions you wish to load.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of subscriptions associated with the specified label.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiSubscriptionsResponse'\n              examples:\n                MultiSubscriptionsResponseExample:\n                  $ref: '#/components/examples/MultiSubscriptionsResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /subscription/receiver/{receiver}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: receiver\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The receiver of the subscriptions you wish to load.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of subscriptions associated with the specified receiver.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiSubscriptionsResponse'\n              examples:\n                MultiSubscriptionsResponseExample:\n                  $ref: '#/components/examples/MultiSubscriptionsResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /subscription/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The name given to the subscription of interest.\"\n    get:\n      summary: \"Returns a subscription by its unique name.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionResponse'\n              examples:\n                SubscriptionResponseExample:\n                  $ref: '#/components/examples/SubscriptionResponseExample'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                404Example:\n                  $ref: '#/components/examples/404Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n    delete:\n      summary: \"Deletes a subscription according to the given name.\"\n      responses:\n        '200':\n          description: \"Delete successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                200Example:\n                  $ref: '#/components/examples/200Example'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                404Example:\n                  $ref: '#/components/examples/404Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /transmission/id/{id}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The ID that identifies the transmission.\"\n    get:\n      summary: \"Returns a transmission by ID.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransmissionResponse'\n              examples:\n                TransmissionResponseExample:\n                  $ref: '#/components/examples/TransmissionResponseExample'\n        '404':\n          description: \"The requested resource does not exist\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                404Example:\n                  $ref: '#/components/examples/404Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /transmission/age/{age}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: age\n        in: path\n        required: true\n        schema:\n          type: integer\n        description: \"Indicates the age of a transmission in ticks\"\n    delete:\n      summary: \"Deletes the processed transmissions if the current timestamp minus their created timestamp is less than the age parameter.\"\n      responses:\n        '202':\n          description: \"Delete successful\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n              examples:\n                202Example:\n                  $ref: '#/components/examples/202Example'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /transmission/all:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Given the entire range of transmissions sorted in descending order of created time, returns a portion of that range according to the offset and limit parameters.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransmissionResponse'\n              examples:\n                MultiTransmissionResponseExample:\n                  $ref: '#/components/examples/MultiTransmissionResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /transmission/subscription/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The name of the subscription.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Returns a paginated list of transmissions that originated with the specified subscription.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransmissionResponse'\n              examples:\n                MultiTransmissionResponseExample:\n                  $ref: '#/components/examples/MultiTransmissionResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /transmission/start/{start}/end/{end}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: start\n        in: path\n        required: true\n        schema:\n          type: integer\n        description: \"The beginning timestamp of the range of transmissions to be returned.\"\n      - name: end\n        in: path\n        required: true\n        schema:\n          type: integer\n        description: \"The ending timestamp of the range of transmissions to be returned.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Allows querying of transmissions by their creation timestamp within a given time range, sorted in descending order. Results are paginated.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransmissionResponse'\n              examples:\n                MultiTransmissionResponseExample:\n                  $ref: '#/components/examples/MultiTransmissionResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /transmission/status/{status}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: status\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The status of the transmissions you wish to load.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Allows retrieval of the transmissions associated with the specified status. Ordered by create timestamp descending.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransmissionResponse'\n              examples:\n                MultiTransmissionResponseExample:\n                  $ref: '#/components/examples/MultiTransmissionResponseExample' \n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /transmission/notification/id/{id}:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: \"The notification id associated with transmissions you wish to load.\"\n      - $ref: '#/components/parameters/offsetParam'\n      - $ref: '#/components/parameters/limitParam'\n    get:\n      summary: \"Allows retrieval of the transmissions associated with the specified notification id. Ordered by create timestamp descending.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransmissionResponse'\n              examples:\n                MultiTransmissionResponseExample:\n                  $ref: '#/components/examples/MultiTransmissionResponseExample'\n        '400':\n          description: \"Request is in an invalid state\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                400Example:\n                  $ref: '#/components/examples/400Example'\n        '416':\n          description: \"Request range is not satisfiable\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                416Example:\n                  $ref: '#/components/examples/416Example'\n        '500':\n          description: \"An unexpected error occurred on the server\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /config:\n    get:\n      summary: \"Returns the current configuration of the service.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigResponse'\n        '500':\n          description: \"Interval Server Error\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /metrics:\n    get:\n      summary: \"An endpoint that can be used to obtain CPU/Memory usage stats for a given service.\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsResponse'\n              example:\n                apiVersion: \"v2\"\n                metrics:\n                  memAlloc: 877192\n                  memFrees: 2248915\n                  memLiveObjects: 6522\n                  memMallocs: 2255437\n                  memSys: 72876280\n                  memTotalAlloc: 203821192\n                  cpuBusyAvg: 2.2521221920656003\n        '500':\n          description: \"Interval Server Error\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /ping:\n    get:\n      summary: \"A simple 'ping' endpoint that can be used as a service healthcheck\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PingResponse'\n              example:\n                apiVersion: \"v2\"\n                timestamp: \"Mon, 02 Jan 2006 15:04:05 MST\"\n        '500':\n          description: \"Interval Server Error\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /version:\n    get:\n      summary: \"A simple 'version' endpoint that will return the current version of the service\"\n      responses:\n        '200':\n          description: \"OK\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n              example:\n                apiVersion: \"v2\"\n                version: \"2.0.0-dev.13\"\n        '500':\n          description: \"Interval Server Error\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                500Example:\n                  $ref: '#/components/examples/500Example'\n  /secret:\n    parameters:\n      - $ref: '#/components/parameters/correlatedRequestHeader'\n    post:\n      summary: Adds EdgeX Service exclusive secret to the Secret Store\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/SecretRequest'\n        required: true\n      responses:\n        '201':\n          description: \"Created\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '400':\n          description: \"Invalid request.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \"An unexpected error happened on the server.\"\n          headers:\n            X-Correlation-ID:\n              $ref: '#/components/headers/correlatedResponseHeader'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n",
			"canonicalURL": "/github.com/edgexfoundry/edgex-go@e2bcede5a0d4e7e9b0fcf2d4a4892af33f93e0b1/-/blob/openapi/v2/support-notifications.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/edgexfoundry/edgex-go/blob/e2bcede5a0d4e7e9b0fcf2d4a4892af33f93e0b1/openapi/v2/support-notifications.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/subscription\": post: responses: 207: contents: application/json: generate schema: item: anyOf: collect variants: SubscriptionPostMultiStatusItem: sum types with same names not implemented",
	"NotImplemented": [
		"sum types with same names"
	]
}