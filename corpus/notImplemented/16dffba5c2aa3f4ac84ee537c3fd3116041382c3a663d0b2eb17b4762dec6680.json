{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/brian-watkins/elm-spec"
		},
		"file": {
			"name": "test-open-api-v3-spec.yaml",
			"size": 0,
			"path": "tests/fixtures/test-open-api-v3-spec.yaml",
			"byteSize": 2587,
			"content": "openapi: 3.0.0\ninfo:\n  title: test open v3 api spec\n  version: '1.0'\n  contact:\n    name: Brian Watkins\n    email: brian@watkins.com\nservers:\n  - url: 'http://my-fun-api.com'\npaths:\n  '/my/messages/{messageId}':\n    parameters:\n      - schema:\n          type: number\n        name: messageId\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        '200':\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Message'\n              examples:\n                Get Message:\n                  value:\n                    id: 142\n                    message: Funny message\n        '404':\n          description: Message Not Found\n      operationId: get-users-userId\n      description: Retrieve the message with the matching ID.\n      parameters:\n        - schema:\n            type: integer\n          in: header\n          name: X-Fun-Times\n          description: How many times to have fun?\n          required: true\n        - schema:\n            type: integer\n            minimum: 10\n            maximum: 20\n          in: query\n          name: someValue\n          description: Some value\n          required: true\n  /my/messages:\n    post:\n      summary: ''\n      operationId: post-my-messages\n      responses:\n        '201':\n          description: Created\n          headers:\n            Location:\n              schema:\n                type: string\n                minLength: 5\n              description: URL for created message\n            X-Fun-Times:\n              schema:\n                type: integer\n              description: Number of Fun Times\n      description: Create a message\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MessageRequest'\n        description: Message\n  /my/text:\n    get:\n      summary: Get Text\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n      operationId: get-my-text\n      description: get all the text that you need\ncomponents:\n  schemas:\n    Message:\n      title: Message\n      type: object\n      properties:\n        id:\n          type: integer\n        message:\n          type: string\n      required:\n        - id\n        - message\n    MessageRequest:\n      title: MessageRequest\n      type: object\n      properties:\n        message:\n          type: string\n      required:\n        - message\n",
			"canonicalURL": "/github.com/brian-watkins/elm-spec@4cf6ea04be055402b54f3e6f101cc0a50da3e158/-/blob/tests/fixtures/test-open-api-v3-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/brian-watkins/elm-spec/blob/4cf6ea04be055402b54f3e6f101cc0a50da3e158/tests/fixtures/test-open-api-v3-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/my/text\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}