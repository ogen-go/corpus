{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/sinch.voice/openapi.yaml",
			"byteSize": 56764,
			"content": "openapi: 3.0.2\ninfo:\n  title: Calling API\n  version: 1.0.0\n  # contact:\n  #   name: Support\n  #   url: www.sinch.com\n  #   email: support@sinch.com\n  description: \u003e\n    This is a generated connector for [Sinch Voice API v1.0.0](https://www.sinch.com/) OpenAPI specification. \n\n    The Calling API exposes calling- and conference-related functionality in the Sinch Voice Platform.\n  x-ballerina-init-description: \n    The connector initialization requires setting the API credentials.\n\n    Create a [Sinch account](https://www.sinch.com/) and obtain tokens by following [this guide](https://developers.sinch.com/docs/voice/api-reference/authentication/#basic-authorization).\n  x-ballerina-display:\n    label: Sinch Voice\n    iconPath: \"icon.png\"\nservers:\n  - url: https://calling.api.sinch.com\n    description: redirected by Sinch to an appropriate region\n  - url: https://calling-use1.api.sinch.com\n    description: United States\n  - url: https://calling-euc1.api.sinch.com\n    description: Europe\n  - url: https://calling-sae1.api.sinch.com\n    description: South America\n  - url: https://calling-apse1.api.sinch.com\n    description: Southeast Asia 1\n  - url: https://calling-apse2.api.sinch.com\n    description: Southeast Asia 2\nsecurity:\n  - Basic: []\npaths:\n  /calling/v1/callouts/:\n    post:\n      tags:\n        - Callouts\n        - Conferences\n      description: \u003e\n        Makes a call out to a phone number. The types of callouts currently\n        supported are conference callouts, text-to-speech callouts, and custom\n        callouts. The custom callout is the most flexible, but text-to-speech\n        and conference callouts are more convenient.\n      summary: Callout Request\n      operationId: Callouts\n      requestBody:\n        $ref: '#/components/requestBodies/calloutRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getCalloutResponseObj'\n              example:\n                callid: adf92089-df2a-4f14-a377-1e975f588fe4\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 400 Invalid Request\n                    errorCode: '40003'\n                    message: Invalid request\n        '402':\n          description: Not enough credit\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 402 Payment Required\n                    errorCode: '40200'\n                    message: Payment required\n  /calling/v1/calls/id/{callid}:\n    parameters:\n      - $ref: '#/components/parameters/callid'\n    patch:\n      tags:\n        - Calls\n      summary: Update a call in progress\n      description: \u003e\n        This method is used to manage ongoing, connected calls. This method uses\n        SVAML in the request body to perform various tasks related to the call.\n        For more information about SVAML, see the [Callback\n        API](/docs/voice/api-reference/callback-api/) documentation.\n\n\n        This method can only be used for calls that originate from or terminate\n        to PSTN or SIP networks.\n      operationId: Calling_UpdateCall\n      requestBody:\n        $ref: '#/components/requestBodies/updateCall'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              example:\n                content: 200 Successful response\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 400 Invalid Request\n                    errorCode: '40003'\n                    message: Invalid request\n        '404':\n          description: Call not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 404 Not Found\n                    code: '40400'\n                    message: Call not found\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n    get:\n      tags:\n        - Calls\n      summary: Get information about a call\n      description: \u003e\n        You can retrieve information about an ongoing or completed call using a\n        call ID. You can find the call ID of an ongoing call by viewing the\n        response object from a callout request. You can find the call ID of a\n        completed call by looking at your call logs in your Sinch\n        [Dashboard](https://dashboard.sinch.com/voice/logs).\n      operationId: Calling_GetCallResult\n      responses:\n        '200':\n          description: GetCallResultResponse\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getCallResponseObj'\n        '404':\n          description: Call not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 404 Not Found\n                    code: '40400'\n                    message: Call not found\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n  /calling/v1/calls/id/{callid}/leg/{callLeg}:\n    parameters:\n      - $ref: '#/components/parameters/callid'\n      - $ref: '#/components/parameters/callLeg'\n    patch:\n      tags:\n        - Calls\n      summary: Manage Call with `callLeg`\n      description: \u003e\n        This method is used to manage ongoing, connected calls. This method is\n        only used when using the `PlayFiles` and `Say` instructions in the\n        request body. This method uses SVAML in the request body to perform\n        various tasks related to the call. For more information about SVAML, see\n        the [Callback API](/docs/voice/api-reference/callback-api/)\n        documentation.\n\n\n        This method can only be used for calls that originate from or terminate\n        to PSTN or SIP networks.\n      operationId: Calling_ManageCallWithCallLeg\n      requestBody:\n        description: Manage Call with call leg payload.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SVAMLRequestBody'\n            examples:\n              hangupExample:\n                value:\n                  instructions:\n                    - name: say\n                      text: Hello, the call is over, hanging up now.  Goodbye\n                      locale: en-US\n                  action:\n                    name: hangup\n              ivrExample:\n                value:\n                  instructions:\n                    - name: playFiles\n                      ids:\n                        - welcome\n                      locale: en-US\n                  action:\n                    name: hangup\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              example:\n                content: 200 Successful response\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 400 Invalid Request\n                    errorCode: '40003'\n                    message: Invalid request\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '404':\n          description: Call not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 404 Not Found\n                    code: '40400'\n                    message: Call not found\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n  /calling/v1/conferences/id/{conferenceid}:\n    parameters:\n      - $ref: '#/components/parameters/conferenceid'\n    get:\n      tags:\n        - Conferences\n      summary: Get Conference Info\n      description: \u003e\n        Returns information about a conference that matches the provided\n        conference ID.\n      operationId: Calling_GetConferenceInfo\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getConferenceInfoResponse'\n              example:\n                ConferenceInfoResponse:\n                  participants:\n                    - cli: '+46708168731'\n                      id: myConfId1\n                      duration: 14\n                      muted: false\n                    - cli: myUserName\n                      id: myConfId2\n                      duration: 12\n                      muted: false\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 400 Invalid Request\n                    errorCode: '40003'\n                    message: Invalid request\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 404 Not Found\n                    errorCode: '40400'\n                    message: \u003e\n                      No such ongoing conference '{conferenceid}' in the\n                      application's context\n                    reference: ef86c213-7a93-4bf4-8e5e-b34349c77c47\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n    delete:\n      tags:\n        - Conferences\n      summary: Kick Conference All (cloud)\n      description: Removes all participants from a conference.\n      operationId: Calling_KickConferenceAll\n      responses:\n        '204':\n          description: No content\n          content:\n            application/json:\n              example:\n                content: no content\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 400 Invalid Request\n                    errorCode: '40003'\n                    message: Invalid request\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 404 Not Found\n                    errorCode: '40400'\n                    message: \u003e\n                      No such ongoing conference '{conferenceid}' in the\n                      application's context\n                    reference: ef86c213-7a93-4bf4-8e5e-b34349c77c47\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n  /calling/v1/conferences/id/{conferenceid}/{callid}:\n    parameters:\n      - $ref: '#/components/parameters/callid'\n      - $ref: '#/components/parameters/conferenceid'\n    patch:\n      tags:\n        - Conferences\n      summary: Mute / Unmute Conference participant (cloud)\n      description: Mutes or unmutes a conference participant in a specified conference.\n      operationId: Mute Unmute Conference Participant\n      requestBody:\n        description: Mute conference participant payload\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                {}\n              example:\n                command: unmute\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              example:\n                content: Successful response\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 400 Invalid Request\n                    errorCode: '40003'\n                    message: Invalid request\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 404 Not Found\n                    errorCode: '40400'\n                    message: \u003e\n                      No such ongoing conference '{conferenceid}' in the\n                      application's context\n                    reference: ef86c213-7a93-4bf4-8e5e-b34349c77c47\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n    delete:\n      tags:\n        - Conferences\n      summary: Kick Conference Participant (cloud)\n      description: Remove a specified conference participant from a specified conference.\n      operationId: Calling_KickConferenceParticipant\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              example:\n                content: 200 Successful response\n        '400':\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 400 Invalid Request\n                    errorCode: '40003'\n                    message: Invalid request\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 404 Not Found\n                    errorCode: '40400'\n                    message: \u003e\n                      No such ongoing conference '{conferenceid}' in the\n                      application's context\n                    reference: ef86c213-7a93-4bf4-8e5e-b34349c77c47\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n  /v1/configuration/numbers/:\n    servers:\n      - url: https://callingapi.sinch.com\n    get:\n      tags:\n        - Applications\n      summary: Get Numbers\n      description: \u003e\n        Get information about your numbers. It returns a list of numbers that\n        you own, as well as their capability (voice or SMS). For the ones that\n        are assigned to an app, it returns the application key of the app.\n      operationId: Configuration_GetNumbers\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getNumbersResponseObj'\n              example:\n                numbers:\n                  - number: +141511122233334\"\n                    capability: voice\n                  - number: '+14151112223333'\n                    applicationkey: 2457b630-45ef-4939-be88-93ffaebf4346\n                    capability: voice\n                  - number: '+141511122233332'\n                    applicationkey: 2457b656-45ed-4934-be77-88feaebe4238\n                    capability: voice\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n    post:\n      tags:\n        - Applications\n      summary: Update Numbers\n      description: Assign a number or a list of numbers to an application.\n      operationId: Configuration_UpdateNumbers\n      requestBody:\n        description: Update numbers payload.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/updateNumbers'\n      responses:\n        '204':\n          description: Successful response\n          content:\n            application/json:\n              example:\n                content: no content\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n    delete:\n      tags:\n        - Applications\n      summary: Un-assign number\n      description: Un-assign a number from an application.\n      operationId: Configuration_UnassignNumber\n      # requestBody:\n      #   description: Unassign numbers payload.\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/unassignNumbers'\n      responses:\n        '204':\n          description: No content\n          content:\n            application/json:\n              example:\n                content: no content\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n  /v1/configuration/callbacks/applications/{applicationkey}:\n    servers:\n      - url: https://callingapi.sinch.com\n    parameters:\n      - $ref: '#/components/parameters/applicationkey'\n    get:\n      tags:\n        - Applications\n      summary: Get Callback URLs\n      description: Returns any callback URLs configured for the specified application.\n      operationId: Configuration_GetCallbackURLs\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getCallbacks'\n              example:\n                url:\n                  - primary: http://primarycallback.com\n                    fallback: http://fallbackcallback.com\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n    post:\n      tags:\n        - Applications\n      summary: Update Callbacks\n      description: Update the configured callback URLs for the specified application.\n      operationId: Configuration_UpdateCallbackURLs\n      requestBody:\n        description: Update callbacks payload.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/updateCallbacks'\n            example:\n              url:\n                - primary: http://primarycallback.com\n                  fallback: http://fallbackcallback.com\n      responses:\n        '204':\n          description: No content\n          content:\n            application/json:\n              example:\n                content: no content\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\n  /v1/calling/query/number/{number}:\n    servers:\n      - url: https://callingapi.sinch.com\n    parameters:\n      - $ref: '#/components/parameters/number'\n    get:\n      tags:\n        - Applications\n      summary: Query number\n      description: Returns information about the requested number.\n      operationId: Calling_QueryNumber\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getQueryNumber'\n              example:\n                method: numberItem\n                numberItem:\n                  countryId: SE\n                  numberType: Mobile\n                  normalizednumber: '+14151112223333'\n                  restricted: false\n                  rate:\n                    currencyId: USD\n                    amount: 0.368\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 401 Unauthorized\n                    errorCode: '40100'\n                    message: Authorization required\n                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8\n        '500':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                response:\n                  error:\n                    status: 500 Server Error\n                    code: '50000'\n                    message: Internal server error\ncomponents:\n  securitySchemes:\n    Basic:\n      type: http\n      scheme: basic\n      description: \u003e\n        For more information about basic authentication, see [Basic\n        Authentication](newdocs/docs/voice/api-reference/authentication.md#basic-authentication).\n  examples:\n    hangupExample:\n      summary: Hang up a call\n      value:\n        instructions:\n          - name: sendDtmf\n            value: 1234#\n        action:\n          name: hangup\n    parkCallExample:\n      summary: Put a call on hold\n      value:\n        instructions:\n          - name: sendDtmf\n            value: 1234#\n        action:\n          name: Park\n          introPrompt: '#tts[Welcome]'\n          holdPrompt: '#tts[Please wait, you are on hold]'\n          maxDuration: 180\n    confCalloutRequest:\n      summary: Add a participant to a conference\n      value:\n        method: conferenceCallout\n        conferenceCallout:\n          cli: '+14045001000'\n          destination:\n            type: number\n            number: '+14045005000'\n          locale: en-US\n          greeting: Welcome to my conference\n          conferenceId: MyConfId\n    ttsCalloutRequest:\n      summary: Make a phone call\n      description: Place a phone call and use text to speech to convey a message.\n      value:\n        method: ttsCallout\n        ttsCallout:\n          cli: '+14045001000'\n          destination:\n            type: number\n            endpoint: '+14045005000'\n          locale: en-US\n          text: Hello, this is a call from Sinch.\n    customCalloutRequest:\n      summary: Make a custom callout\n      description: An example of a custom callout to invoke an ICE and ACE request\n      value:\n        method: customCallout\n        pop: eu-central\n        customCallout:\n          ice:\n            instructions:\n              - name: say\n                text: Hello Message one!\n              - name: say\n                text: Hello Message two!\n            action:\n              name: ConnectPSTN\n              number: 12233445566\n              cli: 12234325234\n          ace:\n            action:\n              name: continue\n  requestBodies:\n    updateCall:\n      description: Update call request payload.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SVAMLRequestBody'\n          examples:\n            hangupExample:\n              $ref: '#/components/examples/hangupExample'\n            parkCallExample:\n              $ref: '#/components/examples/parkCallExample'\n    calloutRequest:\n      description: Callout request payload.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CalloutRequest'\n          examples:\n            ttsCalloutRequest:\n              $ref: '#/components/examples/ttsCalloutRequest'\n            confCalloutRequest:\n              $ref: '#/components/examples/confCalloutRequest'\n            customCalloutRequest:\n              $ref: '#/components/examples/customCalloutRequest'\n  parameters:\n    number:\n      in: path\n      name: number\n      schema:\n        type: string\n      required: true\n      description: The phone number you want to query.\n      example: '+46730170101'\n    callid:\n      in: path\n      name: callid\n      schema:\n        type: string\n      required: true\n      description: \u003e\n        The unique identifier of the call. This value is generated by the\n        system.\n      example: 4398599d1ba84ef3bde0a82dfb61abed\n    conferenceid:\n      in: path\n      name: conferenceid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier of the conference. The user sets this value.\n      example: MyConfId\n    applicationkey:\n      name: applicationkey\n      in: path\n      schema:\n        type: string\n      required: true\n      description: The unique identifying key of the application.\n      example: 94983f76-1161-6655-9515-4785c7b67dd8\n    callLeg:\n      name: callLeg\n      in: path\n      schema:\n        type: string\n        enum:\n          - caller\n          - callee\n          - both\n      required: true\n      description: \u003e\n        Specifies which part of the call will be managed. This option is used\n        only by the `PlayFiles` and `Say` instructions to indicate which channel\n        the sound will be played on. Valid options are `caller`, `callee` or\n        `both`. If not specified, the default value is\n        `caller`.\u003c/br\u003e\u003cWarning\u003eThe `callLeg` identifier is ignored for calls\n        that are part of a conference and calls initiated using the Callout\n        API.\u003c/Warning\u003e\n      example: caller\n  schemas:\n    Error:\n      type: object\n      properties:\n        status:\n          type: string\n          description: A summary of the HTTP error code and error type.\n          example: 404 Not Found\n        errorCode:\n          type: string\n          description: The HTTP error code.\n          example: '40400'\n        message:\n          type: string\n          description: A simple description of the cause of the error.\n          example: Call not found\n        reference:\n          type: string\n          description: \u003e\n            If applicable, a reference ID for support to use with diagnosing the\n            error.\n          example: a2028355-5164-41b6-aae9-2b8a546e0784\n    destination:\n      type: object\n      description: The type of device and number or endpoint to call.\n      required:\n        - type\n        - endpoint\n      properties:\n        type:\n          type: string\n          description: \u003e\n            Can be of `number` for PSTN endpoints or of `username` for data\n            endpoints.\n          enum:\n            - number\n            - username\n          example: number\n        endpoint:\n          type: string\n          description: \u003e\n            If the type is `number` the value of the endpoint is a phone number.\n            If the type is `username` the value is the username for a data\n            endpoint.\n          format: e164\n          example: 12125550123\n    updateNumbers:\n      type: object\n      example:\n        numbers: '+14151112223333'\n        applicationkey: 11983f76-12c8-1111-9515-4785c7b67ca8\n        capability: voice\n      properties:\n        numbers:\n          type: array\n          description: The phone number or list of numbers in E.164 format.\n          items:\n            type: string\n          minItems: 1\n          maxItems: 100\n          example:\n            - '+14151112223333'\n            - '+14151112223333'\n        applicationkey:\n          description: \u003e\n            indicates the application where the number(s) will be assigned. If\n            empty, the application key that is used to sign the request will be\n            used.\n          type: string\n          example: 11983f76-12c8-1111-9515-4785c7b67ca8\n        capability:\n          type: string\n          enum:\n            - voice\n            - sms\n          description: \u003e\n            indicates the DID capability that needs to be assigned to the chosen\n            application. Valid values are 'voice' and 'sms'. Please note that\n            the DID needs to support the selected capability.\n          example: voice\n    unassignNumbers:\n      type: object\n      example:\n        numbers: '+14151112223333'\n        applicationkey: 11983f76-12c8-1111-9515-4785c7b67ca8\n        capability: voice\n      properties:\n        number:\n          type: string\n          description: \u003e\n            The phone number in E.164 format\n            (https://en.wikipedia.org/wiki/E.164)\n          example:\n            - '+14151112223333'\n            - '+14151112223334'\n        applicationkey:\n          description: \u003e\n            Indicates the application where the number(s) was assigned. dIf\n            empty, the application key that is used to sign the request will be\n            used.\n          type: string\n          example: 11983f76-12c8-1111-9515-4785c7b67ca8\n        capability:\n          type: string\n          enum:\n            - voice\n            - sms\n          description: \u003e\n            (optional) indicates the DID capability that was assigned to the\n            chosen application. Please note that the DID needs to support the\n            selected capability.\n          example: voice\n    getCallResponseObj:\n      type: object\n      properties:\n        from:\n          type: string\n          description: Contains the caller information.\n          example: null\n        to:\n          type: string\n          description: Contains the callee information.\n          example: null\n        domain:\n          type: string\n          enum:\n            - pstn\n            - mxp\n          description: \u003e\n            Can be either `pstn` for PSTN endpoint or `mxp` for data (app or\n            web) clients.\n          example: pstn\n        callid:\n          type: string\n          description: The unique identifier of the call.\n          example: null\n        duration:\n          type: integer\n          description: The duration of the call in seconds.\n        status:\n          type: string\n          enum:\n            - ONGOING\n            - FINAL\n          description: The status of the call. Either `ONGOING` or `FINAL`\n          example: ONGOING\n        result:\n          type: string\n          enum:\n            - N/A\n            - ANSWERED\n            - BUSY\n            - NOANSWER\n            - FAILED\n          description: Contains the result of a call.\n          example: ANSWERED\n        reason:\n          type: string\n          enum:\n            - N/A\n            - TIMEOUT\n            - CALLERHANGUP\n            - CALLEEHANGUP\n            - BLOCKED\n            - NOCREDITPARTNER\n            - MANAGERHANGUP\n            - CANCEL\n            - GENERALERROR\n          description: Contains the reason why a call ended.\n        timestamp:\n          type: string\n          format: date-time\n          description: The date and time of the call.\n        custom:\n          type: object\n        userRate:\n          type: string\n          format: currency\n        debit:\n          type: string\n          format: currency\n    getCallbacks:\n      type: object\n      properties:\n        url:\n          description: Gets primary and if configured fallback callback URLs\n          type: array\n          items:\n            type: object\n            properties:\n              primary:\n                type: string\n                description: Your primary callback URL\n                example: http://primary.yourcallback.com/\n              fallback:\n                type: string\n                description: \u003e\n                  Your fallback callback URL (returned if configured). It is\n                  used only if Sinch platform gets a timeout or error from your\n                  primary callback URL.\n                example: http://fallback.yourcallback.com/\n    updateCallbacks:\n      type: object\n      properties:\n        url:\n          description: Contains primary and or fallback callback URLs\n          type: array\n          items:\n            type: object\n            properties:\n              primary:\n                type: string\n                description: Your primary callback URL\n                example: http://primary.yourcallback.com/\n              fallback:\n                type: string\n                description: Your fallback callback URL\n                example: http://fallback.yourcallback.com/\n    getQueryNumber:\n      type: object\n      properties:\n        countryId:\n          type: string\n          description: The ISO 3166-1 formatted country code.\n          example: SE\n        numberType:\n          type: string\n          enum:\n            - Unknown\n            - Fixed\n            - Mobile\n            - Other\n          description: The type of the number.\n          example: Fixed\n        normalizedNumber:\n          type: string\n          description: The number in E.164 format.\n          example: '+46730170101'\n        restricted:\n          type: boolean\n          description: Concerns whether the call is restricted or not.\n          example: false\n        rate:\n          type: object\n          description: The cost per minute to call the destination number.\n          properties:\n            currencyId:\n              type: string\n              description: The currency in which the call is charged.\n              example: USD\n            amount:\n              type: number\n              description: The amount.\n              example: 0.0368\n    getRecordingFileInfo:\n      type: object\n      properties:\n        key:\n          type: string\n        url:\n          type: string\n        createdOn:\n          type: string\n          format: timestamp\n        expiresOn:\n          type: string\n          format: timestamp\n        headers:\n          type: object\n    getNumbersResponseObj:\n      type: object\n      properties:\n        numbers:\n          type: array\n          #default: numbers\n          description: \u003e\n            The object type. Will always be list of numbers, associated\n            applicationkeys and capabilities\n          items:\n            type: object\n            properties:\n              number:\n                type: string\n                description: Numbers that you own in E.164 format.\n                example: '+11400000000'\n              applicationkey:\n                type: string\n                description: \u003e\n                  Indicates the application where the number(s) will be\n                  assigned. If no number is assigned the applicationkey will not\n                  be returned.\n              capability:\n                type: string\n                enum:\n                  - voice\n                  - sms\n                description: \u003e\n                  indicates the DID capability that needs to be assigned to the\n                  chosen application. Valid values are 'voice' and 'sms'. Please\n                  note that the DID needs to support the selected capability.\n                example: voice\n    getConferenceInfoResponse:\n      type: object\n      description: \u003e\n        Information about the participants in the conference.\n      properties:\n        participants:\n          description: \u003e\n            Array containing information about the participants in the conference.\n          type: array\n          items:\n            type: object\n            properties:\n              cli:\n                type: string\n                description: \u003e\n                  The phone number of the PSTN participant that was connected in\n                  the conference, or whatever was passed as CLI for data\n                  originated/terminated calls.\n                example: '+46708168731'\n              id:\n                type: string\n                description: \u003e\n                  The callId of the call leg that the participant joined the\n                  conference.\n                example: abcabcabcabca\n              duration:\n                type: integer\n                description: \u003e\n                  The number of seconds that the participant has been connected\n                  to the conference.\n              muted:\n                type: boolean\n    CalloutRequest:\n      type: object\n      description: \u003e\n        Currently three types of callouts are supported: conference callouts,\n        text-to-speech callouts and custom callouts. The custom callout is the\n        most flexible, but text-to-speech and conferece callouts are more\n        convenient.\n      required:\n        - method\n      properties:\n        method:\n          type: string\n          description: Sets the type of callout.\n          enum:\n            - conferenceCallout\n            - ttsCallout\n            - customCallout\n          example: conferenceCallout\n        conferenceCallout:\n          $ref: '#/components/schemas/conferenceCalloutRequest'\n        ttsCallout:\n          $ref: '#/components/schemas/ttsCalloutRequest'\n        customCallout:\n          $ref: '#/components/schemas/customCalloutRequest'\n    conferenceCalloutRequest:\n      type: object\n      description: \u003e\n        The conference callout calls a phone number or a user. When the call is\n        answered, it's connected to a conference room.\n      required:\n        - destination\n        - conferenceId\n      properties:\n        cli:\n          type: string\n          format: e.164\n          description: \u003e\n            The number that will be displayed as caller, must be in\n            [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)\n            format.\n          example: '14151112223333'\n        destination:\n          $ref: '#/components/schemas/destination'\n        conferenceId:\n          type: string\n          description: \u003e\n            The conferenceId of the conference to which you want the callee to\n            join. If the conferenceId doesn't exist a conference room will be\n            created.\n        dtmf:\n          type: string\n          description: \u003e\n            When the destination picks up, this DTMF tones will be played to the\n            callee. Valid characters in the string are \"0\"-\"9\", \"#\" and \"w\". A\n            \"w\" will render a 500 ms pause. Example: \"ww1234#w#\" will render a\n            1s pause, the DTMF tones \"1\", \"2\", \"3\", \"4\" and \"#\" followed by a\n            0.5s pause and finally the DTMF tone for \"#\". This can be used if\n            the callout destination for instance require a conference PIN code\n            or an extension to be entered.\n        maxDuration:\n          type: string\n          description: \u003e\n            Maximum duration.\n        enableAce:\n          type: boolean\n          description: \u003e\n            If `enableAce` is set to true and the application has a callback URL\n            specified, you will receive an ACE callback when the call is\n            answered. When the callback is received, your platform must respond\n            with a svamlet, containing the connectcon action in order to add the\n            call to a conference or create the conference if itâ€™s the first\n            call. If it's set to false, no ACE event will be sent to your\n            backend.\n          default: false\n          example: false\n        enableDice:\n          type: boolean\n          description: \u003e\n            If enableDice is set to true and the application has a callback URL\n            specified, you will receive a DiCE callback when the call is\n            disconnected. If it's set to false, no DiCE event will be sent to\n            your backend.\n          default: false\n          example: false\n        enablePie:\n          type: boolean\n          description: \u003e\n            If enablePie is set to true and the application has a callback URL\n            specified, you will receive a PIE callback after a runMenu action,\n            with the information of the action that the user took. If it's set\n            to false, no PIE event will be sent to your backend.\n          default: false\n          example: false\n        locale:\n          type: string\n          format: ISO 639\n          description: \u003e\n            Language of the prompts as defined in [ISO 639](locales.md) for\n            supported languages.\n          default: en-US\n          example: en-US\n        greeting:\n          type: string\n          description: The text that will be spoken as a greeting.\n          example: Welcome to the conference\n        mohClass:\n          type: string\n          description: \u003e\n            Means \"music-on-hold.\" It's an optional parameter that specifies\n            what the first participant should listen to while they're alone in\n            the conference, waiting for other participants to join. It can take\n            one of these pre-defined values:\u003cul\u003e\u003cli\u003e`ring` (progress\n            tone)\u003c/li\u003e\u003cli\u003e`music1` (music file)\u003c/li\u003e\u003cli\u003e`music2` (music\n            file)\u003c/li\u003e\u003cli\u003e`music3` (music file)\u003c/li\u003e\u003c/ul\u003e\u003c/br\u003eIf no\n            music-on-hold is specified, the user will only hear silence.\n          example: ring\n        custom:\n          type: string\n          description: Used to input custom data.\n        domain:\n          type: string\n          description: \u003e\n            can be either pstn for PSTN endpoint or mxp for data (app or web)\n            clients.\n    ttsCalloutRequest:\n      type: object\n      description: \u003e\n        The text-to-speech callout calls a phone number and plays a synthesized\n        text messages or pre-recorded sound files.\n      required:\n        - destination\n      properties:\n        cli:\n          type: string\n          format: e.164\n          description: \u003e\n            The number that will be displayed as caller, must be in\n            [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)\n            format.\n          example: '+14155552223333'\n        destination:\n          $ref: '#/components/schemas/destination'\n        dtmf:\n          type: string\n          description: \u003e\n            When the destination picks up, this DTMF tones will be played to the\n            callee. Valid characters in the string are \"0\"-\"9\", \"#\", and \"w\". A\n            \"w\" will render a 500 ms pause. For example, \"ww1234#w#\" will render\n            a 1s pause, the DTMF tones \"1\", \"2\", \"3\", \"4\" and \"#\" followed by a\n            0.5s pause and finally the DTMF tone for \"#\". This can be used if\n            the callout destination for instance require a conference PIN code\n            or an extension to be entered.\n          example: ww1234#w#\n        domain:\n          type: string\n          enum:\n            - pstn\n            - mxp\n          description: \u003e\n            Can be either `pstn` for PSTN endpoint or `mxp` for data (app or\n            web) clients.\n          example: pstn\n        custom:\n          type: string\n          description: Can be used to input custom data.\n        locale:\n          type: string\n          format: ISO 639\n          description: \u003e\n            Language of the prompts as defined in [ISO 639](locales.md) for\n            supported languages\n          default: en-US\n          example: en-US\n        text:\n          type: string\n          description: \u003e\n            The text that will be spoken in the text-to-speech message. Every\n            application's default maximum characters allowed in text-to-speech\n            is 600 characters. Contact support if you wish this limit to be\n            changed.\n        prompts:\n          type: string\n          description: \u003e\n            An advanced alternative to using text. You can then supply a ,\n            -separated list of prompts. Either prompt can be the name of a\n            pre-recorded file or a text-to-speech string specified as â€œ#tts[my\n            text]. To upload and use pre-recorded files, you need to contact\n            Sinch for support. Every application's default maximum characters\n            allowed per 'prompts'-command text-to-speech is 600 characters.\n            Contact support if you wish this limit to be changed.\n        enableAce:\n          type: boolean\n          description: \u003e\n            If enableAce is set to true and the application has a callback URL\n            specified, you will receive an ACE callback when the call is\n            answered. When the callback is received, your platform must respond\n            with a svamlet, containing the connectcon action in order to add the\n            call to a conference or create the conference if itâ€™s the first\n            call. If it's set to false, no ACE event will be sent to your\n            backend.\n          default: false\n          example: false\n        enableDice:\n          type: boolean\n          description: \u003e\n            If enableDice is set to true and the application has a callback URL\n            specified, you will receive a DiCE callback when the call is\n            disconnected. If it's set to false, no DiCE event will be sent to\n            your backend.\n          default: false\n          example: false\n    customCalloutRequest:\n      type: object\n      description: \u003e\n        The custom callout, the server initiates a call from the servers that\n        can be controlled by specifying how the call should progress at each\n        call event.\n      properties:\n        cli:\n          type: string\n          format: e.164\n          description: \u003e\n            The number that will be displayed as caller, must be in\n            [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)\n            format.\n          example: '+14155552223333'\n        destination:\n          $ref: '#/components/schemas/destination'\n        dtmf:\n          type: string\n          description: \u003e\n            When the destination picks up, this DTMF tones will be played to the\n            callee. Valid characters in the string are \"0\"-\"9\", \"#\", and \"w\". A\n            \"w\" will render a 500 ms pause. For example, \"ww1234#w#\" will render\n            a 1s pause, the DTMF tones \"1\", \"2\", \"3\", \"4\" and \"#\" followed by a\n            0.5s pause and finally the DTMF tone for \"#\". This can be used if\n            the callout destination for instance require a conference PIN code\n            or an extension to be entered.\n          example: ww1234#w#\n        maxDuration:\n          type: integer\n          description: The maximum amount of time in seconds that the call will last.\n          example: 600\n        ice:\n          type: string\n          description: Incoming Call Event (ICE) is when a call is placed / made.\n        ace:\n          type: string\n          description: Answered Call Event (ACE) is when a call is answered.\n        pie:\n          type: string\n          description: Input Event Callback (PIE) triggered from either a user pressing a number of DTMF digits, or by the “return” command.\n        dice:\n          description: Disconnected Call Event (DiCE) is when a call is disconnected.\n          type: string\n    getCalloutResponseObj:\n      type: object\n      description: The returned call ID.\n      properties:\n        callid:\n          type: string\n          description: The returned call identifier.\n          example: adf92089-d9e8-4f14-a377-1e975f588fe4\n    SVAMLRequestBody:\n      type: object\n      description: \u003e\n        SVAML is a call control markup language. When a server receives a\n        callback event from the Sinch platform, it can respond with a SVAML\n        object to control the voice call. The following is an example of a SVAML\n        object type and its contents.\n      properties:\n        instructions:\n          type: array\n          description: \u003e\n            The collection of instructions that can perform various tasks during\n            the call. You can include as many instructions as necessary.\n          items:\n            type: object\n            properties:\n              instruction:\n                type: object\n                description: \u003e\n                  Instructions allow an application to play a message or file,\n                  start recording, and various other tasks. For more information\n                  about instructions, see the\n                  [SVAML](/docs/voice/api-reference/svaml/) documentation.\n        action:\n          type: object\n          description: \u003e\n            The action that will control the call. Each SVAML object can only\n            include one action.\ntags:\n  - name: Callouts\n    description: A callout is a call made to a phone number or app using the API.\n  - name: Calls\n    description: \u003e\n      Using the Calls endpoint, you can manage on-going calls or retrieve\n      information about a call.\n  - name: Conferences\n    description: \u003e\n      Using the Conferences endpoint, you can perform tasks like retrieving\n      information about an on-going conference, muting or unmuting participants,\n      or removing participants from a conference.\n  - name: Applications\n    description: You can use the API to manage features of applications in your project.\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/sinch.voice/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/sinch.voice/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/configuration/numbers/\": post: responses: 204: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}