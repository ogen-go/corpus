{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/scylladb/scylla-monitoring"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "grafana/plugins/camptocamp-prometheus-alertmanager-datasource/openapi.yaml",
			"byteSize": 11328,
			"content": "openapi: 3.0.0\ninfo:\n  title: simPod JSON Datasource API\n  description: API definition for the Grafana plugin simpod json datasource\n                https://github.com/simPod/grafana-json-datasource\n  version: \"0.1\"\npaths:\n  /:\n    get:\n      summary: \"Test connection\"\n      description: Used for \"Test connection\" on the datasource config page\n      operationId: api.endpoints.datasource_health\n      tags:\n        - Health Check\n      responses:\n        '200':\n          description: Positive health check\n  /search:\n    post:\n      summary: List available metrics\n      description: Used by the find metric options on the query tab in panels\n      operationId: api.endpoints.list_metrics\n      tags:\n        - Visualization\n      requestBody:\n        required: false\n        description: The body is sent when using query variables\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                target:\n                  type: string\n                  example: \"speed\"\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  oneOf:\n                    - type: string\n                      example: [\"speed\", \"pressure\", \"temperature\", \"latitude\", \"voltage\"]\n                    - type: object\n                      description: List of text and numeric representation of a metrics. For\n                                    example metrics and their (database) IDs\n                      example: [{\"text\" :\"speed\", \"value\": 1}, {\"text\" :\"temperature\", \"value\": 2}]\n                      properties:\n                        text:\n                          type: string\n                        value:\n                          type: number\n  /query:\n    post:\n      summary: Query\n      description: Returns metrics data\n      operationId: api.endpoints.query\n      tags:\n        - Visualization\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                panelId:\n                  oneOf:\n                    - type: string\n                      example: Q-1599986187842-0.164611811105138-0\n                    - type: number\n                      example: 1\n                range:\n                  type: object\n                  properties:\n                    from:\n                      type: string\n                      format: date-time\n                    to:\n                      type: string\n                      format: date-time\n                    raw:\n                      $ref: '#/components/schemas/raw-time-frame'\n                rangeRaw:\n                  $ref: '#/components/schemas/raw-time-frame'\n                interval:\n                  type: string\n                  example: 30s\n                intervalMs:\n                  type: number\n                  example: 5500\n                maxDataPoints:\n                  type: number\n                  example: 50\n                targets:\n                  type: array\n                  items:\n                    type: object\n                    required: [target]\n                    properties:\n                      target:\n                        type: string\n                        example: \"upper_25\"\n                      refId:\n                        type: string\n                      type:\n                        type: string\n                        enum: [\"timeseries\", \"table\"]\n                      data:\n                        description: arbitrary \"additional data\" the user can pass in\n                        type: object\n                scopedVars:\n                  type: object\n                  example:\n                    __interval: {'text': '1s', 'value': '1s'}\n                    __interval_ms: {'text': 1000, 'value': 1000}\n                adhocFilters:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      key:\n                        type: string\n                        example: City\n                      operator:\n                        type: string\n                        example: \"=\"\n                      value:\n                        type: string\n                        example: Berlin\n      responses:\n        '200':\n          description: \"Can be a 'timeseries' or 'table' response\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - type: object\n                      description: timeseries case\n                      required: [\"target\", \"datapoints\"]\n                      properties:\n                        target:\n                          type: string\n                          example: \"upper_25\"\n                        datapoints:\n                          type: array\n                          example: [ [2.5, 1557385723416], [3.5, 1557385731634] ]\n                          items:\n                            type: array\n                            description: First value is Metric value as a float.\n                                          Second values is unix timestamp in milliseconds\n                            minItems: 2\n                            maxItems: 2\n                            items:\n                              type: number\n                    - type: object\n                      description: table case\n                      required: [\"type\", \"columns\", \"rows\"]\n                      properties:\n                        type:\n                          type: string\n                          enum: [\"table\"]\n                        columns:\n                          type: array\n                          items:\n                            type: object\n                            required: [\"text\"]\n                            example:\n                              - {\"text\": \"Time\", \"type\": \"time\"}\n                              - {\"text\": \"Country\", \"type\": \"string\"}\n                              - {\"text\": \"Value\", \"type\": \"number\"}\n                            properties:\n                              text:\n                                type: string\n                              type:\n                                type: string\n                        rows:\n                          type: array\n                          example: [[1557385723416,\"SE\",123], [1557385731634,\"SE\", 456]]\n                          items:\n                            anyOf:\n                              - type: string\n                              - type: number\n  /annotations:\n    post:\n      summary: Annotations\n      description: should return annotations.\n      operationId: api.endpoints.annotations\n      tags:\n        - Visualization\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                range:\n                  type: object\n                  properties:\n                    from:\n                      type: string\n                      format: date-time\n                    to:\n                      type: string\n                      format: date-time\n                rangeRaw:\n                  $ref: '#/components/schemas/raw-time-frame'\n                annotation:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                      example: deploy\n                    datasource:\n                      type: string\n                      example: JSON datasource\n                    iconColor:\n                      type: string\n                      example: rgba(255, 96, 96, 1)\n                    enable:\n                      type: boolean\n                    query:\n                      type: string\n                      example: \"#deploy\"\n                variables:\n                  type: array\n                  items:\n                    anyOf:\n                      - type: number\n                      - type: string\n      responses:\n        '200':\n          description: \"Array of annotation objects\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - text\n                    - time\n                  properties:\n                    text:\n                      type: string\n                      example: text shown in body\n                    time:\n                      type: string\n                      format: timestamp\n                    title:\n                      type: string\n                    isRegion:\n                      type: boolean\n                    timeEnd:\n                      type: string\n                      description: required if isRegion is true\n                      format: timestamp\n                    tags:\n                      type: array\n                      items:\n                        type: string\n    options:\n      summary: Annotations\n      description: If the datasource is configured to connect directly to the backend,\n                    OPTIONS endpoint at responds with the correct CORS headers.\n      operationId: api.endpoints.annotation_options\n      tags:\n        - Visualization\n      responses:\n        '200':\n          description: \"CORS headers\"\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: |\n                  Access-Control-Allow-Headers:accept, content-type\n                  Access-Control-Allow-Methods:POST\n                  Access-Control-Allow-Origin:*\n  /tag-keys:\n    post:\n      summary: Keys for ad hoc filters\n      description: returns possible keys for ad hoc filters\n      operationId: api.endpoints.tag_keys\n      tags:\n        - Ad Hoc Filters\n      responses:\n        '200':\n          description: List of ad hoc filter keys\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                    text:\n                      type: string\n                example:\n                  - {\"type\":\"string\",\"text\":\"City\"}\n                  - {\"type\":\"string\",\"text\":\"Country\"}\n  /tag-values:\n    post:\n      summary: Values for ad hoc filters\n      description: returns possible values for ad hoc filters\n      operationId: api.endpoints.tag_values\n      tags:\n        - Ad Hoc Filters\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [key]\n              properties:\n                key:\n                  type: string\n      responses:\n        '200':\n          description: A valid response\ncomponents:\n  schemas:\n    raw-time-frame:\n      type: object\n      properties:\n        from:\n          type: string\n          example: now-1h\n        to:\n          type: string\n          example: now\n",
			"canonicalURL": "/github.com/scylladb/scylla-monitoring@63cbd94c0542ab9064cc1c5356676c5f136cacd6/-/blob/grafana/plugins/camptocamp-prometheus-alertmanager-datasource/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/scylladb/scylla-monitoring/blob/63cbd94c0542ab9064cc1c5356676c5f136cacd6/grafana/plugins/camptocamp-prometheus-alertmanager-datasource/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/annotations\": options: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"complex anyOf",
		"unsupported content types"
	]
}