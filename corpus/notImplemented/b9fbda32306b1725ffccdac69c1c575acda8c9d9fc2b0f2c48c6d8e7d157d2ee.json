{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/backbase-openapi-tools"
		},
		"file": {
			"name": "openapi-with-json.yaml",
			"size": 0,
			"path": "boat-scaffold/src/test/resources/openapi-with-examples/openapi-with-json.yaml",
			"byteSize": 5114,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Simple API overview\n  version: 2.0.0\ncomponents:\n  schemas:\n    ParameterMap:\n      type: object\n      additionalProperties:\n        type: object\n      example:\n        enable_payments: true\n  examples:\n    BadRequestError:\n      summary: BadRequestError\n      value:\n        message: Bad Request\n        errors:\n          - message: \"Value Exceeded. Must be between {min} and {max}.\"\n            key: common.api.shoesize\n            context:\n              max: \"50\"\n              min: \"1\"\npaths:\n  /foo:\n    description: Some random description\n    get:\n      operationId: foo\n      summary: Gets a project's parameters.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterMap'\n  /:\n    get:\n      operationId: listVersionsv2\n      summary: List API versions\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              examples:\n                foo:\n                  value:\n                    versions:\n                      - status: CURRENT\n                        updated: '2011-01-21T11:33:21Z'\n                        id: v2.0\n                        links:\n                          - href: http://127.0.0.1:8774/v2/\n                            rel: self\n                      - status: EXPERIMENTAL\n                        updated: '2013-07-23T11:33:21Z'\n                        id: v3.0\n                        links:\n                          - href: http://127.0.0.1:8774/v3/\n                            rel: self\n                bar:\n                  $ref: '#/components/examples/BadRequestError'\n\n        '300':\n          description: |-\n            300 response\n          content:\n            application/json:\n              examples:\n                foo:\n                  value:\n                    versions:\n                    - status: CURRENT\n                      updated: '2011-01-21T11:33:21Z'\n                      id: v2.0\n                      links:\n                      - href: http://127.0.0.1:8774/v2/\n                        rel: self\n                    - status: EXPERIMENTAL\n                      updated: '2013-07-23T11:33:21Z'\n                      id: v3.0\n                      links:\n                      - href: http://127.0.0.1:8774/v3/\n                        rel: self\n  /v2:\n    get:\n      operationId: getVersionDetailsv2\n      summary: Show API version details\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              examples:\n                foo:\n                  value:\n                    version:\n                      status: CURRENT\n                      updated: '2011-01-21T11:33:21Z'\n                      media-types:\n                        - base: application/xml\n                          type: application/vnd.openstack.compute+xml;version=2\n                        - base: application/json\n                          type: application/vnd.openstack.compute+json;version=2\n                      id: v2.0\n                      links:\n                        - href: http://127.0.0.1:8774/v2/\n                          rel: self\n                        - href: http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf\n                          type: application/pdf\n                          rel: describedby\n                        - href: http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl\n                          type: application/vnd.sun.wadl+xml\n                          rel: describedby\n                        - href: http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl\n                          type: application/vnd.sun.wadl+xml\n                          rel: describedby\n\n        '203':\n          description: |-\n            203 response\n          content:\n            application/json:\n              examples:\n                foo:\n                  value:\n                    version:\n                      status: CURRENT\n                      updated: '2011-01-21T11:33:21Z'\n                      media-types:\n                        - base: application/xml\n                          type: application/vnd.openstack.compute+xml;version=2\n                        - base: application/json\n                          type: application/vnd.openstack.compute+json;version=2\n                      id: v2.0\n                      links:\n                        - href: http://23.253.228.211:8774/v2/\n                          rel: self\n                        - href: http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf\n                          type: application/pdf\n                          rel: describedby\n                        - href: http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl\n                          type: application/vnd.sun.wadl+xml\n                          rel: describedby\n",
			"canonicalURL": "/github.com/Backbase/backbase-openapi-tools@b6235105d3511f2e8a3dfb8c8b1ecc48ef783c52/-/blob/boat-scaffold/src/test/resources/openapi-with-examples/openapi-with-json.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Backbase/backbase-openapi-tools/blob/b6235105d3511f2e8a3dfb8c8b1ecc48ef783c52/boat-scaffold/src/test/resources/openapi-with-examples/openapi-with-json.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}