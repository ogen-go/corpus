{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stcarrez/swagger-ada-todo"
		},
		"file": {
			"name": "todo.yaml",
			"size": 0,
			"path": "todo.yaml",
			"byteSize": 5292,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://todo.vacs.fr/v1'\n  - url: 'http://todo.vacs.fr/v1'\ninfo:\n  title: Todo API\n  description: Todo API\n  version: 1.0.0\n  termsOfService: 'https://todo.vacs.fr/terms/'\n  contact:\n    email: Stephane.Carrez@gmail.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: tasks\n    description: Tasks\npaths:\n  /:\n    get:\n      tags:\n        - tasks\n      summary: Redirect to the UI\n      description: |\n        Default operation to redirect to the UI index page.\n      operationId: redirectTodos\n      responses:\n        '302':\n          description: redirect to the UI page\n  /todos:\n    get:\n      tags:\n        - tasks\n      summary: List the available tasks\n      description: |\n        The list of tasks can be filtered by their status.\n      operationId: listTodos\n      parameters:\n        - name: status\n          in: query\n          description: Filters the tasks by their status\n          required: false\n          schema:\n            type: string\n            enum:\n              - done\n              - waiting\n              - working\n              - all\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Todo'\n        '400':\n          description: Invalid status value\n      security:\n        - todo_auth:\n            - 'read:todo'\n    post:\n      tags:\n        - tasks\n      summary: Create a todo\n      description: ''\n      operationId: createTodo\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n        '405':\n          description: Invalid input\n      security:\n        - todo_auth:\n            - 'write:todo'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                title:\n                  description: The todo title\n                  type: string\n              required:\n                - title\n  '/todos/{todoId}':\n    put:\n      tags:\n        - tasks\n      summary: Update the todo\n      description: |\n        Update the todo title and status\n      operationId: updateTodo\n      parameters:\n        - name: todoId\n          in: path\n          description: The todo identifier\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n        '404':\n          description: |\n            The todo does not exist.\n      security:\n        - todo_auth:\n            - 'write:todo'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                title:\n                  description: The todo title\n                  type: string\n                status:\n                  description: The todo status\n                  type: string\n                  enum:\n                    - working\n                    - waiting\n                    - done\n    delete:\n      tags:\n        - tasks\n      summary: Delete the todo\n      description: |\n        Delete the todo\n      operationId: deleteTodo\n      parameters:\n        - name: todoId\n          in: path\n          description: The todo identifier\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '204':\n          description: |\n            No content.\n        '404':\n          description: |\n            The todo does not exist.\n      security:\n        - todo_auth:\n            - 'write:todo'\nsecurity:\n  - todo_auth: []\nexternalDocs:\n  description: Find out more about Swagger\n  url: 'http://swagger.io'\ncomponents:\n  securitySchemes:\n    todo_auth:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: 'http://localhost:8080/v1/oauth/token'\n          scopes:\n            'write:todo': Write a todo\n            'read:todo': Read a todo\n  schemas:\n    Todo:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          description: The todo identifier\n        title:\n          type: string\n          description: The todo title\n        create_date:\n          type: string\n          format: date-time\n          description: The todo creation date\n        done_date:\n          type: string\n          format: date-time\n          description: The todo resolution date\n        status:\n          type: string\n          description: The todo state\n          enum:\n            - waiting\n            - working\n            - done\n      required:\n        - id\n        - title\n        - status\n        - create_date\n      example:\n        id: 23\n        title: Make the FOSDEM presentation\n        description: password\n        status: working\n        create_date: '2017-12-24T00:00:00.000Z'\n      xml:\n        name: Todo\n",
			"canonicalURL": "/github.com/stcarrez/swagger-ada-todo@c9ae6b6ffd1aa890ccf29d8743ad9a08f296195a/-/blob/todo.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stcarrez/swagger-ada-todo/blob/c9ae6b6ffd1aa890ccf29d8743ad9a08f296195a/todo.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/todos/{todoId}\": put: security: security \"todo_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}