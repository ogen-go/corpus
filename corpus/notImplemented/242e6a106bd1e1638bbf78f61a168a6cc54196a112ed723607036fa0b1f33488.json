{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/yashodgayashan/environment_platform"
		},
		"file": {
			"name": "openapi_v2.yaml",
			"size": 0,
			"path": "resources/openapi_v2.yaml",
			"byteSize": 24015,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Environment Platform\n  description: This is the RESTfull API specification for the environment platform which is developed for the environment ministry\n\npaths:\n  /applications:\n    get:\n      description: Return all the applications related to a user or the apointted ministry\n      parameters:\n        - in: query\n          name: user-id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: ministry-id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: draft\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TreeRemovalData\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    post:\n      description: Creates a new application or a draft\n      parameters:\n        - in: query\n          name: user-id\n          required: true\n          description: The id of the user\n          schema:\n            type: string\n        - in: query\n          name: draft\n          required: false\n          description: Draft is true when this is for only for save\n          schema:\n            type: boolean\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TreeRemovalForm\"\n      responses:\n        \"201\":\n          description: Created application(Created)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"406\":\n          description: Failure in form data verification(Not Accepteble)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error_type:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /applications/{application-id}:\n    get:\n      description: Returns the information of a specific application or a draft\n      parameters:\n        - name: application-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: draft\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: user-id\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: ministry-id\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                anyOf:\n                  - $ref: \"#/components/schemas/TreeRemovalObject\"\n                  - $ref: \"#/components/schemas/TreeRemovalDraft\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    put:\n      description: Update the information in a draft\n      parameters:\n        - name: application-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: draft\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: user-id\n          in: query\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TreeRemovalDraft\"\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Requested draft not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    delete:\n      description: Delete an application draft\n      parameters:\n        - name: application-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: draft\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: user-id\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request draft not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    patch:\n      description: Update the existing information of the request, assign a ministry or add a new field\n      parameters:\n        - name: application-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ministry-id\n          in: query\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: \"#/components/schemas/AssignMinistry\"\n                - $ref: \"#/components/schemas/Progress\"\n                - $ref: \"#/components/schemas/Field\"\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /validate:\n    post:\n      description: Validates the map and its coordinates\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Location\"\n      responses:\n        \"200\":\n          description: Validated the map object successfully(Success)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"406\":\n          description: Failure in validating the map(Not accepteble)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /conversations:\n    get:\n      description: Get all the conversations which has taken place in applications\n      parameters:\n        - name: ministry-id\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: user-id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Conversations\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /conversations/{conversation-id}:\n    get:\n      description: Get the conversation linked to a specific application\n      parameters:\n        - name: conversation-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user-id\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: ministry-id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SpecificConversation\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Conversation not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    post:\n      description: Amend a new message to the conversation\n      parameters:\n        - name: ministry-id\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: user-id\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: conversation-id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Message\"\n      responses:\n        \"201\":\n          description: Amended message(Created)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Conversation not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"500\":\n          description: Server error(Internal Server Error)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n\ncomponents:\n  schemas:\n    TreeRemovalData:\n      type: array\n      items:\n        type: object\n        properties:\n          application-id:\n            type: string\n          title:\n            type: string\n            description: The title of the request\n          reason:\n            type: string\n            description: Reason for tree removal\n          applicationCreatedDate:\n            $ref: \"#/components/schemas/Date\"\n          status:\n            $ref: \"#/components/schemas/Progress\"\n          isFlagged:\n            type: boolean\n            description: The application is flagged by the user. (The user might be admin, ministry or user)\n    TreeRemovalForm:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the request\n        applicationCreatedDate:\n          $ref: \"#/components/schemas/Date\"\n        removalDate:\n          $ref: \"#/components/schemas/Date\"\n          description: Removal date of the trees\n        reason:\n          type: string\n        type:\n          type: string\n        requestedBy:\n          type: string\n          description: The person who is requesting\n        permitRequired:\n          type: boolean\n        landOwner:\n          type: string\n          description: Name of the landowner\n        treeRemovalAutrhority:\n          type: string\n        city:\n          type: string\n        district:\n          type: string\n        nameOfTheLand:\n          type: string\n        planNumber:\n          type: string\n        location:\n          $ref: \"#/components/schemas/Location\"\n        treeInformation:\n          type: array\n          description: Information of the trees to be cut off\n          items:\n            $ref: \"#/components/schemas/TreeInformation\"\n    TreeRemovalObject:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the title\n        applicationCreatedDate:\n          $ref: \"#/components/schemas/Date\"\n        removalDate:\n          $ref: \"#/components/schemas/Date\"\n        reason:\n          type: string\n        type:\n          type: string\n        requestedBy:\n          type: string\n          description: Name of the Requester\n        permitRequired:\n          type: boolean\n        landOwner:\n          type: string\n          description: Name of the landowner\n        treeRemovalAutrhority:\n          type: string\n        city:\n          type: string\n        district:\n          type: string\n        nameOfTheLand:\n          type: string\n        planNumber:\n          type: string\n        location:\n          type: array\n          description: All the points in the polygon\n          items:\n            type: object\n            properties:\n              latitude:\n                type: number\n              longitude:\n                type: number\n        treeInformation:\n          type: array\n          description: Information of the trees to be cut off\n          items:\n            $ref: \"#/components/schemas/TreeInformation\"\n        progress:\n          type: array\n          items:\n            type: object\n            properties:\n              authority:\n                type: string\n                description: This is the respective authority\n              status:\n                type: string\n                description: Current status of the request processed by a particular authority\n        addedFields:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Field\"\n    TreeRemovalDraft:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the title\n        removalDate:\n          $ref: \"#/components/schemas/Date\"\n        reason:\n          type: string\n        type:\n          type: string\n        requestedBy:\n          type: string\n          description: Name of the Requester\n        permitRequired:\n          type: boolean\n        landOwner:\n          type: string\n          description: Name of the landowner\n        treeRemovalAutrhority:\n          type: string\n        city:\n          type: string\n        district:\n          type: string\n        nameOfTheLand:\n          type: string\n        planNumber:\n          type: string\n        location:\n          type: array\n          description: All the points in the polygon\n          items:\n            type: object\n            properties:\n              latitude:\n                type: number\n              longitude:\n                type: number\n        treeInformation:\n          type: array\n          description: Information of the trees to be cut off\n          items:\n            $ref: \"#/components/schemas/TreeInformation\"\n    Conversations:\n      type: array\n      items:\n        type: object\n        properties:\n          title:\n            type: string\n            description: This is the request title of the converstion\n          last_message:\n            type: object\n            description: The last message recieved or sent\n            properties:\n              user:\n                type: string\n                description: The person who sent the message\n              time:\n                type: string\n                description: The time which the message was sent\n              hasRead:\n                type: boolean\n                description: Whether the message is read or not\n              message:\n                type: string\n          completed:\n            type: boolean\n            description: Whether the application is resolved or not\n    SpecificConversation:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the request\n        messages:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Message\"\n        completed:\n          type: boolean\n          description: Whether the conversation has ended or not\n    Message:\n      type: object\n      properties:\n        user:\n          type: string\n          description: The person who sent the message\n        time:\n          type: string\n          description: The time which the message was sent\n        hasRead:\n          type: boolean\n          description: Whether the message is read or not\n        message:\n          type: string\n    Location:\n      type: array\n      description: All the points in the polygon\n      items:\n        type: object\n        properties:\n          latitude:\n            type: number\n          longitude:\n            type: number\n    Date:\n      type: object\n      properties:\n        year:\n          type: integer\n        month:\n          type: integer\n        day:\n          type: integer\n        hour:\n          type: integer\n        minute:\n          type: integer\n    Progress:\n      type: object\n      properties:\n        ministry-name:\n          type: string\n        progress:\n          type: string\n        reason:\n          type: string\n          description: The reason field is only added if the application is cancelled.\n    TreeInformation:\n      type: object\n      properties:\n        species:\n          type: string\n        treeNumber:\n          type: string\n        heightType:\n          type: string\n          enum: [\"Merchantable\", \"Top\"]\n        height:\n          type: number\n          description: Height (in m)\n        girth:\n          type: number\n          description: The girth at the breast height and this should be in centimeters\n        logDetails:\n          type: array\n          items:\n            type: object\n            properties:\n              minGirth:\n                type: number\n                description: Minimum girth of the log\n              maxGirth:\n                type: number\n                description: Maximum girth of the log\n              height:\n                type: number\n                description: Length of the log\n    AssignMinistry:\n      type: object\n      properties:\n        ministryName:\n          type: string\n        assignedBy:\n          type: string\n          description: The person who assigned the ministry\n        assignedTime:\n          $ref: \"#/components/schemas/Date\"\n    Field:\n      type: object\n      properties:\n        fieldName:\n          type: string\n        data:\n          type: string\n          description: This is the data regarding the document and this may be a document\n        personAdded:\n          type: string\n          description: Ministry id\n        dateAdded:\n          $ref: \"#/components/schemas/Date\"\n",
			"canonicalURL": "/github.com/yashodgayashan/environment_platform@b4c06ae18e77deaba357b08958ac34181f1d5532/-/blob/resources/openapi_v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/yashodgayashan/environment_platform/blob/b4c06ae18e77deaba357b08958ac34181f1d5532/resources/openapi_v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/applications/{application-id}\": get: responses: 200: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}