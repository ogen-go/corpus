{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/egovernments/DIGIT-OSS"
		},
		"file": {
			"name": "indexer-contract.yml",
			"size": 0,
			"path": "core-services/docs/indexer-contract.yml",
			"byteSize": 9441,
			"content": "openapi: 3.0.1\ninfo:\n  title: Indexer service Api Documentation\n  description: APIs available to initiate index jobs\n  termsOfService: urn:tos\n  contact:\n    name: Abhishek Jain\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  version: 1.1.0\nservers:\n- url: /egov-indexer/index-operations\ntags:\n- name: egov-indexer service\npaths:\n  /index-operations/_legacyindex:\n    post:\n      tags:\n      - egov-indexer service\n      summary: This endpoint is used to start legacy index job to reindex records\n        from DB. The data is fetched from DB by calling api mentioned in request in\n        batches. The is useful when some record is present in DB but missing on index.\n      description: Initiate legacy index job to index data from DB fetched by calling\n        some api\n      operationId: legacyIndexDataUsingPOST\n      requestBody:\n        description: legacyIndexRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LegacyIndexRequest'\n        required: true\n      responses:\n        200:\n          description: Success response is calculated tax.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/LegacyIndexResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: legacyIndexRequest\n  /index-operations/_reindex:\n    post:\n      tags:\n      - egov-indexer service\n      summary: This endpoint is used to start indexing job to reindex records from\n        one index to another index.\n      description: Reindex data from one index to another\n      operationId: reIndexDataUsingPOST\n      requestBody:\n        description: reindexRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReindexRequest'\n        required: true\n      responses:\n        200:\n          description: Success response is calculated tax.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ReindexResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: reindexRequest\n  /index-operations/{key}/_index:\n    post:\n      tags:\n      - egov-indexer service\n      summary: This endpoint is used to index one record on a index. The information\n        to pick correct config is provided with the data to be indexed.\n      description: Index request to index one record on an index\n      operationId: produceIndexJsonUsingPOST\n      parameters:\n      - name: key\n        in: path\n        description: key\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: indexJson\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: indexJson\ncomponents:\n  schemas:\n    Role:\n      required:\n      - code\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        code:\n          type: string\n    ReindexResponse:\n      type: object\n      properties:\n        ResponseInfo:\n          $ref: '#/components/schemas/ResponseInfo'\n        url:\n          type: string\n        totalRecordsToBeIndexed:\n          type: number\n        estimatedTime:\n          type: string\n        message:\n          type: string\n        jobId:\n          type: string\n    LegacyIndexResponse:\n      type: object\n      properties:\n        ResponseInfo:\n          $ref: '#/components/schemas/ResponseInfo'\n        url:\n          type: string\n        message:\n          type: string\n        jobId:\n          type: string\n    ResponseInfo:\n      type: object\n      properties:\n        apiId:\n          type: string\n        ver:\n          type: string\n        ts:\n          type: number\n        resMsgId:\n          type: string\n        msgId:\n          type: string\n        status:\n          type: string\n    ReindexRequest:\n      type: object\n      properties:\n        RequestInfo:\n          $ref: '#/components/schemas/RequestInfo'\n        batchSize:\n          type: integer\n          format: int32\n        index:\n          type: string\n        jobId:\n          type: string\n        reindexTopic:\n          type: string\n        startTime:\n          type: integer\n          format: int64\n        tenantId:\n          type: string\n        totalRecords:\n          type: integer\n          format: int32\n        type:\n          type: string\n    User:\n      required:\n      - emailId\n      - id\n      - mobileNumber\n      - name\n      - roles\n      - tenantId\n      - type\n      - userName\n      - uuid\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        userName:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        mobileNumber:\n          type: string\n        emailId:\n          type: string\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/Role'\n        tenantId:\n          type: string\n        uuid:\n          type: string\n    APIDetails:\n      type: object\n      properties:\n        customQueryParam:\n          type: string\n        paginationDetails:\n          $ref: '#/components/schemas/PaginationDetails'\n        request:\n          type: object\n          properties: {}\n        responseJsonPath:\n          type: string\n        tenantIdForOpenSearch:\n          type: string\n        uri:\n          type: string\n    ModelAndView:\n      type: object\n      properties:\n        empty:\n          type: boolean\n        model:\n          type: object\n          properties: {}\n        modelMap:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        reference:\n          type: boolean\n        status:\n          type: string\n          enum:\n          - \"100\"\n          - \"101\"\n          - \"102\"\n          - \"103\"\n          - \"200\"\n          - \"201\"\n          - \"202\"\n          - \"203\"\n          - \"204\"\n          - \"205\"\n          - \"206\"\n          - \"207\"\n          - \"208\"\n          - \"226\"\n          - \"300\"\n          - \"301\"\n          - \"302\"\n          - \"303\"\n          - \"304\"\n          - \"305\"\n          - \"307\"\n          - \"308\"\n          - \"400\"\n          - \"401\"\n          - \"402\"\n          - \"403\"\n          - \"404\"\n          - \"405\"\n          - \"406\"\n          - \"407\"\n          - \"408\"\n          - \"409\"\n          - \"410\"\n          - \"411\"\n          - \"412\"\n          - \"413\"\n          - \"414\"\n          - \"415\"\n          - \"416\"\n          - \"417\"\n          - \"418\"\n          - \"419\"\n          - \"420\"\n          - \"421\"\n          - \"422\"\n          - \"423\"\n          - \"424\"\n          - \"426\"\n          - \"428\"\n          - \"429\"\n          - \"431\"\n          - \"451\"\n          - \"500\"\n          - \"501\"\n          - \"502\"\n          - \"503\"\n          - \"504\"\n          - \"505\"\n          - \"506\"\n          - \"507\"\n          - \"508\"\n          - \"509\"\n          - \"510\"\n          - \"511\"\n        view:\n          $ref: '#/components/schemas/View'\n        viewName:\n          type: string\n    RequestInfo:\n      required:\n      - action\n      - apiId\n      - authToken\n      - correlationId\n      - did\n      - key\n      - msgId\n      - ts\n      - userInfo\n      - ver\n      type: object\n      properties:\n        apiId:\n          type: string\n        ver:\n          type: string\n        ts:\n          type: integer\n          format: int64\n        action:\n          type: string\n        did:\n          type: string\n        key:\n          type: string\n        msgId:\n          type: string\n        authToken:\n          type: string\n        correlationId:\n          type: string\n        userInfo:\n          $ref: '#/components/schemas/User'\n    View:\n      type: object\n      properties:\n        contentType:\n          type: string\n    LegacyIndexRequest:\n      type: object\n      properties:\n        RequestInfo:\n          $ref: '#/components/schemas/RequestInfo'\n        apiDetails:\n          $ref: '#/components/schemas/APIDetails'\n        jobId:\n          type: string\n        legacyIndexTopic:\n          type: string\n        startTime:\n          type: integer\n          format: int64\n        tenantId:\n          type: string\n        totalRecords:\n          type: integer\n          format: int32\n    PaginationDetails:\n      type: object\n      properties:\n        maxPageSize:\n          type: integer\n          format: int32\n        offsetKey:\n          type: string\n        sizeKey:\n          type: string\n        startingOffset:\n          type: integer\n          format: int32\n",
			"canonicalURL": "/github.com/egovernments/DIGIT-OSS@3daad3c513a2b896ae975d8cde961816595a1c58/-/blob/core-services/docs/indexer-contract.yml",
			"externalURLs": [
				{
					"url": "https://github.com/egovernments/DIGIT-OSS/blob/3daad3c513a2b896ae975d8cde961816595a1c58/core-services/docs/indexer-contract.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/index-operations/{key}/_index\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}