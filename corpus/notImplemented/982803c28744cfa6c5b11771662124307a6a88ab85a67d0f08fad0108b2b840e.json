{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "iqualify.com-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/iqualify.com-v1-swagger.yaml",
			"byteSize": 60021,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: hello_iqualify\n  description: \u003e+\n    The iQualify API offers management and analytics responses for building\n\n    learning experiences using your iQualify instance data.\n\n\n    Once youâ€™ve registered with iQualify, you can request an API access token by\n\n    navigating to the API access section of the \"Account Settings\" area.\n\n\n    Find out how to [Request your API access token](https://intercom.help/iqualify/iqualify-set-up/authentication/requesting-your-api-access-token) on our Knowledge base.\n\n\n    All endpoints are only accessible via https and are located at\n\n    api.iqualify.com. For instance: you can find your current offerings by\n\n    accessing the following URL:\n\n        https://api.iqualify.com/v1/offerings/current\n\n  title: iQualify\n  version: v1\n  x-apisguru-categories:\n    - education\n  x-logo:\n    url: https://twitter.com/hello_iqualify/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://api.iqualify.com/v1/docs.json\n      version: \"2.0\"\n  x-providerName: iqualify.com\nsecurity:\n  - jwt: []\ntags: []\npaths:\n  /:\n    get:\n      description: Responds with all supported endpoints URLs for v1 version.\n      responses:\n        \"200\":\n          description: Supported endpoints\n      summary: List supported endpoints URLs\n      tags:\n        - API info\n  /course-mappings:\n    get:\n      description: Returns all the course mappings\n      responses:\n        \"200\":\n          description: Course Mappings\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  type: string\n                title: course mappings\n                type: object\n      summary: Find course mappings\n      tags:\n        - course mappings\n  \"/course-mappings/{offeringId}\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: Course Mapping\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Finds course mappings by offering id\n      tags:\n        - course mappings\n  \"/course-mappings/{offeringId}/{externalCourseId}\":\n    delete:\n      description: Removes the course mapping between the offering and the external course\n        id\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/externalCourseId\"\n      responses:\n        \"200\":\n          description: Course Mapping\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Remove course mapping\n      tags:\n        - course mappings\n    put:\n      description: Creates a mapping between the offering and the external course id\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/externalCourseId\"\n      responses:\n        \"200\":\n          description: Course Mapping\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Add course mapping\n      tags:\n        - course mappings\n  /courses:\n    get:\n      description: Responds with courses that can be activated (made to an offering).\n      responses:\n        \"200\":\n          description: All courses that can be activated\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CourseResponse\"\n                title: Courses\n                type: array\n      summary: Find courses\n      tags:\n        - courses\n  \"/courses/{contentId}\":\n    get:\n      parameters:\n        - description: The content Id\n          in: path\n          name: contentId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Course detail\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CourseMetaResponse\"\n      summary: Find course by content id\n      tags:\n        - courses\n  \"/courses/{contentId}/metadata/category\":\n    put:\n      parameters:\n        - description: The content Id\n          in: path\n          name: contentId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Category\"\n      responses:\n        \"200\":\n          description: Course detail\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CourseMetaResponse\"\n      summary: Update course category\n      tags:\n        - courses\n  \"/courses/{contentId}/metadata/level\":\n    put:\n      parameters:\n        - description: The content Id\n          in: path\n          name: contentId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Level\"\n      responses:\n        \"200\":\n          description: Course detail\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CourseMetaResponse\"\n      summary: Update course level\n      tags:\n        - courses\n  \"/courses/{contentId}/metadata/tags\":\n    put:\n      parameters:\n        - description: The content Id\n          in: path\n          name: contentId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Tags\"\n      responses:\n        \"200\":\n          description: Course detail\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CourseMetaResponse\"\n      summary: Update course tags\n      tags:\n        - courses\n  \"/courses/{contentId}/metadata/topic\":\n    put:\n      parameters:\n        - description: The content Id\n          in: path\n          name: contentId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Topic\"\n      responses:\n        \"200\":\n          description: Course detail\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CourseMetaResponse\"\n      summary: Update course topic\n      tags:\n        - courses\n  \"/courses/{contentId}/permissions\":\n    post:\n      parameters:\n        - description: The content Id\n          in: path\n          name: contentId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/CourseUser\"\n              title: users to be added to the offering.\n              type: array\n        required: true\n      responses:\n        \"201\":\n          description: user successfully added to the course with the specified permission.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CourseUser\"\n      summary: Update course access\n      tags:\n        - courses\n  /offerings:\n    get:\n      description: Responds with all offerings for your organisation.\n      responses:\n        \"200\":\n          description: all offerings (current, past and future ones)\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingResponse\"\n                title: Offerings\n                type: array\n      summary: Get current, past and future offerings\n      tags:\n        - offerings\n    post:\n      description: Creates new offering.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OfferingRequired\"\n        required: true\n      responses:\n        \"201\":\n          description: offering created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingMetadataResponse\"\n      summary: Create offering\n      tags:\n        - offerings\n  /offerings/current:\n    get:\n      description: Responds with current (active) offerings for your organisation. Offering\n        is current when today's date is between (inclusive) it's `start` and\n        `end` date.\n      responses:\n        \"200\":\n          description: current offerings\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingResponse\"\n                title: Offerings\n                type: array\n      summary: Find active offerings\n      tags:\n        - offerings\n  /offerings/future:\n    get:\n      description: Responds with future (inactive) offerings for your organisation. Future\n        offerings have their `start` date after today's date (inclusive).\n      responses:\n        \"200\":\n          description: future offerings\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingResponse\"\n                title: Offerings\n                type: array\n      summary: Find future offerings\n      tags:\n        - offerings\n  /offerings/past:\n    get:\n      description: Responds with past (inactive) offerings for your organisation. Past\n        offerings have their `end` date before today's date (inclusive).\n      responses:\n        \"200\":\n          description: past offerings\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingResponse\"\n                title: Offerings\n                type: array\n      summary: Find past offerings\n      tags:\n        - offerings\n  \"/offerings/{offeringId}\":\n    get:\n      description: Returns an offering matching the offeringId.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: offering\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingMetadataResponse\"\n      summary: Find offering by id\n      tags:\n        - offerings\n    patch:\n      description: Updates the offering.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Offering\"\n        required: true\n      responses:\n        \"200\":\n          description: offering updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingMetadataResponse\"\n      summary: Update offering\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/analytics/channels/{channelId}/comments\":\n    get:\n      description: Responds with a list of all comments in any of the posts for a channel\n        in a offering\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/channelId\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Comment\"\n                title: Comments\n                type: array\n      summary: Find comments\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/channels/{channelId}/posts\":\n    get:\n      description: Responds with a list of posts for a channel in a offering\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/channelId\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Post\"\n                title: Posts\n                type: array\n      summary: Find posts\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/channels/{channelId}/replies\":\n    get:\n      description: Responds with a list of all replies in any of the posts for a channel in\n        a offering\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/channelId\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Comment\"\n                title: Comments\n                type: array\n      summary: Find replies\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/learners-progress\":\n    get:\n      description: Responds with learners progress.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: Learners progress\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LearnerProgressResponse\"\n                title: LearnersProgress\n                type: array\n      summary: Find learners progress\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/marks/assignments\":\n    get:\n      description: Responds with assignments marks.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: Assignments marks\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AssignmentMarkResponse\"\n                title: AssignmentsMarks\n                type: array\n      summary: Find assignments marks\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/marks/quizzes\":\n    get:\n      description: Responds with quizzes marks.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: Quizzes marks\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/QuizMarkResponse\"\n                title: QuizzesMarks\n                type: array\n      summary: Find quizzes marks\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/pulses/\":\n    get:\n      description: Returns ids of all pulses that learners responded to.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: Pulses' ids\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Find pulses ids\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/pulses/responses\":\n    get:\n      description: Returns pulses' responses matching the offeringId.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: Filter pulse responses by type.\n          in: query\n          name: pulseType\n          schema:\n            type: string\n            enum:\n              - submit_text\n              - MCQ\n              - spatial_triangular\n              - spatial_planar\n              - spatial_linear\n        - description: Filter pulse responses by responseTime. Lower then (`lt`), lower\n            then or equal (`lte`), greater then (`gt`) and greater then or equal\n            (`gte`) operators are available. Example of filtering by time range\n            __responseTime=gte\\_\\_2017-03-14T07:30:00Z\u0026responseTime=lte\\_\\_2017-03-16T09:30:00Z__\n          in: query\n          name: responseTime\n          schema:\n            type: string\n            minLength: 1\n      responses:\n        \"200\":\n          description: All pulses' responses\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PulseResponse\"\n                title: Pulses\n                type: array\n      summary: Find pulses by offeringId\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/pulses/{pulseId}/responses\":\n    get:\n      description: Returns pulse's responses matching the offeringId and pulseId.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: pulse's base id\n          in: path\n          name: pulseId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Pulse data matching pulseId\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PulseResponse\"\n                title: Pulses\n                type: array\n      summary: Find pulses by offeringId and pulseId\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/analytics/submissions/assignments\":\n    get:\n      description: Responds with assignments submissions.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: Assignments submissions\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AssignmentMarkResponse\"\n                title: AssignmentsSubmissions\n                type: array\n      summary: Find submissions to assignments, including marks if any\n      tags:\n        - analytics\n  \"/offerings/{offeringId}/assessments\":\n    get:\n      description: Get all offering's assessments\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: offering's assessments\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AssessmentResponse\"\n                title: Assessments\n                type: array\n      summary: Find offering's assessments\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/assessments/{assessmentId}\":\n    patch:\n      description: Modifies assessment details\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: assessment's id\n          in: path\n          name: assessmentId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Assessment\"\n        required: true\n      responses:\n        \"200\":\n          description: assessment successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssessmentResponse\"\n      summary: Update assessment details\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/assessments/{assessmentId}/documents\":\n    post:\n      description: Uploads assessment document file\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: assessment's id\n          in: path\n          name: assessmentId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: Assessment document\n                  type: string\n                  format: binary\n              required:\n                - file\n      responses:\n        \"201\":\n          description: assessment document successfully created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Document\"\n      summary: Upload new document\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/assessments/{assessmentId}/documents/{documentId}\":\n    delete:\n      description: Removes assessment document file\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: assessment's id\n          in: path\n          name: assessmentId\n          required: true\n          schema:\n            type: string\n        - description: documents's id\n          in: path\n          name: documentId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: assessment document successfully removed\n      summary: Remove the document\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/channels\":\n    get:\n      description: Responds with a list of channels in a offering\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: Succesful response\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChannelResponse\"\n                title: List of channels in a offering\n                type: array\n      summary: Find channels\n      tags:\n        - channels\n    post:\n      description: Adds new channel to the offering\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChannelRequired\"\n        required: true\n      responses:\n        \"201\":\n          description: channel successfully added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChannelResponse\"\n      summary: Add channel\n      tags:\n        - channels\n  \"/offerings/{offeringId}/channels/{channelId}\":\n    patch:\n      description: Updates the channel\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/channelId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Channel\"\n        required: true\n      responses:\n        \"200\":\n          description: channel successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChannelResponse\"\n      summary: Update channel\n      tags:\n        - channels\n  \"/offerings/{offeringId}/cover-image\":\n    put:\n      description: Replaces offering's cover image with uploaded image\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: Cover image, required size is 1280x380px\n                  type: string\n                  format: binary\n              required:\n                - file\n      responses:\n        \"200\":\n          description: cover image successfully uploaded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingResponse\"\n      summary: Set offering's cover image\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/groups\":\n    get:\n      description: Responds with a list of assessment groups in an offering\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      responses:\n        \"200\":\n          description: Succesful response\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AssessmentGroupResponse\"\n                title: List of assessment groups in an offering\n                type: array\n      summary: Find assessment groups\n      tags:\n        - assessment groups\n    post:\n      description: Creates a new assessment group in a offering\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssessmentGroupRequired\"\n        required: true\n      responses:\n        \"201\":\n          description: assessment group successfully added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssessmentGroupResponse\"\n      summary: Add an assessment group\n      tags:\n        - assessment groups\n  \"/offerings/{offeringId}/groups/{groupId}/learners\":\n    get:\n      description: Responds with a list of learners for the assessment group\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/groupId\"\n      responses:\n        \"200\":\n          description: Succesful response\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserResponse\"\n                title: List of learners\n                type: array\n      summary: Find learners in an assessment group\n      tags:\n        - assessment groups\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/groupId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                email:\n                  type: string\n        required: true\n      responses:\n        \"201\":\n          description: Succesful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n      summary: Add a learner to an assessment group\n      tags:\n        - assessment groups\n  \"/offerings/{offeringId}/groups/{groupId}/learners/{userEmail}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/groupId\"\n        - $ref: \"#/components/parameters/userEmail\"\n      responses:\n        \"204\":\n          description: user successfully removed from the assessment group\n      summary: Remove a learner from an assessment group\n      tags:\n        - assessment groups\n  \"/offerings/{offeringId}/metadata/category\":\n    put:\n      description: Updates the offering category metadata.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Category\"\n      responses:\n        \"200\":\n          description: offering updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingMetadataResponse\"\n      summary: Update offering category metadata\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/metadata/level\":\n    put:\n      description: Updates the offering level metadata.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Level\"\n      responses:\n        \"200\":\n          description: offering updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingMetadataResponse\"\n      summary: Update offering level metadata\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/metadata/tags\":\n    put:\n      description: Updates the offering tags metadata.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Tags\"\n      responses:\n        \"200\":\n          description: offering updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingMetadataResponse\"\n      summary: Update offering tags metadata\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/metadata/topic\":\n    put:\n      description: Updates the offering topic metadata.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Topic\"\n      responses:\n        \"200\":\n          description: offering updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingMetadataResponse\"\n      summary: Update offering topic metadata\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/study-plan\":\n    put:\n      description: Replaces offering's study plan with uploaded file\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: Study plan\n                  type: string\n                  format: binary\n              required:\n                - file\n      responses:\n        \"200\":\n          description: study plan successfully uploaded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingResponse\"\n      summary: Set offering's study plan\n      tags:\n        - offerings\n  \"/offerings/{offeringId}/users\":\n    get:\n      description: Responds with a list of offering's users (facilitators, learners and\n        markers).\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: If true, facilitators are included in the results.\n          in: query\n          name: facilitators\n          schema:\n            type: boolean\n            default: true\n        - description: If true, learners are included in the results.\n          in: query\n          name: learners\n          schema:\n            type: boolean\n            default: true\n        - description: If true, markers are included in the results.\n          in: query\n          name: markers\n          schema:\n            type: boolean\n            default: true\n      responses:\n        \"200\":\n          description: offering's users\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingUserResponse\"\n                title: offering's users\n                type: array\n      summary: Find offering's users\n      tags:\n        - offering users\n    post:\n      description: Adds one or more users to the offering.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/OfferingUser\"\n              title: users to be added to the offering.\n              type: array\n        required: true\n      responses:\n        \"201\":\n          description: user successfully added to the offering\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferingUser\"\n      summary: Adds user to the offering.\n      tags:\n        - offering users\n  \"/offerings/{offeringId}/users/{evaluatorEmail}/evaluates\":\n    delete:\n      description: Remove learners from evaluator's list.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: evaluator's id\n          in: path\n          name: evaluatorEmail\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Learners\"\n      responses:\n        \"200\":\n          description: learners evaluated by the peer evaluator\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingUser\"\n                title: learners evaluated by the peer evaluator\n                type: array\n      summary: Remove learners from evaluator's list.\n      tags:\n        - offering users\n    get:\n      description: Get learners evaluated by the peer evaluator.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: evaluators's email\n          in: path\n          name: evaluatorEmail\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: learners evaluated by the peer evaluator\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingUser\"\n                title: learners evaluated by the peer evaluator\n                type: array\n      summary: Find learners evaluated by the peer evaluator.\n      tags:\n        - offering users\n    post:\n      description: Add learners to be evaluated by the peer evaluator.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: evaluator's email\n          in: path\n          name: evaluatorEmail\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Learners\"\n      responses:\n        \"200\":\n          description: learners evaluated by the peer evaluator\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingUser\"\n                title: learners evaluated by the peer evaluator\n                type: array\n      summary: Add learners to be evaluated by the peer evaluator.\n      tags:\n        - offering users\n  \"/offerings/{offeringId}/users/{markerEmail}/marks\":\n    delete:\n      description: Remove learners from marker's list.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: marker's email\n          in: path\n          name: markerEmail\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Learners\"\n      responses:\n        \"200\":\n          description: learners marked by the marker\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingUser\"\n                title: learners marked by the marker\n                type: array\n      summary: Remove learners from marker's list.\n      tags:\n        - offering users\n    get:\n      description: Get learners marked by the marker.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: marker's email\n          in: path\n          name: markerEmail\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: learners marked by the marker\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingUser\"\n                title: learners marked by the marker\n                type: array\n      summary: Find Learners marked by the marker.\n      tags:\n        - offering users\n    post:\n      description: Add learners to be marked by the marker.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - description: marker's email\n          in: path\n          name: markerEmail\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Learners\"\n      responses:\n        \"200\":\n          description: learners marked by the marker\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingUser\"\n                title: learners marked by the marker\n                type: array\n      summary: Add learners to be marked by the marker.\n      tags:\n        - offering users\n  \"/offerings/{offeringId}/users/{userEmail}\":\n    delete:\n      description: Removes user from the offering.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/userEmail\"\n      responses:\n        \"204\":\n          description: user successfully removed from the offering\n      summary: Removes user from the offering.\n      tags:\n        - offering users\n  \"/offerings/{offeringId}/users/{userEmail}/invite-email\":\n    post:\n      description: Re-sends the invitation e-mail to the user.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/userEmail\"\n      responses:\n        \"204\":\n          description: successfully requested invitation e-mail sending\n      summary: Re-sends the invitation e-mail.\n      tags:\n        - offering users\n  \"/offerings/{offeringId}/users/{userEmail}/submissions/open-response\":\n    get:\n      description: Gets user's open response assignment submissions.\n      parameters:\n        - $ref: \"#/components/parameters/offeringId\"\n        - $ref: \"#/components/parameters/userEmail\"\n      responses:\n        \"200\":\n          description: user open response submission and mark details\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Assignments\"\n                title: user's assignments\n                type: array\n      summary: Gets user's open response assignment submissions\n      tags:\n        - submissions\n  /users:\n    post:\n      description: Adds new user\n      requestBody:\n        $ref: \"#/components/requestBodies/User\"\n      responses:\n        \"201\":\n          description: user added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n      summary: Add new user\n      tags:\n        - users\n  /users/all/progress:\n    get:\n      description: Returns offering progress for each learner\n      parameters:\n        - description: Returns only the first n results.\n          in: query\n          name: $top\n          schema:\n            type: integer\n            default: 20\n        - description: Sorts the results.\n          in: query\n          name: $orderby\n          schema:\n            type: string\n        - description: Filters the results, based on a Boolean condition.\n          in: query\n          name: $filter\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Learners progress\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      offerings:\n                        additionalProperties:\n                          properties:\n                            name:\n                              type: string\n                          title: Offering\n                          type: object\n                        title: Offerings detail\n                        type: object\n                      progress:\n                        items:\n                          $ref: \"#/components/schemas/LearnerResponse\"\n                        title: Learners\n                        type: array\n                  top:\n                    type: integer\n      summary: Learner progress for all offerings\n      tags:\n        - analytics\n  \"/users/{userEmail}\":\n    get:\n      description: Returns a user matching the email.\n      parameters:\n        - $ref: \"#/components/parameters/userEmail\"\n      responses:\n        \"200\":\n          description: user data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n      summary: Find user by email\n      tags:\n        - users\n    patch:\n      description: Updates the user\n      parameters:\n        - $ref: \"#/components/parameters/userEmail\"\n      requestBody:\n        $ref: \"#/components/requestBodies/User\"\n      responses:\n        \"200\":\n          description: user updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n      summary: Update the user\n      tags:\n        - users\n  \"/users/{userEmail}/offerings\":\n    get:\n      description: Responds with all user's offerings.\n      parameters:\n        - $ref: \"#/components/parameters/userEmail\"\n      responses:\n        \"200\":\n          description: user's offerings\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OfferingResponse\"\n                title: Offerings\n                type: array\n      summary: Get user's offerings\n      tags:\n        - users\n  \"/users/{userEmail}/permissions/{permissionName}\":\n    post:\n      description: Adds permission to user\n      parameters:\n        - $ref: \"#/components/parameters/userEmail\"\n        - $ref: \"#/components/parameters/permissionName\"\n      responses:\n        \"200\":\n          description: permission successfully added to user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n      summary: Add permission to user\n      tags:\n        - users\nservers:\n  - url: https://api.iqualify.com/v1\ncomponents:\n  parameters:\n    channelId:\n      description: channel's id\n      in: path\n      name: channelId\n      required: true\n      schema:\n        type: string\n    externalCourseId:\n      description: external course's id\n      in: path\n      name: externalCourseId\n      required: true\n      schema:\n        type: string\n    groupId:\n      description: Assessment group id\n      in: path\n      name: groupId\n      required: true\n      schema:\n        type: string\n        pattern: ^[0-9a-fA-F]{24}$\n    offeringId:\n      description: offering's id\n      in: path\n      name: offeringId\n      required: true\n      schema:\n        type: string\n    permissionName:\n      description: permission name\n      in: path\n      name: permissionName\n      required: true\n      schema:\n        type: string\n        enum:\n          - builder\n          - manager\n    userEmail:\n      description: user's email\n      in: path\n      name: userEmail\n      required: true\n      schema:\n        type: string\n        format: email\n  requestBodies:\n    Topic:\n      content:\n        application/json:\n          schema:\n            additionalProperties: false\n            properties:\n              topic:\n                type: string\n            type: object\n      required: true\n    Learners:\n      content:\n        application/json:\n          schema:\n            items:\n              type: string\n            type: array\n      description: array of learners e-mails\n      required: true\n    Tags:\n      content:\n        application/json:\n          schema:\n            additionalProperties: false\n            properties:\n              tags:\n                items:\n                  type: string\n                type: array\n            type: object\n      required: true\n    Level:\n      content:\n        application/json:\n          schema:\n            additionalProperties: false\n            properties:\n              level:\n                type: string\n            type: object\n      required: true\n    Category:\n      content:\n        application/json:\n          schema:\n            additionalProperties: false\n            properties:\n              category:\n                type: string\n            type: object\n      required: true\n    User:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/User\"\n      required: true\n  securitySchemes:\n    jwt:\n      in: header\n      name: Authorization\n      type: apiKey\n  schemas:\n    Assessment:\n      properties:\n        content:\n          type: string\n        dueDate:\n          format: date-time\n          type: string\n        markNumber:\n          minLength: 1\n          type: string\n        markType:\n          minLength: 1\n          type: string\n        openDate:\n          format: date-time\n          type: string\n    AssessmentGroupRequired:\n      properties:\n        title:\n          default: \"my group #1\"\n          minLength: 1\n          type: string\n      required:\n        - title\n    AssessmentGroupResponse:\n      properties:\n        createdAt:\n          type: string\n        id:\n          type: string\n        title:\n          minLength: 1\n          type: string\n    AssessmentResponse:\n      properties:\n        content:\n          type: string\n        documents:\n          items:\n            $ref: \"#/components/schemas/Document\"\n          type: array\n        dueDate:\n          format: date-time\n          type: string\n        durationMinutes:\n          format: int32\n          type: integer\n        filename:\n          type: string\n        hidden:\n          default: false\n          type: boolean\n        id:\n          type: string\n        markNumber:\n          minLength: 1\n          type: string\n        markType:\n          minLength: 1\n          type: string\n        maxAttempts:\n          format: int32\n          type: integer\n        openDate:\n          format: date-time\n          type: string\n        pid:\n          type: string\n        points:\n          type: string\n        themes:\n          items:\n            $ref: \"#/components/schemas/ThemeResponse\"\n          type: array\n        title:\n          type: string\n        totalQuestions:\n          format: int32\n          type: integer\n        totalThemes:\n          format: int32\n          type: integer\n        type:\n          type: string\n    AssignmentMarkResponse:\n      properties:\n        assessmentId:\n          type: string\n        assessmentItemDetails:\n          type: string\n        assessmentItemName:\n          type: string\n        courseName:\n          type: string\n        learnerEmail:\n          type: string\n        learnerFirstName:\n          type: string\n        learnerLastName:\n          type: string\n        learnerPersonId:\n          type: string\n        mark:\n          type: string\n        markFeedback:\n          type: string\n        markedBy:\n          type: string\n        markedByEvaluator:\n          type: boolean\n        markedByFacilitator:\n          type: boolean\n        markedByMarker:\n          type: boolean\n        markedDateTime:\n          format: date-time\n          type: string\n        submissionDateTime:\n          format: date-time\n          type: string\n      title: AssignmentMark\n    Assignments:\n      properties:\n        files:\n          items:\n            $ref: \"#/components/schemas/Document\"\n          type: array\n        marks:\n          items:\n            $ref: \"#/components/schemas/Mark\"\n          type: array\n        status:\n          type: string\n        submittedAt:\n          format: date-time\n          type: string\n        updatedAt:\n          format: date-time\n          type: string\n    Channel:\n      properties:\n        isBroadcastOnly:\n          default: false\n          type: boolean\n        title:\n          minLength: 1\n          type: string\n    ChannelRequired:\n      properties:\n        isBroadcastOnly:\n          default: false\n          type: boolean\n        title:\n          minLength: 1\n          type: string\n      required:\n        - title\n    ChannelResponse:\n      properties:\n        id:\n          type: string\n        isBroadcastOnly:\n          default: false\n          type: boolean\n        title:\n          minLength: 1\n          type: string\n    Comment:\n      properties:\n        content:\n          type: string\n        createdAt:\n          format: date-time\n          type: string\n        email:\n          type: string\n        id:\n          type: string\n        isFacilitatorPost:\n          type: boolean\n        moderation:\n          $ref: \"#/components/schemas/Moderation\"\n        parentCommentId:\n          type: string\n        postId:\n          type: string\n    CourseMetaResponse:\n      properties:\n        coverImageUrl:\n          type: string\n        createdAt:\n          format: date-time\n          type: string\n        id:\n          type: string\n        learning_outcomes:\n          items:\n            $ref: \"#/components/schemas/LearningOutcomes\"\n          type: array\n        metadata:\n          $ref: \"#/components/schemas/PortfolioMetadata\"\n        name:\n          type: string\n      title: Course\n    CourseResponse:\n      properties:\n        coverImageUrl:\n          type: string\n        createdAt:\n          format: date-time\n          type: string\n        id:\n          type: string\n        learning_outcomes:\n          items:\n            $ref: \"#/components/schemas/LearningOutcomes\"\n          type: array\n        name:\n          type: string\n      title: Course\n    CourseUser:\n      allOf:\n        - $ref: \"#/components/schemas/User\"\n      properties:\n        isBuilder:\n          default: false\n          type: boolean\n        isReviewer:\n          default: false\n          type: boolean\n        profile:\n          $ref: \"#/components/schemas/UserProfile\"\n      required:\n        - email\n    Criteria:\n      properties:\n        hasCompletedCourse:\n          default: true\n          type: boolean\n        hasPassedMandatoryAssessedQuizzes:\n          default: true\n          type: boolean\n    Document:\n      properties:\n        createdAt:\n          format: date-time\n          type: string\n        filename:\n          type: string\n        id:\n          type: string\n        mimetype:\n          type: string\n        size:\n          format: int64\n          type: integer\n        url:\n          type: string\n    DocumentResponse:\n      properties:\n        id:\n          type: string\n        mimetype:\n          type: string\n        size:\n          format: int64\n          type: integer\n        url:\n          type: string\n    LearnerProgressResponse:\n      properties:\n        completion:\n          type: string\n        courseId:\n          type: string\n        email:\n          type: string\n        firstName:\n          type: string\n        lastLoggedInAt:\n          format: date-time\n          type: string\n        lastName:\n          type: string\n        personId:\n          type: string\n      title: LearnerProgress\n    LearnerResponse:\n      properties:\n        email:\n          type: string\n        firstName:\n          type: string\n        id:\n          type: string\n        lastName:\n          type: string\n        offerings:\n          items:\n            $ref: \"#/components/schemas/OfferingProgressRow\"\n          type: array\n        personId:\n          type: string\n    LearningOutcomes:\n      properties:\n        description:\n          type: string\n        id:\n          type: string\n    Mark:\n      properties:\n        createdAt:\n          format: date-time\n          type: string\n        feedback:\n          type: string\n        mark:\n          type: string\n        markFeedback:\n          items:\n            $ref: \"#/components/schemas/MarkFeedback\"\n          type: array\n        markedBy:\n          type: string\n        markerId:\n          type: string\n    MarkFeedback:\n      properties:\n        createdAt:\n          format: date-time\n          type: string\n        feedback:\n          type: string\n        feedbackBy:\n          type: string\n        mark:\n          type: string\n        markerId:\n          type: string\n    Moderation:\n      properties:\n        isMuted:\n          type: boolean\n        moderator:\n          $ref: \"#/components/schemas/Moderator\"\n        reason:\n          type: string\n    Moderator:\n      properties:\n        avatarUrl:\n          type: string\n        firstName:\n          type: string\n        id:\n          type: string\n        lastName:\n          type: string\n    Offering:\n      properties:\n        contentId:\n          minLength: 1\n          type: string\n        description:\n          minLength: 1\n          type: string\n        earlyCloseOffDate:\n          format: date-time\n          type: string\n        end:\n          format: date-time\n          type: string\n        isReadonly:\n          type: boolean\n        metadata:\n          additionalProperties: false\n          properties:\n            category:\n              type: string\n            level:\n              type: string\n            tags:\n              items:\n                type: string\n              type: array\n            topic:\n              type: string\n          type: object\n        name:\n          minLength: 1\n          type: string\n        start:\n          format: date-time\n          type: string\n        trailerVideoUrl:\n          minLength: 1\n          type: string\n        version:\n          description: Content version, if not specified, the most recent version is used.\n          minLength: 1\n          type: string\n    OfferingMetadataResponse:\n      properties:\n        contentId:\n          minLength: 1\n          type: string\n        coverImageUrl:\n          minLength: 1\n          type: string\n        currency:\n          type: string\n        description:\n          minLength: 1\n          type: string\n        earlyCloseOffDate:\n          format: date-time\n          type: string\n        end:\n          format: date-time\n          type: string\n        enrollmentLimit:\n          type: number\n        id:\n          type: string\n        isReadonly:\n          type: boolean\n        metadata:\n          $ref: \"#/components/schemas/PortfolioMetadata\"\n        name:\n          minLength: 1\n          type: string\n        price:\n          type: number\n        start:\n          format: date-time\n          type: string\n        trailerVideoUrl:\n          minLength: 1\n          type: string\n        version:\n          minLength: 1\n          type: string\n    OfferingProgressRow:\n      properties:\n        completion:\n          type: string\n        id:\n          type: string\n    OfferingRequired:\n      allOf:\n        - $ref: \"#/components/schemas/Offering\"\n      required:\n        - contentId\n        - start\n        - end\n    OfferingResponse:\n      properties:\n        contentId:\n          minLength: 1\n          type: string\n        coverImageUrl:\n          minLength: 1\n          type: string\n        currency:\n          type: string\n        description:\n          minLength: 1\n          type: string\n        earlyCloseOffDate:\n          format: date-time\n          type: string\n        end:\n          format: date-time\n          type: string\n        enrollmentLimit:\n          type: number\n        id:\n          type: string\n        isReadonly:\n          type: boolean\n        name:\n          minLength: 1\n          type: string\n        price:\n          type: number\n        start:\n          format: date-time\n          type: string\n        trailerVideoUrl:\n          minLength: 1\n          type: string\n        version:\n          minLength: 1\n          type: string\n    OfferingUser:\n      allOf:\n        - $ref: \"#/components/schemas/User\"\n      properties:\n        isFacilitator:\n          default: false\n          type: boolean\n        isMarker:\n          default: false\n          type: boolean\n        isReadonly:\n          default: false\n          type: boolean\n        profile:\n          $ref: \"#/components/schemas/UserProfile\"\n      required:\n        - email\n    OfferingUserResponse:\n      properties:\n        avatarUrl:\n          type: string\n        email:\n          format: email\n          minLength: 1\n          type: string\n        evaluatedBy:\n          items:\n            type: string\n          type: array\n        evaluates:\n          items:\n            type: string\n          type: array\n        firstName:\n          minLength: 1\n          type: string\n        id:\n          type: string\n        isFacilitator:\n          default: false\n          type: boolean\n        isMarker:\n          default: false\n          type: boolean\n        isReadonly:\n          default: false\n          type: boolean\n        lastName:\n          minLength: 1\n          type: string\n        markedBy:\n          items:\n            type: string\n          type: array\n        marks:\n          items:\n            type: string\n          type: array\n        personId:\n          minLength: 1\n          type: string\n        profile:\n          $ref: \"#/components/schemas/UserProfile\"\n    PortfolioMetadata:\n      additionalProperties: false\n      properties:\n        category:\n          type: string\n        level:\n          type: string\n        tags:\n          items:\n            type: string\n          type: array\n        topic:\n          type: string\n      type: object\n    Post:\n      properties:\n        attachments:\n          items:\n            $ref: \"#/components/schemas/DocumentResponse\"\n          type: array\n        content:\n          type: string\n        createdAt:\n          format: date-time\n          type: string\n        email:\n          type: string\n        id:\n          type: string\n        isFacilitatorPost:\n          type: boolean\n        moderation:\n          $ref: \"#/components/schemas/Moderation\"\n        title:\n          type: string\n    PulseAnswer:\n      properties:\n        multiChoiceAnswer:\n          items:\n            $ref: \"#/components/schemas/PulseMCQOption\"\n          type: array\n        spatialAnswer:\n          items:\n            $ref: \"#/components/schemas/PulseSpatialOption\"\n          type: array\n        textAnswer:\n          type: string\n      title: Answer\n    PulseMCQOption:\n      properties:\n        option:\n          type: string\n        value:\n          type: boolean\n      title: MultiChoiceOption\n    PulseResponse:\n      properties:\n        learnerFirstName:\n          type: string\n        learnerId:\n          type: string\n        learnerLastName:\n          type: string\n        pulseBaseId:\n          type: string\n        pulseInstanceId:\n          type: string\n        pulseQuestion:\n          type: string\n        pulseRunDurationMinutes:\n          type: integer\n        pulseRunStart:\n          format: date-time\n          type: string\n        pulseType:\n          type: string\n        response:\n          $ref: \"#/components/schemas/PulseAnswer\"\n        responseTime:\n          format: date-time\n          type: string\n      title: Pulse\n    PulseSpatialOption:\n      properties:\n        option:\n          type: string\n        value:\n          format: float\n          type: number\n      title: SpatialOption\n    QuizMarkResponse:\n      properties:\n        attempts:\n          format: int32\n          type: integer\n        lastAttemptAt:\n          format: date-time\n          type: string\n        learnerFullname:\n          type: string\n        learnerId:\n          type: string\n        learnerPersonId:\n          type: string\n        mark:\n          type: string\n        quizId:\n          type: string\n        quizTitle:\n          type: string\n      title: QuizMark\n    ThemeResponse:\n      properties:\n        filter:\n          type: string\n        numberOfQuestions:\n          type: string\n    User:\n      properties:\n        email:\n          minLength: 1\n          type: string\n        firstName:\n          minLength: 1\n          type: string\n        lastName:\n          minLength: 1\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/UserMetadata\"\n        personId:\n          minLength: 1\n          type: string\n    UserMetadata:\n      additionalProperties: false\n      properties:\n        tags:\n          items:\n            type: string\n          type: array\n      type: object\n    UserProfile:\n      properties:\n        displayName:\n          type: string\n        mobile:\n          type: string\n    UserResponse:\n      properties:\n        avatarUrl:\n          type: string\n        email:\n          format: email\n          minLength: 1\n          type: string\n        firstName:\n          minLength: 1\n          type: string\n        id:\n          type: string\n        lastAccessAt:\n          format: date-time\n          type: string\n        lastName:\n          minLength: 1\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/UserMetadata\"\n        personId:\n          minLength: 1\n          type: string\n        profile:\n          $ref: \"#/components/schemas/UserProfile\"\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/iqualify.com-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/iqualify.com-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/offerings/{offeringId}/analytics/channels/{channelId}/comments\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}