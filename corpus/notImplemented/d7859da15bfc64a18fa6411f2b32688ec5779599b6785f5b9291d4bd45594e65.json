{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/aws-connected-device-framework"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "source/packages/services/bulkcerts/docs/swagger.yml",
			"byteSize": 12055,
			"content": "#-----------------------------------------------------------------------------------------------------------------------\n#   Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance\n#  with the License. A copy of the License is located at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES\n#  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions\n#  and limitations under the License.\n#-----------------------------------------------------------------------------------------------------------------------\nopenapi: 3.0.0\ninfo:\n  title: \"AWS Connected Device Framework: Bulk Certs\"\n  description: REST API for creating device certificates in bulk.\n  version: 1.0.0\n\ntags:\n- name: 'Bulk Certificate Creation'\n  description: |\n    Allows for the asynchronous creation of device certifcates in bulk.  \n    \n    Optionally, the certificates may be registered with AWS IoT.  This allows for scenarios such as JITP (just-in-time provisioning).\n\npaths:\n\n  /certificates/{taskId}:\n  \n    parameters:\n      - $ref: '#/components/parameters/taskId'\n        \n    get:\n      tags: \n        - Bulk Certificate Creation\n      summary: Retrieve a batch of pre-generated certificates (the outcome of a batch certificate creation task) either as a downloadable zip file (default) or as a list of pre-signed urls.\n      operationId: getCertificates\n      parameters:\n        - $ref: '#/components/parameters/downloadType'\n      \n      responses:\n        \"200\":\n          description: OK. Either a zip file as the response (default), or a list of s3 presigned urls (when ?downloadType=signedUrl).\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                type: array\n                items:\n                  type: string\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        \"303\": \n          description: If certificate creation is still in progress, a redirect to the certificate task status endpoint.\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n\n  /certificates/{taskId}/task:\n  \n    parameters:\n      - $ref: '#/components/parameters/taskId'\n        \n    get:\n      tags: \n        - Bulk Certificate Creation\n      summary: Retrieve status of a create certificates task.\n      operationId: getCertificatesTask\n      \n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBatchTaskStatus\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  /supplier/{supplierId}/certificates:\n  \n    parameters:\n      - $ref: '#/components/parameters/supplierId'\n\n    post:\n      tags:\n      - Bulk Certificate Creation\n      summary: Creates a batch of device certificates for a specific supplier.\n        \n      operationId: \"createSupplierCertificates\"\n      requestBody:\n        required: true\n        content:\n          application/vnd.aws-cdf-v1.0+json:\n            schema:\n              $ref: \"#/components/schemas/CertificateBatchRequest\"\n            examples:\n              simple:\n                summary:\n                  Create a batch of certificates using application defaults set at deployment time.\n                value:\n                  quantity: 2\n              custom_cert_info:\n                summary:\n                  Create a batch of certificates, specifying certificate values to set.\n                value:\n                  quantity: 2\n                  certInfo:\n                    country: US\n              common_name_list_generator:\n                summary:\n                  Create a batch of certificates, auto-generating common name based on a provided list in commonNameList.\n                value:                  \n                  certInfo: \n                    commonName: \"`templateFoo::`${list}\" \n                    commonNameList:\n                      - AB1CD79EF1 \n                      - AB1CD79EF2 \n                      - AB1CD79EF3\n                    organization: \"AWS Connected Device Framework\"\n                    organizationalUnit: \"CDF\"\n                    locality: \"Denver\"\n                    stateName: \"CO\"\n                    country: \"US\"\n                    emailAddress: \"info@connecteddeviceframework.com\"\n                    distinguishedNameQualifier: \"\"\n                    includeCA: true   \n                  quantity: 100 \n\n              common_name_static_generator:\n                summary:\n                  Create a batch of certificates, auto-generating static common name.\n                value:\n                  certInfo: \n                    commonName: \"`templateFoo::`AB1CD79EF${static}\" \n                    organization: \"AWS Connected Device Framework\"\n                    organizationalUnit: \"CDF\"\n                    locality: \"Denver\"\n                    stateName: \"CO\"\n                    country: \"US\"\n                    emailAddress: \"info@connecteddeviceframework.com\"\n                    distinguishedNameQualifier: \"\"\n                    includeCA: true   \n                  quantity: 100 \n\n              common_name_increment_generator:\n                summary:\n                  Create a batch of certificates, auto-generating incremental common names.\n                value:\n                  certInfo: \n                    commonName: \"`templateFoo::`AB1CD79EF${increment(100)}\" \n                    organization: \"AWS Connected Device Framework\"\n                    organizationalUnit: \"CDF\"\n                    locality: \"Denver\"\n                    stateName: \"CO\"\n                    country: \"US\"\n                    emailAddress: \"info@connecteddeviceframework.com\"\n                    distinguishedNameQualifier: \"\"\n                    includeCA: true\n                  quantity: 100 \n\n              \n      responses:\n        \"202\":\n          description: Acceptd.\n          content:\n            application/vnd.aws-cdf-v1.0+json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBatchTask\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n\n\ncomponents:\n\n  parameters:\n    taskId:\n      in: path\n      name: taskId\n      description: Id of the bulk certificate creation task\n      required: true\n      schema:\n        type: string\n    downloadType:\n      in: query\n      name: downloadType\n      description: ID of device template to publish\n      schema:\n        type: string\n        enum:\n          - signedUrl\n          - zip\n        default: zip\n    supplierId:\n      in: path\n      name: supplierId\n      description: Id (alias) of supplier for which to create device  certificates.\n      required: true\n      schema:\n        type: string\n\n  responses:\n  \n    Created:\n      description: Created successfully\n      headers:\n        location:\n          schema:\n            type: string\n    BadRequest:\n      description: Invalid input\n      content:\n        application/vnd.aws-cdf-v1.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    NotFound:\n      description: Not found\n      content:\n        application/vnd.aws-cdf-v1.0+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n            \n  schemas:\n  \n    CertificateBatchTask:\n      type: object\n      properties:\n        taskId:\n          type: string\n        status:\n          type: string\n          enum:\n            - pending\n            - in_progress\n            - complete\n\n    CertificateBatchTaskStatus:\n      allOf:\n        - $ref: '#/components/schemas/CertificateBatchTask'\n        - type: object\n          properties:\n            batchDate:\n              type: number\n            chunksPending:\n              type: number\n            chunksTotal:\n              type: number\n    \n    CertificateBatchRequest:\n      type: object\n      properties:\n        quantity:\n          type: number\n          description: Quantity of device certificates to create.\n        register:\n          type: boolean\n          description: Optionally register device certificates with AWS IoT.\n          default: false\n        certInfo:\n          $ref: '#/components/schemas/CertInfo'\n      required:\n        - quantity\n            \n    CertInfo:\n      type: object\n      properties:\n        commonName:\n          description: Specify a common name to add to a certificate, or a generator used to auto-generate the common name.\n          oneOf:\n            - type: string\n            - $ref: '#/components/schemas/CommonNameGenerator'\n        commonNameList:\n          description: A list of ids to be used in the generation of the commonNames.\n          type: array\n          items:\n            type: string\n        organization:\n          description: Organization to set within the certificate.\n          type: string\n        organizationalUnit:\n          description: Organizational unit to set within the certificate.\n          type: string\n        locality:\n          description: Locality to set within the certificate.\n          type: string\n        stateName:\n          description: State name to set within the certificate.\n          type: string\n        country:\n          description: Country to set within the certificate.\n          type: string\n        emailAddress:\n          description: Email address to set within the certificate.\n          type: string\n        distinguishedNameQualifier:\n          description: Distinguished Name Qualifier to set within the certificate.\n          type: string\n        includeCA:\n          description: If true, the public certificate of the CA used to sign the device certificate will be appended to the device certificate.\n          type: boolean\n        daysExpiry:\n          type: number\n          description: SSL Certificate Max validity period. The maximum validity period of TLS/SSL certificates is 825 days (2 years, 3 month, and 5 days).\n        \n    CommonNameGenerator:\n      type: object\n      description: |\n        Will Auto-generates the common name based on the properties provided in the command structure \"\\`prefix\\`commonNameStart${generator(quantity)}\".\n        \n        As an example the following command \"\\`templateFoo::\\`AB1CD79EF${incement(5)}\" will generate 5 incremental commonNames starting from templateFoo:AB1CD79EF1 to templateFoo:AB1CD79EF5 \n        \n        Please refer to the bellow documentation for guidance on each of the properties in the command\n      properties:\n        generator:\n          type: string\n          description: |\n\n            If `increment`, the commonName will be generated by combining the prefix and the incremented commonNameStart hexadecimal value.\n            \n            If `list`, the commonName will be generated by combining the prefix and the values provided in the commonNameList. Please note that in this mode the number of elements in the array determines the number of certificates being generated and not the quantity value\n            \n            If `static`, a static value will be generated by combining the prefix and commanNameStart.\n          enum:\n            - increment\n            - list\n            - static\n        prefix:\n          description: Static string prefix that can be used as a prefix in the construction of the commonName\n          type: string\n        commonNameStart:\n          description: A hexadecimal string that can be used where incremental generator is requiered.\n          type: string\n        quantity:\n          description: A numerical value, representing the number of certificates that are to be genrated \n          type: number\n          \n    Error:\n      type: object\n      properties:\n        message:\n          description: Error message\n          type: string\n",
			"canonicalURL": "/github.com/aws/aws-connected-device-framework@46e38e57b62458ac4a8d9719d472286f30ff420a/-/blob/source/packages/services/bulkcerts/docs/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/aws/aws-connected-device-framework/blob/46e38e57b62458ac4a8d9719d472286f30ff420a/source/packages/services/bulkcerts/docs/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/certificates/{taskId}\": get: responses: 404: contents: unsupported content types: [application/vnd.aws-cdf-v1.0+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}