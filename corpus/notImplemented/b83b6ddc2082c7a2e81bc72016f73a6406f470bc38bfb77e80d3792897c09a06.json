{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/siemens.analytics.anomalydetection/openapi.yml",
			"byteSize": 34592,
			"content": "openapi: 3.0.1\ninfo:\n  title: Anomaly Detection API\n  description: \u003e-\n    This is a generated connector from [Siemens Analytics Anomaly Detection API](https://developer.mindsphere.io/apis/analytics-anomalydetection/api-anomalydetection-overview.html) OpenAPI Specification.\n\n    The Anomaly Detection Service aims to automatically detect unexpected behaviour of processes and assets using time series data and provides API to train model and use it for\n    anomaly detection. In the Interactive mode Analytic Model Management service is used as model storage. Model expiration date is set to 14 days.\n  version: 3.4.0\n  x-visibility: external\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n\n    Create a [Siemens MindSphere](https://siemens.mindsphere.io/en) account and\n    obtain tokens by following [this\n    guide](https://developer.mindsphere.io/concepts/concept-roles-scopes.html#iot-file-service). For accessing this service you need to have the respective roles listed in [Analytics roles and scopes](https://developer.mindsphere.io/concepts/concept-roles-scopes.html#analytics-services)\n  x-ballerina-display:\n    label: Siemens Analytics Anomaly Detection\n    iconPath: icon.png  \ntags:\n  - name: Anomaly Detection\n    description: Anyomaly detection with data provided in request\n  - name: Anomaly Detection Direct\n    description: Anomaly detection with data directly fetched from IoT Time Series Service\n  - name: Batch. Models\n    description: Asynchronous model training with data fetched from IoT Time Series Service\n  - name: Batch. Anomaly Detection\n    description: \u003e-\n      Asynchronous model execution with data fetched from IoT Time Series\n      Service\n  - name: Deprecated Operations\npaths:\n  /detectAnomaliesJobs:\n    post:\n      tags:\n        - Batch. Anomaly Detection\n      summary: Anomaly Detection batch reasoning\n      operationId: detectAnomaliesbatchreasoning\n      description: \u003e-\n        Performs long running reasoning (anomaly detection) for given timeseries\n        data.\n      requestBody:\n        description: Request data to launch reasoning job.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitReasoningRequest'\n        required: false\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReasoningJobInfo'\n        default:\n          description: Other error with any status code and response body format.\n          content: {}\n      security:\n        - anomalydetection:\n            - as.adb.u\n      x-codegen-request-body-name: SubmitReasoningRequest\n  /detectAnomaliesJobs/{id}:\n    get:\n      tags:\n        - Batch. Anomaly Detection\n      summary: Get job status.\n      operationId: getJobStatus\n      description: Returns current status for specified jod.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the job to get status for.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReasoningJobInfo'\n        default:\n          description: Other error with any status code and response body format.\n          content: {}\n      security:\n        - anomalydetection:\n            - as.adb.u\n  /detectAnomaliesJobs/{id}/cancel:\n    post:\n      tags:\n        - Batch. Anomaly Detection\n      summary: Cancel job.\n      operationId: canceljob\n      description: Cancels specified job.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the job to get status for.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '202':\n          description: Accepted\n          content: {}\n        default:\n          description: Other error with any status code and response body format.\n          content: {}\n      security:\n        - anomalydetection:\n            - as.adb.u\n  /trainModelJobs:\n    post:\n      tags:\n        - Batch. Models\n      summary: Anomaly Detection batch model training\n      operationId: detectAnomalyBatchModelTraining\n      description: \u003e-\n        Performs long running model training for given timeseries data. The\n        number of timeseries items to process is limited by 1000000, this\n        parameter can be changed in the future without notice.\n      requestBody:\n        description: Request data to launch training job\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitTrainingRequest'\n        required: false\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrainingJobInfo'\n        default:\n          description: Other error with any status code and response body format.\n          content: {}\n      security:\n        - anomalydetection:\n            - as.adb.u\n      x-codegen-request-body-name: SubmitTrainingRequest\n  /trainModelJobs/{id}:\n    get:\n      tags:\n        - Batch. Models\n      summary: Get job status.\n      operationId: getJobStatusTrainModelJobs\n      description: Returns current status for specified jod.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the job to get status for.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrainingJobInfo'\n        default:\n          description: Other error with any status code and response body format.\n          content: {}\n      security:\n        - anomalydetection:\n            - as.adb.u\n  /trainModelJobs/{id}/cancel:\n    post:\n      tags:\n        - Batch. Models\n      summary: Cancel job.\n      operationId: cancelJobTrainModelJob\n      description: Cancels specified job.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the job to get status for.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '202':\n          description: Accepted\n          content: {}\n        default:\n          description: Other error with any status code and response body format.\n          content: {}\n      security:\n        - anomalydetection:\n            - as.adb.u\n  /models:\n    # get:\n    #   tags:\n    #     - Deprecated Operations\n    #   summary: Get all models\n      \n    #   description: \u003e-\n    #     DEPRECATED: This operation is deprecated! Use Analytic Model Management\n    #     service instead. Returns existing models list by tenantId. The list is\n    #     sorted by creationTimestamp ascending.\n    #   parameters:\n    #     - name: size\n    #       in: query\n    #       description: Number of models per page. Maximum is 2000.\n    #       schema:\n    #         type: integer\n    #         format: integer\n    #     - name: page\n    #       in: query\n    #       description: Page number. Dfault is 0.\n    #       schema:\n    #         type: integer\n    #         format: integer\n    #         default: 0\n    #   responses:\n    #     '200':\n    #       description: OK\n    #       content:\n    #         application/json:\n    #           schema:\n    #             type: array\n    #             items:\n    #               $ref: '#/components/schemas/Model'\n    #     '400':\n    #       description: Wrong arguments exception\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/WrongArgumentException'\n    #     '500':\n    #       description: Exception during job processing\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/JobProcessingException'\n    #     default:\n    #       description: Unexpected error\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/Error'\n    #   deprecated: true\n    #   security:\n    #     - anomalydetection:\n    #         - as.ad.u\n    post:\n      tags:\n        - Anomaly Detection\n      summary: Train model\n      operationId: trainModel\n      description: \u003e-\n        Creates new model based on given timeseries data. Analytic Model\n        Management service is used to store created model.\n      parameters:\n        - name: epsilon\n          in: query\n          description: Threshold for the distance to check if point belongs to cluster.\n          required: true\n          schema:\n            type: number\n            format: float\n        - name: minPointsPerCluster\n          in: query\n          description: Minimum cluster size. Positive. Minimum is 2.\n          required: true\n          schema:\n            type: integer\n            format: integer\n        - name: distanceMeasureAlgorithm\n          in: query\n          description: Name of the distance measure algorithm.\n          schema:\n            type: string\n            default: EUCLIDEAN\n            enum:\n              - EUCLIDEAN\n              - MANHATTAN\n              - CHEBYSHEV\n        - name: name\n          in: query\n          description: \u003e-\n            Human-friendly name of the model. If a name is provided, it must not\n            be an empty string. Maximum length is 255 characters. Only ASCII\n            characters are allowed. Example 'Test Model\n          schema:\n            type: string\n            default: model\n      requestBody:\n        description: \u003e-\n          An array containing the time series items. Data to train a model. Data\n          must contain 10 variables at max. Each timeseries item must have equal\n          number of variables.\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Timeseries'\n        required: true\n      responses:\n        '204':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n        '400':\n          description: Wrong arguments exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WrongArgumentException'\n        '500':\n          description: Exception during job processing\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobProcessingException'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - anomalydetection:\n            - as.ad.u\n      x-codegen-request-body-name: ioTTimeSeriesItems\n  /detectanomalies:\n    post:\n      tags:\n        - Anomaly Detection\n      summary: Anomaly detection\n      operationId: detectAnomalies\n      description: \u003e-\n        Performs anomaly detection for given timeseries data against specified\n        model.\n      parameters:\n        - name: modelID\n          in: query\n          description: ID of the model to use.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        description: \u003e-\n          An array containing the time series items. Data to performs detection\n          on. Data must contain 10 variables at max. Each timeseries item must\n          have equal number of variables. Variables must be the same as the ones\n          used to train the model (the same number of variables and the same\n          names).\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Timeseries'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Anomaly'\n        '400':\n          description: Wrong arguments exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WrongArgumentException'\n        '500':\n          description: Exception during job processing\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobProcessingException'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - anomalydetection:\n            - as.ad.u\n      x-codegen-request-body-name: ioTTimeSeriesItems\n  /modelsDirect:\n    post:\n      tags:\n        - Anomaly Detection Direct\n      summary: Train model in direct integration with IoT time series\n      operationId: trainModelDirectIntegration\n      description: \u003e-\n        Creates new model based on given asset details. Analytic Model\n        Management service is used to store created model.\n      parameters:\n        - name: epsilon\n          in: query\n          description: Threshold for the distance to check if point belongs to cluster.\n          required: true\n          schema:\n            type: number\n            format: float\n        - name: minPointsPerCluster\n          in: query\n          description: Minimum cluster size. Positive. Minimum is 2.\n          required: true\n          schema:\n            type: integer\n            format: integer\n        - name: distanceMeasureAlgorithm\n          in: query\n          description: Name of the distance measure algorithm.\n          schema:\n            type: string\n            default: EUCLIDEAN\n            enum:\n              - EUCLIDEAN\n              - MANHATTAN\n              - CHEBYSHEV\n        - name: name\n          in: query\n          description: \u003e-\n            Human-friendly name of the model. If a name is provided, it must not\n            be an empty string. Maximum length is 255 characters. Only ASCII\n            characters are allowed. Example 'Test Model\n          schema:\n            type: string\n            default: model\n        - name: assetId\n          in: query\n          description: unique identifier of the asset (entity)\n          required: true\n          schema:\n            maxLength: 32\n            minLength: 32\n            pattern: '[a-f0-9]{32}'\n            type: string\n        - name: aspectName\n          in: query\n          description: Name of the aspect (property set).\n          required: true\n          schema:\n            type: string\n        - name: from\n          in: query\n          description: Beginning of the time range to be retrieved (exclusive).\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: End of the time range to be retrieved (exclusive).\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '204':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n        '400':\n          description: \u003e\n            Wrong parameters. Client errors faced while fetching IoT Time Series\n            data are returned as 400 error with message:\n\n\n            *\\\u003cSTATUS\\\u003e: IoT time series service returns \\\u003cSTATUS\\\u003e status with\n            message: \\\u003cERROR_MESSAGE\\\u003e*\n\n\n            where \\\u003cSTATUS\\\u003e is replaced with the response status code and\n            \\\u003cERROR_MESSAGE\\\u003e with the error message returned by IoT Time Series\n            Service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WrongArgumentException'\n        '500':\n          description: Exception during job processing\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobProcessingException'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - anomalydetection:\n            - as.ad.u\n  /detectanomaliesDirect:\n    post:\n      tags:\n        - Anomaly Detection Direct\n      summary: Anomaly detection in direct integration with IoT time series\n      operationId: detectAnomaliesDirectIntegration\n      description: \u003e-\n        Performs anomaly detection for given asset details against specified\n        model.\n      parameters:\n        - name: modelID\n          in: query\n          description: ID of the model to use.\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: assetId\n          in: query\n          description: unique identifier of the asset (entity)\n          required: true\n          schema:\n            maxLength: 32\n            minLength: 32\n            pattern: '[a-f0-9]{32}'\n            type: string\n        - name: aspectName\n          in: query\n          description: Name of the aspect (property set).\n          required: true\n          schema:\n            type: string\n        - name: from\n          in: query\n          description: Beginning of the time range to be retrieved (exclusive).\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: End of the time range to be retrieved (exclusive).\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Anomaly'\n        '400':\n          description: \u003e\n            Wrong parameters. Client errors faced while fetching IoT Time Series\n            data are returned as 400 error with message:\n\n\n            *\\\u003cSTATUS\\\u003e: IoT time series service returns \\\u003cSTATUS\\\u003e status with\n            message: \\\u003cERROR_MESSAGE\\\u003e*\n\n\n            where \\\u003cSTATUS\\\u003e is replaced with the response status code and\n            \\\u003cERROR_MESSAGE\\\u003e with the error message returned by IoT Time Series\n            Service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WrongArgumentException'\n        '500':\n          description: Exception during job processing\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobProcessingException'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - anomalydetection:\n            - as.ad.u\n  /models/{id}:\n    get:\n      tags:\n        - Deprecated Operations\n      summary: Get model\n      operationId: getModel\n      description: \u003e-\n        DEPRECATED: This operation is deprecated! Use Analytic Model Management\n        service instead. Returns existing model.\n      parameters:\n        - name: id\n          in: path\n          description: \u003e-\n            ID of the model to get. Model ID corresponds ID from Analytic Model\n            Management service.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n        '400':\n          description: Wrong arguments exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WrongArgumentException'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '500':\n          description: Exception during job processing\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobProcessingException'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      deprecated: true\n      security:\n        - anomalydetection:\n            - as.ad.u\n    delete:\n      tags:\n        - Deprecated Operations\n      summary: Delete model\n      operationId: deleteModel\n      description: \u003e-\n        DEPRECATED: This operation is deprecated! Use Analytic Model Management\n        service instead. Deletes existing model.\n      parameters:\n        - name: id\n          in: path\n          description: \u003e-\n            ID of the model to delete. Model ID corresponds ID from Analytic\n            Model Management service.\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '204':\n          description: No content\n          content: {}\n        '400':\n          description: Wrong arguments exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WrongArgumentException'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '500':\n          description: Exception during job processing\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobProcessingException'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      deprecated: true\n      security:\n        - anomalydetection:\n            - as.ad.u\ncomponents:\n  schemas:\n    SubmitReasoningRequest:\n      type: object\n      properties:\n        asset:\n          type: string\n          description: Name of the entity in IoT Timeseries service to read data for.\n          example: entityName\n        aspect:\n          type: string\n          description: Name of the property set in IoT Timeseries service to read data for.\n          example: propertySetName\n        variables:\n          type: string\n          description: \u003e-\n            List of variables to take from property set in IoT Timeseries\n            service. Only those variables which are both in this list and in the\n            propertySet will be taken. Also this list must be the same as the\n            one used to train the model, in other words training and reasoning\n            must be performed over the same variables.\n          example: variable_1,variable_2,variable_3\n        from:\n          type: string\n          description: \u003e-\n            Beginning of the time range to read (exclusive) from IoT Timeseries\n            service. Date must follow the specified format\n            'YYYY-MM-DDThh:mm:ss'.\n          format: date-time\n          example: 2018-04-01T00:00:00.000Z\n        to:\n          type: string\n          description: \u003e-\n            End of the time range to read (inclusive) from IoT Timeseries\n            service. Date must follow the specified format\n            'YYYY-MM-DDThh:mm:ss'.\n          format: date-time\n          example: 2018-04-01T00:00:00.000Z\n        modelFolderId:\n          type: string\n          description: \u003e-\n            ID of the folder in Data Exchange Service to get model from. Must\n            not be empty.\n          example: 48612165-f2d6-444b-b3ed-33c368f3c0a8\n        resultFolderId:\n          type: string\n          description: \u003e-\n            ID of the folder in Data Exchange Service to save results to. Must\n            not be empty.\n          example: 48612165-f2d6-444b-b3ed-33c368f3c0a8\n    SubmitTrainingRequest:\n      type: object\n      properties:\n        asset:\n          type: string\n          description: Name of the entity in IoT Timeseries service to read data for.\n          example: entityName\n        aspect:\n          type: string\n          description: Name of the property set in IoT Timeseries service to read data for.\n          example: propertySetName\n        variables:\n          type: string\n          description: \u003e-\n            List of variables to take from property set in IoT Timeseries\n            service. Only those variables which are both in this list and in the\n            propertySet will be taken. List must contain up to 10 variables.\n          example: variable_1,variable_2,variable_3\n        from:\n          type: string\n          description: \u003e-\n            Beginning of the time range to read (exclusive) from IoT Timeseries\n            service. Date must follow the specified format\n            'YYYY-MM-DDThh:mm:ss'.\n          format: date-time\n          example: 2018-04-01T00:00:00.000Z\n        to:\n          type: string\n          description: \u003e-\n            End of the time range to read (inclusive) from IoT Timeseries\n            service. Date must follow the specified format\n            'YYYY-MM-DDThh:mm:ss'.\n          format: date-time\n          example: 2018-04-01T00:00:00.000Z\n        epsilon:\n          type: number\n          description: \u003e-\n            Anomaly Detection threshold for the distance to check if point\n            belongs to cluster.\n          example: 0.23\n        minPointsPerCluster:\n          type: number\n          description: Anomaly detection minimum cluster size. Positive. Minimum is 2.\n          example: 6\n        distanceMeasureAlgorithm:\n          type: string\n          description: Name of the Anomaly Detection distance measure algorithm.\n          example: EUCLIDEAN\n          enum:\n            - EUCLIDEAN\n            - MANHATTAN\n            - CHEBYSHEV\n        resultFolderId:\n          type: string\n          description: \u003e-\n            ID of the folder in Data Exchange Service to save results to. Must\n            not be empty.\n          example: 48612165-f2d6-444b-b3ed-33c368f3c0a8\n    ReasoningJobInfo:\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique identifier of the job\n          format: uuid\n        status:\n          type: string\n          description: job status\n          enum:\n            - SUBMITTED\n            - RUNNING\n            - SUCCEEDED\n            - FAILED\n        timestamp:\n          type: string\n          description: job creation time\n          format: date-time\n          example: 2018-04-01T00:00:00.000Z\n        parameters:\n          type: object\n          properties:\n            asset:\n              type: string\n              description: Name of the entity in IoT Timeseries service to read data for.\n              example: entityName\n            aspect:\n              type: string\n              description: \u003e-\n                Name of the property set in IoT Timeseries service to read data\n                for.\n              example: propertySetName\n            variables:\n              type: string\n              description: \u003e-\n                List of variables to take from property set in IoT Timeseries\n                service. Only those variables which are both in this list and in\n                the propertySet will be taken.\n              example: variable_1,variable_2,variable_3\n            from:\n              type: string\n              description: \u003e-\n                Beginning of the time range to read (exclusive) from IoT\n                Timeseries service. Date must follow the specified format\n                'YYYY-MM-DDThh:mm:ss'.\n              format: date-time\n              example: 2018-04-01T00:00:00.000Z\n            to:\n              type: string\n              description: \u003e-\n                End of the time range to read (inclusive) from IoT Timeseries\n                service. Date must follow the specified format\n                'YYYY-MM-DDThh:mm:ss'.\n              format: date-time\n              example: 2018-04-01T00:00:00.000Z\n            modelFolderId:\n              type: string\n              description: \u003e-\n                ID of the folder in Data Exchange Service to get model from.\n                Must not be empty.\n              example: 48612165-f2d6-444b-b3ed-33c368f3c0a8\n            resultFolderId:\n              type: string\n              description: \u003e-\n                ID of the folder in Data Exchange Service to save results to.\n                Must not be empty.\n              example: 48612165-f2d6-444b-b3ed-33c368f3c0a8\n    TrainingJobInfo:\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique identifier of the job\n          format: uuid\n        status:\n          type: string\n          description: job status\n          enum:\n            - SUBMITTED\n            - RUNNING\n            - SUCCEEDED\n            - FAILED\n        timestamp:\n          type: string\n          description: job creation time\n          format: date-time\n          example: 2018-04-01T00:00:00.000Z\n        parameters:\n          type: object\n          properties:\n            asset:\n              type: string\n              description: Name of the entity in IoT Timeseries service to read data for.\n              example: entityName\n            aspect:\n              type: string\n              description: \u003e-\n                Name of the property set in IoT Timeseries service to read data\n                for.\n              example: propertySetName\n            variables:\n              type: string\n              description: \u003e-\n                List of variables to take from property set in IoT Timeseries\n                service. Only those variables which are both in this list and in\n                the propertySet will be taken.\n              example: variable_1,variable_2,variable_3\n            from:\n              type: string\n              description: \u003e-\n                Beginning of the time range to read (exclusive) from IoT\n                Timeseries service. Date must follow the specified format\n                'YYYY-MM-DDThh:mm:ss'.\n              format: date-time\n              example: 2018-04-01T00:00:00.000Z\n            to:\n              type: string\n              description: \u003e-\n                End of the time range to read (inclusive) from IoT Timeseries\n                service. Date must follow the specified format\n                'YYYY-MM-DDThh:mm:ss'.\n              format: date-time\n              example: 2018-04-01T00:00:00.000Z\n            epsilon:\n              type: number\n              description: \u003e-\n                Anomaly Detection threshold for the distance to check if point\n                belongs to cluster.\n              example: 0.23\n            minPointsPerCluster:\n              type: number\n              description: Anomaly detection minimum cluster size. Positive. Minimum is 2.\n              example: 6\n            distanceMeasureAlgorithm:\n              type: string\n              description: Name of the Anomaly Detection distance measure algorithm.\n              example: EUCLIDEAN\n              enum:\n                - EUCLIDEAN\n                - MANHATTAN\n                - CHEBYSHEV\n            resultFolderId:\n              type: string\n              description: \u003e-\n                ID of the folder in Data Exchange Service to save results to.\n                Must not be empty.\n              example: 48612165-f2d6-444b-b3ed-33c368f3c0a8\n    Timeseries:\n      required:\n        - _time\n      type: object\n      properties:\n        _time:\n          type: string\n          description: time\n      additionalProperties:\n        type: object\n        description: |\n          Time series aspect (property set) variable with value.\n      example:\n        _time: 2017-10-01T12:00:00.001Z\n        pressure: 4\n    Anomaly:\n      type: object\n      properties:\n        anomalyExtent:\n          type: number\n          description: Extent of anomaly at this point\n          example: 0.15\n        _time:\n          type: string\n          description: time\n          example: 2017-10-01T12:00:00.001Z\n    Model:\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the created Model.\n          format: uuid\n          example: 6f6f3d93-df18-495f-8de4-fa29cb2e5835\n        creationTimestamp:\n          type: string\n          description: Timestamp model was created at.\n          example: 2017-10-01T12:00:00.001Z\n        variables:\n          type: string\n          description: Variables used to train the model (variables from input json).\n          example: variableName1,variableName2\n        name:\n          type: string\n          description: \u003e-\n            Human-friendly name of the model, not an empty string. Maximum\n            length is 255 characters. Only ASCII characters.\n          example: 'Test Model #1'\n    WrongArgumentException:\n      type: object\n      properties:\n        logref:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: Wrong arguments exception.\n    NotFoundException:\n      type: object\n      properties:\n        logref:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: Not found.\n    JobProcessingException:\n      type: object\n      properties:\n        logref:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: Exception during job processing.\n    Error:\n      type: object\n      properties:\n        logref:\n          type: string\n          format: uuid\n        message:\n          type: string\n  securitySchemes:\n    anomalydetection:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://oauth.simple.api/authorization\n          tokenUrl: https://oauth.simple.api/token\n          scopes:\n            as.ad.u: use interactive mode\n            as.adb.u: use batch mode\n\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/siemens.analytics.anomalydetection/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/siemens.analytics.anomalydetection/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/detectAnomaliesJobs\": post: security: security \"anomalydetection\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}