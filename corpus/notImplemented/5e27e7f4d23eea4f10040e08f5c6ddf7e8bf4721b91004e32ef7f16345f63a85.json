{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-serviceuser-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-serviceuser-v1-swagger.yaml",
			"byteSize": 112525,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: Enables services that service consumers want to use on Google Cloud\n    Platform, lists the available or enabled services, or disables services that\n    service consumers no longer use.\n  title: Service User\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.6.2\n      format: google\n      url: https://serviceuser.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: serviceuser\nexternalDocs:\n  url: https://cloud.google.com/service-management/\ntags:\n  - name: projects\n  - name: services\npaths:\n  /v1/services:search:\n    get:\n      description: |-\n        Search available services.\n\n        When no filter is specified, returns all accessible services. For\n        authenticated users, also returns all services the calling user has\n        \"servicemanagement.services.bind\" permission for.\n      operationId: serviceuser.services.search\n      parameters:\n        - description: Requested size of the next page of data.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: \u003e-\n            Token identifying which result to start with; returned by a previous\n            list\n\n            call.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/SearchServicesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform.read-only\n      tags:\n        - services\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/bearer_token\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/pp\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{name}:disable\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/bearer_token\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/pp\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Disable a service so it can no longer be used with a\n\n        project. This prevents unintended usage that may cause unexpected billing\n\n        charges or security leaks.\n\n\n        Operation\u003cresponse: google.protobuf.Empty\u003e\n      operationId: serviceuser.projects.services.disable\n      parameters:\n        - description: \u003e-\n            Name of the consumer and the service to disable for that consumer.\n\n\n            The Service User implementation accepts the following forms for consumer:\n\n            - \"project:\u003cproject_id\u003e\"\n\n\n            A valid path would be:\n\n            - /v1/projects/my-project/services/servicemanagement.googleapis.com:disable\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DisableServiceRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/service.management\n      tags:\n        - projects\n  \"/v1/{name}:enable\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/bearer_token\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/pp\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Enable a service so it can be used with a project.\n        See [Cloud Auth Guide](https://cloud.google.com/docs/authentication) for\n        more information.\n\n        Operation\u003cresponse: google.protobuf.Empty\u003e\n      operationId: serviceuser.projects.services.enable\n      parameters:\n        - description: \u003e-\n            Name of the consumer and the service to enable for that consumer.\n\n\n            A valid path would be:\n\n            - /v1/projects/my-project/services/servicemanagement.googleapis.com:enable\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnableServiceRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/service.management\n      tags:\n        - projects\n  \"/v1/{parent}/services\":\n    get:\n      description: List enabled services for the specified consumer.\n      operationId: serviceuser.projects.services.list\n      parameters:\n        - description: Requested size of the next page of data.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: \u003e-\n            Token identifying which result to start with; returned by a previous\n            list\n\n            call.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: |-\n            List enabled services for the specified parent.\n\n            An example valid parent would be:\n            - projects/my-project\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListEnabledServicesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform.read-only\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/bearer_token\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/pp\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\nservers:\n  - url: https://serviceuser.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    bearer_token:\n      description: OAuth bearer token.\n      in: query\n      name: bearer_token\n      schema:\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    pp:\n      description: Pretty-print response.\n      in: query\n      name: pp\n      schema:\n        type: boolean\n        default: true\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/service.management: Manage your Google API service configuration\n  schemas:\n    Api:\n      description: \u003e-\n        Api is a light-weight descriptor for an API Interface.\n\n\n        Interfaces are also described as \"protocol buffer services\" in some contexts,\n\n        such as by the \"service\" keyword in a .proto file, but they are different\n\n        from API Services, which represent a concrete implementation of an interface\n\n        as opposed to simply a description of methods and bindings. They are also\n\n        sometimes simply referred to as \"APIs\" in other contexts, such as the name of\n\n        this message itself. See https://cloud.google.com/apis/design/glossary for\n\n        detailed terminology.\n      properties:\n        methods:\n          description: The methods of this interface, in unspecified order.\n          items:\n            $ref: \"#/components/schemas/Method\"\n          type: array\n        mixins:\n          description: Included interfaces. See Mixin.\n          items:\n            $ref: \"#/components/schemas/Mixin\"\n          type: array\n        name:\n          description: |-\n            The fully qualified name of this interface, including package name\n            followed by the interface's simple name.\n          type: string\n        options:\n          description: Any metadata attached to the interface.\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n        sourceContext:\n          $ref: \"#/components/schemas/SourceContext\"\n        syntax:\n          description: The source syntax of the service.\n          enum:\n            - SYNTAX_PROTO2\n            - SYNTAX_PROTO3\n          type: string\n        version:\n          description: \u003e\n            A version string for this interface. If specified, must have the\n            form\n\n            `major-version.minor-version`, as in `1.10`. If the minor version is\n\n            omitted, it defaults to zero. If the entire version field is empty, the\n\n            major version is derived from the package name, as outlined below. If the\n\n            field is not empty, the version in the package name will be verified to be\n\n            consistent with what is provided here.\n\n\n            The versioning schema uses [semantic\n\n            versioning](http://semver.org) where the major version number\n\n            indicates a breaking change and the minor version an additive,\n\n            non-breaking change. Both version numbers are signals to users\n\n            what to expect from different versions, and should be carefully\n\n            chosen based on the product plan.\n\n\n            The major version is also reflected in the package name of the\n\n            interface, which must end in `v\u003cmajor-version\u003e`, as in\n\n            `google.feature.v1`. For major versions 0 and 1, the suffix can\n\n            be omitted. Zero major versions must only be used for\n\n            experimental, non-GA interfaces.\n          type: string\n      type: object\n    AuthProvider:\n      description: \u003e-\n        Configuration for an anthentication provider, including support for\n\n        [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).\n      properties:\n        audiences:\n          description: \u003e-\n            The list of JWT\n\n            [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).\n\n            that are allowed to access. A JWT containing any of these audiences will\n\n            be accepted. When this setting is absent, only JWTs with audience\n\n            \"https://Service_name/API_name\"\n\n            will be accepted. For example, if no audiences are in the setting,\n\n            LibraryService API will only accept JWTs with the following audience\n\n            \"https://library-example.googleapis.com/google.example.library.v1.LibraryService\".\n\n\n            Example:\n\n                audiences: bookstore_android.apps.googleusercontent.com,\n                           bookstore_web.apps.googleusercontent.com\n          type: string\n        authorizationUrl:\n          description: |-\n            Redirect URL if JWT token is required but no present or is expired.\n            Implement authorizationUrl of securityDefinitions in OpenAPI spec.\n          type: string\n        id:\n          description: \u003e-\n            The unique identifier of the auth provider. It will be referred to\n            by\n\n            `AuthRequirement.provider_id`.\n\n\n            Example: \"bookstore_auth\".\n          type: string\n        issuer:\n          description: \u003e-\n            Identifies the principal that issued the JWT. See\n\n            https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.1\n\n            Usually a URL or an email address.\n\n\n            Example: https://securetoken.google.com\n\n            Example: 1234567-compute@developer.gserviceaccount.com\n          type: string\n        jwksUri:\n          description: \u003e-\n            URL of the provider's public key set to validate signature of the\n            JWT. See\n\n            [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).\n\n            Optional if the key set document:\n             - can be retrieved from\n               [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html\n               of the issuer.\n             - can be inferred from the email domain of the issuer (e.g. a Google service account).\n\n            Example: https://www.googleapis.com/oauth2/v1/certs\n          type: string\n      type: object\n    AuthRequirement:\n      description: \u003e-\n        User-defined authentication requirements, including support for\n\n        [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).\n      properties:\n        audiences:\n          description: \u003e-\n            NOTE: This will be deprecated soon, once AuthProvider.audiences is\n\n            implemented and accepted in all the runtime components.\n\n\n            The list of JWT\n\n            [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).\n\n            that are allowed to access. A JWT containing any of these audiences will\n\n            be accepted. When this setting is absent, only JWTs with audience\n\n            \"https://Service_name/API_name\"\n\n            will be accepted. For example, if no audiences are in the setting,\n\n            LibraryService API will only accept JWTs with the following audience\n\n            \"https://library-example.googleapis.com/google.example.library.v1.LibraryService\".\n\n\n            Example:\n\n                audiences: bookstore_android.apps.googleusercontent.com,\n                           bookstore_web.apps.googleusercontent.com\n          type: string\n        providerId:\n          description: |-\n            id from authentication provider.\n\n            Example:\n\n                provider_id: bookstore_auth\n          type: string\n      type: object\n    Authentication:\n      description: |-\n        `Authentication` defines the authentication configuration for an API.\n\n        Example for an API targeted for external use:\n\n            name: calendar.googleapis.com\n            authentication:\n              providers:\n              - id: google_calendar_auth\n                jwks_uri: https://www.googleapis.com/oauth2/v1/certs\n                issuer: https://securetoken.google.com\n              rules:\n              - selector: \"*\"\n                requirements:\n                  provider_id: google_calendar_auth\n      properties:\n        providers:\n          description: Defines a set of authentication providers that a service supports.\n          items:\n            $ref: \"#/components/schemas/AuthProvider\"\n          type: array\n        rules:\n          description: \u003e-\n            A list of authentication rules that apply to individual API methods.\n\n\n            **NOTE:** All service configuration rules follow \"last one wins\" order.\n          items:\n            $ref: \"#/components/schemas/AuthenticationRule\"\n          type: array\n      type: object\n    AuthenticationRule:\n      description: \u003e-\n        Authentication rules for the service.\n\n\n        By default, if a method has any authentication requirements, every request\n\n        must include a valid credential matching one of the requirements.\n\n        It's an error to include more than one kind of credential in a single\n\n        request.\n\n\n        If a method doesn't have any auth requirements, request credentials will be\n\n        ignored.\n      properties:\n        allowWithoutCredential:\n          description: If true, the service accepts API keys without any other credential.\n          type: boolean\n        customAuth:\n          $ref: \"#/components/schemas/CustomAuthRequirements\"\n        oauth:\n          $ref: \"#/components/schemas/OAuthRequirements\"\n        requirements:\n          description: Requirements for additional authentication providers.\n          items:\n            $ref: \"#/components/schemas/AuthRequirement\"\n          type: array\n        selector:\n          description: |-\n            Selects the methods to which this rule applies.\n\n            Refer to selector for syntax details.\n          type: string\n      type: object\n    AuthorizationConfig:\n      description: \u003e-\n        Configuration of authorization.\n\n\n        This section determines the authorization provider, if unspecified, then no\n\n        authorization check will be done.\n\n\n        Example:\n\n            experimental:\n              authorization:\n                provider: firebaserules.googleapis.com\n      properties:\n        provider:\n          description: |-\n            The name of the authorization provider, such as\n            firebaserules.googleapis.com.\n          type: string\n      type: object\n    Backend:\n      description: \"`Backend` defines the backend configuration for a service.\"\n      properties:\n        rules:\n          description: \u003e-\n            A list of API backend rules that apply to individual API methods.\n\n\n            **NOTE:** All service configuration rules follow \"last one wins\" order.\n          items:\n            $ref: \"#/components/schemas/BackendRule\"\n          type: array\n      type: object\n    BackendRule:\n      description: A backend rule provides configuration for an individual API element.\n      properties:\n        address:\n          description: The address of the API backend.\n          type: string\n        deadline:\n          description: \u003e-\n            The number of seconds to wait for a response from a request.  The\n            default\n\n            deadline for gRPC is infinite (no deadline) and HTTP requests is 5 seconds.\n          format: double\n          type: number\n        minDeadline:\n          description: \u003e-\n            Minimum deadline in seconds needed for this method. Calls having\n            deadline\n\n            value lower than this will be rejected.\n          format: double\n          type: number\n        selector:\n          description: |-\n            Selects the methods to which this rule applies.\n\n            Refer to selector for syntax details.\n          type: string\n      type: object\n    Billing:\n      description: \u003e-\n        Billing related configuration of the service.\n\n\n        The following example shows how to configure monitored resources and metrics\n\n        for billing:\n\n            monitored_resources:\n            - type: library.googleapis.com/branch\n              labels:\n              - key: /city\n                description: The city where the library branch is located in.\n              - key: /name\n                description: The name of the branch.\n            metrics:\n            - name: library.googleapis.com/book/borrowed_count\n              metric_kind: DELTA\n              value_type: INT64\n            billing:\n              consumer_destinations:\n              - monitored_resource: library.googleapis.com/branch\n                metrics:\n                - library.googleapis.com/book/borrowed_count\n      properties:\n        consumerDestinations:\n          description: \u003e-\n            Billing configurations for sending metrics to the consumer project.\n\n            There can be multiple consumer destinations per service, each one must have\n\n            a different monitored resource type. A metric can be used in at most\n\n            one consumer destination.\n          items:\n            $ref: \"#/components/schemas/BillingDestination\"\n          type: array\n      type: object\n    BillingDestination:\n      description: |-\n        Configuration of a specific billing destination (Currently only support\n        bill against consumer project).\n      properties:\n        metrics:\n          description: |-\n            Names of the metrics to report to this billing destination.\n            Each name must be defined in Service.metrics section.\n          items:\n            type: string\n          type: array\n        monitoredResource:\n          description: |-\n            The monitored resource type. The type must be defined in\n            Service.monitored_resources section.\n          type: string\n      type: object\n    Context:\n      description: \u003e-\n        `Context` defines which contexts an API requests.\n\n\n        Example:\n\n            context:\n              rules:\n              - selector: \"*\"\n                requested:\n                - google.rpc.context.ProjectContext\n                - google.rpc.context.OriginContext\n\n        The above specifies that all methods in the API request\n\n        `google.rpc.context.ProjectContext` and\n\n        `google.rpc.context.OriginContext`.\n\n\n        Available context types are defined in package\n\n        `google.rpc.context`.\n\n\n        This also provides mechanism to whitelist any protobuf message extension that\n\n        can be sent in grpc metadata using “x-goog-ext-\u003cextension_id\u003e-bin” and\n\n        “x-goog-ext-\u003cextension_id\u003e-jspb” format. For example, list any service\n\n        specific protobuf types that can appear in grpc metadata as follows in your\n\n        yaml file:\n\n\n        Example:\n\n            context:\n              rules:\n               - selector: \"google.example.library.v1.LibraryService.CreateBook\"\n                 allowed_request_extensions:\n                 - google.foo.v1.NewExtension\n                 allowed_response_extensions:\n                 - google.foo.v1.NewExtension\n\n        You can also specify extension ID instead of fully qualified extension name\n\n        here.\n      properties:\n        rules:\n          description: \u003e-\n            A list of RPC context rules that apply to individual API methods.\n\n\n            **NOTE:** All service configuration rules follow \"last one wins\" order.\n          items:\n            $ref: \"#/components/schemas/ContextRule\"\n          type: array\n      type: object\n    ContextRule:\n      description: \u003e-\n        A context rule provides information about the context for an individual\n        API\n\n        element.\n      properties:\n        allowedRequestExtensions:\n          description: \u003e-\n            A list of full type names or extension IDs of extensions allowed in\n            grpc\n\n            side channel from client to backend.\n          items:\n            type: string\n          type: array\n        allowedResponseExtensions:\n          description: \u003e-\n            A list of full type names or extension IDs of extensions allowed in\n            grpc\n\n            side channel from backend to client.\n          items:\n            type: string\n          type: array\n        provided:\n          description: A list of full type names of provided contexts.\n          items:\n            type: string\n          type: array\n        requested:\n          description: A list of full type names of requested contexts.\n          items:\n            type: string\n          type: array\n        selector:\n          description: |-\n            Selects the methods to which this rule applies.\n\n            Refer to selector for syntax details.\n          type: string\n      type: object\n    Control:\n      description: |-\n        Selects and configures the service controller used by the service.  The\n        service controller handles features like abuse, quota, billing, logging,\n        monitoring, etc.\n      properties:\n        environment:\n          description: |-\n            The service control environment to use. If empty, no control plane\n            feature (like quota and billing) will be enabled.\n          type: string\n      type: object\n    CustomAuthRequirements:\n      description: Configuration for a custom authentication provider.\n      properties:\n        provider:\n          description: \u003e-\n            A configuration string containing connection information for the\n\n            authentication provider, typically formatted as a SmartService string\n\n            (go/smartservice).\n          type: string\n      type: object\n    CustomError:\n      description: |-\n        Customize service error responses.  For example, list any service\n        specific protobuf types that can appear in error detail lists of\n        error responses.\n\n        Example:\n\n            custom_error:\n              types:\n              - google.foo.v1.CustomError\n              - google.foo.v1.AnotherError\n      properties:\n        rules:\n          description: \u003e-\n            The list of custom error rules that apply to individual API\n            messages.\n\n\n            **NOTE:** All service configuration rules follow \"last one wins\" order.\n          items:\n            $ref: \"#/components/schemas/CustomErrorRule\"\n          type: array\n        types:\n          description: The list of custom error detail types, e.g.\n            'google.foo.v1.CustomError'.\n          items:\n            type: string\n          type: array\n      type: object\n    CustomErrorRule:\n      description: A custom error rule.\n      properties:\n        isErrorType:\n          description: \u003e-\n            Mark this message as possible payload in error response.  Otherwise,\n\n            objects of this type will be filtered when they appear in error payload.\n          type: boolean\n        selector:\n          description: |-\n            Selects messages to which this rule applies.\n\n            Refer to selector for syntax details.\n          type: string\n      type: object\n    CustomHttpPattern:\n      description: A custom pattern is used for defining custom HTTP verb.\n      properties:\n        kind:\n          description: The name of this custom HTTP verb.\n          type: string\n        path:\n          description: The path matched by this custom verb.\n          type: string\n      type: object\n    DisableServiceRequest:\n      description: Request message for DisableService method.\n      properties: {}\n      type: object\n    Documentation:\n      description: \u003e-\n        `Documentation` provides the information for describing a service.\n\n\n        Example:\n\n        \u003cpre\u003e\u003ccode\u003edocumentation:\n          summary: \u003e\n            The Google Calendar API gives access\n            to most calendar features.\n          pages:\n          - name: Overview\n            content: \u0026#40;== include google/foo/overview.md ==\u0026#41;\n          - name: Tutorial\n            content: \u0026#40;== include google/foo/tutorial.md ==\u0026#41;\n            subpages;\n            - name: Java\n              content: \u0026#40;== include google/foo/tutorial_java.md ==\u0026#41;\n          rules:\n          - selector: google.calendar.Calendar.Get\n            description: \u003e\n              ...\n          - selector: google.calendar.Calendar.Put\n            description: \u003e\n              ...\n        \u003c/code\u003e\u003c/pre\u003e\n\n        Documentation is provided in markdown syntax. In addition to\n\n        standard markdown features, definition lists, tables and fenced\n\n        code blocks are supported. Section headers can be provided and are\n\n        interpreted relative to the section nesting of the context where\n\n        a documentation fragment is embedded.\n\n\n        Documentation from the IDL is merged with documentation defined\n\n        via the config at normalization time, where documentation provided\n\n        by config rules overrides IDL provided.\n\n\n        A number of constructs specific to the API platform are supported\n\n        in documentation text.\n\n\n        In order to reference a proto element, the following\n\n        notation can be used:\n\n        \u003cpre\u003e\u003ccode\u003e\u0026#91;fully.qualified.proto.name]\u0026#91;]\u003c/code\u003e\u003c/pre\u003e\n\n        To override the display text used for the link, this can be used:\n\n        \u003cpre\u003e\u003ccode\u003e\u0026#91;display text]\u0026#91;fully.qualified.proto.name]\u003c/code\u003e\u003c/pre\u003e\n\n        Text can be excluded from doc using the following notation:\n\n        \u003cpre\u003e\u003ccode\u003e\u0026#40;-- internal comment --\u0026#41;\u003c/code\u003e\u003c/pre\u003e\n\n\n        A few directives are available in documentation. Note that\n\n        directives must appear on a single line to be properly\n\n        identified. The `include` directive includes a markdown file from\n\n        an external source:\n\n        \u003cpre\u003e\u003ccode\u003e\u0026#40;== include path/to/file ==\u0026#41;\u003c/code\u003e\u003c/pre\u003e\n\n        The `resource_for` directive marks a message to be the resource of\n\n        a collection in REST view. If it is not specified, tools attempt\n\n        to infer the resource from the operations in a collection:\n\n        \u003cpre\u003e\u003ccode\u003e\u0026#40;== resource_for v1.shelves.books ==\u0026#41;\u003c/code\u003e\u003c/pre\u003e\n\n        The directive `suppress_warning` does not directly affect documentation\n\n        and is documented together with service config validation.\n      properties:\n        documentationRootUrl:\n          description: The URL to the root of documentation.\n          type: string\n        overview:\n          description: \u003e-\n            Declares a single overview page. For example:\n\n            \u003cpre\u003e\u003ccode\u003edocumentation:\n              summary: ...\n              overview: \u0026#40;== include overview.md ==\u0026#41;\n            \u003c/code\u003e\u003c/pre\u003e\n\n            This is a shortcut for the following declaration (using pages style):\n\n            \u003cpre\u003e\u003ccode\u003edocumentation:\n              summary: ...\n              pages:\n              - name: Overview\n                content: \u0026#40;== include overview.md ==\u0026#41;\n            \u003c/code\u003e\u003c/pre\u003e\n\n            Note: you cannot specify both `overview` field and `pages` field.\n          type: string\n        pages:\n          description: The top level pages for the documentation set.\n          items:\n            $ref: \"#/components/schemas/Page\"\n          type: array\n        rules:\n          description: \u003e-\n            A list of documentation rules that apply to individual API elements.\n\n\n            **NOTE:** All service configuration rules follow \"last one wins\" order.\n          items:\n            $ref: \"#/components/schemas/DocumentationRule\"\n          type: array\n        summary:\n          description: |-\n            A short summary of what the service does. Can only be provided by\n            plain text.\n          type: string\n      type: object\n    DocumentationRule:\n      description: A documentation rule provides information about individual API elements.\n      properties:\n        deprecationDescription:\n          description: \u003e-\n            Deprecation description of the selected element(s). It can be\n            provided if an\n\n            element is marked as `deprecated`.\n          type: string\n        description:\n          description: Description of the selected API(s).\n          type: string\n        selector:\n          description: \u003e-\n            The selector is a comma-separated list of patterns. Each pattern is\n            a\n\n            qualified name of the element which may end in \"*\", indicating a wildcard.\n\n            Wildcards are only allowed at the end and for a whole component of the\n\n            qualified name, i.e. \"foo.*\" is ok, but not \"foo.b*\" or \"foo.*.bar\". To\n\n            specify a default for all applicable elements, the whole pattern \"*\"\n\n            is used.\n          type: string\n      type: object\n    EnableServiceRequest:\n      description: Request message for EnableService method.\n      properties: {}\n      type: object\n    Endpoint:\n      description: \u003e-\n        `Endpoint` describes a network endpoint that serves a set of APIs.\n\n        A service may expose any number of endpoints, and all endpoints share the\n\n        same service configuration, such as quota configuration and monitoring\n\n        configuration.\n\n\n        Example service configuration:\n\n            name: library-example.googleapis.com\n            endpoints:\n              # Below entry makes 'google.example.library.v1.Library'\n              # API be served from endpoint address library-example.googleapis.com.\n              # It also allows HTTP OPTIONS calls to be passed to the backend, for\n              # it to decide whether the subsequent cross-origin request is\n              # allowed to proceed.\n            - name: library-example.googleapis.com\n              allow_cors: true\n      properties:\n        aliases:\n          description: \u003e-\n            DEPRECATED: This field is no longer supported. Instead of using\n            aliases,\n\n            please specify multiple google.api.Endpoint for each of the intended\n\n            aliases.\n\n\n            Additional names that this endpoint will be hosted on.\n          items:\n            type: string\n          type: array\n        allowCors:\n          description: \u003e-\n            Allowing\n\n            [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing), aka\n\n            cross-domain traffic, would allow the backends served from this endpoint to\n\n            receive and respond to HTTP OPTIONS requests. The response will be used by\n\n            the browser to determine whether the subsequent cross-origin request is\n\n            allowed to proceed.\n          type: boolean\n        features:\n          description: The list of features enabled on this endpoint.\n          items:\n            type: string\n          type: array\n        name:\n          description: The canonical name of this endpoint.\n          type: string\n        target:\n          description: \u003e-\n            The specification of an Internet routable address of API frontend\n            that will\n\n            handle requests to this [API Endpoint](https://cloud.google.com/apis/design/glossary).\n\n            It should be either a valid IPv4 address or a fully-qualified domain name.\n\n            For example, \"8.8.8.8\" or \"myservice.appspot.com\".\n          type: string\n      type: object\n    Enum:\n      description: Enum type definition.\n      properties:\n        enumvalue:\n          description: Enum value definitions.\n          items:\n            $ref: \"#/components/schemas/EnumValue\"\n          type: array\n        name:\n          description: Enum type name.\n          type: string\n        options:\n          description: Protocol buffer options.\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n        sourceContext:\n          $ref: \"#/components/schemas/SourceContext\"\n        syntax:\n          description: The source syntax.\n          enum:\n            - SYNTAX_PROTO2\n            - SYNTAX_PROTO3\n          type: string\n      type: object\n    EnumValue:\n      description: Enum value definition.\n      properties:\n        name:\n          description: Enum value name.\n          type: string\n        number:\n          description: Enum value number.\n          format: int32\n          type: integer\n        options:\n          description: Protocol buffer options.\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n      type: object\n    Experimental:\n      description: |-\n        Experimental service configuration. These configuration options can\n        only be used by whitelisted users.\n      properties:\n        authorization:\n          $ref: \"#/components/schemas/AuthorizationConfig\"\n      type: object\n    Field:\n      description: A single field of a message type.\n      properties:\n        cardinality:\n          description: The field cardinality.\n          enum:\n            - CARDINALITY_UNKNOWN\n            - CARDINALITY_OPTIONAL\n            - CARDINALITY_REQUIRED\n            - CARDINALITY_REPEATED\n          type: string\n        defaultValue:\n          description: The string value of the default value of this field. Proto2 syntax\n            only.\n          type: string\n        jsonName:\n          description: The field JSON name.\n          type: string\n        kind:\n          description: The field type.\n          enum:\n            - TYPE_UNKNOWN\n            - TYPE_DOUBLE\n            - TYPE_FLOAT\n            - TYPE_INT64\n            - TYPE_UINT64\n            - TYPE_INT32\n            - TYPE_FIXED64\n            - TYPE_FIXED32\n            - TYPE_BOOL\n            - TYPE_STRING\n            - TYPE_GROUP\n            - TYPE_MESSAGE\n            - TYPE_BYTES\n            - TYPE_UINT32\n            - TYPE_ENUM\n            - TYPE_SFIXED32\n            - TYPE_SFIXED64\n            - TYPE_SINT32\n            - TYPE_SINT64\n          type: string\n        name:\n          description: The field name.\n          type: string\n        number:\n          description: The field number.\n          format: int32\n          type: integer\n        oneofIndex:\n          description: \u003e-\n            The index of the field type in `Type.oneofs`, for message or\n            enumeration\n\n            types. The first type has index 1; zero means the type is not in the list.\n          format: int32\n          type: integer\n        options:\n          description: The protocol buffer options.\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n        packed:\n          description: Whether to use alternative packed wire representation.\n          type: boolean\n        typeUrl:\n          description: |-\n            The field type URL, without the scheme, for message or enumeration\n            types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n          type: string\n      type: object\n    Http:\n      description: |-\n        Defines the HTTP configuration for an API service. It contains a list of\n        HttpRule, each specifying the mapping of an RPC method\n        to one or more HTTP REST API methods.\n      properties:\n        fullyDecodeReservedExpansion:\n          description: \u003e-\n            When set to true, URL path parmeters will be fully URI-decoded\n            except in\n\n            cases of single segment matches in reserved expansion, where \"%2F\" will be\n\n            left encoded.\n\n\n            The default behavior is to not decode RFC 6570 reserved characters in multi\n\n            segment matches.\n          type: boolean\n        rules:\n          description: \u003e-\n            A list of HTTP configuration rules that apply to individual API\n            methods.\n\n\n            **NOTE:** All service configuration rules follow \"last one wins\" order.\n          items:\n            $ref: \"#/components/schemas/HttpRule\"\n          type: array\n      type: object\n    HttpRule:\n      description: \u003e-\n        `HttpRule` defines the mapping of an RPC method to one or more HTTP\n\n        REST API methods. The mapping specifies how different portions of the RPC\n\n        request message are mapped to URL path, URL query parameters, and\n\n        HTTP request body. The mapping is typically specified as an\n\n        `google.api.http` annotation on the RPC method,\n\n        see \"google/api/annotations.proto\" for details.\n\n\n        The mapping consists of a field specifying the path template and\n\n        method kind.  The path template can refer to fields in the request\n\n        message, as in the example below which describes a REST GET\n\n        operation on a resource collection of messages:\n\n\n            service Messaging {\n              rpc GetMessage(GetMessageRequest) returns (Message) {\n                option (google.api.http).get = \"/v1/messages/{message_id}/{sub.subfield}\";\n              }\n            }\n            message GetMessageRequest {\n              message SubMessage {\n                string subfield = 1;\n              }\n              string message_id = 1; // mapped to the URL\n              SubMessage sub = 2;    // `sub.subfield` is url-mapped\n            }\n            message Message {\n              string text = 1; // content of the resource\n            }\n\n        The same http annotation can alternatively be expressed inside the\n\n        `GRPC API Configuration` YAML file.\n\n            http:\n              rules:\n                - selector: \u003cproto_package_name\u003e.Messaging.GetMessage\n                  get: /v1/messages/{message_id}/{sub.subfield}\n\n        This definition enables an automatic, bidrectional mapping of HTTP\n\n        JSON to RPC. Example:\n\n\n        HTTP | RPC\n\n        -----|-----\n\n        `GET /v1/messages/123456/foo`  | `GetMessage(message_id: \"123456\" sub: SubMessage(subfield: \"foo\"))`\n\n\n        In general, not only fields but also field paths can be referenced\n\n        from a path pattern. Fields mapped to the path pattern cannot be\n\n        repeated and must have a primitive (non-message) type.\n\n\n        Any fields in the request message which are not bound by the path\n\n        pattern automatically become (optional) HTTP query\n\n        parameters. Assume the following definition of the request message:\n\n\n            service Messaging {\n              rpc GetMessage(GetMessageRequest) returns (Message) {\n                option (google.api.http).get = \"/v1/messages/{message_id}\";\n              }\n            }\n            message GetMessageRequest {\n              message SubMessage {\n                string subfield = 1;\n              }\n              string message_id = 1; // mapped to the URL\n              int64 revision = 2;    // becomes a parameter\n              SubMessage sub = 3;    // `sub.subfield` becomes a parameter\n            }\n\n\n        This enables a HTTP JSON to RPC mapping as below:\n\n\n        HTTP | RPC\n\n        -----|-----\n\n        `GET /v1/messages/123456?revision=2\u0026sub.subfield=foo` | `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield: \"foo\"))`\n\n\n        Note that fields which are mapped to HTTP parameters must have a\n\n        primitive type or a repeated primitive type. Message types are not\n\n        allowed. In the case of a repeated type, the parameter can be\n\n        repeated in the URL, as in `...?param=A\u0026param=B`.\n\n\n        For HTTP method kinds which allow a request body, the `body` field\n\n        specifies the mapping. Consider a REST update method on the\n\n        message resource collection:\n\n\n            service Messaging {\n              rpc UpdateMessage(UpdateMessageRequest) returns (Message) {\n                option (google.api.http) = {\n                  put: \"/v1/messages/{message_id}\"\n                  body: \"message\"\n                };\n              }\n            }\n            message UpdateMessageRequest {\n              string message_id = 1; // mapped to the URL\n              Message message = 2;   // mapped to the body\n            }\n\n\n        The following HTTP JSON to RPC mapping is enabled, where the\n\n        representation of the JSON in the request body is determined by\n\n        protos JSON encoding:\n\n\n        HTTP | RPC\n\n        -----|-----\n\n        `PUT /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" message { text: \"Hi!\" })`\n\n\n        The special name `*` can be used in the body mapping to define that\n\n        every field not bound by the path template should be mapped to the\n\n        request body.  This enables the following alternative definition of\n\n        the update method:\n\n            service Messaging {\n              rpc UpdateMessage(Message) returns (Message) {\n                option (google.api.http) = {\n                  put: \"/v1/messages/{message_id}\"\n                  body: \"*\"\n                };\n              }\n            }\n            message Message {\n              string message_id = 1;\n              string text = 2;\n            }\n\n\n        The following HTTP JSON to RPC mapping is enabled:\n\n\n        HTTP | RPC\n\n        -----|-----\n\n        `PUT /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" text: \"Hi!\")`\n\n\n        Note that when using `*` in the body mapping, it is not possible to\n\n        have HTTP parameters, as all fields not bound by the path end in\n\n        the body. This makes this option more rarely used in practice of\n\n        defining REST APIs. The common usage of `*` is in custom methods\n\n        which don't use the URL at all for transferring data.\n\n\n        It is possible to define multiple HTTP methods for one RPC by using\n\n        the `additional_bindings` option. Example:\n\n            service Messaging {\n              rpc GetMessage(GetMessageRequest) returns (Message) {\n                option (google.api.http) = {\n                  get: \"/v1/messages/{message_id}\"\n                  additional_bindings {\n                    get: \"/v1/users/{user_id}/messages/{message_id}\"\n                  }\n                };\n              }\n            }\n            message GetMessageRequest {\n              string message_id = 1;\n              string user_id = 2;\n            }\n\n\n        This enables the following two alternative HTTP JSON to RPC\n\n        mappings:\n\n\n        HTTP | RPC\n\n        -----|-----\n\n        `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")`\n\n        `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id: \"123456\")`\n\n\n        # Rules for HTTP mapping\n\n\n        The rules for mapping HTTP path, query parameters, and body fields\n\n        to the request message are as follows:\n\n\n        1. The `body` field specifies either `*` or a field path, or is\n           omitted. If omitted, it indicates there is no HTTP request body.\n        2. Leaf fields (recursive expansion of nested messages in the\n           request) can be classified into three types:\n            (a) Matched in the URL template.\n            (b) Covered by body (if body is `*`, everything except (a) fields;\n                else everything under the body field)\n            (c) All other fields.\n        3. URL query parameters found in the HTTP request are mapped to (c) fields.\n\n        4. Any body sent with an HTTP request can contain only (b) fields.\n\n\n        The syntax of the path template is as follows:\n\n            Template = \"/\" Segments [ Verb ] ;\n            Segments = Segment { \"/\" Segment } ;\n            Segment  = \"*\" | \"**\" | LITERAL | Variable ;\n            Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ;\n            FieldPath = IDENT { \".\" IDENT } ;\n            Verb     = \":\" LITERAL ;\n\n        The syntax `*` matches a single path segment. The syntax `**` matches zero\n\n        or more path segments, which must be the last part of the path except the\n\n        `Verb`. The syntax `LITERAL` matches literal text in the path.\n\n\n        The syntax `Variable` matches part of the URL path as specified by its\n\n        template. A variable template must not contain other variables. If a variable\n\n        matches a single path segment, its template may be omitted, e.g. `{var}`\n\n        is equivalent to `{var=*}`.\n\n\n        If a variable contains exactly one path segment, such as `\"{var}\"` or\n\n        `\"{var=*}\"`, when such a variable is expanded into a URL path, all characters\n\n        except `[-_.~0-9a-zA-Z]` are percent-encoded. Such variables show up in the\n\n        Discovery Document as `{var}`.\n\n\n        If a variable contains one or more path segments, such as `\"{var=foo/*}\"`\n\n        or `\"{var=**}\"`, when such a variable is expanded into a URL path, all\n\n        characters except `[-_.~/0-9a-zA-Z]` are percent-encoded. Such variables\n\n        show up in the Discovery Document as `{+var}`.\n\n\n        NOTE: While the single segment variable matches the semantics of\n\n        [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2\n\n        Simple String Expansion, the multi segment variable **does not** match\n\n        RFC 6570 Reserved Expansion. The reason is that the Reserved Expansion\n\n        does not expand special characters like `?` and `#`, which would lead\n\n        to invalid URLs.\n\n\n        NOTE: the field paths in variables and in the `body` must not refer to\n\n        repeated fields or map fields.\n      properties:\n        additionalBindings:\n          description: |-\n            Additional HTTP bindings for the selector. Nested bindings must\n            not contain an `additional_bindings` field themselves (that is,\n            the nesting may only be one level deep).\n          items:\n            $ref: \"#/components/schemas/HttpRule\"\n          type: array\n        body:\n          description: \u003e-\n            The name of the request field whose value is mapped to the HTTP\n            body, or\n\n            `*` for mapping all fields not captured by the path pattern to the HTTP\n\n            body. NOTE: the referred field must not be a repeated field and must be\n\n            present at the top-level of request message type.\n          type: string\n        custom:\n          $ref: \"#/components/schemas/CustomHttpPattern\"\n        delete:\n          description: Used for deleting a resource.\n          type: string\n        get:\n          description: Used for listing and getting information about resources.\n          type: string\n        mediaDownload:\n          $ref: \"#/components/schemas/MediaDownload\"\n        mediaUpload:\n          $ref: \"#/components/schemas/MediaUpload\"\n        patch:\n          description: Used for updating a resource.\n          type: string\n        post:\n          description: Used for creating a resource.\n          type: string\n        put:\n          description: Used for updating a resource.\n          type: string\n        selector:\n          description: |-\n            Selects methods to which this rule applies.\n\n            Refer to selector for syntax details.\n          type: string\n      type: object\n    LabelDescriptor:\n      description: A description of a label.\n      properties:\n        description:\n          description: A human-readable description for the label.\n          type: string\n        key:\n          description: The label key.\n          type: string\n        valueType:\n          description: The type of data that can be assigned to the label.\n          enum:\n            - STRING\n            - BOOL\n            - INT64\n          type: string\n      type: object\n    ListEnabledServicesResponse:\n      description: Response message for `ListEnabledServices` method.\n      properties:\n        nextPageToken:\n          description: \u003e-\n            Token that can be passed to `ListEnabledServices` to resume a\n            paginated\n\n            query.\n          type: string\n        services:\n          description: Services enabled for the specified parent.\n          items:\n            $ref: \"#/components/schemas/PublishedService\"\n          type: array\n      type: object\n    LogDescriptor:\n      description: |-\n        A description of a log type. Example in YAML format:\n\n            - name: library.googleapis.com/activity_history\n              description: The history of borrowing and returning library items.\n              display_name: Activity\n              labels:\n              - key: /customer_id\n                description: Identifier of a library customer\n      properties:\n        description:\n          description: \u003e-\n            A human-readable description of this log. This information appears\n            in\n\n            the documentation and can contain details.\n          type: string\n        displayName:\n          description: |-\n            The human-readable name for this log. This information appears on\n            the user interface and should be concise.\n          type: string\n        labels:\n          description: \u003e-\n            The set of labels that are available to describe a specific log\n            entry.\n\n            Runtime requests that contain labels not specified here are\n\n            considered invalid.\n          items:\n            $ref: \"#/components/schemas/LabelDescriptor\"\n          type: array\n        name:\n          description: \u003e-\n            The name of the log. It must be less than 512 characters long and\n            can\n\n            include the following characters: upper- and lower-case alphanumeric\n\n            characters [A-Za-z0-9], and punctuation characters including\n\n            slash, underscore, hyphen, period [/_-.].\n          type: string\n      type: object\n    Logging:\n      description: |-\n        Logging configuration of the service.\n\n        The following example shows how to configure logs to be sent to the\n        producer and consumer projects. In the example, the `activity_history`\n        log is sent to both the producer and consumer projects, whereas the\n        `purchase_history` log is only sent to the producer project.\n\n            monitored_resources:\n            - type: library.googleapis.com/branch\n              labels:\n              - key: /city\n                description: The city where the library branch is located in.\n              - key: /name\n                description: The name of the branch.\n            logs:\n            - name: activity_history\n              labels:\n              - key: /customer_id\n            - name: purchase_history\n            logging:\n              producer_destinations:\n              - monitored_resource: library.googleapis.com/branch\n                logs:\n                - activity_history\n                - purchase_history\n              consumer_destinations:\n              - monitored_resource: library.googleapis.com/branch\n                logs:\n                - activity_history\n      properties:\n        consumerDestinations:\n          description: |-\n            Logging configurations for sending logs to the consumer project.\n            There can be multiple consumer destinations, each one must have a\n            different monitored resource type. A log can be used in at most\n            one consumer destination.\n          items:\n            $ref: \"#/components/schemas/LoggingDestination\"\n          type: array\n        producerDestinations:\n          description: |-\n            Logging configurations for sending logs to the producer project.\n            There can be multiple producer destinations, each one must have a\n            different monitored resource type. A log can be used in at most\n            one producer destination.\n          items:\n            $ref: \"#/components/schemas/LoggingDestination\"\n          type: array\n      type: object\n    LoggingDestination:\n      description: |-\n        Configuration of a specific logging destination (the producer project\n        or the consumer project).\n      properties:\n        logs:\n          description: |-\n            Names of the logs to be sent to this destination. Each name must\n            be defined in the Service.logs section. If the log name is\n            not a domain scoped name, it will be automatically prefixed with\n            the service name followed by \"/\".\n          items:\n            type: string\n          type: array\n        monitoredResource:\n          description: |-\n            The monitored resource type. The type must be defined in the\n            Service.monitored_resources section.\n          type: string\n      type: object\n    MediaDownload:\n      description: \u003e-\n        Defines the Media configuration for a service in case of a download.\n\n        Use this only for Scotty Requests. Do not use this for media support using\n\n        Bytestream, add instead [][google.bytestream.RestByteStream] as an API to\n\n        your configuration for Bytestream methods.\n      properties:\n        completeNotification:\n          description: \u003e-\n            A boolean that determines whether a notification for the completion\n            of a\n\n            download should be sent to the backend.\n          type: boolean\n        downloadService:\n          description: |-\n            DO NOT USE FIELDS BELOW THIS LINE UNTIL THIS WARNING IS REMOVED.\n\n            Specify name of the download service if one is used for download.\n          type: string\n        dropzone:\n          description: Name of the Scotty dropzone to use for the current API.\n          type: string\n        enabled:\n          description: Whether download is enabled.\n          type: boolean\n        maxDirectDownloadSize:\n          description: |-\n            Optional maximum acceptable size for direct download.\n            The size is specified in bytes.\n          format: int64\n          type: string\n        useDirectDownload:\n          description: \u003e-\n            A boolean that determines if direct download from ESF should be used\n            for\n\n            download of this media.\n          type: boolean\n      type: object\n    MediaUpload:\n      description: \u003e-\n        Defines the Media configuration for a service in case of an upload.\n\n        Use this only for Scotty Requests. Do not use this for media support using\n\n        Bytestream, add instead [][google.bytestream.RestByteStream] as an API to\n\n        your configuration for Bytestream methods.\n      properties:\n        completeNotification:\n          description: \u003e-\n            A boolean that determines whether a notification for the completion\n            of an\n\n            upload should be sent to the backend. These notifications will not be seen\n\n            by the client and will not consume quota.\n          type: boolean\n        dropzone:\n          description: Name of the Scotty dropzone to use for the current API.\n          type: string\n        enabled:\n          description: Whether upload is enabled.\n          type: boolean\n        maxSize:\n          description: |-\n            Optional maximum acceptable size for an upload.\n            The size is specified in bytes.\n          format: int64\n          type: string\n        mimeTypes:\n          description: \u003e-\n            An array of mimetype patterns. Esf will only accept uploads that\n            match one\n\n            of the given patterns.\n          items:\n            type: string\n          type: array\n        progressNotification:\n          description: Whether to receive a notification for progress changes of media\n            upload.\n          type: boolean\n        startNotification:\n          description: Whether to receive a notification on the start of media upload.\n          type: boolean\n        uploadService:\n          description: |-\n            DO NOT USE FIELDS BELOW THIS LINE UNTIL THIS WARNING IS REMOVED.\n\n            Specify name of the upload service if one is used for upload.\n          type: string\n      type: object\n    Method:\n      description: Method represents a method of an API interface.\n      properties:\n        name:\n          description: The simple name of this method.\n          type: string\n        options:\n          description: Any metadata attached to the method.\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n        requestStreaming:\n          description: If true, the request is streamed.\n          type: boolean\n        requestTypeUrl:\n          description: A URL of the input message type.\n          type: string\n        responseStreaming:\n          description: If true, the response is streamed.\n          type: boolean\n        responseTypeUrl:\n          description: The URL of the output message type.\n          type: string\n        syntax:\n          description: The source syntax of this method.\n          enum:\n            - SYNTAX_PROTO2\n            - SYNTAX_PROTO3\n          type: string\n      type: object\n    MetricDescriptor:\n      description: \u003e-\n        Defines a metric type and its schema. Once a metric descriptor is\n        created,\n\n        deleting or altering it stops data collection and makes the metric type's\n\n        existing data unusable.\n      properties:\n        description:\n          description: A detailed description of the metric, which can be used in\n            documentation.\n          type: string\n        displayName:\n          description: \u003e-\n            A concise name for the metric, which can be displayed in user\n            interfaces.\n\n            Use sentence case without an ending period, for example \"Request count\".\n\n            This field is optional but it is recommended to be set for any metrics\n\n            associated with user-visible concepts, such as Quota.\n          type: string\n        labels:\n          description: |-\n            The set of labels that can be used to describe a specific\n            instance of this metric type. For example, the\n            `appengine.googleapis.com/http/server/response_latencies` metric\n            type has a label for the HTTP response code, `response_code`, so\n            you can look at latencies for successful responses or just\n            for responses that failed.\n          items:\n            $ref: \"#/components/schemas/LabelDescriptor\"\n          type: array\n        metricKind:\n          description: \u003e-\n            Whether the metric records instantaneous values, changes to a value,\n            etc.\n\n            Some combinations of `metric_kind` and `value_type` might not be supported.\n          enum:\n            - METRIC_KIND_UNSPECIFIED\n            - GAUGE\n            - DELTA\n            - CUMULATIVE\n          type: string\n        name:\n          description: The resource name of the metric descriptor.\n          type: string\n        type:\n          description: \u003e-\n            The metric type, including its DNS name prefix. The type is not\n\n            URL-encoded.  All user-defined custom metric types have the DNS name\n\n            `custom.googleapis.com`.  Metric types should use a natural hierarchical\n\n            grouping. For example:\n\n                \"custom.googleapis.com/invoice/paid/amount\"\n                \"appengine.googleapis.com/http/server/response_latencies\"\n          type: string\n        unit:\n          description: \u003e-\n            The unit in which the metric value is reported. It is only\n            applicable\n\n            if the `value_type` is `INT64`, `DOUBLE`, or `DISTRIBUTION`. The\n\n            supported units are a subset of [The Unified Code for Units of\n\n            Measure](http://unitsofmeasure.org/ucum.html) standard:\n\n\n            **Basic units (UNIT)**\n\n\n            * `bit`   bit\n\n            * `By`    byte\n\n            * `s`     second\n\n            * `min`   minute\n\n            * `h`     hour\n\n            * `d`     day\n\n\n            **Prefixes (PREFIX)**\n\n\n            * `k`     kilo    (10**3)\n\n            * `M`     mega    (10**6)\n\n            * `G`     giga    (10**9)\n\n            * `T`     tera    (10**12)\n\n            * `P`     peta    (10**15)\n\n            * `E`     exa     (10**18)\n\n            * `Z`     zetta   (10**21)\n\n            * `Y`     yotta   (10**24)\n\n            * `m`     milli   (10**-3)\n\n            * `u`     micro   (10**-6)\n\n            * `n`     nano    (10**-9)\n\n            * `p`     pico    (10**-12)\n\n            * `f`     femto   (10**-15)\n\n            * `a`     atto    (10**-18)\n\n            * `z`     zepto   (10**-21)\n\n            * `y`     yocto   (10**-24)\n\n            * `Ki`    kibi    (2**10)\n\n            * `Mi`    mebi    (2**20)\n\n            * `Gi`    gibi    (2**30)\n\n            * `Ti`    tebi    (2**40)\n\n\n            **Grammar**\n\n\n            The grammar also includes these connectors:\n\n\n            * `/`    division (as an infix operator, e.g. `1/s`).\n\n            * `.`    multiplication (as an infix operator, e.g. `GBy.d`)\n\n\n            The grammar for a unit is as follows:\n\n                Expression = Component { \".\" Component } { \"/\" Component } ;\n\n                Component = ( [ PREFIX ] UNIT | \"%\" ) [ Annotation ]\n                          | Annotation\n                          | \"1\"\n                          ;\n\n                Annotation = \"{\" NAME \"}\" ;\n\n            Notes:\n\n\n            * `Annotation` is just a comment if it follows a `UNIT` and is\n               equivalent to `1` if it is used alone. For examples,\n               `{requests}/s == 1/s`, `By{transmitted}/s == By/s`.\n            * `NAME` is a sequence of non-blank printable ASCII characters not\n               containing '{' or '}'.\n            * `1` represents dimensionless value 1, such as in `1/s`.\n\n            * `%` represents dimensionless value 1/100, and annotates values giving\n               a percentage.\n          type: string\n        valueType:\n          description: \u003e-\n            Whether the measurement is an integer, a floating-point number, etc.\n\n            Some combinations of `metric_kind` and `value_type` might not be supported.\n          enum:\n            - VALUE_TYPE_UNSPECIFIED\n            - BOOL\n            - INT64\n            - DOUBLE\n            - STRING\n            - DISTRIBUTION\n            - MONEY\n          type: string\n      type: object\n    MetricRule:\n      description: |-\n        Bind API methods to metrics. Binding a method to a metric causes that\n        metric's configured quota behaviors to apply to the method call.\n      properties:\n        metricCosts:\n          additionalProperties:\n            format: int64\n            type: string\n          description: \u003e-\n            Metrics to update when the selected methods are called, and the\n            associated\n\n            cost applied to each metric.\n\n\n            The key of the map is the metric name, and the values are the amount\n\n            increased for the metric against which the quota limits are defined.\n\n            The value must not be negative.\n          type: object\n        selector:\n          description: |-\n            Selects the methods to which this rule applies.\n\n            Refer to selector for syntax details.\n          type: string\n      type: object\n    Mixin:\n      description: \u003e-\n        Declares an API Interface to be included in this interface. The\n        including\n\n        interface must redeclare all the methods from the included interface, but\n\n        documentation and options are inherited as follows:\n\n\n        - If after comment and whitespace stripping, the documentation\n          string of the redeclared method is empty, it will be inherited\n          from the original method.\n\n        - Each annotation belonging to the service config (http,\n          visibility) which is not set in the redeclared method will be\n          inherited.\n\n        - If an http annotation is inherited, the path pattern will be\n          modified as follows. Any version prefix will be replaced by the\n          version of the including interface plus the root path if\n          specified.\n\n        Example of a simple mixin:\n\n            package google.acl.v1;\n            service AccessControl {\n              // Get the underlying ACL object.\n              rpc GetAcl(GetAclRequest) returns (Acl) {\n                option (google.api.http).get = \"/v1/{resource=**}:getAcl\";\n              }\n            }\n\n            package google.storage.v2;\n            service Storage {\n              //       rpc GetAcl(GetAclRequest) returns (Acl);\n\n              // Get a data record.\n              rpc GetData(GetDataRequest) returns (Data) {\n                option (google.api.http).get = \"/v2/{resource=**}\";\n              }\n            }\n\n        Example of a mixin configuration:\n\n            apis:\n            - name: google.storage.v2.Storage\n              mixins:\n              - name: google.acl.v1.AccessControl\n\n        The mixin construct implies that all methods in `AccessControl` are\n\n        also declared with same name and request/response types in\n\n        `Storage`. A documentation generator or annotation processor will\n\n        see the effective `Storage.GetAcl` method after inherting\n\n        documentation and annotations as follows:\n\n            service Storage {\n              // Get the underlying ACL object.\n              rpc GetAcl(GetAclRequest) returns (Acl) {\n                option (google.api.http).get = \"/v2/{resource=**}:getAcl\";\n              }\n              ...\n            }\n\n        Note how the version in the path pattern changed from `v1` to `v2`.\n\n\n        If the `root` field in the mixin is specified, it should be a\n\n        relative path under which inherited HTTP paths are placed. Example:\n\n            apis:\n            - name: google.storage.v2.Storage\n              mixins:\n              - name: google.acl.v1.AccessControl\n                root: acls\n\n        This implies the following inherited HTTP annotation:\n\n            service Storage {\n              // Get the underlying ACL object.\n              rpc GetAcl(GetAclRequest) returns (Acl) {\n                option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";\n              }\n              ...\n            }\n      properties:\n        name:\n          description: The fully qualified name of the interface which is included.\n          type: string\n        root:\n          description: |-\n            If non-empty specifies a path under which inherited HTTP paths\n            are rooted.\n          type: string\n      type: object\n    MonitoredResourceDescriptor:\n      description: \u003e-\n        An object that describes the schema of a MonitoredResource object using\n        a\n\n        type name and a set of labels.  For example, the monitored resource\n\n        descriptor for Google Compute Engine VM instances has a type of\n\n        `\"gce_instance\"` and specifies the use of the labels `\"instance_id\"` and\n\n        `\"zone\"` to identify particular VM instances.\n\n\n        Different APIs can support different monitored resource types. APIs generally\n\n        provide a `list` method that returns the monitored resource descriptors used\n\n        by the API.\n      properties:\n        description:\n          description: \u003e-\n            Optional. A detailed description of the monitored resource type that\n            might\n\n            be used in documentation.\n          type: string\n        displayName:\n          description: \u003e-\n            Optional. A concise name for the monitored resource type that might\n            be\n\n            displayed in user interfaces. It should be a Title Cased Noun Phrase,\n\n            without any article or other determiners. For example,\n\n            `\"Google Cloud SQL Database\"`.\n          type: string\n        labels:\n          description: \u003e-\n            Required. A set of labels used to describe instances of this\n            monitored\n\n            resource type. For example, an individual Google Cloud SQL database is\n\n            identified by values for the labels `\"database_id\"` and `\"zone\"`.\n          items:\n            $ref: \"#/components/schemas/LabelDescriptor\"\n          type: array\n        name:\n          description: \u003e-\n            Optional. The resource name of the monitored resource descriptor:\n\n            `\"projects/{project_id}/monitoredResourceDescriptors/{type}\"` where\n\n            {type} is the value of the `type` field in this object and\n\n            {project_id} is a project ID that provides API-specific context for\n\n            accessing the type.  APIs that do not use project information can use the\n\n            resource name format `\"monitoredResourceDescriptors/{type}\"`.\n          type: string\n        type:\n          description: |-\n            Required. The monitored resource type. For example, the type\n            `\"cloudsql_database\"` represents databases in Google Cloud SQL.\n            The maximum length of this value is 256 characters.\n          type: string\n      type: object\n    Monitoring:\n      description: |-\n        Monitoring configuration of the service.\n\n        The example below shows how to configure monitored resources and metrics\n        for monitoring. In the example, a monitored resource and two metrics are\n        defined. The `library.googleapis.com/book/returned_count` metric is sent\n        to both producer and consumer projects, whereas the\n        `library.googleapis.com/book/overdue_count` metric is only sent to the\n        consumer project.\n\n            monitored_resources:\n            - type: library.googleapis.com/branch\n              labels:\n              - key: /city\n                description: The city where the library branch is located in.\n              - key: /name\n                description: The name of the branch.\n            metrics:\n            - name: library.googleapis.com/book/returned_count\n              metric_kind: DELTA\n              value_type: INT64\n              labels:\n              - key: /customer_id\n            - name: library.googleapis.com/book/overdue_count\n              metric_kind: GAUGE\n              value_type: INT64\n              labels:\n              - key: /customer_id\n            monitoring:\n              producer_destinations:\n              - monitored_resource: library.googleapis.com/branch\n                metrics:\n                - library.googleapis.com/book/returned_count\n              consumer_destinations:\n              - monitored_resource: library.googleapis.com/branch\n                metrics:\n                - library.googleapis.com/book/returned_count\n                - library.googleapis.com/book/overdue_count\n      properties:\n        consumerDestinations:\n          description: \u003e-\n            Monitoring configurations for sending metrics to the consumer\n            project.\n\n            There can be multiple consumer destinations, each one must have a\n\n            different monitored resource type. A metric can be used in at most\n\n            one consumer destination.\n          items:\n            $ref: \"#/components/schemas/MonitoringDestination\"\n          type: array\n        producerDestinations:\n          description: \u003e-\n            Monitoring configurations for sending metrics to the producer\n            project.\n\n            There can be multiple producer destinations, each one must have a\n\n            different monitored resource type. A metric can be used in at most\n\n            one producer destination.\n          items:\n            $ref: \"#/components/schemas/MonitoringDestination\"\n          type: array\n      type: object\n    MonitoringDestination:\n      description: |-\n        Configuration of a specific monitoring destination (the producer project\n        or the consumer project).\n      properties:\n        metrics:\n          description: |-\n            Names of the metrics to report to this monitoring destination.\n            Each name must be defined in Service.metrics section.\n          items:\n            type: string\n          type: array\n        monitoredResource:\n          description: |-\n            The monitored resource type. The type must be defined in\n            Service.monitored_resources section.\n          type: string\n      type: object\n    OAuthRequirements:\n      description: \u003e-\n        OAuth scopes are a way to define data and permissions on data. For\n        example,\n\n        there are scopes defined for \"Read-only access to Google Calendar\" and\n\n        \"Access to Cloud Platform\". Users can consent to a scope for an application,\n\n        giving it permission to access that data on their behalf.\n\n\n        OAuth scope specifications should be fairly coarse grained; a user will need\n\n        to see and understand the text description of what your scope means.\n\n\n        In most cases: use one or at most two OAuth scopes for an entire family of\n\n        products. If your product has multiple APIs, you should probably be sharing\n\n        the OAuth scope across all of those APIs.\n\n\n        When you need finer grained OAuth consent screens: talk with your product\n\n        management about how developers will use them in practice.\n\n\n        Please note that even though each of the canonical scopes is enough for a\n\n        request to be accepted and passed to the backend, a request can still fail\n\n        due to the backend requiring additional scopes or permissions.\n      properties:\n        canonicalScopes:\n          description: \u003e-\n            The list of publicly documented OAuth scopes that are allowed\n            access. An\n\n            OAuth token containing any of these scopes will be accepted.\n\n\n            Example:\n\n                 canonical_scopes: https://www.googleapis.com/auth/calendar,\n                                   https://www.googleapis.com/auth/calendar.read\n          type: string\n      type: object\n    Operation:\n      description: \u003e-\n        This resource represents a long-running operation that is the result of\n        a\n\n        network API call.\n      properties:\n        done:\n          description: \u003e-\n            If the value is `false`, it means the operation is still in\n            progress.\n\n            If `true`, the operation is completed, and either `error` or `response` is\n\n            available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            Service-specific metadata associated with the operation.  It\n            typically\n\n            contains progress information and common metadata such as create time.\n\n            Some services might not provide such metadata.  Any method that returns a\n\n            long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: \u003e-\n            The server-assigned name, which is only unique within the same\n            service that\n\n            originally returns it. If you use the default HTTP mapping, the\n\n            `name` should have the format of `operations/some/unique/name`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            The normal response of the operation in case of success.  If the\n            original\n\n            method returns no data on success, such as `Delete`, the response is\n\n            `google.protobuf.Empty`.  If the original method is standard\n\n            `Get`/`Create`/`Update`, the response should be the resource.  For other\n\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n\n            is the original method name.  For example, if the original method name\n\n            is `TakeSnapshot()`, the inferred response type is\n\n            `TakeSnapshotResponse`.\n          type: object\n      type: object\n    OperationMetadata:\n      description: The metadata associated with a long running operation resource.\n      properties:\n        progressPercentage:\n          description: Percentage of completion of this operation, ranging from 0 to 100.\n          format: int32\n          type: integer\n        resourceNames:\n          description: |-\n            The full name of the resources that this operation is directly\n            associated with.\n          items:\n            type: string\n          type: array\n        startTime:\n          description: The start time of the operation.\n          format: google-datetime\n          type: string\n        steps:\n          description: Detailed status information for each step. The order is undetermined.\n          items:\n            $ref: \"#/components/schemas/Step\"\n          type: array\n      type: object\n    Option:\n      description: |-\n        A protocol buffer option, which can be attached to a message, field,\n        enumeration, etc.\n      properties:\n        name:\n          description: \u003e-\n            The option's name. For protobuf built-in options (options defined in\n\n            descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n\n            For custom options, it should be the fully-qualified name. For example,\n\n            `\"google.api.http\"`.\n          type: string\n        value:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            The option's value packed in an Any message. If the value is a\n            primitive,\n\n            the corresponding wrapper type defined in google/protobuf/wrappers.proto\n\n            should be used. If the value is an enum, it should be stored as an int32\n\n            value using the google.protobuf.Int32Value type.\n          type: object\n      type: object\n    Page:\n      description: \u003e-\n        Represents a documentation page. A page can contain subpages to\n        represent\n\n        nested documentation set structure.\n      properties:\n        content:\n          description: \u003e-\n            The Markdown content of the page. You can use \u003ccode\u003e\u0026#40;== include\n            {path} ==\u0026#41;\u003c/code\u003e\n\n            to include content from a Markdown file.\n          type: string\n        name:\n          description: \u003e-\n            The name of the page. It will be used as an identity of the page to\n\n            generate URI of the page, text of the link to this page in navigation,\n\n            etc. The full page name (start from the root page name to this page\n\n            concatenated with `.`) can be used as reference to the page in your\n\n            documentation. For example:\n\n            \u003cpre\u003e\u003ccode\u003epages:\n\n            - name: Tutorial\n              content: \u0026#40;== include tutorial.md ==\u0026#41;\n              subpages:\n              - name: Java\n                content: \u0026#40;== include tutorial_java.md ==\u0026#41;\n            \u003c/code\u003e\u003c/pre\u003e\n\n            You can reference `Java` page using Markdown reference link syntax:\n\n            `Java`.\n          type: string\n        subpages:\n          description: |-\n            Subpages of this page. The order of subpages specified here will be\n            honored in the generated docset.\n          items:\n            $ref: \"#/components/schemas/Page\"\n          type: array\n      type: object\n    PublishedService:\n      description: |-\n        The published version of a Service that is managed by\n        Google Service Management.\n      properties:\n        name:\n          description: |-\n            The resource name of the service.\n\n            A valid name would be:\n            - services/serviceuser.googleapis.com\n          type: string\n        service:\n          $ref: \"#/components/schemas/Service\"\n      type: object\n    Quota:\n      description: \u003e-\n        Quota configuration helps to achieve fairness and budgeting in service\n\n        usage.\n\n\n        The quota configuration works this way:\n\n        - The service configuration defines a set of metrics.\n\n        - For API calls, the quota.metric_rules maps methods to metrics with\n          corresponding costs.\n        - The quota.limits defines limits on the metrics, which will be used for\n          quota checks at runtime.\n\n        An example quota configuration in yaml format:\n\n           quota:\n\n             - name: apiWriteQpsPerProject\n               metric: library.googleapis.com/write_calls\n               unit: \"1/min/{project}\"  # rate limit for consumer projects\n               values:\n                 STANDARD: 10000\n\n\n             # The metric rules bind all methods to the read_calls metric,\n             # except for the UpdateBook and DeleteBook methods. These two methods\n             # are mapped to the write_calls metric, with the UpdateBook method\n             # consuming at twice rate as the DeleteBook method.\n             metric_rules:\n             - selector: \"*\"\n               metric_costs:\n                 library.googleapis.com/read_calls: 1\n             - selector: google.example.library.v1.LibraryService.UpdateBook\n               metric_costs:\n                 library.googleapis.com/write_calls: 2\n             - selector: google.example.library.v1.LibraryService.DeleteBook\n               metric_costs:\n                 library.googleapis.com/write_calls: 1\n\n         Corresponding Metric definition:\n\n             metrics:\n             - name: library.googleapis.com/read_calls\n               display_name: Read requests\n               metric_kind: DELTA\n               value_type: INT64\n\n             - name: library.googleapis.com/write_calls\n               display_name: Write requests\n               metric_kind: DELTA\n               value_type: INT64\n      properties:\n        limits:\n          description: List of `QuotaLimit` definitions for the service.\n          items:\n            $ref: \"#/components/schemas/QuotaLimit\"\n          type: array\n        metricRules:\n          description: \u003e-\n            List of `MetricRule` definitions, each one mapping a selected method\n            to one\n\n            or more metrics.\n          items:\n            $ref: \"#/components/schemas/MetricRule\"\n          type: array\n      type: object\n    QuotaLimit:\n      description: \u003e-\n        `QuotaLimit` defines a specific limit that applies over a specified\n        duration\n\n        for a limit type. There can be at most one limit for a duration and limit\n\n        type combination defined within a `QuotaGroup`.\n      properties:\n        defaultLimit:\n          description: \u003e-\n            Default number of tokens that can be consumed during the specified\n\n            duration. This is the number of tokens assigned when a client\n\n            application developer activates the service for his/her project.\n\n\n            Specifying a value of 0 will block all requests. This can be used if you\n\n            are provisioning quota to selected consumers and blocking others.\n\n            Similarly, a value of -1 will indicate an unlimited quota. No other\n\n            negative values are allowed.\n\n\n            Used by group-based quotas only.\n          format: int64\n          type: string\n        description:\n          description: \u003e-\n            Optional. User-visible, extended description for this quota limit.\n\n            Should be used only when more context is needed to understand this limit\n\n            than provided by the limit's display name (see: `display_name`).\n          type: string\n        displayName:\n          description: \u003e-\n            User-visible display name for this limit.\n\n            Optional. If not set, the UI will provide a default display name based on\n\n            the quota configuration. This field can be used to override the default\n\n            display name generated from the configuration.\n          type: string\n        duration:\n          description: \u003e-\n            Duration of this limit in textual notation. Example: \"100s\", \"24h\",\n            \"1d\".\n\n            For duration longer than a day, only multiple of days is supported. We\n\n            support only \"100s\" and \"1d\" for now. Additional support will be added in\n\n            the future. \"0\" indicates indefinite duration.\n\n\n            Used by group-based quotas only.\n          type: string\n        freeTier:\n          description: \u003e-\n            Free tier value displayed in the Developers Console for this limit.\n\n            The free tier is the number of tokens that will be subtracted from the\n\n            billed amount when billing is enabled.\n\n            This field can only be set on a limit with duration \"1d\", in a billable\n\n            group; it is invalid on any other limit. If this field is not set, it\n\n            defaults to 0, indicating that there is no free tier for this service.\n\n\n            Used by group-based quotas only.\n          format: int64\n          type: string\n        maxLimit:\n          description: \u003e-\n            Maximum number of tokens that can be consumed during the specified\n\n            duration. Client application developers can override the default limit up\n\n            to this maximum. If specified, this value cannot be set to a value less\n\n            than the default limit. If not specified, it is set to the default limit.\n\n\n            To allow clients to apply overrides with no upper bound, set this to -1,\n\n            indicating unlimited maximum quota.\n\n\n            Used by group-based quotas only.\n          format: int64\n          type: string\n        metric:\n          description: \u003e-\n            The name of the metric this quota limit applies to. The quota limits\n            with\n\n            the same metric will be checked together during runtime. The metric must be\n\n            defined within the service config.\n          type: string\n        name:\n          description: \u003e-\n            Name of the quota limit.\n\n\n            The name must be provided, and it must be unique within the service. The\n\n            name can only include alphanumeric characters as well as '-'.\n\n\n            The maximum length of the limit name is 64 characters.\n          type: string\n        unit:\n          description: \u003e-\n            Specify the unit of the quota limit. It uses the same syntax as\n\n            Metric.unit. The supported unit kinds are determined by the quota\n\n            backend system.\n\n\n            Here are some examples:\n\n            * \"1/min/{project}\" for quota per minute per project.\n\n\n            Note: the order of unit components is insignificant.\n\n            The \"1\" at the beginning is required to follow the metric unit syntax.\n          type: string\n        values:\n          additionalProperties:\n            format: int64\n            type: string\n          description: \u003e-\n            Tiered limit values. You must specify this as a key:value pair, with\n            an\n\n            integer value that is the maximum number of requests allowed for the\n\n            specified unit. Currently only STANDARD is supported.\n          type: object\n      type: object\n    SearchServicesResponse:\n      description: Response message for SearchServices method.\n      properties:\n        nextPageToken:\n          description: \u003e-\n            Token that can be passed to `ListAvailableServices` to resume a\n            paginated\n\n            query.\n          type: string\n        services:\n          description: Services available publicly or available to the authenticated caller.\n          items:\n            $ref: \"#/components/schemas/PublishedService\"\n          type: array\n      type: object\n    Service:\n      description: \u003e-\n        `Service` is the root object of Google service configuration schema. It\n\n        describes basic information about a service, such as the name and the\n\n        title, and delegates other aspects to sub-sections. Each sub-section is\n\n        either a proto message or a repeated proto message that configures a\n\n        specific aspect, such as auth. See each proto message definition for details.\n\n\n        Example:\n\n            type: google.api.Service\n            config_version: 3\n            name: calendar.googleapis.com\n            title: Google Calendar API\n            apis:\n            - name: google.calendar.v3.Calendar\n            authentication:\n              providers:\n              - id: google_calendar_auth\n                jwks_uri: https://www.googleapis.com/oauth2/v1/certs\n                issuer: https://securetoken.google.com\n              rules:\n              - selector: \"*\"\n                requirements:\n                  provider_id: google_calendar_auth\n      properties:\n        apis:\n          description: \u003e-\n            A list of API interfaces exported by this service. Only the `name`\n            field\n\n            of the google.protobuf.Api needs to be provided by the configuration\n\n            author, as the remaining fields will be derived from the IDL during the\n\n            normalization process. It is an error to specify an API interface here\n\n            which cannot be resolved against the associated IDL files.\n          items:\n            $ref: \"#/components/schemas/Api\"\n          type: array\n        authentication:\n          $ref: \"#/components/schemas/Authentication\"\n        backend:\n          $ref: \"#/components/schemas/Backend\"\n        billing:\n          $ref: \"#/components/schemas/Billing\"\n        configVersion:\n          description: \u003e-\n            The semantic version of the service configuration. The config\n            version\n\n            affects the interpretation of the service configuration. For example,\n\n            certain features are enabled by default for certain config versions.\n\n            The latest config version is `3`.\n          format: uint32\n          type: integer\n        context:\n          $ref: \"#/components/schemas/Context\"\n        control:\n          $ref: \"#/components/schemas/Control\"\n        customError:\n          $ref: \"#/components/schemas/CustomError\"\n        documentation:\n          $ref: \"#/components/schemas/Documentation\"\n        endpoints:\n          description: \u003e-\n            Configuration for network endpoints.  If this is empty, then an\n            endpoint\n\n            with the same name as the service is automatically generated to service all\n\n            defined APIs.\n          items:\n            $ref: \"#/components/schemas/Endpoint\"\n          type: array\n        enums:\n          description: |-\n            A list of all enum types included in this API service.  Enums\n            referenced directly or indirectly by the `apis` are automatically\n            included.  Enums which are not referenced but shall be included\n            should be listed here by name. Example:\n\n                enums:\n                - name: google.someapi.v1.SomeEnum\n          items:\n            $ref: \"#/components/schemas/Enum\"\n          type: array\n        experimental:\n          $ref: \"#/components/schemas/Experimental\"\n        http:\n          $ref: \"#/components/schemas/Http\"\n        id:\n          description: \u003e-\n            A unique ID for a specific instance of this message, typically\n            assigned\n\n            by the client for tracking purpose. If empty, the server may choose to\n\n            generate one instead.\n          type: string\n        logging:\n          $ref: \"#/components/schemas/Logging\"\n        logs:\n          description: Defines the logs used by this service.\n          items:\n            $ref: \"#/components/schemas/LogDescriptor\"\n          type: array\n        metrics:\n          description: Defines the metrics used by this service.\n          items:\n            $ref: \"#/components/schemas/MetricDescriptor\"\n          type: array\n        monitoredResources:\n          description: \u003e-\n            Defines the monitored resources used by this service. This is\n            required\n\n            by the Service.monitoring and Service.logging configurations.\n          items:\n            $ref: \"#/components/schemas/MonitoredResourceDescriptor\"\n          type: array\n        monitoring:\n          $ref: \"#/components/schemas/Monitoring\"\n        name:\n          description: |-\n            The DNS address at which this service is available,\n            e.g. `calendar.googleapis.com`.\n          type: string\n        producerProjectId:\n          description: The Google project that owns this service.\n          type: string\n        quota:\n          $ref: \"#/components/schemas/Quota\"\n        sourceInfo:\n          $ref: \"#/components/schemas/SourceInfo\"\n        systemParameters:\n          $ref: \"#/components/schemas/SystemParameters\"\n        systemTypes:\n          description: \u003e-\n            A list of all proto message types included in this API service.\n\n            It serves similar purpose as [google.api.Service.types], except that\n\n            these types are not needed by user-defined APIs. Therefore, they will not\n\n            show up in the generated discovery doc. This field should only be used\n\n            to define system APIs in ESF.\n          items:\n            $ref: \"#/components/schemas/Type\"\n          type: array\n        title:\n          description: The product title for this service.\n          type: string\n        types:\n          description: \u003e-\n            A list of all proto message types included in this API service.\n\n            Types referenced directly or indirectly by the `apis` are\n\n            automatically included.  Messages which are not referenced but\n\n            shall be included, such as types used by the `google.protobuf.Any` type,\n\n            should be listed here by name. Example:\n\n                types:\n                - name: google.protobuf.Int32\n          items:\n            $ref: \"#/components/schemas/Type\"\n          type: array\n        usage:\n          $ref: \"#/components/schemas/Usage\"\n      type: object\n    SourceContext:\n      description: |-\n        `SourceContext` represents information about the source of a\n        protobuf element, like the file in which it is defined.\n      properties:\n        fileName:\n          description: \u003e-\n            The path-qualified name of the .proto file that contained the\n            associated\n\n            protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n          type: string\n      type: object\n    SourceInfo:\n      description: Source information used to create a Service Config\n      properties:\n        sourceFiles:\n          description: All files used during config generation.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n        different\n\n        programming environments, including REST APIs and RPC APIs. It is used by\n\n        [gRPC](https://github.com/grpc). The error model is designed to be:\n\n\n        - Simple to use and understand for most users\n\n        - Flexible enough to meet unexpected needs\n\n\n        # Overview\n\n\n        The `Status` message contains three pieces of data: error code, error message,\n\n        and error details. The error code should be an enum value of\n\n        google.rpc.Code, but it may accept additional error codes if needed.  The\n\n        error message should be a developer-facing English message that helps\n\n        developers *understand* and *resolve* the error. If a localized user-facing\n\n        error message is needed, put the localized message in the error details or\n\n        localize it in the client. The optional error details may contain arbitrary\n\n        information about the error. There is a predefined set of error detail types\n\n        in the package `google.rpc` that can be used for common error conditions.\n\n\n        # Language mapping\n\n\n        The `Status` message is the logical representation of the error model, but it\n\n        is not necessarily the actual wire format. When the `Status` message is\n\n        exposed in different client libraries and different wire protocols, it can be\n\n        mapped differently. For example, it will likely be mapped to some exceptions\n\n        in Java, but more likely mapped to some error codes in C.\n\n\n        # Other uses\n\n\n        The error model and the `Status` message can be used in a variety of\n\n        environments, either with or without APIs, to provide a\n\n        consistent developer experience across different environments.\n\n\n        Example uses of this error model include:\n\n\n        - Partial errors. If a service needs to return partial errors to the client,\n            it may embed the `Status` in the normal response to indicate the partial\n            errors.\n\n        - Workflow errors. A typical workflow has multiple steps. Each step may\n            have a `Status` message for error reporting.\n\n        - Batch operations. If a client uses batch request and batch response, the\n            `Status` message should be used directly inside batch response, one for\n            each error sub-response.\n\n        - Asynchronous operations. If an API call embeds asynchronous operation\n            results in its response, the status of those operations should be\n            represented directly using the `Status` message.\n\n        - Logging. If some API errors are stored in logs, the message `Status` could\n            be used directly after any stripping needed for security/privacy reasons.\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    Step:\n      description: Represents the status of one operation step.\n      properties:\n        description:\n          description: The short description of the step.\n          type: string\n        status:\n          description: The status code.\n          enum:\n            - STATUS_UNSPECIFIED\n            - DONE\n            - NOT_STARTED\n            - IN_PROGRESS\n            - FAILED\n            - CANCELLED\n          type: string\n      type: object\n    SystemParameter:\n      description: \u003e-\n        Define a parameter's name and location. The parameter may be passed as\n        either\n\n        an HTTP header or a URL query parameter, and if both are passed the behavior\n\n        is implementation-dependent.\n      properties:\n        httpHeader:\n          description: |-\n            Define the HTTP header name to use for the parameter. It is case\n            insensitive.\n          type: string\n        name:\n          description: Define the name of the parameter, such as \"api_key\" . It is case\n            sensitive.\n          type: string\n        urlQueryParameter:\n          description: \u003e-\n            Define the URL query parameter name to use for the parameter. It is\n            case\n\n            sensitive.\n          type: string\n      type: object\n    SystemParameterRule:\n      description: |-\n        Define a system parameter rule mapping system parameter definitions to\n        methods.\n      properties:\n        parameters:\n          description: \u003e-\n            Define parameters. Multiple names may be defined for a parameter.\n\n            For a given method call, only one of them should be used. If multiple\n\n            names are used the behavior is implementation-dependent.\n\n            If none of the specified names are present the behavior is\n\n            parameter-dependent.\n          items:\n            $ref: \"#/components/schemas/SystemParameter\"\n          type: array\n        selector:\n          description: \u003e-\n            Selects the methods to which this rule applies. Use '*' to indicate\n            all\n\n            methods in all APIs.\n\n\n            Refer to selector for syntax details.\n          type: string\n      type: object\n    SystemParameters:\n      description: \u003e-\n        ### System parameter configuration\n\n\n        A system parameter is a special kind of parameter defined by the API\n\n        system, not by an individual API. It is typically mapped to an HTTP header\n\n        and/or a URL query parameter. This configuration specifies which methods\n\n        change the names of the system parameters.\n      properties:\n        rules:\n          description: \u003e-\n            Define system parameters.\n\n\n            The parameters defined here will override the default parameters\n\n            implemented by the system. If this field is missing from the service\n\n            config, default system parameters will be used. Default system parameters\n\n            and names is implementation-dependent.\n\n\n            Example: define api key for all methods\n\n                system_parameters\n                  rules:\n                    - selector: \"*\"\n                      parameters:\n                        - name: api_key\n                          url_query_parameter: api_key\n\n\n            Example: define 2 api key names for a specific method.\n\n                system_parameters\n                  rules:\n                    - selector: \"/ListShelves\"\n                      parameters:\n                        - name: api_key\n                          http_header: Api-Key1\n                        - name: api_key\n                          http_header: Api-Key2\n\n            **NOTE:** All service configuration rules follow \"last one wins\" order.\n          items:\n            $ref: \"#/components/schemas/SystemParameterRule\"\n          type: array\n      type: object\n    Type:\n      description: A protocol buffer message type.\n      properties:\n        fields:\n          description: The list of fields.\n          items:\n            $ref: \"#/components/schemas/Field\"\n          type: array\n        name:\n          description: The fully qualified message name.\n          type: string\n        oneofs:\n          description: The list of types appearing in `oneof` definitions in this type.\n          items:\n            type: string\n          type: array\n        options:\n          description: The protocol buffer options.\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n        sourceContext:\n          $ref: \"#/components/schemas/SourceContext\"\n        syntax:\n          description: The source syntax.\n          enum:\n            - SYNTAX_PROTO2\n            - SYNTAX_PROTO3\n          type: string\n      type: object\n    Usage:\n      description: Configuration controlling usage of a service.\n      properties:\n        producerNotificationChannel:\n          description: \u003e-\n            The full resource name of a channel used for sending notifications\n            to the\n\n            service producer.\n\n\n            Google Service Management currently only supports\n\n            [Google Cloud Pub/Sub](https://cloud.google.com/pubsub) as a notification\n\n            channel. To use Google Cloud Pub/Sub as the channel, this must be the name\n\n            of a Cloud Pub/Sub topic that uses the Cloud Pub/Sub topic name format\n\n            documented in https://cloud.google.com/pubsub/docs/overview.\n          type: string\n        requirements:\n          description: \u003e-\n            Requirements that must be satisfied before a consumer project can\n            use the\n\n            service. Each requirement is of the form \u003cservice.name\u003e/\u003crequirement-id\u003e;\n\n            for example 'serviceusage.googleapis.com/billing-enabled'.\n          items:\n            type: string\n          type: array\n        rules:\n          description: \u003e-\n            A list of usage rules that apply to individual API methods.\n\n\n            **NOTE:** All service configuration rules follow \"last one wins\" order.\n          items:\n            $ref: \"#/components/schemas/UsageRule\"\n          type: array\n      type: object\n    UsageRule:\n      description: \u003e-\n        Usage configuration rules for the service.\n\n\n        NOTE: Under development.\n\n\n\n        Use this rule to configure unregistered calls for the service. Unregistered\n\n        calls are calls that do not contain consumer project identity.\n\n        (Example: calls that do not contain an API key).\n\n        By default, API methods do not allow unregistered calls, and each method call\n\n        must be identified by a consumer project identity. Use this rule to\n\n        allow/disallow unregistered calls.\n\n\n        Example of an API that wants to allow unregistered calls for entire service.\n\n            usage:\n              rules:\n              - selector: \"*\"\n                allow_unregistered_calls: true\n\n        Example of a method that wants to allow unregistered calls.\n\n            usage:\n              rules:\n              - selector: \"google.example.library.v1.LibraryService.CreateBook\"\n                allow_unregistered_calls: true\n      properties:\n        allowUnregisteredCalls:\n          description: |-\n            If true, the selected method allows unregistered calls, e.g. calls\n            that don't identify any user or application.\n          type: boolean\n        selector:\n          description: \u003e-\n            Selects the methods to which this rule applies. Use '*' to indicate\n            all\n\n            methods in all APIs.\n\n\n            Refer to selector for syntax details.\n          type: string\n        skipServiceControl:\n          description: \u003e-\n            If true, the selected method should skip service control and the\n            control\n\n            plane features, such as quota and billing, will not be available.\n\n            This flag is used by Google Cloud Endpoints to bypass checks for internal\n\n            methods, such as service health check methods.\n          type: boolean\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-serviceuser-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-serviceuser-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/services:search\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}