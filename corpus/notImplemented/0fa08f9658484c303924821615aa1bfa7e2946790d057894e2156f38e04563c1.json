{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RWTH-ACS/clonemap"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/ams/openapi.yaml",
			"byteSize": 20550,
			"content": "# Copyright 2020 Institute for Automation of Complex Power Systems,\n# E.ON Energy Research Center, RWTH Aachen University\n#\n# This project is licensed under either of\n# - Apache License, Version 2.0\n# - MIT License\n# at your option.\n#\n# Apache License, Version 2.0:\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# MIT License:\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n\nopenapi: \"3.0.0\"\ninfo:\n  version: \"1.0\"\n  title: Agent Management System\n  description: API of the Agent Management System for user interaction with the MAS\n                and MAS-internal communication\npaths:\n  /api/alive:\n    get:\n      description: indicates if ams is alive\n      responses:\n        '200':\n          description: OK - clonemap information\n          content:\n            text/plain:\n              schema:\n                type: string\n  /api/clonemap:\n    get:\n      description: returns basic information about cloneMAP\n      responses:\n        '200':\n          description: OK - clonemap information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloneMAP'\n  /api/clonemap/mas:\n    get:\n      description: returns list of running MASs\n      responses:\n        '200':\n          description: OK - list of MASs\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/MASs'\n    post:\n      description: create a new MAS ressource and sub-ressources\n      requestBody:\n        description: configuration of new MAS\n        content:\n          applications/json:\n            schema:\n              $ref: '#/components/schemas/MASSpec'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/MASInfo'\n    delete:\n      description: delete all MASs\n      responses:\n        '200':\n          description: succesful deletion of all MASs\n  /api/clonemap/mas/{masid}:\n    parameters:\n    - $ref: '#/components/parameters/masID'\n    get:\n      description: get static information and configuration of MAS\n      responses:\n        '200':\n          description: OK - information and configuration of MAS\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MASInfo'\n    delete:\n      description: delete MAS\n      responses:\n        '200':\n          description: succesful deletion\n  /api/clonemap/mas/name/{name}:\n    parameters:\n    - $ref: '#/components/parameters/name'\n    get:\n      description: get IDs of all MAS with specified name (not case sensitive)\n      responses:\n        '200':\n          description: OK - list of MAS IDs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: integer\n  /api/clonemap/mas/{masid}/agents:\n    parameters:\n    - $ref: '#/components/parameters/masID'\n    get:\n      description: returns list of agents in MAS\n      responses:\n        '200':\n          description: OK - list of agents\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Agents'\n    post:\n      description: create new agent ressources\n      requestBody:\n        description: configuration of new agent\n        content:\n          applications/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ImageGroupSpec'\n        required: true\n      responses:\n        '201':\n          description: Created\n          content:\n            applications/json:\n              schema:\n                type: array\n                items:\n                  type: integer\n  /api/clonemap/mas/{masid}/agents/{agentid}:\n    parameters:\n    - $ref: '#/components/parameters/masID'\n    - $ref: '#/components/parameters/agentID'\n    get:\n      description: information about agent\n      responses:\n        '200':\n          description: OK - information and configuration of agent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgentInfo'\n    delete:\n      description: delete agent\n      responses:\n        '200':\n          description: succesful deletion\n  /api/clonemap/mas/{masid}/agents/{agentid}/address:\n    parameters:\n    - $ref: '#/components/parameters/masID'\n    - $ref: '#/components/parameters/agentID'\n    get:\n      description: get address information of agent for messaging purposes\n      responses:\n        '200':\n          description: OK - address information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Address'\n    put:\n      description: update address of agent\n      requestBody:\n        description: address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Address'\n      responses:\n        '200':\n          description: OK - address update\n  /api/clonemap/mas/{masid}/agents/{agentid}/custom:\n    parameters:\n    - $ref: '#/components/parameters/masID'\n    - $ref: '#/components/parameters/agentID'\n    put:\n      description: update address of agent\n      requestBody:\n        description: address\n        content:\n          text/plain:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: OK - address update\n  /api/clonemap/mas/{masid}/agents/name/{name}:\n    parameters:\n    - $ref: '#/components/parameters/masID'\n    - $ref: '#/components/parameters/name'\n    get:\n      description: get IDs of all agents with specified name (not case sensitive)\n      responses:\n        '200':\n          description: OK - list of agent IDs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: integer\n  /api/clonemap/mas/{masid}/agencies:\n    parameters:\n    - $ref: '#/components/parameters/masID'\n    get:\n      description: information about agencies\n      responses:\n        '200':\n          description: OK - list of agents\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Agencies'\n  /api/clonemap/mas/{masid}/imgroup/{imid}/agencies/{agencyid}:\n    parameters:\n    - $ref: '#/components/parameters/masID'\n    - $ref: '#/components/parameters/imID'\n    - $ref: '#/components/parameters/agencyID'\n    get:\n      description: information about agency\n      responses:\n        '200':\n          description: OK - list of agents\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgencyInfoFull'\ncomponents:\n  parameters:\n    masID:\n      name: masid\n      in: path\n      description: ID of MAS\n      required: true\n      schema:\n        type: integer\n    agentID:\n      name: agentid\n      in: path\n      description: ID of agent\n      required: true\n      schema:\n        type: integer\n    imID:\n      name: imid\n      in: path\n      description: ID of image group\n      required: true\n      schema:\n        type: integer\n    agencyID:\n      name: agencyid\n      in: path\n      description: ID of agency\n      required: true\n      schema:\n        type: integer\n    name:\n      name: name\n      in: path\n      description: search name for mas or agent\n      required: true\n      schema:\n        type: string\n  schemas:\n    CloneMAP:\n      description: contains information about clonemap\n      properties:\n        version:\n          description: version of clonemap\n          type: string\n        uptime:\n          description: uptime of clonemap\n          type: string\n    MASInfoShort:\n      description: short information about MAS\n      properties:\n        config:\n          description: configuration of MAS\n          $ref: '#/components/schemas/MASConfig'\n        id:\n          description: unique ID of MAS\n          type: integer\n        numagents:\n          description: number of agents\n          type: integer\n        status:\n          description: status of MAS\n          $ref: '#/components/schemas/Status'\n        uptime:\n          description: uptime of MAS\n          type: string\n      required:\n      - id\n      - config\n      - numagents\n      - uptime\n      - status\n    MASInfo:\n      description: detailed information about MAS\n      properties:\n        config:\n          description: configuration of MAS\n          $ref: '#/components/schemas/MASConfig'\n        id:\n          description: unique ID of MAS\n          type: integer\n        graph:\n          description: graph of MAS\n          $ref: '#/components/schemas/Graph'\n        imagegroups:\n          description: image groups of MAS\n          $ref: '#/components/schemas/ImageGroups'\n        agents:\n          description: spec of agents\n          $ref: '#/components/schemas/Agents'\n        status:\n          description: status of MAS\n          $ref: '#/components/schemas/Status'\n        uptime:\n          description: uptime of MAS\n          type: string\n      required:\n      - id\n      - config\n      - imagegroups\n      - agents\n      - uptime\n      - status\n      - graph\n    MASSpec:\n      description: contains information about a MAS running in clonemap\n      properties:\n        config:\n          description: configuration of MAS\n          $ref: '#/components/schemas/MASConfig'\n        imagegroups:\n          description: image groups in MAS\n          type: array\n          items:\n            $ref: '#/components/schemas/ImageGroupSpec'\n        graph:\n          description: graph of MAS\n          $ref: '#/components/schemas/Graph'\n      required:\n      - config\n      - imagegroups\n      - graph\n    MASConfig:\n      description: contains information about mas to be started\n      properties:\n        name:\n          description: name of MAS\n          type: string\n        agentsperagency:\n          description: number of agents per agency\n          type: integer\n        mqtt:\n          description: switch for iot module\n          $ref: '#/components/schemas/MQTTConfig'\n        df:\n          description: switch for df module\n          $ref: '#/components/schemas/DFConfig'\n        logger:\n          description: configuration of logging module\n          $ref: '#/components/schemas/LoggerConfig'\n      required:\n      - name\n      - agentsperagency\n      - mqtt\n      - df\n      - logger\n    ImageGroupInfo:\n      description: information about an image groups\n      properties:\n        config:\n          description: configuration of image groups\n          $ref: '#/components/schemas/ImageGroupConfig'\n        id:\n          description: unique id of image groups\n          type: integer\n        agencies:\n          description: agencies within image groups\n          $ref: '#/components/schemas/Agencies'\n    ImageGroupSpec:\n      description: specification of an image groups\n      properties:\n        config:\n          description: configuration of image groups\n          $ref: '#/components/schemas/ImageGroupConfig'\n        agents:\n          description: spec of all agents in image groups\n          type: array\n          items:\n            $ref: '#/components/schemas/AgentSpec'\n      required:\n      - config\n      - agents\n    ImageGroupConfig:\n      description: configuration of image groups\n      properties:\n        image:\n          description: name of the docker image\n          type: string\n        secret:\n          description: pull secret to be used for image\n          type: string\n      required:\n      - image\n      - secret\n    AgencyInfoFull:\n      description: information about agency\n      properties:\n        masid:\n          description: ID of MAS\n          type: integer\n        id:\n          description: ID of agency\n          type: integer\n        name:\n          description: name of agency (corresponds to pod name)\n          type: string\n        imid:\n          description: id of image group\n          type: integer\n        logger:\n          description: configuration of logging module\n          $ref: '#/components/schemas/LoggerConfig'\n        status:\n          description: status of agent\n          $ref: '#/components/schemas/Status'\n        agents:\n          description: list of agents in agency\n          type: array\n          items:\n            $ref: '#/components/schemas/AgentInfo'\n      required:\n      - masid\n      - name\n      - id\n      - imid\n      - logger\n      - agents\n      - status\n    MASs:\n      description: contains informaton about how many MASs are running\n      properties:\n        counter:\n          description: number of running mas\n          type: integer\n        instances:\n          description: all mas running in clonemap\n          type: array\n          items:\n            $ref: '#/components/schemas/MASInfo'\n      required:\n      - counter\n      - instances\n    Agents:\n      description: contains informaton about how many agents are running\n      properties:\n        counter:\n          description: number of running agents\n          type: integer\n        instances:\n          description: all agents in mas\n          type: array\n          items:\n            $ref: '#/components/schemas/AgentInfo'\n      required:\n      - counter\n      - instances\n    Agencies:\n      description: contains informaton about how many agencies are running\n      properties:\n        counter:\n          description: number of running agencies\n          type: integer\n        instances:\n          description: agencies\n          type: array\n          items:\n            $ref: '#/components/schemas/AgencyInfo'\n      required:\n      - counter\n      - instances\n    ImageGroups:\n      description: contains informaton about all image groups of a mas\n      properties:\n        counter:\n          description: number of image groups\n          type: integer\n        instances:\n          description: image groups\n          type: array\n          items:\n            $ref: '#/components/schemas/ImageGroupInfo'\n      required:\n      - counter\n      - instances\n    LoggerConfig:\n      description: contains information about agency\n      properties:\n        active:\n          description: indicates if logger module is active and/or usable\n          type: boolean\n        msg:\n          description: activation of msg log topic\n          type: boolean\n        app:\n          description: activation of app log topic\n          type: boolean\n        status:\n          description: activation of status log topic\n          type: boolean\n        debug:\n          description: activation of debug log topic\n          type: boolean\n      required:\n      - active\n    DFConfig:\n      description: contains config of DF module\n      properties:\n        active:\n          description: indicates if df module is active and/or usable\n          type: boolean\n      required:\n      - active\n    MQTTConfig:\n      description: contains config of mqtt module\n      properties:\n        active:\n          description: indicates if mqtt module is active and/or usable\n          type: boolean\n      required:\n      - active\n    Graph:\n      description: stores one mas graph for topological search\n      properties:\n        node:\n          description: list of graph nodes\n          type: array\n          items:\n            $ref: '#/components/schemas/Node'\n        edge:\n          description: list of graph edges\n          type: array\n          items:\n            $ref: '#/components/schemas/Edge'\n      required:\n      - node\n      - edge\n    Node:\n      description: graph node\n      properties:\n        id:\n          description: unique ID of node\n          type: integer\n        agents:\n          description: list of agents attached to node\n          type: array\n          items:\n            type: integer\n      required:\n      - id\n    Edge:\n      description: one edge of graph\n      properties:\n        n1:\n          description: id of node 1\n          type: integer\n        n2:\n          description: id of node 2\n          type: integer\n        weight:\n          description: weight of edge\n          type: number\n      required:\n      - n1\n      - n2\n      - weight\n    AgencyInfo:\n      description: information about agency\n      properties:\n        masid:\n          description: ID of MAS\n          type: integer\n        name:\n          description: name of agency (hostname of pod given by Kubernetes)\n          type: string\n        id:\n          description: unique ID of agency\n          type: integer\n        imid:\n          description: unique ID of image group\n          type: integer\n        logger:\n          description: configuration of logging\n          $ref: '#/components/schemas/LoggerConfig'\n        agents:\n          description: list of all agents in agency\n          type: array\n          items:\n            type: integer\n        status:\n          description: status of agency\n          $ref: '#/components/schemas/Status'\n      required:\n      - masid\n      - name\n      - id\n      - imid\n      - logger\n      - agents\n      - status\n    Status:\n      description: information about an agent's or agency's status\n      properties:\n        code:\n          description: status code\n          type: integer\n        lastupdate:\n          description: time of last update\n          type: string\n      required:\n      - code\n      - lastupdate\n    AgentInfo:\n      description: detailed information about agent\n      properties:\n        spec:\n          description: spec of Agent\n          $ref: '#/components/schemas/AgentSpec'\n        masid:\n          description: ID of MAS\n          type: integer\n        agencyid:\n          description: ID of agency\n          type: integer\n        imid:\n          description: unique ID of image group\n          type: integer\n        id:\n          description: unique ID of agent\n          type: integer\n        address:\n          description: address of agent\n          $ref: '#/components/schemas/Address'\n        status:\n          description: status of agent\n          $ref: '#/components/schemas/Status'\n      required:\n      - spec\n      - masid\n      - agencyid\n      - imid\n      - id\n      - address\n      - status\n    AgentSpec:\n      description: contains information about a agent running in a MAS\n      properties:\n        nodeid:\n          description: ID of node\n          type: integer\n        name: \n          description: name/description of agent\n          type: string\n        type:\n          description: type of agent (application dependent)\n          type: string\n        subtype:\n          description: subtype of agent (application dependent)\n          type: string\n        custom:\n          description: custom agent specification\n          type: string\n      required:\n      - nodeid\n      - name\n    Address:\n      description: holds the address information of an agent\n      properties:\n        agency:\n          description: name of the agency\n          type: string\n      required:\n      - address",
			"canonicalURL": "/github.com/RWTH-ACS/clonemap@baee2c72b39adc0c2d086e61c49912130d2ddb66/-/blob/api/ams/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/RWTH-ACS/clonemap/blob/baee2c72b39adc0c2d086e61c49912130d2ddb66/api/ams/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/clonemap/mas/{masid}/agents\": post: requestBody: contents: unsupported content types: [applications/json]",
	"NotImplemented": [
		"unsupported content types"
	]
}