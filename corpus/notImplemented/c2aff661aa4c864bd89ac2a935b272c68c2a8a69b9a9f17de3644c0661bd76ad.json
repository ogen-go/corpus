{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/drakkan/sftpgo"
		},
		"file": {
			"name": "httpfs.yaml",
			"size": 0,
			"path": "openapi/httpfs.yaml",
			"byteSize": 16592,
			"content": "openapi: 3.0.3\ntags:\n  - name: fs\ninfo:\n  title: SFTPGo HTTPFs\n  description: |\n    SFTPGo can use custom storage backend implementations compliant with the API defined here.\n    HTTPFs is a work in progress and makes no API stability promises.\n  version: 0.1.0\nservers:\n- url: /v1\nsecurity:\n- ApiKeyAuth: []\n- BasicAuth: []\npaths:\n  /stat/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - fs\n      summary: Describes the named object\n      operationId: stat\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileInfo'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /open/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n      - name: offset\n        in: query\n        description: 'offset, in bytes, from the start. If not specified 0 must be assumed'\n        required: false\n        schema:\n          type: integer\n          format: int64\n    get:\n      tags:\n        - fs\n      summary: Opens the named file for reading\n      operationId: open\n      responses:\n        '200':\n          description: successful operation\n          content:\n            '*/*':\n              schema:\n                type: string\n                format: binary\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /create/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n      - name: flags\n        in: query\n        description: 'flags to use for opening the file, if omitted O_RDWR|O_CREATE|O_TRUNC must be assumed. Supported flags: https://pkg.go.dev/os#pkg-constants'\n        required: false\n        schema:\n          type: integer\n          format: int32\n    post:\n      tags:\n        - fs\n      summary: Creates or opens the named file for writing\n      operationId: create\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              type: string\n              format: binary\n        required: true\n      responses:\n        201:\n          $ref: '#/components/responses/OKResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /rename/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n      - name: target\n        in: query\n        description: target name\n        required: true\n        schema:\n          type: string\n    patch:\n      tags:\n        - fs\n      summary: Renames (moves) source to target\n      operationId: rename\n      responses:\n        200:\n          $ref: '#/components/responses/OKResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /remove/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n    delete:\n      tags:\n        - fs\n      summary: Removes the named file or (empty) directory.\n      operationId: delete\n      responses:\n        200:\n          $ref: '#/components/responses/OKResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /mkdir/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - fs\n      summary: Creates a new directory with the specified name\n      operationId: mkdir\n      responses:\n        200:\n          $ref: '#/components/responses/OKResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /chmod/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n      - name: mode\n        in: query\n        required: true\n        schema:\n          type: integer\n    patch:\n      tags:\n        - fs\n      summary: Changes the mode of the named file\n      operationId: chmod\n      responses:\n        200:\n          $ref: '#/components/responses/OKResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /chtimes/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n      - name: access_time\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: modification_time\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n    patch:\n      tags:\n        - fs\n      summary: Changes the access and modification time of the named file\n      operationId: chtimes\n      responses:\n        200:\n          $ref: '#/components/responses/OKResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /truncate/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n      - name: size\n        in: query\n        required: true\n        description: 'new file size in bytes'\n        schema:\n          type: integer\n          format: int64\n    patch:\n      tags:\n        - fs\n      summary: Changes the size of the named file\n      operationId: truncate\n      responses:\n        200:\n          $ref: '#/components/responses/OKResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /readdir/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - fs\n      summary: Reads the named directory and returns the contents\n      operationId: readdir\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FileInfo'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /dirsize/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - fs\n      summary: Returns the number of files and the size for the named directory including any sub-directory\n      operationId: dirsize\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  files:\n                    type: integer\n                    description: 'Total number of files'\n                  size:\n                    type: integer\n                    format: int64\n                    description: 'Total size of files'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /mimetype/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - fs\n      summary: Returns the mime type for the named file\n      operationId: mimetype\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  mime:\n                    type: string\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\n  /statvfs/{name}:\n    parameters:\n      - name: name\n        in: path\n        description: object name\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - fs\n      summary: Returns the VFS stats for the specified path\n      operationId: statvfs\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatVFS'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n        501:\n          $ref: '#/components/responses/NotImplemented'\n        default:\n          $ref: '#/components/responses/DefaultResponse'\ncomponents:\n  responses:\n    OKResponse:\n      description: successful operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    Forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    NotFound:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    NotImplemented:\n      description: Not Implemented\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    Conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    RequestEntityTooLarge:\n      description: Request Entity Too Large, max allowed size exceeded\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n    DefaultResponse:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResponse'\n  schemas:\n    ApiResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: 'message, can be empty'\n        error:\n          type: string\n          description: error description if any\n    FileInfo:\n      type: object\n      properties:\n        name:\n          type: string\n          description: base name of the file\n        size:\n          type: integer\n          format: int64\n          description: length in bytes for regular files; system-dependent for others\n        mode:\n          type: integer\n          description: |\n            File mode and permission bits. More details here: https://golang.org/pkg/io/fs/#FileMode.\n            Let's see some examples:\n            - for a directory mode\u00262147483648 != 0\n            - for a symlink mode\u0026134217728 != 0\n            - for a regular file mode\u00262401763328 == 0\n        last_modified:\n          type: string\n          format: date-time\n    StatVFS:\n      type: object\n      properties:\n        bsize:\n          type: integer\n          description: file system block size\n        frsize:\n          type: integer\n          description: fundamental fs block size\n        blocks:\n          type: integer\n          description: number of blocks\n        bfree:\n          type: integer\n          description: free blocks in file system\n        bavail:\n          type: integer\n          description: free blocks for non-root\n        files:\n          type: integer\n          description: total file inodes\n        ffree:\n          type: integer\n          description: free file inodes\n        favail:\n          type: integer\n          description: free file inodes for non-root\n        fsid:\n          type: integer\n          description: file system id\n        flag:\n          type: integer\n          description: bit mask of f_flag values\n        namemax:\n          type: integer\n          description: maximum filename length\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY",
			"canonicalURL": "/github.com/drakkan/sftpgo@719f6077ab4c0ba569ae2f5a0a601d30c6d49cce/-/blob/openapi/httpfs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/drakkan/sftpgo/blob/719f6077ab4c0ba569ae2f5a0a601d30c6d49cce/openapi/httpfs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/create/{name}\": post: requestBody: masked request content type not implemented",
	"NotImplemented": [
		"masked request content type"
	]
}