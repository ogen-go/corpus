{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CASES-LU/Fit4Cybersecurity"
		},
		"file": {
			"name": "openapi-schema.yml",
			"size": 0,
			"path": "static/survey/api/openapi-schema.yml",
			"byteSize": 2449,
			"content": "openapi: 3.0.2\ninfo:\n  title: ''\n  version: ''\npaths:\n  /survey/api/translations:\n    get:\n      operationId: listTranslationListApis\n      description: List all the Translation items for given requested user\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - survey\n    post:\n      operationId: createTranslationListApi\n      description: Create the Translation with given translation data\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - survey\n  /survey/api/translation/{translation_id}/:\n    get:\n      operationId: retrieveTranslationDetailApi\n      description: Retrieves the Todo with given translation_id\n      parameters:\n      - name: translation_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - survey\n    put:\n      operationId: updateTranslationDetailApi\n      description: Updates the todo item with given translation_id if exists\n      parameters:\n      - name: translation_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - survey\n    delete:\n      operationId: destroyTranslationDetailApi\n      description: Deletes the todo item with given translation_id if exists\n      parameters:\n      - name: translation_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n      tags:\n      - survey\n",
			"canonicalURL": "/github.com/CASES-LU/Fit4Cybersecurity@17d9bf0d4f613bbfaa25c61ac961d9f0809d9d90/-/blob/static/survey/api/openapi-schema.yml",
			"externalURLs": [
				{
					"url": "https://github.com/CASES-LU/Fit4Cybersecurity/blob/17d9bf0d4f613bbfaa25c61ac961d9f0809d9d90/static/survey/api/openapi-schema.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/survey/api/translations\": post: requestBody: contents: application/x-www-form-urlencoded: any: complex form schema not implemented",
	"NotImplemented": [
		"complex form schema"
	]
}