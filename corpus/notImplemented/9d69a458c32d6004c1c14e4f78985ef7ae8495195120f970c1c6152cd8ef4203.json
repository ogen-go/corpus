{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Sage-Bionetworks/schematic"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api/openapi/api.yaml",
			"byteSize": 18559,
			"content": "openapi: 3.0.0\ninfo:\n  title: Schematic REST API\n  version: 0.1.0\n  description: \u003e-\n    This service exposes core functionalities from schematic as REST API\n    endpoints\n    \nservers:\n  - url: /v1\n\npaths:\n  /manifest/generate:\n    get:\n      summary: Endpoint to facilitate manifest generation\n      description: Endpoint to create dynamically create metadata manifest files\n      parameters:\n        - in: query\n          name: schema_url\n          schema:\n            type: string\n          description: Data Model URL\n          example: \u003e-\n            https://raw.githubusercontent.com/Sage-Bionetworks/schematic/develop/tests/data/example.model.jsonld\n          required: true\n        - in: query\n          name: title\n          schema:\n            type: string\n          description: \u003e\n            Title of Manifest or Title Prefix, \n            if making multiple manifests\n          example: Example\n          required: false\n        - in: query\n          name: data_type\n          style: form\n          schema:\n            type: array\n            items: \n              type: string\n            nullable: true\n          description: \u003e\n            Data Model Component(s). \n            To make all manifests, enter \"all manifests\".\n          example: \n            - Patient\n            - Biospecimen\n          required: true\n        - in: query\n          name: oauth\n          schema:\n            type: boolean\n            default: true\n          description: OAuth or Service Account\n          required: false\n        - in: query\n          name: use_annotations\n          schema:\n            type: boolean\n            default: false\n          description: To Use Annotations\n          required: false\n        - in: query\n          name: dataset_id\n          style: form\n          schema:\n            type: array\n            items: \n              type: string\n            nullable: true\n          description: \u003e\n            Dataset ID. If you want to get an existing manifest, this dataset_id should be the parent ID of the manifest. Can enter multiple dataset_ids, corresponding to order of multiple data_types entered above. Do not enter multiple if calling 'all manifests' for data_type.\n          required: false\n        - in: query\n          name: asset_view\n          schema:\n            type: string\n            nullable: true\n          description: ID of view listing all project data assets. E.g. for Synapse this would be the Synapse ID of the fileview listing all data assets for a given project.(i.e. master_fileview in config.yml)\n          required: false\n      operationId: api.routes.get_manifest_route\n      responses:\n        \"201\":\n          description: Googlesheet link created\n          content:\n            application/json:\n              schema:\n                type: string\n      tags:\n        - Manifest Operations\n  /manifest/download:\n    get:\n      summary: Endpoint to download an existing manifest\n      description: Endpoint to download an existing manifest\n      parameters:\n        - in: query\n          name: input_token\n          schema:\n            type: string\n            nullable: false\n          description: Token\n          example: Token\n          required: true\n        - in: query\n          name: asset_view\n          schema:\n            type: string\n            nullable: false\n          description: ID of view listing all project data assets. For example, for Synapse this would be the Synapse ID of the fileview listing all data assets for a given project.(i.e. master_fileview in config.yml)\n          example: syn28559058\n          required: true\n        - in: query\n          name: dataset_id\n          schema:\n            type: string\n            nullable: true\n          description: this dataset_id should be the parent ID of the manifest.\n          example: syn28268700\n          required: true\n        - in: query\n          name: as_json\n          schema:\n            type: boolean\n            default: false\n          description: if True return the manifest in JSON format\n          required: false\n        - in: query\n          name: new_manifest_name\n          schema:\n            type: string\n            nullable: true\n          description: Fill in if you want to change the filename of the downloaded manifest.\n          required: false\n      operationId: api.routes.download_manifest\n      responses:\n        \"200\":\n          description: A manifest gets downloaded and local file path of the manifest gets returned.\n          content:\n            text/csv:\n              schema:\n                type: string\n      tags:\n        - Manifest Operations\n  /model/validate:\n    post:\n      summary: Endpoint to facilitate manifest validation\n      description: Endpoint to validate metadata manifest files\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                # csv_file will be the field name in\n                # this multipart request\n                csv_file:\n                  type: string\n                  format: binary\n      parameters:\n        - in: query\n          name: schema_url\n          schema:\n            type: string\n          description: Data Model URL\n          example: \u003e-\n            https://raw.githubusercontent.com/Sage-Bionetworks/schematic/develop/tests/data/example.model.jsonld\n          required: true\n        - in: query\n          name: data_type\n          schema:\n            type: string\n            nullable: true\n          description: Data Model Component\n          example: Patient\n          required: true\n      operationId: api.routes.validate_manifest_route\n      responses:\n        \"200\":\n          description: Manifest Validated\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                      - type: array\n                        items:\n                          type: string\n      tags:\n        - Model Operations\n  /model/submit:\n    post:\n      summary: Endpoint to facilitate manifest submission\n      description: Endpoint to submit annotated manifest files\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                csv_file:\n                  type: string\n                  format: binary\n      parameters:\n        - in: query\n          name: schema_url\n          schema:\n            type: string\n          description: Data Model URL\n          example: \u003e-\n            https://raw.githubusercontent.com/Sage-Bionetworks/schematic/develop/tests/data/example.model.jsonld\n          required: true\n        - in: query\n          name: data_type\n          schema:\n            type: string\n            nullable: true\n          description: Data Model Component\n          example: Patient\n          required: true\n        - in: query\n          name: dataset_id\n          schema:\n            type: string\n            nullable: true\n          description: Dataset SynID\n          required: true\n        - in: query\n          name: manifest_record_type\n          schema:\n            type: string\n            enum: [ \"table\", \"entity\", \"both\"]\n          description: Manifest storage type.\n          example: 'table'\n        - in: query\n          name: restrict_rules\n          schema:\n            type: boolean\n            default: false\n          description: If True, validation suite will only run with in-house validation rule. If False, the Great Expectations suite will be utilized and all rules will be available.\n          required: true\n        - in: query\n          name: input_token\n          schema:\n            type: string\n            nullable: false\n          description: Token\n          required: true\n      operationId: api.routes.submit_manifest_route\n      responses:\n        \"200\":\n          description: Manifest ID (e.g. Synapse ID if your asset management platform is Synapse)\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Check schematic log\n      tags:\n        - Model Operations\n  /model/component-requirements:\n    get:\n      summary: Given a source model component (see https://w3id.org/biolink/vocab/category for definnition of component), return all components required by it.\n      description: Given a source model component (see https://w3id.org/biolink/vocab/category for definnition of component), return all components required by it. Useful to construct requirement dependencies not only between specific attributes but also between categories/components of attributes; it can be utilized to track metadata completion progress across multiple categories of attributes.\n      parameters:\n        - in: query\n          name: schema_url\n          schema:\n            type: string\n          description: Data Model URL\n          example: \u003e-\n            https://raw.githubusercontent.com/Sage-Bionetworks/schematic/develop/tests/data/example.model.jsonld\n          required: true\n        - in: query\n          name: source_component\n          schema:\n            type: string\n          description: an attribute label indicating the source component. (i.e. Patient, Biospecimen, ScRNA-seqLevel1, ScRNA-seqLevel2)\n          example: Biospecimen\n          required: true\n        - in: query\n          name: as_graph\n          schema:\n            type: boolean\n            default: false\n          description: if False return component requirements as a list; if True return component requirements as a dependency graph (i.e. a DAG)\n          required: true\n      operationId: api.routes.get_component_requirements\n      responses:\n        \"200\":\n          description: A list of required components associated with the source component.\n          content:\n            application/json:\n              schema:\n                type: array\n                example: [\"MolecularTest\",\"Therapy\",\"Diagnosis\",\"FollowUp\",\"Exposure\",\"FamilyHistory\",\"Demographics\",\"Patient\",\"BreastCancerTier3\"]\n      tags:\n        - Manifest Operations\n  /manifest/populate:\n    post:\n      summary: Create a Google sheet link based on an existing manifest. \n      description: Create a Google sheet link based on an existing manifest.  \n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                csv_file:\n                  type: string\n                  format: binary\n      parameters:\n        - in: query\n          name: schema_url\n          schema:\n            type: string\n          description: Data Model URL\n          example: \u003e-\n            https://raw.githubusercontent.com/Sage-Bionetworks/schematic/develop/tests/data/example.model.jsonld\n          required: true\n        - in: query\n          name: data_type\n          schema:\n            type: string\n            nullable: true\n          description: Data Model Component\n          example: Patient\n          required: true\n        - in: query\n          name: title\n          schema:\n            type: string\n          description: Title of Manifest\n          example: Example\n          required: false\n      operationId: api.routes.populate_manifest_route\n      responses:\n        \"200\":\n          description: Googlesheet link created\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Check schematic log\n      tags:\n        - Manifest Operations\n  /storage/projects:\n    get:\n      summary: Get all storage projects the current user has access to\n      description: Gets all storage projects the current user has access to, within the scope of the 'storageFileview' attribute.\n      operationId: api.routes.get_storage_projects\n      parameters:\n        - in: query\n          name: input_token\n          schema:\n            type: string\n            nullable: false\n          description: Token\n          example: Token\n          required: true\n        - in: query\n          name: asset_view\n          schema:\n            type: string\n            nullable: false\n          description: ID of view listing all project data assets. For example, for Synapse this would be the Synapse ID of the fileview listing all data assets for a given project.(i.e. master_fileview in config.yml)\n          example: syn23643253\n          required: true\n      responses:\n        \"200\":\n          description: A list of tuples\n        \"500\":\n          description: Check log\n      tags:\n        - Synapse Storage\n  /storage/project/datasets:\n    get:\n      summary: Gets all datasets in folder under a given storage project that the current user has access to.\n      description: Gets all datasets in folder under a given storage project that the current user has access to.\n      operationId: api.routes.get_storage_projects_datasets\n      parameters:\n        - in: query\n          name: input_token\n          schema:\n            type: string\n            nullable: false\n          description: Token\n          example: Token\n          required: true\n        - in: query\n          name: asset_view\n          schema:\n            type: string\n            nullable: false\n          description: ID of view listing all project data assets. For example, for Synapse this would be the Synapse ID of the fileview listing all data assets for a given project.(i.e. master_fileview in config.yml)\n          example: syn23643253\n          required: true\n        - in: query\n          name: project_id\n          schema:\n            type: string\n            nullable: false\n          description: synapse ID of a storage project.\n          example: syn26251192\n          required: true\n      responses:\n        \"200\":\n          description: A list of tuples\n        \"500\":\n          description: Check log\n      tags:\n        - Synapse Storage\n  /storage/dataset/files:\n    get:\n      summary: Get all files in a given dataset folder\n      description: Get all files in a given dataset folder\n      operationId: api.routes.get_files_storage_dataset\n      parameters:\n        - in: query\n          name: input_token\n          schema:\n            type: string\n            nullable: false\n          description: Token\n          example: Token\n          required: true\n        - in: query\n          name: asset_view\n          schema:\n            type: string\n            nullable: false\n          description: ID of view listing all project data assets. For example, for Synapse this would be the Synapse ID of the fileview listing all data assets for a given project.(i.e. master_fileview in config.yml)\n          example: syn23643253\n          required: true\n        - in: query\n          name: dataset_id\n          schema:\n            type: string\n            nullable: false\n          description: synapse ID of a storage dataset.\n          example: syn23643250\n          required: true\n        - in: query\n          name: file_names\n          schema:\n            type: array\n            items:\n              type: string\n            nullable: true\n          description: a list of files with particular names (i.e. Sample_A.txt). If you leave it empty, it will return all dataset files under the dataset ID. \n          required: false\n        - in: query\n          name: full_path\n          schema:\n            type: boolean\n            nullable: false\n          description: if True return the full path as part of this filename; otherwise return just base filename\n          required: true\n      responses:\n        \"200\":\n          description: A list of tuples\n        \"500\":\n          description: Check schematic log\n      tags:\n        - Synapse Storage\n  /storage/assets/tables:\n    get:\n      summary: Retrieve asset view table as a dataframe.\n      description: Retrieve asset view table as a dataframe.\n      operationId: api.routes.get_asset_view_table\n      parameters:\n        - in: query\n          name: input_token\n          schema:\n            type: string\n            nullable: false\n          description: Token\n          example: Token\n          required: true\n        - in: query\n          name: asset_view\n          schema:\n            type: string\n            nullable: false\n          description: ID of view listing all project data assets. For example, for Synapse this would be the Synapse ID of the fileview listing all data assets for a given project.(i.e. master_fileview in config.yml)\n          example: syn23643253\n          required: true\n      responses:\n        \"200\":\n          description: A list of json\n        \"500\":\n          description: Check schematic log. \n      tags:\n        - Synapse Storage\n  /storage/project/manifests:\n    get:\n      summary: Gets all metadata manifest files across all datasets in a specified project.\n      description: Gets all metadata manifest files across all datasets in a specified project.\n      operationId: api.routes.get_project_manifests\n      parameters:\n        - in: query\n          name: input_token\n          schema:\n            type: string\n            nullable: false\n          description: Token\n          example: Token\n          required: true\n        - in: query\n          name: project_id\n          schema:\n            type: string\n            nullable: false\n          description: Project ID\n          example: syn30988314\n          required: true\n        - in: query\n          name: asset_view\n          schema:\n            type: string\n            nullable: false\n          description: ID of view listing all project data assets. For example, for Synapse this would be the Synapse ID of the fileview listing all data assets for a given project.(i.e. master_fileview in config.yml)\n          example: syn23643253\n          required: true\n      responses:\n        \"200\":\n          description: A list of tuples(json). \n          content:\n            application/json:\n              schema:\n                type: array\n                example: [\n                        [\n                            [datasetId, dataName],\n                            [manifestId, manifestName],\n                            [componentSchemaLabel, componentSchemaLabel]\n                        ]\n                    ]\n        \"500\":\n          description: Check schematic log. \n      tags:\n        - Synapse Storage",
			"canonicalURL": "/github.com/Sage-Bionetworks/schematic@c6ec573e9d83db011f194c9c877607604a1dc153/-/blob/api/openapi/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Sage-Bionetworks/schematic/blob/c6ec573e9d83db011f194c9c877607604a1dc153/api/openapi/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/manifest/download\": get: responses: 200: contents: unsupported content types: [text/csv]",
	"NotImplemented": [
		"unsupported content types"
	]
}