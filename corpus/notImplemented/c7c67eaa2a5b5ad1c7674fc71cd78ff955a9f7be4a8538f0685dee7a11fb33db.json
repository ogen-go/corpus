{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bob-cd/bob"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "apiserver/resources/bob/api.yaml",
			"byteSize": 34143,
			"content": "# Copyright 2018-2022 Rahul De\n#\n# Use of this source code is governed by an MIT-style\n# license that can be found in the LICENSE file or at\n# https://opensource.org/licenses/MIT.\n\nopenapi: \"3.0.0\"\n\ninfo:\n  title: Bob the Builder\n  version: \"0.1.0\"\n  description: The modular, extensible CI/CD platform\n  contact:\n    name: Bob developers\n    url: https://github.com/bob-cd/bob/discussions\n\nservers:\n  - url: http://localhost:7777\n\ntags:\n  - name: api\n    description: Operations for this API itself\n  - name: cluster\n    description: Operations for administering the cluster\n  - name: pipeline\n    description: Operations for pipelines\n  - name: artifact\n    description: Operations for artifacts and artifact stores\n  - name: resource\n    description: Operations for resource and resource providers\n  - name: analytics\n    description: Operations for cluster analytics\n  - name: observability\n    description: Operations for cluster observability\n\npaths:\n  \"/api.yaml\":\n    get:\n      operationId: GetApiSpec\n      summary: Returns the OpenAPI spec\n      description: Returns this OpenAPI YAML for external consumption\n      tags:\n        - api\n      x-cli:\n        disabled: true\n\n      responses:\n        \"200\":\n          description: Returns the spec\n          content:\n            application/yaml:\n              schema:\n                type: string\n\n  \"/can-we-build-it\":\n    get:\n      operationId: HealthCheck\n      summary: Runs health checks for Bob\n      description: Runs all cluster health checks and reports the status\n      tags:\n        - cluster\n\n      responses:\n        \"200\":\n          description: Successful health check\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                healthy:\n                  value:\n                    message: \"Yes we can! ðŸ”¨ ðŸ”¨\"\n\n        default:\n          description: Failed health check\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                unhealthy:\n                  value:\n                    message: \"Health check failed: Postgres not healthy\"\n\n  \"/pipelines/groups/{group}/names/{name}\":\n    post:\n      operationId: PipelineCreate\n      summary: Creates a new pipeline\n      description: Submits a new pipeline creation request given the pipeline schema\n      tags:\n        - pipeline\n      x-cli:\n        name: p-create\n\n      parameters:\n        - name: group\n          required: true\n          in: path\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: true\n          in: path\n          description: The name of the pipeline\n          schema:\n            type: string\n\n      requestBody:\n        description: The pipeline schema definition\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pipeline\"\n            examples:\n              pipeline:\n                value:\n                  image: gradle:jdk11\n                  vars:\n                    LOG_LEVEL: error\n                  steps:\n                    - cmd: echo build started.\n                    - needs_resource: source-code\n                      cmd: gradle test\n                    - cmd: gradle shadowJar\n                      produces_artifact:\n                        name: uberjar\n                        path: build/libs/bob-example-1.0-SNAPSHOT-all.jar\n                        store: local\n                  resources:\n                    - name: source-code\n                      type: external\n                      provider: git\n                      params:\n                        repo: https://github.com/lispyclouds/bob-example\n                        branch: main\n\n      responses:\n        \"202\":\n          description: Successful creation of the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n        default:\n          description: Failed creation of the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"Pipeline creation error: Check params or if its already created\"\n    delete:\n      operationId: PipelineDelete\n      summary: Deletes a pipeline\n      description: Submits a pipeline deletion creation request given the pipeline group and name\n      tags:\n        - pipeline\n      x-cli:\n        name: p-delete\n\n      parameters:\n        - name: group\n          required: true\n          in: path\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: true\n          in: path\n          description: The name of the pipeline\n          schema:\n            type: string\n\n      responses:\n        \"202\":\n          description: Successful deletion of the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n        \"422\":\n          description: Invalid deletion when pipeline is running\n          content:\n            application/json:\n              schema:\n                type: object\n              examples:\n                success:\n                  value:\n                    message:\n                      error: \"Pipeline has active runs. Wait for them to finish or stop them.\"\n                      runs:\n                        - run-id-1\n                        - run-id-2\n\n  \"/pipelines/start/groups/{group}/names/{name}\":\n    post:\n      operationId: PipelineStart\n      summary: Starts a pipeline\n      description: Submits a new pipeline start request given the pipeline group and name\n      tags:\n        - pipeline\n      x-cli:\n        name: p-start\n\n      parameters:\n        - name: group\n          required: true\n          in: path\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: true\n          in: path\n          description: The name of the pipeline\n          schema:\n            type: string\n\n      requestBody:\n        description: Optional metadata map for runners. If provided must include runner/type\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - runner/type\n              properties:\n                runner/type:\n                  description: Describes which runner type a job is intended for, defaults to docker\n                  type: string\n\n      responses:\n        \"202\":\n          description: Successfully start the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Run ID of the pipeline\"\n        \"422\":\n          description: Pipeline cannot be started\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Pipeline is paused. Unpause it first.\"\n\n  \"/pipelines/stop/groups/{group}/names/{name}/runs/{id}\":\n    post:\n      operationId: PipelineStop\n      summary: Stops a pipeline\n      description: Submits a pipeline stop request given the pipeline group, name and run id\n      tags:\n        - pipeline\n      x-cli:\n        name: p-stop\n\n      parameters:\n        - name: group\n          required: true\n          in: path\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: true\n          in: path\n          description: The name of the pipeline\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          description: The id of the pipeline run\n          schema:\n            type: string\n\n      responses:\n        \"202\":\n          description: Successful stopping of the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n\n  \"/pipelines/pause/groups/{group}/names/{name}\":\n    post:\n      operationId: PipelinePause\n      summary: Pauses a pipeline from being scheduled on a runner\n      description: Submits a pipeline pause request given the pipeline group and name. It wont be scheduled to run unless unpaused. Pipelines in-flight will complete. NOP if paused already.\n      tags:\n        - pipeline\n      x-cli:\n        name: p-pause\n\n      parameters:\n        - name: group\n          required: true\n          in: path\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: true\n          in: path\n          description: The name of the pipeline\n          schema:\n            type: string\n\n      responses:\n        \"202\":\n          description: Successful pausing of the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n\n  \"/pipelines/unpause/groups/{group}/names/{name}\":\n    post:\n      operationId: PipelineUnpause\n      summary: Unpauses a pipeline for scheduling on a runner\n      description: Submits a pipeline unpause request given the pipeline group and name. Subsequent start requests will be honoured. NOP if unpaused already.\n      tags:\n        - pipeline\n      x-cli:\n        name: p-unpause\n\n      parameters:\n        - name: group\n          required: true\n          in: path\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: true\n          in: path\n          description: The name of the pipeline\n          schema:\n            type: string\n\n      responses:\n        \"202\":\n          description: Successful unpausing of the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n\n  \"/pipelines/logs/runs/{id}/offset/{offset}/lines/{lines}\":\n    get:\n      operationId: PipelineLogs\n      summary: Fetches the logs of a pipeline\n      description: Streams the pipeline logs from the DB given the pipeline run id, offset and lines to fetch\n      tags:\n        - pipeline\n      x-cli:\n        name: p-logs\n\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: The id of the pipeline run\n          schema:\n            type: string\n        - name: offset\n          required: true\n          in: path\n          description: The starting line of the logs\n          schema:\n            type: integer\n        - name: lines\n          required: true\n          in: path\n          description: The number of lines from the starting line\n          schema:\n            type: integer\n\n      responses:\n        \"200\":\n          description: Logs of the pipeline run\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PipelineLogsResponse\"\n              examples:\n                success:\n                  value:\n                    message:\n                      - \"[bob] log line 1\"\n                      - \"log line 2\"\n                      - \"log line 3\"\n                      - \"log line 4\"\n                      - \"[bob] log line 5\"\n                      - \"log line 6\"\n        default:\n          description: Failed log fetch\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"\u003csome error message\u003e\"\n\n  \"/pipelines/status/runs/{id}\":\n    get:\n      operationId: PipelineStatus\n      summary: Fetches the status of the pipeline\n      description: Fetches the pipeline status from the DB given the pipeline run id\n      tags:\n        - pipeline\n      x-cli:\n        name: p-status\n\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: The id of the pipeline run\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          description: Successful status fetch of the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusResponse\"\n              examples:\n                passed:\n                  value:\n                    message: \"passed\"\n                running:\n                  value:\n                    message: \"running\"\n                failed:\n                  value:\n                    message: \"failed\"\n                stopped:\n                  value:\n                    message: \"stopped\"\n        \"404\":\n          description: Cannot find status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"Cannot find status\"\n        default:\n          description: Failed status fetch of the pipeline\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"\u003csome error message\u003e\"\n\n  \"/pipelines/groups/{group}/names/{name}/runs/{id}/artifact-stores/{store-name}/artifact/{artifact-name}\":\n    get:\n      operationId: PipelineArtifactFetch\n      summary: Fetches artifact produced by a pipeline run\n      description: Fetches the artifact produced by a pipeline run from the artifact store given the run id, artifact store and name\n      tags:\n        - pipeline\n        - artifact\n      x-cli:\n        name: pa-fetch\n\n      parameters:\n        - name: group\n          required: true\n          in: path\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: true\n          in: path\n          description: The name of the pipeline\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          description: The id of the pipeline run\n          schema:\n            type: string\n        - name: store-name\n          required: true\n          in: path\n          description: The store from which the artifact is to be fetched\n          schema:\n            type: string\n        - name: artifact-name\n          required: true\n          in: path\n          description: The name of the artifact to fetch\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          description: The TAR archive of the artifact\n          content:\n            application/tar:\n              schema:\n                type: string\n                format: binary\n        default:\n          description: Failed artifact fetch\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"\u003csome error message\u003e\"\n\n  \"/pipelines\":\n    get:\n      operationId: PipelineList\n      summary: List all pipelines filtered by group, name and status, case sensitive\n      description: Fetches all the known pipelines given the pipeline group, name and an optional status\n      tags:\n        - pipeline\n      x-cli:\n        name: p-list\n\n      parameters:\n        - name: group\n          required: false\n          in: query\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: false\n          in: query\n          description: The name of the pipeline\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: The status of the pipeline\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          description: List of pipelines\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PipelinesResponse\"\n              examples:\n                success:\n                  value:\n                    message:\n                      - group: dev\n                        name: test\n                        image: busybox:musl\n                        steps:\n                          - cmd: echo hello\n        default:\n          description: Failed listing of pipelines\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"Failed to fetch pipelines \u003csome error message\u003e\"\n\n  \"/pipelines/groups/{group}/names/{name}/runs\":\n    get:\n      operationId: PipelineRuns\n      summary: List all pipelines runs by group and name\n      description: Lists all known pipeline runs given the group and name\n      tags:\n        - pipeline\n      x-cli:\n        name: p-runs\n\n      parameters:\n        - name: group\n          required: true\n          in: path\n          description: The group of the pipeline\n          schema:\n            type: string\n        - name: name\n          required: true\n          in: path\n          description: The name of the pipeline\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          description: List of pipeline runs\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PipelineRunsResponse\"\n              examples:\n                success:\n                  value:\n                    message:\n                      - run_id: r-a-passed-id\n                        status: passed\n                      - run_id: r-a-failed-id\n                        status: failed\n        default:\n          description: Failed listing of pipeline runs\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"Failed to fetch pipelines \u003csome error message\u003e\"\n\n  \"/resource-providers/{name}\":\n    post:\n      operationId: ResourceProviderCreate\n      summary: Creates a resource provider with its name and attributes\n      description: Submits a new resource provider creation request given the name and url\n      tags:\n        - resource\n      x-cli:\n        name: rp-create\n\n      parameters:\n        - name: name\n          required: true\n          in: path\n          description: Unique name of the resource provider\n          schema:\n            type: string\n\n      requestBody:\n        description: The attributes of the resource provider\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResourceProviderAttributes\"\n            examples:\n              attrs:\n                value:\n                  url: \"http://my-resource-provider:8000\"\n\n      responses:\n        \"202\":\n          description: Successfully created a resource provider\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n        default:\n          description: Failed to create a resource provider\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"Resource Provider may already be registered\"\n    delete:\n      operationId: ResourceProviderDelete\n      summary: Deletes a resource provider by name\n      description: Submits a resource provider deletion request given the name\n      tags:\n        - resource\n      x-cli:\n        name: rp-create\n\n      parameters:\n        - name: name\n          required: true\n          in: path\n          description: Unique name of the external resource\n          schema:\n            type: string\n\n      responses:\n        \"202\":\n          description: Successfully delete a resource provider\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n\n  \"/resource-providers\":\n    get:\n      operationId: ResourceProviderList\n      summary: Lists all registered resources providers by name\n      description: Lists all known resource providers\n      tags:\n        - resource\n      x-cli:\n        name: rp-list\n\n      responses:\n        \"200\":\n          description: List of resource providers\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceProvidersResponse\"\n              examples:\n                resource-providers:\n                  value:\n                    message:\n                      - \"github-provider\"\n                      - \"salsa-provider\"\n\n  \"/artifact-stores/{name}\":\n    post:\n      operationId: ArtifactStoreCreate\n      summary: Creates an artifact store with its name and attributes\n      description: Submits a new artifact store creation request given the name and url\n      tags:\n        - artifact\n      x-cli:\n        name: as-create\n\n      parameters:\n        - name: name\n          required: true\n          in: path\n          description: Unique name of the artifact store\n          schema:\n            type: string\n\n      requestBody:\n        description: The attributes of the artifact store\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ArtifactStoreAttributes\"\n            examples:\n              attributes:\n                value:\n                  url: \"http://my-artifact-store:8000\"\n\n      responses:\n        \"202\":\n          description: Successfully created an artifact store\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n        default:\n          description: Failed to create an artifact store\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                failure:\n                  value:\n                    message: \"Artifact Store may already be registered\"\n    delete:\n      operationId: ArtifactStoreDelete\n      summary: Deletes an artifact store by name\n      description: Submits a artifact store deletion request given the name\n      tags:\n        - artifact\n      x-cli:\n        name: as-delete\n\n      parameters:\n        - name: name\n          required: true\n          in: path\n          description: Unique name of the artifact store\n          schema:\n            type: string\n\n      responses:\n        \"202\":\n          description: Successfully delete an artifact store\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                success:\n                  value:\n                    message: \"Ok\"\n\n  \"/artifact-stores\":\n    get:\n      operationId: ArtifactStoreList\n      summary: Lists all registered artifact stores by name\n      description: Lists all known artifact stores\n      tags:\n        - artifact\n      x-cli:\n        name: as-list\n\n      responses:\n        \"200\":\n          description: List of artifact stores\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArtifactStoresResponse\"\n              examples:\n                artifact-stores:\n                  value:\n                    message:\n                      - \"s3-store\"\n                      - \"file-store\"\n\n  \"/query\":\n    get:\n      operationId: Query\n      summary: Runs a query on XTDB, intended for point in time analytics\n      description: Runs a direct xt datalog read query on the DB, useful for arbitrary analytics and point in time queries\n      tags:\n        - analytics\n\n      parameters:\n        - name: q\n          description: Query to execute\n          required: true\n          in: query\n          schema:\n            type: string\n        - name: t\n          description: Point in time\n          required: false\n          in: query\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          description: Successful query\n          content:\n            application/json:\n              schema:\n                type: object\n              examples:\n                sucess:\n                  value: []\n\n        default:\n          description: Failed query\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                unhealthy:\n                  value:\n                    message: \"Query failed: \u003cError\u003e\"\n  \"/error\":\n    get:\n      operationId: GetError\n      summary: Fetches the next available system error\n      description: Fetches the next available error from the errors queue, this is a destructive read\n      tags:\n        - observability\n\n      responses:\n        \"200\":\n          description: Successful fetch\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                sucess:\n                  value:\n                    message: \"errors\"\n\n        default:\n          description: Failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                unhealthy:\n                  value:\n                    message: \"\u003cSome Error\u003e\"\n\n  \"/metrics\":\n    get:\n      operationId: GetMetrics\n      summary: Generates Prometheus compatible cluster metrics\n      description: Emits the Prometheus compatible metrics for the entire cluster\n      tags:\n        - observability\n\n      responses:\n        \"200\":\n          description: Successful fetch\n          content:\n            text/plain:\n              schema:\n                type: string\n              examples:\n                sucess:\n                  value: \"... Prometheus compatible metrics ...\"\n\n        default:\n          description: Failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                unhealthy:\n                  value:\n                    message: \"\u003cSome Error\u003e\"\n\n  \"/cctray.xml\":\n    get:\n      operationId: CCTray\n      summary: Emits a CCTray compatible XML status report\n      description: Generates a CCTray XML report, useful for observability tooling like CCMenu\n      tags:\n        - observability\n\n      responses:\n        \"200\":\n          description: Successful fetch\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Projects\"\n              examples:\n                sucess:\n                  value:\n                    - name: \"dev:pipeline1\"\n                      activity: Sleeping\n                      lastBuildStatus: Success\n                      lastBuildLabel: \"r-0ef66ba9-e397-461b-a6d9-f52f91889264\"\n                      lastBuildTime: \"2020-12-21T14:35:21.577028Z\"\n                      webUrl: null\n                    - name: \"dev:pipeline2\"\n                      activity: Running\n                      lastBuildStatus: Success\n                      lastBuildLabel: \"r-0ef55ba9-e397-461c-a6d9-f52f95544882\"\n                      lastBuildTime: \"2020-12-21T14:35:21.577028Z\"\n                      webUrl: null\n\n        default:\n          description: Failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleResponse\"\n              examples:\n                unhealthy:\n                  value:\n                    message: \"\u003cSome Error\u003e\"\n\ncomponents:\n  schemas:\n    Projects:\n      xml:\n        wrapped: true\n      type: array\n      items:\n        type: object\n        required:\n          - name\n          - activity\n          - lastBuildStatus\n          - lastBuildLabel\n          - lastBuildTime\n          - webUrl\n        properties:\n          name:\n            type: string\n          activity:\n            type: string\n          lastBuildStatus:\n            type: string\n          lastBuildLabel:\n            type: string\n          lastBuildTime:\n            type: string\n          webUrl:\n            type: string\n        xml:\n          name: Project\n\n    SimpleResponse:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n\n    Resource:\n      type: object\n      required:\n        - name\n        - type\n        - provider\n      properties:\n        name:\n          type: string\n          description: Unique name of the resource\n        params:\n          type: object\n          description: The key-value pairs of params to be passed to the resource provider\n        type:\n          type: string\n          enum:\n            - external\n            - internal\n        provider:\n          type: string\n          description: Unique name of the registered resource provider\n\n    Artifact:\n      type: object\n      required:\n        - name\n        - path\n        - store\n      properties:\n        name:\n          type: string\n          description: Unique name of the artifact\n        path:\n          type: string\n          description: Path to the artifact in the container\n        store:\n          type: string\n          description: Unique name of the registered store\n\n    Step:\n      type: object\n      required:\n        - cmd\n      properties:\n        cmd:\n          type: string\n          description: The command to execute\n        needs_resource:\n          type: string\n          description: Name of the resource to mount before execution\n        produces_artifact:\n          $ref: \"#/components/schemas/Artifact\"\n\n    Pipeline:\n      type: object\n      required:\n        - steps\n        - image\n      properties:\n        steps:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Step\"\n          description: The list of steps to be executed sequentially\n        image:\n          type: string\n          description: The image to use, e.g. a docker or os image\n        vars:\n          type: object\n          description: The key-value pairs of environment variables\n        resources:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          description: The list of declared resources\n\n    StringList:\n      type: array\n      items:\n        type: string\n\n    PipelineLogsResponse:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          $ref: \"#/components/schemas/StringList\"\n\n    PipelinesResponse:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: array\n          items:\n            type: object\n            required:\n              - name\n              - data\n            properties:\n              name:\n                type: string\n              data:\n                $ref: \"#/components/schemas/Pipeline\"\n\n    PipelineRunsResponse:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: array\n          items:\n            type: object\n            required:\n              - run_id\n              - status\n            properties:\n              run_id:\n                type: string\n              status:\n                type: string\n\n    StatusResponse:\n      type: string\n      enum:\n        - initializing\n        - running\n        - passed\n        - failed\n        - stopped\n\n    ResourceProvidersResponse:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          $ref: \"#/components/schemas/StringList\"\n\n    ResourceProviderAttributes:\n      type: object\n      required:\n        - url\n      properties:\n        url:\n          type: string\n          description: The reachable URL from Bob for the resource provider\n\n    ArtifactStoreAttributes:\n      type: object\n      required:\n        - url\n      properties:\n        url:\n          type: string\n          description: The reachable URL from Bob for the artifact store\n\n    ArtifactStoresResponse:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          $ref: \"#/components/schemas/StringList\"\n",
			"canonicalURL": "/github.com/bob-cd/bob@91d4d79e745f1319f94dbc192b04c1ab9fc56fa5/-/blob/apiserver/resources/bob/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bob-cd/bob/blob/91d4d79e745f1319f94dbc192b04c1ab9fc56fa5/apiserver/resources/bob/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/cctray.xml\": get: responses: 200: contents: unsupported content types: [application/xml]",
	"NotImplemented": [
		"unsupported content types"
	]
}