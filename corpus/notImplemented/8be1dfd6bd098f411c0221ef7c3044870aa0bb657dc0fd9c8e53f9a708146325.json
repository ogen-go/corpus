{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/thephpleague/openapi-psr7-validator"
		},
		"file": {
			"name": "multipart.yaml",
			"size": 0,
			"path": "tests/stubs/multipart.yaml",
			"byteSize": 4006,
			"content": "openapi: 3.0.2\ninfo:\n  title: Multipart API\n  version: 0.0.1\n  contact:\n    name: Dmitry Lezhnev\n    url: https://github.com/lezhnev74/openapi-psr7-validator\n    email: lezhnev.work@gmail.com\npaths:\n  /multipart:\n    post:\n      summary: Post multipart body\n      operationId: post-multipart-body\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - id\n                - address\n                - profileImage\n              properties:\n                id:            # Part 1 (string value)\n                  type: string\n                  format: uuid\n                address:       # Part2 (object)\n                  type: object\n                  properties:\n                    street:\n                      type: string\n                    city:\n                      type: string\n                profileImage:  # Part 3 (an image)\n                  type: string\n                  format: binary\n\n      responses:\n        204:\n          description: good post\n  /multipart/files:\n    post:\n      summary: ---\n      operationId: post-multipart-files\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                filename:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n\n      responses:\n        204:\n          description: good post\n  /multipart/encoding:\n    post:\n      summary: ---\n      operationId: post-multipart-encoding\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                image:\n                  type: string\n                  format: binary\n            encoding:\n              image:\n                contentType: specific/type\n      responses:\n        204:\n          description: good post\n  /multipart/encoding/wildcard:\n    post:\n      summary: Post multipart body with wildcard encoding of one part\n      operationId: post-multipart-encoding-wildcard\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                image:\n                  type: string\n                  format: binary\n            encoding:\n              image:\n                contentType: image/*\n      responses:\n        204:\n          description: good post\n  /multipart/headers:\n    post:\n      summary: ---\n      operationId: post-multipart-headers\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                image:\n                  type: string\n                  format: binary\n            encoding:\n              image:\n                contentType: specific/type\n                headers:\n                  X-Custom-Header:\n                    description: This is a custom header\n                    schema:\n                      type: string\n                  X-Numeric-Header:\n                    description: This header must be numeric\n                    schema:\n                      type: number\n      responses:\n        204:\n          description: good post\n  /multipart-deserialization:\n    post:\n      summary: Post multipart body\n      operationId: post-multipart-body-deserializtion\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - id\n                - secure\n                - code\n              properties:\n                id:            # Part 1 (numeric value)\n                  type: number\n                secure:        # Part 2 (bool value)\n                  type: boolean\n                code:          # Part 3 (int value)\n                  type: integer\n\n      responses:\n        204:\n          description: good post\n",
			"canonicalURL": "/github.com/thephpleague/openapi-psr7-validator@5f98f98abf37f4533473699ef2ff2b4dc9b8d52e/-/blob/tests/stubs/multipart.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/thephpleague/openapi-psr7-validator/blob/5f98f98abf37f4533473699ef2ff2b4dc9b8d52e/tests/stubs/multipart.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/multipart/headers\": post: requestBody: contents: multipart/form-data: form parameter \"image\": parameter content-type not implemented",
	"NotImplemented": [
		"parameter content-type"
	]
}