{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-server"
		},
		"file": {
			"name": "idp.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/resources/idp.yaml",
			"byteSize": 78001,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e\n    This document specifies an **Identity Provider Management RESTful API** for\n    **WSO2 Identity Server**. This supports Restful APIs for identity provider management.\n    The APIs provide the capability to add/update/delete/patch identity providers in the identity server.\n    In addition, APIs are available to retrieve metadata about federated authenticators and outbound provisioning\n    connectors that can be configured for any given identity provider.\n  version: \"v1\"\n  title: WSO2 Identity Server - Identity Provider Management API definition\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    name: WSO2\n    url: 'http://wso2.com/products/identity-server/'\n    email: architecture@wso2.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\npaths:\n  /identity-providers:\n    get:\n      tags:\n        - Identity Providers\n      summary: |\n        List identity providers\n      description: \u003e\n        This API provides the capability to retrieve the list of identity\n        providers.\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getIDPs\n      parameters:\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/offsetQueryParam'\n        - $ref: '#/components/parameters/filterQueryParam'\n        - $ref: '#/components/parameters/requiredAttributesQueryParam'\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '501':\n          description: Not Implemented\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n        - Identity Providers\n      summary: |\n        Add a new identity provider\n      description: |\n        This API provides the capability to create a new identity provider. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/create \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_create\n      operationId: addIDP\n      responses:\n        '201':\n          description: Successful response\n          headers:\n            Location:\n              description: Location of the newly created identity provider.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentityProviderPOSTRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/IdentityProviderPOSTRequest'\n        description: This represents the identity provider to be created.\n        required: true\n  /identity-providers/meta/federated-authenticators:\n    get:\n      tags:\n        - Metadata\n      summary: |\n        Metadata about supported federated authenticators of identity providers\n      description: \u003e-\n        This API provides the list of supported federated authenticators for an\n        identity provider in the the identity server. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getMetaFederatedAuthenticators\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MetaFederatedAuthenticatorListItem'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/identity-providers/meta/federated-authenticators/{federated-authenticator-id}':\n    get:\n      tags:\n        - Metadata\n      summary: |\n        Metadata about a supported federated authenticator\n      description: \u003e\n        This API provides the details of a single supported federated\n        authenticator for an identity provider in the the identity server. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getMetaFederatedAuthenticator\n      parameters:\n        - name: federated-authenticator-id\n          in: path\n          description: ID of a federated authenticator\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetaFederatedAuthenticator'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /identity-providers/meta/outbound-provisioning-connectors:\n    get:\n      tags:\n        - Metadata\n      summary: \u003e\n        Metadata about supported outbound provisioning connectors by identity\n        providers in the identity server\n      description: \u003e-\n        This API provides the list of supported federated authenticators for an\n        IdP in the identity server. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getMetaOutboundConnectors\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MetaOutboundConnectorListItem'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/identity-providers/meta/outbound-provisioning-connectors/{outbound-provisioning-connector-id}':\n    get:\n      tags:\n        - Metadata\n      summary: |\n        Metadata about supported outbound provisioning connectors\n      description: \u003e-\n        This API provides the details of a single supported outbound\n        provisioning connector for an IdP in the identity server. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getMetaOutboundConnector\n      parameters:\n        - name: outbound-provisioning-connector-id\n          in: path\n          description: ID of a Outbound Provisioning Connector\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetaOutboundConnector'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/identity-providers/{identity-provider-id}':\n    get:\n      tags:\n        - Identity Providers\n      summary: |\n        Retrieve identity provider by identity provider's ID\n      description: \u003e\n        This API provides the capability to retrieve the identity provider\n        details by using its ID. Furthermore, by specifying the \"Accept :\n        application/xml\" header, it provides the ability to export IdP data as\n        XML. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getIDP\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n        - Identity Providers\n      summary: \u003e\n        Patch an identity provider property by ID. Patch is supported only for\n        key-value pairs\n      description: \u003e\n        This API provides the capability to update an identity provider property\n        using patch request. IdP patch is supported only for key-value pairs. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      operationId: patchIDP\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          headers:\n            Location:\n              description: Location of the updated identity provider.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchRequest'\n        required: true\n    delete:\n      tags:\n        - Identity Providers\n      summary: |\n        Delete an identity provider by using the identity provider's ID. \n      description: \u003e\n        This API provides the capability to delete an identity provider by\n        giving its ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/delete \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_delete\n      operationId: deleteIDP\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/forceQueryParam'\n      responses:\n        '204':\n          description: Successfully Deleted\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/identity-providers/{identity-provider-id}/federated-authenticators':\n    get:\n      tags:\n        - Federated Authenticators\n      summary: |\n        Federated authenticators of an identity provider\n      description: \u003e\n        This API provides a list of federated authenticators enabled for a\n        specific identity provider identified by its ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getFederatedAuthenticators\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FederatedAuthenticatorListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Federated Authenticators\n      summary: |\n        Update Federated authenticators of an identity provider\n      description: \u003e\n        This API updates federated authenticators enabled for a\n        specific identity provider identified by its ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      operationId: updateFederatedAuthenticators\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FederatedAuthenticatorListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FederatedAuthenticatorRequest'\n        description: This represents the federated authenticators to be updated\n        required: true\n  '/identity-providers/{identity-provider-id}/federated-authenticators/{federated-authenticator-id}':\n    get:\n      tags:\n        - Federated Authenticators\n      summary: |\n        Retrieve federated authenticator config of an identity provider\n      description: \u003e\n        This API provides the capability to retrieve the federated authenticator\n        information of an identity provider by giving the federated\n        authenticator's ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getFederatedAuthenticator\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n        - name: federated-authenticator-id\n          in: path\n          description: ID of the federated authenticator.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FederatedAuthenticator'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Federated Authenticators\n      summary: \u003e\n        Update a federated authenticator of an identity provider by using\n        authenticator id\n      description: \u003e\n        This API provides the capability to update an identity provider's\n        federated authenticator config by specifying the authenticator ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      operationId: updateFederatedAuthenticator\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n        - name: federated-authenticator-id\n          in: path\n          description: ID of the federated authenticator.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          headers:\n            Location:\n              description: Location of the updated federated authenticator.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FederatedAuthenticator'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FederatedAuthenticatorPUTRequest'\n        description: This represents the federated authenticator to be updated\n        required: true\n  '/identity-providers/{identity-provider-id}/provisioning':\n    get:\n      tags:\n        - Provisioning\n      summary: |\n        Provisioning entities of an identity provider\n      description: \u003e\n        This API provides a list of available provisioning entities for an\n        identity provider. This includes just-in-time provisioning config and\n        outbound provisioning connectors \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getProvisioningConfig\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisioningResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/identity-providers/{identity-provider-id}/provisioning/outbound-connectors':\n    get:\n      tags:\n        - Provisioning\n      summary: |\n        Outbound provisioning connectors of an identity provider\n      description: \u003e\n        This API provides a list of outbound provisioning connectors enabled for\n        an identity provider. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getOutboundConnectors\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutboundConnectorListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Provisioning\n      summary: |\n        Update outbound provisioning connectors of an identity provider\n      description: \u003e\n        This API provides updates the list of outbound provisioning connectors enabled for\n        an identity provider. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      operationId: updateOutboundConnectors\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutboundConnectorListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OutboundProvisioningRequest'\n        description: This represents the outbound provisioning connectors to be updated\n        required: true\n  '/identity-providers/{identity-provider-id}/provisioning/outbound-connectors/{outbound-provisioning-connector-id}':\n    get:\n      tags:\n        - Provisioning\n      summary: |\n        Retrieve outbound provisioning connector of an identity provider\n      description: \u003e\n        This API provides the capability to retrieve the outbound provisioning\n        connector information of an identity provider by specifying the provisioning\n        connector's ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getOutboundConnector\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n        - name: outbound-provisioning-connector-id\n          in: path\n          description: ID of the outbound provisioning connector.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutboundConnector'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Provisioning\n      summary: |\n        Update an outbound provisioning connector of an identity provider\n      description: \u003e\n        This API provides the capability to update an outbound provisioning\n        connector config of an identity provider by specifying the provisioning\n        connector's ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      operationId: updateOutboundConnector\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n        - name: outbound-provisioning-connector-id\n          in: path\n          description: ID of the outbound provisioning connector.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          headers:\n            Location:\n              description: Location of the updated outbound provisioning connector.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutboundConnector'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OutboundConnectorPUTRequest'\n        description: This represents the outbound provisioning connector to be updated\n        required: true\n  '/identity-providers/{identity-provider-id}/claims':\n    get:\n      tags:\n        - Claims\n      summary: |\n        Claim config of an identity provider\n      description: \u003e\n        This API provides the claim config for an identity provider. This\n        includes idp-to-local claim mappings, claims to be outbound\n        provisioned, userID claim URI, and role claim URI. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getClaimConfig\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Claims'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Claims\n      summary: |\n        Update the claims of an identity provider\n      description: \u003e\n        This API provides the capability to update the claim config of an\n        existing identity provider. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      operationId: updateClaimConfig\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          headers:\n            Location:\n              description: Location of the updated claim config.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Claims'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Claims'\n        description: This represents the claim config to be updated\n        required: true\n  '/identity-providers/{identity-provider-id}/roles':\n    get:\n      tags:\n        - Roles\n      summary: |\n        Role config of an identity provider\n      description: \u003e\n        This API provides the role config of an identity provider. This includes\n        idp-to-local role mappings and/or a list of roles to be\n        outbound-provisioned \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getRoleConfig\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Roles'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Roles\n      summary: |\n        Update the role config of an identity provider\n      description: \u003e\n        This API provides the capability to update the role config of an\n        identity provider by specifying the identity provider ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      operationId: updateRoleConfig\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          headers:\n            Location:\n              description: Location of the updated role config.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Roles'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Roles'\n        description: This represents the role config to be updated.\n        required: true\n  '/identity-providers/{identity-provider-id}/provisioning/jit':\n    get:\n      tags:\n        - Provisioning\n      summary: |\n        Just-In-Time provisioning config of an identity provider\n      description: \u003e\n        This API retrieves the Just-In-Time provisioning config of an identity\n        provider by specifying the identity provider ID. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getJITConfig\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JustInTimeProvisioning'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Provisioning\n      summary: |\n        Update the just-in-time provisioning config of an identity provider\n      description: \u003e\n        This API provides the capability to update the just-in-time provisioning\n        config of an identity provider by specifying the identity provider's ID. This\n        includes the ability to enable/disable JIT provisioning, change\n        provisioning userstore and enable/disable user prompts for username,\n        password and consent. \u003cbr\u003e\n        The schemes supported for JIT provisioning are, \u003cbr\u003e\n            \u003col\u003e\n              \u003cli\u003e\u003ccode\u003ePROVISION_SILENTLY\u003c/code\u003e : Provision without any prompts\u003c/li\u003e\n              \u003cli\u003e\u003ccode\u003ePROMPT_CONSENT\u003c/code\u003e : Prompt user for consent when provisioning\u003c/li\u003e\n              \u003cli\u003e\u003ccode\u003ePROMPT_PASSWORD_CONSENT\u003c/code\u003e : Prompt user for password and consent when provisioning\u003c/li\u003e\n              \u003cli\u003e\u003ccode\u003ePROMPT_USERNAME_PASSWORD_CONSENT\u003c/code\u003e : Prompt user for username, password, and consent when\n                    provisioning\u003c/li\u003e\n            \u003c/ol\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      operationId: updateJITConfig\n      parameters:\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          headers:\n            Location:\n              description: Location of the updated just-in-time provisioning config.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JustInTimeProvisioning'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JustInTimeProvisioning'\n        description: This represents the just-in-time provisioning config to be updated.\n        required: true\n  '/identity-providers/{identity-provider-id}/connected-apps':\n    get:\n      tags:\n        - Connected Apps\n      summary: |\n        Connected applications of an identity provider\n      description: \u003e\n        This API provides the list of applications that use this identity provider for federated authentication/provisioning. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      operationId: getConnectedApps\n      parameters:\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/offsetQueryParam'\n        - name: identity-provider-id\n          in: path\n          description: ID of the identity provider.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectedApps'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /identity-providers/templates:\n    get:\n      tags:\n        - Template management\n      summary: |\n        List identity provider templates\n      description: \u003e\n        This API provides the list of available identity provider templates.\n        \u003cbr\u003e \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e  \n          * /permission/admin/manage/identity/idpmgt/view  \n        \u003cbr\u003e \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e  \n          * internal_idp_view\n      operationId: getIDPTemplates\n      parameters:\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/offsetQueryParam'\n        - $ref: '#/components/parameters/filterQueryParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderTemplateListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags :\n        - Template management\n      summary: |\n        Create a new IdP template\n      description: \u003e\n        This API provides the capability to create a new IdP template.\u003cbr\u003e  \n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e  \n          * /permission/admin/manage/identity/idpmgt/create \u003cbr\u003e  \n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e  \n          * internal_idp_create\n      operationId: addIDPTemplate\n      responses:\n        '201':\n          description: Successful response\n          headers:\n            Location:\n              description: Location of the newly created identity provider template.\n              schema:\n                type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentityProviderTemplate'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/IdentityProviderTemplate'\n        description: This represents the identity provider template to be created.\n        required: true\n  '/identity-providers/templates/{template-id}':\n    get:\n      tags:\n        - Template management\n      summary: |\n        Retrieve identity provider template by ID\n      description: \u003e\n        This API provides the capability to retrieve an identity provider template using its ID. \u003cbr\u003e  \n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e  \n          * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e  \n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e  \n          * internal_idp_view\n      operationId: getIDPTemplate\n      parameters:\n        - name: template-id\n          in: path\n          description: ID of the IdP template.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderTemplate'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IdentityProviderTemplate'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n        - Template management\n      summary: |\n        Update the IdP template of a given template ID.\n      description: \u003e\n        This API provides the capability to update the IdP template of a given template ID. \u003cbr\u003e  \n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e  \n          * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e  \n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e  \n          * internal_idp_update\n      operationId: updateIDPTemplate\n      parameters:\n        - name: template-id\n          in: path\n          description: ID of the IdP template.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully updated\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdentityProviderTemplate'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/IdentityProviderTemplate'\n        description: This represents the identity provider template to be created.\n        required: true\n    delete:\n      tags:\n        - Template management\n      summary: |\n        Delete an IdP template using the template ID.\n      description: \u003e\n        This API provides the capability to delete an IdP template using the template ID.\n        \u003cbr\u003e  \n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e  \n           * /permission/admin/manage/identity/idpmgt/delete \u003cbr\u003e  \n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e  \n           * internal_idp_delete\n      operationId: deleteIDPTemplate\n      parameters:\n        - name: template-id\n          in: path\n          description: ID of the IdP template.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Successfully Deleted\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\nservers:\n  - url: 'https://localhost:9443/t/{tenant-domain}/api/server/v1'\n    variables:\n      tenant-domain:\n        default: carbon.super\ncomponents:\n  parameters:\n    limitQueryParam:\n      in: query\n      name: limit\n      required: false\n      description: |\n        Maximum number of records to return.\n      schema:\n        type: integer\n        format: int32\n    offsetQueryParam:\n      in: query\n      name: offset\n      required: false\n      description: |\n        Number of records to skip for pagination.\n      schema:\n        type: integer\n        format: int32\n    filterQueryParam:\n      in: query\n      name: filter\n      required: false\n      description: \u003e\n        Condition to filter the retrieval of records. Supports 'sw', 'co', 'ew'\n        and 'eq' operations and also complex queries with 'and' operations. E.g.\n        /identity-providers?filter=name+sw+\"google\"+and+isEnabled+eq+\"true\"\n      schema:\n        type: string\n    requiredAttributesQueryParam:\n      in: query\n      name: requiredAttributes\n      required: false\n      description: |\n        Specifies the required parameters in the response.\n      schema:\n        type: string\n    forceQueryParam:\n      in: query\n      name: force\n      required: false\n      description: \u003e\n        Enforces the forceful deletion of an identity provider,\n        federated authenticator or an outbound provisioning connector even though\n        it is referred by a service provider.\n      schema:\n        type: boolean\n        default: false\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth2/authorize'\n          tokenUrl: 'https://localhost:9443/oauth2/token'\n          scopes: {}\n  schemas:\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          example: AAA-00000\n        message:\n          type: string\n          example: Some Error Message\n        description:\n          type: string\n          example: Some Error Description\n        traceId:\n          type: string\n          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\n    MetaProperty:\n      type: object\n      required:\n        - key\n      properties:\n        key:\n          type: string\n          example: 'httpBinding'\n        displayName:\n          type: string\n          example: 'HTTP Binding'\n        description:\n          type: string\n          example: 'Choose the HTTP Binding or decide from incoming request'\n        type:\n          type: string\n          enum:\n            - STRING\n            - BOOLEAN\n            - INTEGER\n          example: STRING\n        displayOrder:\n          type: integer\n          example: 10\n        regex:\n          type: string\n          example: '[a-zA-Z]{3,30}'\n        isMandatory:\n          type: boolean\n          default: false\n          example: false\n        isConfidential:\n          type: boolean\n          default: false\n        options:\n          type: array\n          items:\n            type: string\n          example: ['HTTP-Redirect', 'HTTP-POST', 'As Per Request']\n        defaultValue:\n          type: string\n          example: HTTP-Redirect\n        subProperties:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetaProperty'\n    Property:\n      required:\n        - key\n      type: object\n      properties:\n        key:\n          type: string\n          example: somePropertyKey\n        value:\n          type: string\n          example: somePropertyValue\n    PatchRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/Patch'\n    Patch:\n      description: A JSONPatch as defined by RFC 6902. Patch operation is supported only for root level attributes of\n       an identity provider.\n      required:\n        - operation\n        - path\n      properties:\n        operation:\n          type: string\n          description: The operation to be performed.\n          enum:\n            - ADD\n            - REMOVE\n            - REPLACE\n          example: REPLACE\n        path:\n          type: string\n          description: A JSON-Pointer\n          example: '/homeRealmIdentifier'\n        value:\n          type: string\n          description: The value to be used within the operations.\n          example: 'google'\n    Link:\n      type: object\n      properties:\n        href:\n          type: string\n          description: Path to the target resource.\n          example: \u003e-\n            '/t/carbon.super/api/server/v1/identity-providers/394b8adcce24c64a8a09a8d80abf8c337bd253de'\n        rel:\n          type: string\n          description: Describes how the current context is related to the target resource.\n          example: identity-providers\n      readOnly: true\n    Certificate:\n      type: object\n      properties:\n        certificates:\n          type: array\n          items:\n            type: string\n        jwksUri:\n          type: string\n          example: \"https://localhost:9444/oauth2/jwks\"\n    IdentityProviderPOSTRequest:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: google\n        description:\n          type: string\n          example: \"IdP for Google Federation\"\n        image:\n          type: string\n          example: \"google-logo-url\"\n        templateId:\n          type: string\n          example: '8ea23303-49c0-4253-b81f-82c0fe6fb4a0'\n        isPrimary:\n          type: boolean\n          default: false\n        isFederationHub:\n          type: boolean\n          default: false\n        homeRealmIdentifier:\n          type: string\n          example: localhost\n        certificate:\n          $ref: '#/components/schemas/Certificate'\n        alias:\n          type: string\n          example: 'https://localhost:9444/oauth2/token'\n        idpIssuerName:\n          type: string\n          example: 'https://www.idp.com'\n        claims:\n          $ref: '#/components/schemas/Claims'\n        roles:\n          $ref: '#/components/schemas/Roles'\n        federatedAuthenticators:\n          $ref: '#/components/schemas/FederatedAuthenticatorRequest'\n        provisioning:\n          $ref: '#/components/schemas/ProvisioningRequest'\n    IdentityProviderResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '123e4567-e89b-12d3-a456-556642440000'\n        name:\n          type: string\n          example: google\n        description:\n          type: string\n        templateId:\n          type: string\n          example: '8ea23303-49c0-4253-b81f-82c0fe6fb4a0'\n        isEnabled:\n          type: boolean\n          default: true\n          example: true\n        isPrimary:\n          type: boolean\n          default: false\n        image:\n          type: string\n          example: \"google-logo-url\"\n        isFederationHub:\n          type: boolean\n          example: false\n        homeRealmIdentifier:\n          type: string\n          example: localhost\n        certificate:\n          $ref: '#/components/schemas/Certificate'\n        alias:\n          type: string\n          example: 'https://localhost:9444/oauth2/token'\n        idpIssuerName:\n          type: string\n          example: 'https://www.idp.com'\n        claims:\n          $ref: '#/components/schemas/Claims'\n        roles:\n          $ref: '#/components/schemas/Roles'\n        federatedAuthenticators:\n          $ref: '#/components/schemas/FederatedAuthenticatorListResponse'\n        provisioning:\n          $ref: '#/components/schemas/ProvisioningResponse'\n    IdentityProviderListResponse:\n      type: object\n      properties:\n        totalResults:\n          type: integer\n          example: 10\n        startIndex:\n          type: integer\n          example: 1\n        count:\n          type: integer\n          example: 10\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n          example:\n            [\n                {\n                    \"href\": \"identity-provider?offset=50\u0026limit=10\",\n                    \"rel\": \"next\",\n                },  {\n                    \"href\": \"identity-provider?offset=30\u0026limit=10\",\n                    \"rel\": \"previous\",\n                }\n            ]\n        identityProviders:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentityProviderListItem'\n    IdentityProviderListItem:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 123e4567-e89b-12d3-a456-556642440000\n        name:\n          type: string\n          example: google\n        description:\n          type: string\n          example: identity provider for google federation\n        isEnabled:\n          type: boolean\n          default: true\n          example: true\n        image:\n          type: string\n          example: \"google-logo-url\"\n        isPrimary:\n          type: boolean\n          example: false\n        isFederationHub:\n          type: boolean\n          example: false\n        homeRealmIdentifier:\n          type: string\n          example: localhost\n        certificate:\n          $ref: '#/components/schemas/Certificate'\n        alias:\n          type: string\n          example: 'https://localhost:9444/oauth2/token'\n        claims:\n          $ref: '#/components/schemas/Claims'\n        roles:\n          $ref: '#/components/schemas/Roles'\n        federatedAuthenticators:\n          $ref: '#/components/schemas/FederatedAuthenticatorListResponse'\n        provisioning:\n          $ref: '#/components/schemas/ProvisioningResponse'\n        self:\n          type: string\n          example: /t/carbon.super/api/server/v1/identity-providers/123e4567-e89b-12d3-a456-556642440000\n    MetaFederatedAuthenticatorListItem:\n      type: object\n      properties:\n        authenticatorId:\n          type: string\n          example: U0FNTDJBdXRoZW50aWNhdG9y\n        name:\n          type: string\n          example: SAML2Authenticator\n        tags:\n          type: array\n          items:\n            type: string\n          example: [Social Login,OIDC]\n          readOnly: true\n        self:\n          type: string\n          example: /t/carbon.super/api/server/v1/identity-providers/meta/federated-authenticators/U0FNTFNTT0F1dGhlbnRpY2F0b3I\n    MetaFederatedAuthenticator:\n      type: object\n      properties:\n        authenticatorId:\n          type: string\n          example: U0FNTFNTT0F1dGhlbnRpY2F0b3I\n        name:\n          type: string\n          example: SAML2Authenticator\n        displayName:\n          type: string\n          example: 'SAML2 Web SSO Configuration'\n        tags:\n          type: array\n          items:\n            type: string\n          example: [Social Login,OIDC]\n          readOnly: true\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetaProperty'\n    FederatedAuthenticatorRequest:\n      type: object\n      required:\n        - defaultAuthenticatorId\n      properties:\n        defaultAuthenticatorId:\n          type: string\n          description: \u003e-\n            ID of the federated authenticator to be used as the default\n            authenticator for the respective identity provider.\n          example: U0FNTDJBdXRoZW50aWNhdG9y\n        authenticators:\n          type: array\n          items:\n            $ref: '#/components/schemas/FederatedAuthenticator'\n          description: \u003e-\n            Includes the list of federated authenticators supported by the\n            respective identity provider. This should include the authenticator\n            specified as the defaultAuthenticator.\n    FederatedAuthenticator:\n      type: object\n      required:\n        - authenticatorId\n      properties:\n        authenticatorId:\n          type: string\n          example: U0FNTDJBdXRoZW50aWNhdG9y\n        name:\n          type: string\n          example: \"SAML2Authenticator\"\n          readOnly: true\n        isEnabled:\n          type: boolean\n          default: false\n          example: true\n        isDefault:\n          type: boolean\n          default: false\n        tags:\n          type: array\n          items:\n            type: string\n          example: [Social Login,OIDC]\n          readOnly: true\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    FederatedAuthenticatorPUTRequest:\n      type: object\n      properties:\n        authenticatorId:\n          type: string\n          example:\n          readOnly: true\n        name:\n          type: string\n          example: \"SAML2Authenticator\"\n          readOnly: true\n        isEnabled:\n          type: boolean\n          default: false\n          example: true\n        isDefault:\n          type: boolean\n          default: false\n          example: false\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    FederatedAuthenticatorListResponse:\n      type: object\n      properties:\n        defaultAuthenticatorId:\n          type: string\n          example: U0FNTDJBdXRoZW50aWNhdG9y\n        authenticators:\n          type: array\n          items:\n            $ref: '#/components/schemas/FederatedAuthenticatorListItem'\n    FederatedAuthenticatorListItem:\n      type: object\n      properties:\n        authenticatorId:\n          type: string\n          example: U0FNTDJBdXRoZW50aWNhdG9y\n        name:\n          type: string\n          example: SAML2Authenticator\n        isEnabled:\n          type: boolean\n          default: false\n          example: true\n        tags:\n          type: array\n          items:\n            type: string\n          example: [Social Login,OIDC]\n          readOnly: true\n        self:\n          type: string\n          example: /t/carbon.super/api/server/v1/identity-providers/123e4567-e89b-12d3-a456-556642440000/federated-authenticators/U0FNTDJBdXRoZW50aWNhdG9y\n    MetaOutboundConnectorListItem:\n      type: object\n      properties:\n        connectorId:\n          type: string\n          example: U0NJTQ\n        name:\n          type: string\n          example: SCIM\n        self:\n          type: string\n          example: /t/carbon.super/api/server/v1/identity-providers/meta/outbound-provisioning-connectos/U0NJTQ\n    MetaOutboundConnector:\n      type: object\n      properties:\n        connectorId:\n          type: string\n          example: U0NJTQ\n        name:\n          type: string\n          example: SCIM\n        displayName:\n          type: string\n          example: SCIM Outbound Provisioning Connector\n        blockingEnabled:\n          type: boolean\n          default: false\n        rulesEnabled:\n          type: boolean\n          default: false\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetaProperty'\n    ProvisioningRequest:\n      type: object\n      properties:\n        jit:\n          $ref: '#/components/schemas/JustInTimeProvisioning'\n        outboundConnectors:\n          $ref: '#/components/schemas/OutboundProvisioningRequest'\n    ProvisioningResponse:\n      type: object\n      properties:\n        jit:\n          $ref: '#/components/schemas/JustInTimeProvisioning'\n        outboundConnectors:\n          $ref: '#/components/schemas/OutboundConnectorListResponse'\n    OutboundProvisioningRequest:\n      type: object\n      required:\n        - defaultConnectorId\n      properties:\n        defaultConnectorId:\n          type: string\n          example: U0NJTQ\n        connectors:\n          type: array\n          items:\n            $ref: '#/components/schemas/OutboundConnector'\n    OutboundConnector:\n      type: object\n      required:\n        - connectorId\n      properties:\n        connectorId:\n          type: string\n          example: U0NJTQ\n        name:\n          type: string\n          example: SCIM\n          readOnly: true\n        isEnabled:\n          type: boolean\n          default: false\n          example: true\n        isDefault:\n          type: boolean\n          default: false\n        blockingEnabled:\n          type: boolean\n          default: false\n        rulesEnabled:\n          type: boolean\n          default: false\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    OutboundConnectorPUTRequest:\n      type: object\n      properties:\n        connectorId:\n          type: string\n          example: U0NJTQ\n          readOnly: true\n        name:\n          type: string\n          example: SCIM\n          readOnly: true\n        isEnabled:\n          type: boolean\n          default: false\n          example: true\n        isDefault:\n          type: boolean\n          default: false\n        blockingEnabled:\n          type: boolean\n          default: false\n        rulesEnabled:\n          type: boolean\n          default: false\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    OutboundConnectorListResponse:\n      type: object\n      properties:\n        defaultConnectorId:\n          type: string\n          example: U0NJTQ\n        connectors:\n          type: array\n          items:\n            $ref: '#/components/schemas/OutboundConnectorListItem'\n    OutboundConnectorListItem:\n      type: object\n      properties:\n        connectorId:\n          type: string\n          example: U0NJTQ\n        name:\n          type: string\n          example: SCIM\n          readOnly: true\n        isEnabled:\n          type: boolean\n          default: false\n          example: true\n        self:\n          type: string\n          example: /t/carbon.super/api/server/v1/identity-providers/123e4567-e89b-12d3-a456-556642440000/provisioning/outbound-connectors/U0NJTQ\n    Roles:\n      type: object\n      properties:\n        mappings:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleMapping'\n        outboundProvisioningRoles:\n          type: array\n          items:\n            type: string\n          example:\n            - manager\n            - hr-admin\n    RoleMapping:\n      type: object\n      properties:\n        idpRole:\n          type: string\n          example: google-manager\n        localRole:\n          type: string\n          example: manager\n    Claims:\n      type: object\n      properties:\n        userIdClaim:\n          $ref: '#/components/schemas/Claim'\n        roleClaim:\n          $ref: '#/components/schemas/Claim'\n        mappings:\n          type: array\n          items:\n            $ref: '#/components/schemas/ClaimMapping'\n        provisioningClaims:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProvisioningClaim'\n    ProvisioningClaim:\n      type: object\n      properties:\n        claim:\n          $ref: '#/components/schemas/Claim'\n        defaultValue:\n          type: string\n          example: sathya\n    ClaimMapping:\n      type: object\n      properties:\n        idpClaim:\n          type: string\n          example: country\n        localClaim:\n          $ref: '#/components/schemas/Claim'\n    Claim:\n      type: object\n      required:\n        - uri\n      properties:\n        id:\n          type: string\n          example: aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ\n          readOnly: true\n        uri:\n          type: string\n          example: 'http://wso2.org/claims/username'\n        displayName:\n          type: string\n          example: Username\n          readOnly: true\n    JustInTimeProvisioning:\n      type: object\n      required:\n        - isEnabled\n      properties:\n        isEnabled:\n          type: boolean\n          default: false\n          example: true\n        scheme:\n          type: string\n          enum:\n            - PROMPT_USERNAME_PASSWORD_CONSENT\n            - PROMPT_PASSWORD_CONSENT\n            - PROMPT_CONSENT\n            - PROVISION_SILENTLY\n          default: PROVISION_SILENTLY\n        userstore:\n          type: string\n          default: PRIMARY\n          example: PRIMARY\n    ConnectedApps:\n      type: object\n      properties:\n        totalResults:\n          type: integer\n          example: 10\n        startIndex:\n          type: integer\n          example: 1\n        count:\n          type: integer\n          example: 10\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n          example:\n            [\n                {\n                    \"href\": \"identity-provider/123e4567-e89b-12d3-a456-556642440000/connected-apps?offset=50\u0026limit=10\",\n                    \"rel\": \"next\"\n                },  {\n                    \"href\": \"identity-provider/123e4567-e89b-12d3-a456-556642440000/connected-apps?offset=30\u0026limit=10\",\n                    \"rel\": \"previous\"\n                }\n            ]\n        connectedApps:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConnectedApp'\n    ConnectedApp:\n      type: object\n      properties:\n        appId:\n          type: string\n          example: app-id\n        self:\n          type: string\n          example: connected-app-url\n    IdentityProviderTemplateListResponse:\n      type: object\n      properties:\n        totalResults:\n          type: integer\n          example: 10\n        startIndex:\n          type: integer\n          example: 1\n        count:\n          type: integer\n          example: 10\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n          example:\n            [\n            {\n              \"href\": \"identity-provider/templates?offset=50\u0026limit=10\",\n              \"rel\": \"next\",\n            },  {\n              \"href\": \"identity-provider/templates?offset=30\u0026limit=10\",\n              \"rel\": \"previous\",\n            }\n            ]\n        templates:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentityProviderTemplateListItem'\n    IdentityProviderTemplateListItem:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: 123e4567-e89b-12d3-a456-556642440000\n        name:\n          type: string\n          example: 'google'\n        description:\n          type: string\n          example: 'Identity provider template for google federation'\n        image:\n          type: string\n          example: 'google-logo-url'\n        category:\n          type: string\n          enum: [DEFAULT, CUSTOM]\n          example: 'DEFAULT'\n        displayOrder:\n          type: integer\n          example: 10\n        services:\n          type: array\n          items:\n            $ref: '#/components/schemas/Service'\n        self:\n          type: string\n          example: '/t/carbon.super/api/server/v1/identity-providers/templates/123e4567-e89b-12d3-a456-556642440000'\n    IdentityProviderTemplate:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: 123e4567-e89b-12d3-a456-556642440000\n        name:\n          type: string\n          example: google\n        description:\n          type: string\n          example: 'Google federated connector'\n        image:\n          type: string\n          example: 'google-logo-url'\n        category:\n          type: string\n          enum: [DEFAULT, CUSTOM]\n          example: 'DEFAULT'\n        displayOrder:\n          type: integer\n          example: 10\n        idp:\n          $ref : '#/components/schemas/IdentityProviderPOSTRequest'\n      required:\n        - name\n        - idp\n    Service:\n      type: string\n      example: 'Authentication'\n",
			"canonicalURL": "/github.com/wso2/identity-api-server@1c81f70117e6130228ac537f8526ad3655061b43/-/blob/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/resources/idp.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-server/blob/1c81f70117e6130228ac537f8526ad3655061b43/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/resources/idp.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/identity-providers/meta/federated-authenticators\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}