{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-monitoring-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-monitoring-v1-swagger.yaml",
			"byteSize": 19709,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: Manages your Stackdriver Monitoring data and configurations. Most projects\n    must be associated with a Stackdriver account, with a few exceptions as\n    noted on the individual method pages.\n  title: Stackdriver Monitoring\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - monitoring\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.18\n      format: google\n      url: https://monitoring.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: false\n  x-providerName: googleapis.com\n  x-serviceName: monitoring\nexternalDocs:\n  url: https://cloud.google.com/monitoring/api/\ntags:\n  - name: operations\npaths:\n  \"/v1/{name}\":\n    delete:\n      description: Deletes a long-running operation. This method indicates that the client\n        is no longer interested in the operation result. It does not cancel the\n        operation. If the server doesn't support this method, it returns\n        google.rpc.Code.UNIMPLEMENTED.\n      operationId: monitoring.operations.delete\n      parameters:\n        - description: The name of the operation resource to be deleted.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      tags:\n        - operations\n    get:\n      description: Gets the latest state of a long-running operation. Clients can use this\n        method to poll the operation result at intervals as recommended by the\n        API service.\n      operationId: monitoring.operations.get\n      parameters:\n        - description: The name of the operation resource.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      tags:\n        - operations\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{name}:cancel\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: Starts asynchronous cancellation on a long-running operation. The server\n        makes a best effort to cancel the operation, but success is not\n        guaranteed. If the server doesn't support this method, it returns\n        google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation\n        or other methods to check whether the cancellation succeeded or whether\n        the operation completed despite cancellation. On successful\n        cancellation, the operation is not deleted; instead, it becomes an\n        operation with an Operation.error value with a google.rpc.Status.code of\n        1, corresponding to Code.CANCELLED.\n      operationId: monitoring.operations.cancel\n      parameters:\n        - description: The name of the operation resource to be cancelled.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CancelOperationRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      tags:\n        - operations\nservers:\n  - url: https://monitoring.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  schemas:\n    CancelOperationRequest:\n      description: The request message for Operations.CancelOperation.\n      properties: {}\n      type: object\n    DroppedLabels:\n      description: A set of (label, value) pairs which were dropped during aggregation,\n        attached to google.api.Distribution.Exemplars in google.api.Distribution\n        values during aggregation.These values are used in combination with the\n        label values that remain on the aggregated Distribution timeseries to\n        construct the full label set for the exemplar values. The resulting full\n        label set may be used to identify the specific task/job/instance (for\n        example) which may be contributing to a long-tail, while allowing the\n        storage savings of only storing aggregated distribution values for a\n        large group.Note that there are no guarantees on ordering of the labels\n        from exemplar-to-exemplar and from distribution-to-distribution in the\n        same stream, and there may be duplicates. It is up to clients to resolve\n        any ambiguities.\n      properties:\n        label:\n          additionalProperties:\n            type: string\n          description: Map from label to its value, for all labels dropped in any\n            aggregation.\n          type: object\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n        empty messages in your APIs. A typical example is to use it as the\n        request or the response type of an API method. For instance:\n\n        service Foo {\n          rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n        }\n\n        The JSON representation for Empty is empty JSON object {}.\n      properties: {}\n      type: object\n    Field:\n      description: A single field of a message type.\n      properties:\n        cardinality:\n          description: The field cardinality.\n          enum:\n            - CARDINALITY_UNKNOWN\n            - CARDINALITY_OPTIONAL\n            - CARDINALITY_REQUIRED\n            - CARDINALITY_REPEATED\n          type: string\n        defaultValue:\n          description: The string value of the default value of this field. Proto2 syntax\n            only.\n          type: string\n        jsonName:\n          description: The field JSON name.\n          type: string\n        kind:\n          description: The field type.\n          enum:\n            - TYPE_UNKNOWN\n            - TYPE_DOUBLE\n            - TYPE_FLOAT\n            - TYPE_INT64\n            - TYPE_UINT64\n            - TYPE_INT32\n            - TYPE_FIXED64\n            - TYPE_FIXED32\n            - TYPE_BOOL\n            - TYPE_STRING\n            - TYPE_GROUP\n            - TYPE_MESSAGE\n            - TYPE_BYTES\n            - TYPE_UINT32\n            - TYPE_ENUM\n            - TYPE_SFIXED32\n            - TYPE_SFIXED64\n            - TYPE_SINT32\n            - TYPE_SINT64\n          type: string\n        name:\n          description: The field name.\n          type: string\n        number:\n          description: The field number.\n          format: int32\n          type: integer\n        oneofIndex:\n          description: The index of the field type in Type.oneofs, for message or\n            enumeration types. The first type has index 1; zero means the type\n            is not in the list.\n          format: int32\n          type: integer\n        options:\n          description: The protocol buffer options.\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n        packed:\n          description: Whether to use alternative packed wire representation.\n          type: boolean\n        typeUrl:\n          description: 'The field type URL, without the scheme, for message or enumeration\n            types. Example: \"type.googleapis.com/google.protobuf.Timestamp\".'\n          type: string\n      type: object\n    ListOperationsResponse:\n      description: The response message for Operations.ListOperations.\n      properties:\n        nextPageToken:\n          description: The standard List next-page token.\n          type: string\n        operations:\n          description: A list of operations that matches the specified filter in the\n            request.\n          items:\n            $ref: \"#/components/schemas/Operation\"\n          type: array\n      type: object\n    Operation:\n      description: This resource represents a long-running operation that is the result of\n        a network API call.\n      properties:\n        done:\n          description: If the value is false, it means the operation is still in progress.\n            If true, the operation is completed, and either error or response is\n            available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: Service-specific metadata associated with the operation. It\n            typically contains progress information and common metadata such as\n            create time. Some services might not provide such metadata. Any\n            method that returns a long-running operation should document the\n            metadata type, if any.\n          type: object\n        name:\n          description: The server-assigned name, which is only unique within the same\n            service that originally returns it. If you use the default HTTP\n            mapping, the name should have the format of\n            operations/some/unique/name.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: The normal response of the operation in case of success. If the\n            original method returns no data on success, such as Delete, the\n            response is google.protobuf.Empty. If the original method is\n            standard Get/Create/Update, the response should be the resource. For\n            other methods, the response should have the type XxxResponse, where\n            Xxx is the original method name. For example, if the original method\n            name is TakeSnapshot(), the inferred response type is\n            TakeSnapshotResponse.\n          type: object\n      type: object\n    Option:\n      description: A protocol buffer option, which can be attached to a message, field,\n        enumeration, etc.\n      properties:\n        name:\n          description: The option's name. For protobuf built-in options (options defined in\n            descriptor.proto), this is the short name. For example, \"map_entry\".\n            For custom options, it should be the fully-qualified name. For\n            example, \"google.api.http\".\n          type: string\n        value:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: The option's value packed in an Any message. If the value is a\n            primitive, the corresponding wrapper type defined in\n            google/protobuf/wrappers.proto should be used. If the value is an\n            enum, it should be stored as an int32 value using the\n            google.protobuf.Int32Value type.\n          type: object\n      type: object\n    SourceContext:\n      description: SourceContext represents information about the source of a protobuf\n        element, like the file in which it is defined.\n      properties:\n        fileName:\n          description: 'The path-qualified name of the .proto file that contained the\n            associated protobuf element. For example:\n            \"google/protobuf/source_context.proto\".'\n          type: string\n      type: object\n    SpanContext:\n      description: \"The context of a span, attached to google.api.Distribution.Exemplars in\n        google.api.Distribution values during aggregation.It contains the name\n        of a span with\n        format:  projects/PROJECT_ID/traces/TRACE_ID/spans/SPAN_ID\"\n      properties:\n        spanName:\n          description: \u003e-\n            The resource name of the span in the following format:\n\n            projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/[SPAN_ID]\n\n            TRACE_ID is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array.SPAN_ID is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.\n          type: string\n      type: object\n    Status:\n      description: \u003e-\n        The Status type defines a logical error model that is suitable for\n        different programming environments, including REST APIs and RPC APIs. It\n        is used by gRPC (https://github.com/grpc). The error model is designed\n        to be:\n\n        Simple to use and understand for most users\n\n        Flexible enough to meet unexpected needsOverviewThe Status message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers understand and resolve the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package google.rpc that can be used for common error conditions.Language mappingThe Status message is the logical representation of the error model, but it is not necessarily the actual wire format. When the Status message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.Other usesThe error model and the Status message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.Example uses of this error model include:\n\n        Partial errors. If a service needs to return partial errors to the client, it may embed the Status in the normal response to indicate the partial errors.\n\n        Workflow errors. A typical workflow has multiple steps. Each step may have a Status message for error reporting.\n\n        Batch operations. If a client uses batch request and batch response, the Status message should be used directly inside batch response, one for each error sub-response.\n\n        Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the Status message.\n\n        Logging. If some API errors are stored in logs, the message Status could be used directly after any stripping needed for security/privacy reasons.\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a common\n            set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    Type:\n      description: A protocol buffer message type.\n      properties:\n        fields:\n          description: The list of fields.\n          items:\n            $ref: \"#/components/schemas/Field\"\n          type: array\n        name:\n          description: The fully qualified message name.\n          type: string\n        oneofs:\n          description: The list of types appearing in oneof definitions in this type.\n          items:\n            type: string\n          type: array\n        options:\n          description: The protocol buffer options.\n          items:\n            $ref: \"#/components/schemas/Option\"\n          type: array\n        sourceContext:\n          $ref: \"#/components/schemas/SourceContext\"\n        syntax:\n          description: The source syntax.\n          enum:\n            - SYNTAX_PROTO2\n            - SYNTAX_PROTO3\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-monitoring-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-monitoring-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/{name}:cancel\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}