{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/XeroAPI/Xero-OpenAPI"
		},
		"file": {
			"name": "xero-finance.yaml",
			"size": 0,
			"path": "xero-finance.yaml",
			"byteSize": 100105,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"2.23.0\"\n  title: Xero Finance API\n  description: The Finance API is a collection of endpoints which customers can use in the course of a loan application, which may assist lenders to gain the confidence they need to provide capital.\n  termsOfService: \"https://developer.xero.com/xero-developer-platform-terms-conditions/\"\n  contact:\n    name: \"Xero Platform Team\"\n    email: \"api@xero.com\"\n    url: \"https://developer.xero.com\"\n  license:\n    name: MIT \n    url: 'https://github.com/XeroAPI/Xero-OpenAPI/blob/master/LICENSE'\nservers:\n  - description: Xero API servers\n    url: https://api.xero.com/finance.xro/1.0\npaths:\n  /CashValidation:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [finance.cashvalidation.read]\n      tags:\n        - Finance\n      summary: Get cash validation\n      operationId: getCashValidation\n      description: Summarizes the total cash position for each account for an org\n      parameters: \n        - name: balanceDate\n          x-snake: balance_date\n          in: query\n          description: \"date, yyyy-MM-dd \\r\\n\\r\\nIf no parameter is provided, the current\n          date will be used.\\r\\n\\r\\nThe ‘balance date’ will return transactions based\n          on the accounting date entered by the user.  Transactions before the balanceDate\n          will be included.\\r\\nThe user has discretion as to which accounting period\n          the transaction relates to.\\r\\n\\r\\nThe ‘balance date’  will control the\n          latest maximum date of transactions included in the aggregate numbers.  Balance\n          date does not affect the CurrentStatement object, as this will always return\n          the most recent statement before asAtSystemDate (if specified)\"\n          schema: \n            type: string\n          example: \"2021-09-15\"\n        - name: asAtSystemDate\n          x-snake: as_at_system_date\n          in: query\n          description: \"date, yyyy-MM-dd \\r\\n\\r\\nIf no parameter is provided, the current\n          date will be used.\\r\\n\\r\\nThe ‘as at’ date will return transactions based\n          on the  creation date.  It reflects the date the transactions were entered\n          into Xero, not the accounting date.\\r\\nThe ‘as at’ date can not be overridden\n          by the user.  This can be used to estimate a ‘historical frequency of reconciliation’.\\r\\n\\r\\nThe\n          ‘as at’ date will affect the current statement in the response, as any candidate\n          statements created after this date will be filtered out.  Thus the current\n          statement returned will be the most recent statement prior to the specified\n          ‘as at’ date.  Be aware that neither the begin date, nor the balance date,\n          will affect the current statement.\\r\\n\\r\\nNote;  information is only presented\n          when system architecture allows, meaning historical cash validation information\n          will be an estimate. In addition, delete events are not aware of the ‘as\n          at’ functionality in this endpoint, meaning that transactions deleted at\n          the time the API is accessed will be considered to always have been deleted.\"\n          schema: \n            type: string\n          example: \"2021-09-15\"\n        - name: beginDate\n          x-snake: begin_date\n          in: query\n          description: \"date, yyyy-MM-dd \\r\\n\\r\\nIf no parameter is provided, the aggregate\n          results will be drawn from the user’s total history.\\r\\n\\r\\nThe ‘begin date’\n          will return transactions based on the accounting date entered by the user.\n          Transactions after the beginDate will be included.\\r\\nThe user has discretion\n          as to which accounting period the transaction relates to.\"\n          schema: \n            type: string\n          example: \"2021-09-15\"\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CashValidationResponse\"\n              example: \n                - accountId: 73151de8-3676-4887-a021-edec960dd537\n                  statementBalance:\n                    value: 100\n                    type: DEBIT\n                  statementBalanceDate: '2021-03-01'\n                  bankStatement:\n                    statementLines:\n                      unreconciledAmountPos: 4577\n                      unreconciledAmountNeg: -2367\n                      unreconciledLines: 8\n                      avgDaysUnreconciledPos: 112.265531\n                      avgDaysUnreconciledNeg: 149.298992\n                      earliestUnreconciledTransaction: '2019-03-01'\n                      latestUnreconciledTransaction: '2021-03-01'\n                      deletedAmount: 50\n                      totalAmount: 189\n                      dataSource:\n                        directBankFeed: 0\n                        indirectBankFeed: 0\n                        fileUpload: 300\n                        manual: -188\n                        directBankFeedPos: 0\n                        indirectBankFeedPos: 0\n                        fileUploadPos: 2223\n                        manualPos: 0\n                        directBankFeedNeg: 0\n                        indirectBankFeedNeg: 0\n                        fileUploadNeg: -1890\n                        manualNeg: -500\n                        otherPos: 0\n                        otherNeg: 0\n                        other: 100\n                      earliestReconciledTransaction: '2019-03-01'\n                      latestReconciledTransaction: '2020-03-01'\n                      reconciledAmountPos: 0\n                      reconciledAmountNeg: -288\n                      reconciledLines: 3\n                      totalAmountPos: 2245\n                      totalAmountNeg: -1995\n                    currentStatement:\n                      startDate: '2021-03-01'\n                      endDate: '2021-03-01'\n                      startBalance: 0\n                      endBalance: 0\n                      importedDateTimeUtc: '2021-03-09T05:22:14.3'\n                      importSourceType: Manual\n                  cashAccount:\n                    unreconciledAmountPos: 1440\n                    unreconciledAmountNeg: -1000\n                    startingBalance: 0\n                    accountBalance: 0\n                    balanceCurrency: NZD\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: invalid-request\n                title: InvalidRequest\n                status: 400\n                detail: 'Invalid BalanceDate: ''2020-01'''\n  \"/AccountingActivities/AccountUsage\":\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n      - OAuth2: [finance.accountingactivity.read]\n      tags:\n      - Finance\n      summary: Get account usage\n      operationId: getAccountingActivityAccountUsage\n      description: 'A summary of how each account is being transacted on exposing the level of detail and amounts attributable to manual adjustments.'\n      parameters:\n      - name: startMonth\n        x-snake: start_month\n        in: query\n        description: \"date, yyyy-MM \\r\\n            \\r\\nIf no parameter is provided,\n          the month 12 months prior to the end month will be used.\\r\\n            \\r\\nAccount\n          usage for up to 12 months from this date will be returned.\"\n        schema:\n          type: string\n        example: \"2020-09\"\n      - name: endMonth\n        x-snake: end_month\n        in: query\n        description: \"date, yyyy-MM \\r\\n            \\r\\nIf no parameter is provided,\n          the current month will be used.\\r\\n            \\r\\nAccount usage for up\n          to 12 months prior to this date will be returned.\"\n        schema:\n          type: string\n        example: \"2021-09\"\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountUsageResponse\"\n              example:\n                organisationId: 73151de8-3676-4887-a021-edec960dd537\n                startMonth: 2010-03\n                endMonth: 2010-03\n                accountUsage:\n                - month: 2010-03\n                  accountId: 12345678-876b-4eff-901d-e8f4d517453e\n                  currencyCode: CURR/NZD\n                  totalReceived: 0\n                  countReceived: 0\n                  totalPaid: 0\n                  countPaid: 0\n                  totalManualJournal: 0\n                  countManualJournal: 0\n                  accountName: ACME Drawings\n                  reportingCode: ABC\n                  reportingCodeName: ABC funds\n                - month: 2010-03\n                  accountId: 12345678-9d21-43bc-b20e-d96a370cf31e\n                  currencyCode: CURR/NZD\n                  totalReceived: 0\n                  countReceived: 0\n                  totalPaid: 0\n                  countPaid: 0\n                  totalManualJournal: 0\n                  countManualJournal: 0\n                  accountName: Electricity \u0026 Heating\n                  reportingCode: ELC\n                  reportingCodeName: Expense\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: invalid-request\n                title: InvalidRequest\n                status: 400\n                detail: Organisation 73151de8-3676-4887-a021-edec960dd537 does not\n                  exist\n  \"/AccountingActivities/LockHistory\":\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n      - OAuth2: [finance.accountingactivity.read]\n      tags:\n      - Finance\n      operationId: getAccountingActivityLockHistory\n      description: 'Provides a history of locking of accounting books. Locking may be an indicator of good accounting practices that could reduce the risk of changes to accounting records in prior periods.'\n      summary: Get lock history\n      parameters:\n      - name: endDate\n        x-snake: end_date\n        in: query\n        description: \"date, yyyy-MM-dd \\r\\n            \\r\\nIf no parameter is provided,\n          the current date will be used.\\r\\n            \\r\\nAny changes to hard or soft lock dates that were made within the period up to 12 months before this date will be returned.\\r\\n            \\r\\nPlease be aware that there may be a delay of up to 3 days before a change is visible from this API.\"\n        schema:\n          type: string\n        example: \"2021-09-15\"\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LockHistoryResponse\"\n              example:\n                organisationId: 73151de8-3676-4887-a021-edec960dd537\n                endDate: '2019-06-20'\n                lockDates:\n                - hardLockDate: '2019-01-20'\n                  softLockDate: '2019-01-20'\n                  updatedDateUtc: '2019-01-20 10:50:03'\n                - hardLockDate: '2019-01-21'\n                  softLockDate: '2019-01-21'\n                  updatedDateUtc: '2019-01-21 10:59:33'\n                - hardLockDate: '2019-01-22'\n                  softLockDate: '2019-01-22'\n                  updatedDateUtc: '2019-01-22 10:24:12'\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: invalid-request\n                title: InvalidRequest\n                status: 400\n                detail: Organisation 73151de8-3676-4887-a021-edec960dd537 does not\n                  exist\n  \"/AccountingActivities/ReportHistory\":\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n      - OAuth2: [finance.accountingactivity.read]\n      tags:\n      - Finance\n      operationId: getAccountingActivityReportHistory\n      description: 'For a specified organisation, provides a summary of all the reports published within a given period, which may be an indicator for good business management and oversight.'\n      summary: Get report history\n      parameters:\n      - name: endDate\n        x-snake: end_date\n        in: query\n        description: \"date, yyyy-MM-dd \\r\\n            \\r\\nIf no parameter is provided,\n          the current date will be used.\\r\\n            \\r\\nAny reports that were published within the period up to 12 months before this date will be returned.\\r\\n            \\r\\nPlease be aware that there may be a delay of up to 3 days before a published report is visible from this API.\"\n        schema:\n          type: string\n        example: \"2021-09-15\"\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReportHistoryResponse\"\n              example:\n                organisationId: 73151de8-3676-4887-a021-edec960dd537\n                endDate: '2019-10-20'\n                reports:\n                - reportName: VATReturn\n                  reportDateText: April 2019 to June 2019\n                  publishedDateUtc: '2019-09-23T00:30:17.407+00:00'\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: invalid-request\n                title: InvalidRequest\n                status: 400\n                detail: Organisation 73151de8-3676-4887-a021-edec960dd537 does not\n                  exist\n  \"/AccountingActivities/UserActivities\":\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n      - OAuth2: [finance.accountingactivity.read]\n      tags:\n      - Finance\n      operationId: getAccountingActivityUserActivities\n      description: 'For a specified organisation, provides a list of all the users registered, and a history of their accounting transactions. Also identifies the existence of an external accounting advisor and the level of interaction.'\n      summary: Get user activities\n      parameters:\n      - name: dataMonth\n        x-snake: data_month\n        in: query\n        description: \"date, yyyy-MM \\r\\n            \\r\\nThe specified month must be complete (in the past); The current month cannot be specified since it is not complete.\\r\\n            \\r\\nIf no parameter is provided,\n          the month immediately previous to the current month will be used.\\r\\n            \\r\\nAny user activities occurring within the specified month will be returned.\\r\\n            \\r\\nPlease be aware that there may be a delay of up to 3 days before a user activity is visible from this API.\"\n        schema:\n          type: string\n        example: \"2021-09\"\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserActivitiesResponse\"\n              example:\n                organisationId: 73151de8-3676-4887-a021-edec960dd537\n                dataMonth: 2020-01\n                users:\n                - userId: bf3108f9-7449-4b2d-a1d1-41342dc1c991\n                  userCreatedDateUtc: '2016-04-15T04:01:42.8'\n                  lastLoginDateUtc: '2020-02-12T23:59:06.42'\n                  isExternalPartner: true\n                  hasAccountantRole: true\n                  monthPeriod: 2020-01\n                  numberOfLogins: 0\n                  numberOfDocumentsCreated: 10\n                  netValueDocumentsCreated: -100.99\n                  absoluteValueDocumentsCreated: 100.99\n                  attachedPractices:\n                  - xeroPartnerSince: 2017\n                    tier: Silver\n                    location: New Zealand\n                    organisationCount: 40\n                    staffCertified: true\n                  historyRecords:\n                  - changes: Approved\n                    dateUTCString: '2008-12-19T01:37:59'\n                    dateUTC: '2008-12-18T14:37:59.057+00:00'\n                    user: John Doe\n                    details: ''\n                  - changes: Created\n                    dateUTCString: '2008-12-19T01:37:58'\n                    dateUTC: '2008-12-18T14:37:58.057+00:00'\n                    user: John Doe\n                    details: ''\n                  - changes: Reconciled\n                    dateUTCString: '2008-12-20T22:50:55'\n                    dateUTC: '2008-12-20T11:50:55.09+00:00'\n                    user: John Doe\n                    details: Debit payment to ACME Banking Corporation on 10 October\n                      2008 for -10.00\n                  - changes: Created\n                    dateUTCString: '2008-12-20T16:44:19'\n                    dateUTC: '2008-12-20T05:44:19.467+00:00'\n                    user: John Doe\n                    details: ''\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: invalid-request\n                title: InvalidRequest\n                status: 400\n                detail: Organisation 73151de8-3676-4887-a021-edec960dd537 does not\n                  exist\n  \"/FinancialStatements/BalanceSheet\":\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [finance.statements.read]\n      tags:\n        - Finance\n      operationId: getFinancialStatementBalanceSheet\n      summary: \"Get Balance Sheet report\"\n      description: \"The balance sheet report is a standard financial report which describes the financial position of an organisation at a point in time.\"\n      parameters:\n        - name: \"balanceDate\"\n          x-snake: balance_date\n          in: \"query\"\n          description: \"Specifies the date for balance sheet report.\\r\\n\\r\\nFormat yyyy-MM-dd. If no parameter is provided, the current date will be used.\"\n          schema:\n            type: string\n          example: \"2020-06-30\"\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BalanceSheetResponse\"\n              example:\n                balanceDate: \"2021-05-12\"\n                asset:\n                  accountTypes:\n                    - accountType: \"INVENTORY\"\n                      accounts:\n                        - code: \"630\"\n                          accountID: \"abcdeabc-80bb-47f5-9418-d1fc2241b838\"\n                          name: \"Inventory\"\n                          reportingCode: \"ASS.CUR.INY\"\n                          total: 3\n                      total: 3\n                    - accountType: \"CURRENT\"\n                      accounts:\n                        - code: \"610\"\n                          accountID: \"abcdeabc-b4d1-45a5-82f7-19deda692a31\"\n                          name: \"Accounts Receivable\"\n                          reportingCode: \"ASS.CUR.REC.TRA\"\n                          total: 100\n                      total: 100\n                    - accountType: \"BANK\"\n                      accounts:\n                        - accountID: \"abcdeabc-3a6d-4c53-ba82-ea1c92d02ef4\"\n                          name: \"Buz Acc\"\n                          reportingCode: \"ASS\"\n                          total: -42.3\n                      total: -42.3\n                  total: 60.7\n                liability:\n                  accountTypes:\n                    - accountType: \"CURRLIAB\"\n                      accounts:\n                        - code: \"820\"\n                          accountID: \"abcdeabc-40f7-49f1-ad89-1930c1366e5b\"\n                          name: \"GST\"\n                          reportingCode: \"LIA.CUR.TAX.GST\"\n                          total: 1.59\n                        - code: \"860\"\n                          accountID: \"abcdeabc-2877-4c00-be7d-475b1ded30d7\"\n                          name: \"Rounding\"\n                          reportingCode: \"LIA.CUR\"\n                          total: -0.1\n                        - code: \"800\"\n                          accountID: \"abcdeabc-80ba-4b58-8d72-f8e9ca0f2f00\"\n                          name: \"Accounts Payable\"\n                          reportingCode: \"LIA.CUR.PAY.TRA\"\n                          total: 44.4\n                      total: 45.89\n                  total: 45.89\n                equity:\n                  accountTypes:\n                    - accountType: \"EQUITY\"\n                      accounts:\n                        - accountID: \"00000000-0000-0000-0000-000000000000\"\n                          name: \"Current Year Earnings\"\n                          total: 14.81\n                      total: 14.81\n                  total: 14.81\n        400:\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: \"invalid-request\"\n                title: \"InvalidRequest\"\n                status: 400\n                detail: \"Organisation xxx does not exist\"\n        503:\n          description: \"Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: \"service-unavailable\"\n                title: \"ServiceUnavailable\"\n                status: 503\n                detail: \"Cannot process org xxx at this time. Apologies for inconvenience.\"\n  \"/FinancialStatements/Cashflow\":\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [finance.statements.read]\n      tags:\n        - Finance\n      operationId: getFinancialStatementCashflow\n      summary: \"Get Cash flow report\"\n      description: \"The statement of cash flows - direct method, provides the year to date changes in operating, financing and investing cash flow activities for an organisation. Cashflow statement is not available in US region at this stage.\"\n      parameters:\n        - name: \"startDate\"\n          x-snake: start_date\n          in: \"query\"\n          description: \"Date e.g. yyyy-MM-dd\\r\\n\\r\\nSpecifies the start date for cash flow report.\\r\\n\\r\\nIf no parameter is provided, the date of 12 months before the end date will be used.\"\n          schema:\n            type: string\n          example: \"2020-09-15\"\n        - name: \"endDate\"\n          x-snake: end_date\n          in: \"query\"\n          description: \"Date e.g. yyyy-MM-dd\\r\\n\\r\\nSpecifies the end date for cash flow report.\\r\\n\\r\\nIf no parameter is provided, the current date will be used.\"\n          schema:\n            type: string\n          example: \"2021-09-15\"\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CashflowResponse\"\n              example:\n                startDate: \"2018-07-01\"\n                endDate: \"2019-06-30\"\n                cashBalance:\n                  openingCashBalance: 5000\n                  closingCashBalance: -50000\n                  netCashMovement: -55000\n                cashflowActivities:\n                  - name: \"Operating Activities\"\n                    total: -41000\n                    cashflowTypes:\n                      - name: \"Receipts from customers\"\n                        total: 34000\n                        accounts:\n                          - accountId: \"abcdefab-4d1e-4d1a-9e4c-68b2c2a278e2\"\n                            accountType: \"REVENUE\"\n                            accountClass: \"REVENUE\"\n                            code: \"455\"\n                            name: \"Cellar Door - Till Variance\"\n                            reportingCode: \"EXP\"\n                            total: -1000\n                          - accountId: \"abcdefab-4d1e-4d1a-9e4c-68b2c2a278e2\"\n                            accountType: \"CURRENT\"\n                            accountClass: \"ASSET\"\n                            code: \"123\"\n                            name: \"Loan - Darleen's\"\n                            reportingCode: \"ASS\"\n                            total: 35000\n                      - name: \"Payments to suppliers and employees\"\n                        total: -75000\n                        accounts:\n                          - accountId: \"abcdefab-4d1e-4d1a-9e4c-68b2c2a278e2\"\n                            accountType: \"CURRENT\"\n                            accountClass: \"ASSET\"\n                            code: \"123\"\n                            name: \"Loan - Darleen's\"\n                            reportingCode: \"ASS\"\n                            total: -75000\n                  - name: \"Investing Activities\"\n                    total: -35000\n                    cashflowTypes:\n                      - name: \"Payment for property, plant and equipment\"\n                        total: -36000\n                        accounts:\n                          - accountId: \"abcdefab-4d1e-4d1a-9e4c-68b2c2a278e2\"\n                            accountType: \"FIXED\"\n                            accountClass: \"ASSET\"\n                            code: \"138\"\n                            name: \"Motor Vehicles at Cost\"\n                            reportingCode: \"ASS\"\n                            total: -1000\n                          - accountId: \"abcdefab-5353-9d4b-7cad-51b2c2a2754a\"\n                            accountType: \"FIXED\"\n                            accountClass: \"ASSET\"\n                            code: \"140\"\n                            name: \"Equipment at cost\"\n                            reportingCode: \"ASS\"\n                            total: -35000\n                      - name: \"Proceeds from sale of property, plant and equipment\"\n                        total: 1000\n                        accounts:\n                          - accountId: \"abcdefab-4d1e-4d1a-9e4c-68b2c2a278e2\"\n                            accountType: \"FIXED\"\n                            accountClass: \"ASSET\"\n                            code: \"138\"\n                            name: \"Motor Vehicles at Cost\"\n                            reportingCode: \"ASS\"\n                            total: 1000\n                          - accountId: \"abcdefab-5353-9d4b-7cad-51b2c2a2754a\"\n                            accountType: \"FIXED\"\n                            accountClass: \"ASSET\"\n                            code: \"140\"\n                            name: \"Equipment at cost\"\n                            reportingCode: \"ASS\"\n                            total: 0\n                  - name: \"Financing Activities\"\n                    total: -14000\n                    cashflowTypes:\n                      - name: \"Proceeds from borrowings\"\n                        total: 1000.5\n                        accounts:\n                          - accountId: \"abcdefab-4d1e-4d1a-9e4c-68b2c2a278e2\"\n                            accountType: \"TERMLIAB\"\n                            accountClass: \"LIABILITY\"\n                            code: \"244\"\n                            name: \"Loan - Shellcoll Distribution 2019\"\n                            reportingCode: \"LIA.CUR.LOA\"\n                            total: 1000.5\n                      - name: \"Repayment of borrowings\"\n                        total: -15000.5\n                        accounts:\n                          - accountId: \"abcdefab-4d1e-4d1a-9e4c-68b2c2a278e2\"\n                            accountType: \"TERMLIAB\"\n                            accountClass: \"LIABILITY\"\n                            code: \"244\"\n                            name: \"Loan - Shellcoll Distribution 2019\"\n                            reportingCode: \"LIA.CUR.LOA\"\n                            total: -15000.5\n        400:\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: \"invalid-request\"\n                title: \"InvalidRequest\"\n                status: 400\n                detail: \"Organisation xxx does not exist\"\n        503:\n          description: \"Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: \"service-unavailable\"\n                title: \"ServiceUnavailable\"\n                status: 503\n                detail: \"Cannot process org xxx at this time. Apologies for inconvenience.\"\n  \"/FinancialStatements/ProfitAndLoss\":\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [finance.statements.read]\n      tags:\n        - Finance\n      operationId: getFinancialStatementProfitAndLoss\n      summary: \"Get Profit \u0026 Loss report\"\n      description: \"The profit and loss statement is a standard financial report providing detailed year to date income and expense detail for an organisation.\"\n      parameters:\n        - name: \"startDate\"\n          x-snake: start_date\n          in: \"query\"\n          description: \"Date e.g. yyyy-MM-dd\\r\\n\\r\\nSpecifies the start date for profit and loss report\\r\\n\\r\\nIf no parameter is provided, the date of 12 months before the end date will be used.\"\n          schema:\n            type: string\n          example: \"2020-09-15\"\n        - name: \"endDate\"\n          x-snake: end_date\n          in: \"query\"\n          description: \"Date e.g. yyyy-MM-dd\\r\\n\\r\\nSpecifies the end date for profit and loss report \\r\\n\\r\\nIf no parameter is provided, the current date will be used.\"\n          schema:\n            type: string\n          example: \"2021-09-15\"\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProfitAndLossResponse\"\n              example:\n                startDate: \"2020-07-01\"\n                endDate: \"2021-06-30\"\n                netProfitLoss: 123\n                revenue:\n                  total: 20922.46\n                  accountTypes:\n                    - total: 20825.41\n                      title: \"Trading Income\"\n                      accounts:\n                        - accountID: \"abcdefab-2006-43c2-a5da-3c0e5f43b452\"\n                          accountType: \"REVENUE\"\n                          code: \"200\"\n                          name: \"Sales\"\n                          reportingCode: \"REV\"\n                          total: 20825.41\n                    - total: 97.05\n                      title: \"Other Income\"\n                      accounts:\n                        - accountID: \"abcdefab-4d63-4af8-937f-04087ae2e36e\"\n                          accountType: \"OTHERINCOME\"\n                          code: \"270\"\n                          name: \"Interest Income\"\n                          reportingCode: \"REV.OTH\"\n                          total: 97.05\n                expense:\n                  total: 1282.06\n                  accountTypes:\n                    - total: 1137.59\n                      title: \"Direct Cost\"\n                      accounts:\n                        - accountID: \"abcdefab-d381-4bd6-ba47-7af927d25825\"\n                          accountType: \"DIRECTCOSTS\"\n                          code: \"300\"\n                          name: \"Purchases\"\n                          reportingCode: \"EXP.DC\"\n                          total: 1137.59\n                    - total: 144.47\n                      title: \"Operating Expenses\"\n                      accounts:\n                        - accountID: \"abcdefab-f897-4168-b5d1-2279bf74bb82\"\n                          accountType: \"EXPENSE\"\n                          code: \"453\"\n                          name: \"Office Expenses\"\n                          reportingCode: \"EXP\"\n                          total: 144.47\n        400:\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: \"invalid-request\"\n                title: \"InvalidRequest\"\n                status: 400\n                detail: \"Organisation xxx does not exist\"\n  \"/FinancialStatements/TrialBalance\":\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security: \n       - OAuth2: [finance.statements.read]\n      tags:\n        - Finance\n      operationId: getFinancialStatementTrialBalance\n      summary: \"Get Trial Balance report\"\n      description: \"The trial balance provides a detailed list of all accounts of an organisation at a point in time, with revenue and expense items being year to date.\"\n      parameters:\n        - name: \"endDate\"\n          x-snake: end_date\n          in: \"query\"\n          description: \"Date e.g. yyyy-MM-dd \\r\\n\\r\\nSpecifies the end date for trial balance report \\r\\n\\r\\nIf no parameter is provided, the current date will be used.\"\n          schema:\n            type: string\n          example: \"2021-09-15\"\n      responses:\n        200:\n          description: \"Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TrialBalanceResponse\"\n              example:\n                startDate: \"2020-07-01\"\n                endDate: \"2021-06-30\"\n                accounts:\n                  - accountId: \"abcdefab-3bbf-4f2a-9e4c-20ec7b8e6b41\"\n                    accountType: \"ASSET\"\n                    accountCode: \"ASS\"\n                    accountClass: \"BANK\"\n                    status: \"ACTIVE\"\n                    reportingCode: \"ASS\"\n                    accountName: \"Everyday transactions\"\n                    balance:\n                      value: 100\n                      entryType: \"DEBIT\"\n                    signedBalance: -23\n                    accountMovement:\n                      debits: 0\n                      credits: 0\n                      movement:\n                        value: 123\n                        entryType: \"CREDIT\"\n                      signedMovement: 0\n        400:\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                type: \"invalid-request\"\n                title: \"InvalidRequest\"\n                status: 400\n                detail: \"Organisation xxx does not exist\"\n  /FinancialStatements/contacts/revenue:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [finance.statements.read]\n      tags:\n        - Finance\n      operationId: getFinancialStatementContactsRevenue\n      summary: Get revenue by contacts report\n      description: \u003e-\n        The revenue by contact report provides a year to date profit and loss\n        for customers and suppliers for a given organisation, including detailed\n        contact information.\n      parameters:\n        - name: contactIds\n          x-snake: contact_ids\n          in: query\n          description: \"Specifies the customer contacts to be included in the report.\\r\\n\\r\\nIf no parameter is provided, all customer contacts will be included\"\n          schema:\n            type: array\n            example: [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000000]\n            items:\n              type: string\n              format: uuid\n        - name: includeManualJournals\n          x-snake: include_manual_journals\n          in: query\n          description: \"Specifies whether to include the manual journals in the report.\\r\\n            \\r\\nIf no parameter is provided, manual journals will not be included.\"\n          example: true\n          x-example-python: \"True\"\n          schema:\n            type: boolean\n        - name: startDate\n          x-snake: start_date\n          in: query\n          description: \"Date yyyy-MM-dd\\r\\n\\r\\nSpecifies the start date for the report.\\r\\n            \\r\\nIf no parameter is provided, the date of 12 months before the end date will be used.\\r\\n            \\r\\nIt is recommended to always specify both a start date and end date; While the initial range may be set to 12 months, this may need to be reduced for high volume organisations in order to improve latency.\"\n          example: \"2020-09-15\"\n          schema:\n            type: string\n        - name: endDate\n          x-snake: end_date\n          in: query\n          description: \"Date yyyy-MM-dd\\r\\n\\r\\nSpecifies the end date for the report.\\r\\n\\r\\nIf no parameter is provided, the current date will be used.\\r\\n            \\r\\nIt is recommended to always specify both a start date and end date; While the initial range may be set to 12 months, this may need to be reduced for high volume organisations in order to improve latency.\"\n          example: \"2020-09-15\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncomeByContactResponse'\n              example:\n                startDate: '2019-10-17'\n                endDate: '2020-10-16'\n                total: 1200\n                totalDetail:\n                  totalPaid: 400\n                  totalOutstanding: 1000\n                  totalCreditedUnApplied: 200\n                totalOther:\n                  totalOutstandingAged: 1000\n                  totalVoided: 150\n                  totalCredited: 10\n                contacts:\n                  - id: 1f580fe2-0659-31ee-eeb4-5c49d15d8bfa\n                    name: FirstContact\n                    total: 1400\n                    totalDetail:\n                      totalPaid: 400\n                      totalOutstanding: 1000\n                      totalCreditedUnApplied: 0\n                    totalOther:\n                      totalOutstandingAged: 1000\n                      totalVoided: 150\n                      totalCredited: 0\n                      transactionCount: 3\n                    accountCodes:\n                      - \"090\"\n                      - \"200\"\n                      - \"09-BANK\"\n                  - id: 20e94281-4751-fb7e-ee5e-96b43ae93c8a\n                    name: SecondContact\n                    total: -200\n                    totalDetail:\n                      totalPaid: 10\n                      totalOutstanding: 20\n                      totalCreditedUnApplied: 200\n                    totalOther:\n                      totalOutstandingAged: 2\n                      totalVoided: 3\n                      totalCredited: 4\n                      transactionCount: 1\n                    accountCodes:\n                      - \"900\"\n                manualJournals:\n                  total: -100\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n              example:\n                type: invalid-request\n                title: InvalidRequest\n                status: 400\n                detail: Organisation xxx does not exist\n  /FinancialStatements/contacts/expense:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [finance.statements.read]\n      tags:\n        - Finance\n      operationId: getFinancialStatementContactsExpense\n      summary: Get expense by contacts report\n      description: \u003e-\n        The expense by contact report provides a year to date profit and loss\n        for customers and suppliers for a given organisation, including detailed\n        contact information.\n      parameters:\n        - name: contactIds\n          x-snake: contact_ids\n          in: query\n          description: \"Specifies the customer contacts to be included in the report.\\r\\n\\r\\nIf no parameter is provided, all customer contacts will be included\"\n          schema:\n            type: array\n            example: [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000000]\n            items:\n              type: string\n              format: uuid\n        - name: includeManualJournals\n          x-snake: include_manual_journals\n          in: query\n          description: \"Specifies whether to include the manual journals in the report.\\r\\n            \\r\\nIf no parameter is provided, manual journals will not be included.\"\n          example: true\n          x-example-python: \"True\"\n          schema:\n            type: boolean\n        - name: startDate\n          x-snake: start_date\n          in: query\n          description: \"Date yyyy-MM-dd\\r\\n\\r\\nSpecifies the start date for the report.\\r\\n            \\r\\nIf no parameter is provided, the date of 12 months before the end date will be used.\\r\\n            \\r\\nIt is recommended to always specify both a start date and end date; While the initial range may be set to 12 months, this may need to be reduced for high volume organisations in order to improve latency.\"\n          example: \"2020-09-15\"\n          schema:\n            type: string\n        - name: endDate\n          x-snake: end_date\n          in: query\n          description: \"Date yyyy-MM-dd\\r\\n\\r\\nSpecifies the end date for the report.\\r\\n\\r\\nIf no parameter is provided, the current date will be used.\\r\\n            \\r\\nIt is recommended to always specify both a start date and end date; While the initial range may be set to 12 months, this may need to be reduced for high volume organisations in order to improve latency.\"\n          example: \"2020-09-15\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncomeByContactResponse'\n              example:\n                startDate: '2019-10-17'\n                endDate: '2020-10-16'\n                total: 1200\n                totalDetail:\n                  totalPaid: 400\n                  totalOutstanding: 1000\n                  totalCreditedUnApplied: 200\n                totalOther:\n                  totalOutstandingAged: 1000\n                  totalVoided: 150\n                  totalCredited: 10\n                contacts:\n                  - id: 1f580fe2-0659-31ee-eeb4-5c49d15d8bfa\n                    name: FirstContact\n                    total: 1400\n                    totalDetail:\n                      totalPaid: 400\n                      totalOutstanding: 1000\n                      totalCreditedUnApplied: 0\n                    totalOther:\n                      totalOutstandingAged: 1000\n                      totalVoided: 150\n                      totalCredited: 0\n                      transactionCount: 3\n                    accountCodes:\n                      - \"090\"\n                      - \"200\"\n                      - \"09-BANK\"\n                  - id: 20e94281-4751-fb7e-ee5e-96b43ae93c8a\n                    name: SecondContact\n                    total: -200\n                    totalDetail:\n                      totalPaid: 0\n                      totalOutstanding: 0\n                      totalCreditedUnApplied: 200\n                    totalOther:\n                      totalOutstandingAged: 2\n                      totalVoided: 3\n                      totalCredited: 4\n                      transactionCount: 1\n                    accountCodes:\n                      - \"900\"\n                manualJournals:\n                  total: -100\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n              example:\n                type: invalid-request\n                title: InvalidRequest\n                status: 400\n                detail: Organisation xxx does not exist\n  /BankStatementsPlus/statements:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [finance.bankstatementsplus.read]\n      tags:\n        - Finance\n      operationId: getBankStatementAccounting\n      summary: Get Bank Statement Accounting\n      description: \u003e-\n        For lenders that prefer using bank statement data as the source of\n        truth.  We provide a data point that will allow access to customer\n        bank statements, plus for reconciled bank transactions the matching\n        accounting, invoice and billing data as well.  As customers reconcile\n        bank statements to invoices and bills, this transaction detail will\n        provide valuable insight for lender's assessment measures. \n      parameters:\n        - name: BankAccountID\n          x-snake: bank_account_id\n          in: query\n          description: \"string, GUID\\r\\n\\r\\nBank account Id\"\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: FromDate\n          x-snake: from_date\n          in: query\n          description: \"date, yyyy-MM-dd \\r\\n\\r\\nSpecifies the start date of the query period. \\r\\nThe maximum range of the query period is 12 months. If the specified query period is more than 12 months the request will be rejected.\"\n          required: true\n          schema:\n            type: string\n            example: '2020-07-01'\n          example: '2020-07-01'\n        - name: ToDate\n          x-snake: to_date\n          in: query\n          description: \"date, yyyy-MM-dd \\r\\n\\r\\nSpecifies the end date of the query period. \\r\\nIf the end date is a future date, the request will be rejected.\"\n          required: true\n          schema:\n            type: string\n            example: '2021-06-30'\n          example: '2021-06-30'\n        - name: SummaryOnly\n          x-snake: summary_only\n          in: query\n          description: \"boolean, true/false\\r\\n\\r\\nThe default value is true if no parameter is provided.\\r\\n\\r\\nIn summary mode, the response will exclude the computation-heavy LineItems fields from bank transaction, invoice, credit note, prepayment and overpayment data, making the API calls quicker and more efficient.\"\n          example: true\n          x-example-python: \"True\"\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BankStatementAccountingResponse'\n              example: '{\"bankAccountId\":\"1234eee9-47f0-4179-bd46-9adb4f21cc7f\",\"bankAccountName\":\"ANZ BANK\",\"bankAccountCurrencyCode\":\"NZD\",\"statements\":[{\"statementId\":\"7c29eee9-47f0-4179-bd46-9adb4f21cc7f\",\"startDate\":\"2021-01-01\",\"endDate\":\"2021-01-02\",\"importedDateTimeUtc\":\"2021-01-02T12:00:00Z\",\"importSource\":\"User\", \"startBalance\":10.0,\"endBalance\":200.0, \"statementLines\":[{\"statementLineId\":\"1234eee9-47f0-4179-bd46-9adb4f21cc7f\",\"postedDate\":\"2021-01-01\",\"reference\":\"Eft\",\"notes\":\"payment to bank\",\"chequeNo\":\"123\",\"amount\":100.0,\"transactionDate\":\"2021-01-01\",\"type\":\"Debit\",\"isReconciled\":true,\"isDuplicate\":false,\"isDeleted\":false,\"payments\":[{\"paymentId\":\"47ec8431-23c2-4ef9-90e5-b440fe55d086\",\"batchPaymentId\":\"ecc83387-ffaa-4023-b111-b3fd9e3e4a8e\",\"date\":\"2021-01-01\",\"amount\":80.0,\"bankAmount\":80.0,\"currencyRate\":1.0,\"invoice\":{\"invoiceId\":\"c01dd6ac-8835-4bf2-af8b-841db9534d7f\",\"contact\":{\"contactId\":\"1234eee9-47f0-4179-bd46-9adb4f21cc7f\",\"contactName\":\"Bob\"},\"total\":80.0,\"lineItems\":[{\"accountId\":\"f7fe1049-d1cf-4d10-9df1-67a6e363015f\",\"reportingCode\":\"REV.OTH\",\"lineAmount\":80.0,\"accountType\":\"REVENUE\"}]}},{\"paymentId\":\"54e8eee0-91a7-4a4d-bb9b-957302a2760a\",\"batchPaymentId\":\"ecc83387-ffaa-4023-b111-b3fd9e3e4a8e\",\"date\":\"2021-01-01\",\"amount\":15.0,\"bankAmount\":15.0,\"currencyRate\":1.0,\"creditNote\":{\"creditNoteId\":\"c346d6a5-f013-4207-bc70-f2dd80a5f37f\",\"contact\":{\"contactId\":\"1234eee9-47f0-4179-bd46-9adb4f21cc7f\",\"contactName\":\"Bob\"},\"total\":15.0,\"lineItems\":[{\"accountId\":\"f7fe1049-d1cf-4d10-9df1-67a6e363015f\",\"reportingCode\":\"REV.OTH\",\"lineAmount\":15.0,\"accountType\":\"REVENUE\"}]}},{\"paymentId\":\"f94dad64-658c-491f-b901-05d38e9e8702\",\"date\":\"2021-01-01\",\"amount\":5.0,\"bankAmount\":5.0,\"currencyRate\":1.0,\"prepayment\":{\"prepaymentId\":\"995f81ae-0afd-4c84-bbe1-90bc7dfa4372\",\"contact\":{\"contactId\":\"1234eee9-47f0-4179-bd46-9adb4f21cc7f\",\"contactName\":\"Bob\"},\"total\":5.0,\"lineItems\":[{\"accountId\":\"f7fe1049-d1cf-4d10-9df1-67a6e363015f\",\"reportingCode\":\"REV.OTH\",\"lineAmount\":5.0,\"accountType\":\"REVENUE\"}]}},{\"paymentId\":\"6ffbe999-04c8-42d2-bf16-13947c5f1036\",\"date\":\"2021-01-01\",\"amount\":5.0,\"bankAmount\":5.0,\"currencyRate\":1.0,\"overpayment\":{\"overpaymentId\":\"06575718-5100-4e02-8fbf-c2731a112836\",\"contact\":{\"contactId\":\"1234eee9-47f0-4179-bd46-9adb4f21cc7f\",\"contactName\":\"Bob\"},\"total\":5.0,\"lineItems\":[{\"accountId\":\"f7fe1049-d1cf-4d10-9df1-67a6e363015f\",\"reportingCode\":\"REV.OTH\",\"lineAmount\":5.0,\"accountType\":\"REVENUE\"}]}}],\"bankTransactions\":[{\"bankTransactionId\":\"55edf88c-6bf6-459a-bd9b-7f250df62eb2\",\"batchPaymentId\":\"2dce9b39-0427-41af-9739-9510e3b68211\",\"contact\":{\"contactId\":\"1234eee9-47f0-4179-bd46-9adb4f21cc7f\",\"contactName\":\"Bob\"},\"date\":\"2021-01-01\",\"amount\":20.0,\"lineItems\":[{\"accountId\":\"f7fe1049-d1cf-4d10-9df1-67a6e363015f\",\"reportingCode\":\"REV.OTH\",\"lineAmount\":20.0,\"accountType\":\"REVENUE\"}]}]}]}]}'\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n              example: '{\"type\":\"invalid-request\",\"title\":\"InvalidRequest\",\"status\":400,\"detail\":\"AccountId was not supplied\"}'\ncomponents:\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      description: For more information\n      flows: \n        authorizationCode:\n          authorizationUrl: 'https://login.xero.com/identity/connect/authorize'\n          tokenUrl: 'https://identity.xero.com/connect/token'\n          scopes:\n            email: Grant read-only access to your email\n            openid: Grant read-only access to your open id\n            profile: your profile information\n            finance.statements.read: Grant read-only access to finacial statements\n            finance.accountingactivity.read: Grant read-only access to Xero usage activity\n            finance.cashvalidation.read: Grant read-only access to bank statement and reconcilation data\n            finance.bankstatementsplus.read: Grant read-only access to bank statements accounting data\n  parameters:\n    requiredHeader: \n      in: header\n      name: xero-tenant-id\n      x-snake: xero_tenant_id\n      description: Xero identifier for Tenant\n      example: YOUR_XERO_TENANT_ID\n      schema:\n        type: string\n      required: true\n  schemas:\n    AccountUsage:\n      type: object\n      properties:\n        month:\n          type: string\n          description: The month this usage item contains data for\n        accountId:\n          type: string\n          description: The account this usage item contains data for\n          format: uuid\n        currencyCode:\n          type: string\n          description: The currency code this usage item contains data for\n        totalReceived:\n          type: number\n          description: Total received\n          format: double\n          x-is-money: true\n        countReceived:\n          type: integer\n          description: Count of received\n          format: int32\n        totalPaid:\n          type: number\n          description: Total paid\n          format: double\n          x-is-money: true\n        countPaid:\n          type: integer\n          description: Count of paid\n          format: int32\n        totalManualJournal:\n          type: number\n          description: Total value of manual journals\n          format: double\n          x-is-money: true\n        countManualJournal:\n          type: integer\n          description: Count of manual journals\n          format: int32\n        accountName:\n          type: string\n          description: The name of the account\n        reportingCode:\n          type: string\n          description: Shown if set\n        reportingCodeName:\n          type: string\n          description: Shown if set\n        reportCodeUpdatedDateUtc:\n          type: string\n          description: Last modified date UTC format\n          format: date-time\n      additionalProperties: false\n    AccountUsageResponse:\n      type: object\n      properties:\n        organisationId:\n          type: string\n          description: The requested Organisation to which the data pertains\n          format: uuid\n        startMonth:\n          type: string\n          description: The start month of the report\n        endMonth:\n          type: string\n          description: The end month of the report\n        accountUsage:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountUsage\"\n      additionalProperties: false\n    HistoryRecordResponse:\n      type: object\n      properties:\n        changes:\n          type: string\n          description: The type of change recorded against the document\n        dateUTCString:\n          type: string\n          description: UTC date that the history record was created\n        dateUTC:\n          type: string\n          description: UTC date that the history record was created\n          format: date-time\n        user:\n          type: string\n          description: The users first and last name\n        details:\n          type: string\n          description: Description of the change event or transaction\n      additionalProperties: false\n    LockHistoryModel:\n      type: object\n      properties:\n        hardLockDate:\n          type: string\n          format: date\n          description: Date the account hard lock was set\n        softLockDate:\n          type: string\n          format: date\n          description: Date the account soft lock was set\n        updatedDateUtc:\n          type: string\n          format: date-time\n          description: The system date time that the lock was updated\n      additionalProperties: false\n    LockHistoryResponse:\n      type: object\n      properties:\n        organisationId:\n          type: string\n          description: The requested Organisation to which the data pertains\n          format: uuid\n        endDate:\n          type: string\n          format: date\n          description: The end date of the report\n        lockDates:\n          type: array\n          items:\n            $ref: \"#/components/schemas/LockHistoryModel\"\n      additionalProperties: false\n    PracticeResponse:\n      type: object\n      properties:\n        xeroPartnerSince:\n          type: integer\n          description: Year of becoming a partner.\n          format: int32\n        tier:\n          type: string\n          description: Customer tier e.g. Silver\n        location:\n          type: string\n          description: Country of location.\n        organisationCount:\n          type: integer\n          description: Organisation count.\n          format: int32\n        staffCertified:\n          type: boolean\n          description: Staff certified (true/false).\n      additionalProperties: false\n    Problem:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/ProblemType\"\n        title:\n          type: string\n        status:\n          type: integer\n          format: int32\n        detail:\n          type: string\n      additionalProperties: false\n    ProblemType:\n      enum:\n      - NotSet\n      - bank-account-not-found\n      - internal-error\n      - invalid-application\n      - invalid-request\n      - organisation-not-found\n      - organisation-offline\n      - request-timeout\n      - service-unavailable\n      - unauthorized\n      type: string\n    ReportHistoryModel:\n      type: object\n      properties:\n        reportName:\n          type: string\n          description: Report code or report title\n        reportDateText:\n          type: string\n          description: The date or date range of the report\n        publishedDateUtc:\n          type: string\n          description: The system date time that the report was published\n          format: date-time\n      additionalProperties: false\n    ReportHistoryResponse:\n      type: object\n      properties:\n        organisationId:\n          type: string\n          description: The requested Organisation to which the data pertains\n          format: uuid\n        endDate:\n          type: string\n          format: date\n          description: The end date of the report\n        reports:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReportHistoryModel\"\n      additionalProperties: false\n    UserActivitiesResponse:\n      type: object\n      properties:\n        organisationId:\n          type: string\n          description: The requested Organisation to which the data pertains\n          format: uuid\n        dataMonth:\n          type: string\n          description: The month of the report\n        users:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UserResponse\"\n      additionalProperties: false\n    UserResponse:\n      type: object\n      properties:\n        userId:\n          type: string\n          description: The Xero identifier for the user\n          format: uuid\n        userCreatedDateUtc:\n          type: string\n          description: Timestamp of user creation.\n          format: date-time\n        lastLoginDateUtc:\n          type: string\n          description: Timestamp of user last login\n          format: date-time\n        isExternalPartner:\n          type: boolean\n          description: User is external partner.\n        hasAccountantRole:\n          type: boolean\n          description: User has Accountant role.\n        monthPeriod:\n          type: string\n          description: Month period in format  yyyy-MM.\n        numberOfLogins:\n          type: integer\n          description: Number of times the user has logged in.\n          format: int32\n        numberOfDocumentsCreated:\n          type: integer\n          description: Number of documents created.\n          format: int32\n        netValueDocumentsCreated:\n          type: number\n          description: Net value of documents created.\n          format: double\n          x-is-money: true\n        absoluteValueDocumentsCreated:\n          type: number\n          description: Absolute value of documents created.\n          format: double\n          x-is-money: true\n        attachedPractices:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PracticeResponse\"\n        historyRecords:\n          type: array\n          items:\n            $ref: \"#/components/schemas/HistoryRecordResponse\"\n      additionalProperties: false\n    BankStatementResponse:\n      type: object\n      properties:\n        statementLines:\n          $ref: \"#/components/schemas/StatementLinesResponse\"\n        currentStatement:\n          $ref: \"#/components/schemas/CurrentStatementResponse\"\n      additionalProperties: false\n    CashAccountResponse:\n      type: object\n      properties:\n        unreconciledAmountPos:\n          type: number\n          description: Total value of transactions in the journals which are not reconciled\n            to bank statement lines, and have a positive (debit) value.\n          format: double\n          x-is-money: true\n        unreconciledAmountNeg:\n          type: number\n          description: Total value of transactions in the journals which are not reconciled\n            to bank statement lines, and have a negative (credit) value.\n          format: double\n          x-is-money: true\n        startingBalance:\n          type: number\n          description: Starting (or historic) balance from the journals (manually\n            keyed in by users on account creation - unverified).\n          format: double\n          x-is-money: true\n        accountBalance:\n          type: number\n          description: Current cash at bank accounting value from the journals.\n          format: double\n          x-is-money: true\n        balanceCurrency:\n          type: string\n          description: Currency which the cashAccount transactions relate to.\n      additionalProperties: false\n    CashValidationResponse:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description: The Xero identifier for an account\n          format: uuid\n        statementBalance:\n          $ref: \"#/components/schemas/StatementBalanceResponse\"\n        statementBalanceDate:\n          type: string\n          description: UTC Date when the last bank statement item was entered into\n            Xero. This date is represented in ISO 8601 format.\n          format: date\n        bankStatement:\n          $ref: \"#/components/schemas/BankStatementResponse\"\n        cashAccount:\n          $ref: \"#/components/schemas/CashAccountResponse\"\n      additionalProperties: false\n    CurrentStatementResponse:\n      type: object\n      properties:\n        startDate:\n          type: string\n          description: Looking at the most recent bank statement, this field indicates\n            the first date which transactions on this statement pertain to. This date\n            is represented in ISO 8601 format.\n          format: date\n        endDate:\n          type: string\n          description: Looking at the most recent bank statement, this field indicates\n            the last date which transactions on this statement pertain to. This date\n            is represented in ISO 8601 format.\n          format: date\n        startBalance:\n          type: number\n          description: Looking at the most recent bank statement, this field indicates\n            the balance before the transactions on the statement are applied (note,\n            this is not always populated by the bank in every single instance (~10%)).\n          format: double\n          x-is-money: true\n        endBalance:\n          type: number\n          description: Looking at the most recent bank statement, this field indicates\n            the balance after the transactions on the statement are applied (note,\n            this is not always populated by the bank in every single instance (~10%)).\n          format: double\n          x-is-money: true\n        importedDateTimeUtc:\n          type: string\n          description: Looking at the most recent bank statement, this field indicates\n            when the document was imported into Xero.  This date is represented in\n            ISO 8601 format.\n          format: date-time\n        importSourceType:\n          type: string\n          description: Looking at the most recent bank statement, this field indicates\n            the source of the data (direct bank feed, indirect bank feed, file upload,\n            or manual keying).\n      additionalProperties: false\n    DataSourceResponse:\n      type: object\n      properties:\n        directBankFeed:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a direct bank feed in to Xero.   This gives an indication\n            on the certainty of correctness of the data.\n          format: double\n          x-is-money: true\n        indirectBankFeed:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a indirect bank feed to Xero (usually via Yodlee).   This\n            gives an indication on the certainty of correctness of the data.\n          format: double\n          x-is-money: true\n        fileUpload:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a CSV file upload in to Xero.   This gives an indication\n            on the certainty of correctness of the data.\n          format: double\n          x-is-money: true\n        manual:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was manually keyed in to Xero.   This gives an indication\n            on the certainty of correctness of the data.\n          format: double\n          x-is-money: true\n        directBankFeedPos:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a direct bank feed in to Xero.  This gives an indication\n            on the certainty of correctness of the data.  Only positive transactions\n            are included.\n          format: double\n          x-is-money: true\n        indirectBankFeedPos:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a indirect bank feed to Xero (usually via Yodlee).   This\n            gives an indication on the certainty of correctness of the data. Only\n            positive transactions are included.\n          format: double\n          x-is-money: true\n        fileUploadPos:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a CSV file upload in to Xero.   This gives an indication\n            on the certainty of correctness of the data. Only positive transactions\n            are included.\n          format: double\n          x-is-money: true\n        manualPos:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was manually keyed in to Xero.   This gives an indication\n            on the certainty of correctness of the data. Only positive transactions\n            are included.\n          format: double\n          x-is-money: true\n        directBankFeedNeg:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a direct bank feed in to Xero.   This gives an indication\n            on the certainty of correctness of the data.  Only negative transactions\n            are included.\n          format: double\n          x-is-money: true\n        indirectBankFeedNeg:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a indirect bank feed to Xero (usually via Yodlee).   This\n            gives an indication on the certainty of correctness of the data.  Only\n            negative transactions are included.\n          format: double\n          x-is-money: true\n        fileUploadNeg:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was a CSV file upload in to Xero.   This gives an indication\n            on the certainty of correctness of the data.  Only negative transactions\n            are included.\n          format: double\n          x-is-money: true\n        manualNeg:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was manually keyed in to Xero.   This gives an indication\n            on the certainty of correctness of the data.  Only negative transactions\n            are included.\n          format: double\n          x-is-money: true\n        otherPos:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was any other category.   This gives an indication on the\n            certainty of correctness of the data.  Only positive transactions are\n            included.\n          format: double\n          x-is-money: true\n        otherNeg:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was any other category.   This gives an indication on the\n            certainty of correctness of the data.  Only negative transactions are\n            included.\n          format: double\n          x-is-money: true\n        other:\n          type: number\n          description: Sum of the amounts of all statement lines where the source\n            of the data was any other category.   This gives an indication on the\n            certainty of correctness of the data.\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    StatementBalanceResponse:\n      type: object\n      properties:\n        value:\n          type: number\n          description: Total closing balance of the account. This includes both reconciled\n            and unreconciled bank statement lines. The closing balance will always\n            be represented as a positive number, with it’s debit/credit status defined\n            in the statementBalanceDebitCredit field.\n          format: double\n          x-is-money: true\n        type:\n          type: string\n          description: The DEBIT or CREDIT status of the account. Cash accounts in\n            credit have a negative balance.\n      additionalProperties: false\n    StatementLinesResponse:\n      type: object\n      properties:\n        unreconciledAmountPos:\n          type: number\n          description: Sum of the amounts of all statement lines where both the reconciled\n            flag is set to FALSE, and the amount is positive.\n          format: double\n          x-is-money: true\n        unreconciledAmountNeg:\n          type: number\n          description: Sum of the amounts of all statement lines where both the reconciled\n            flag is set to FALSE, and the amount is negative.\n          format: double\n          x-is-money: true\n        unreconciledLines:\n          type: integer\n          description: Count of all statement lines where the reconciled flag is set\n            to FALSE.\n          format: int32\n        avgDaysUnreconciledPos:\n          type: number\n          description: Sum-product of age of statement line in days multiplied by\n            transaction amount, divided by the sum of transaction amount - in for\n            those statement lines in which the reconciled flag is set to FALSE, and\n            the amount is positive. Provides an indication of the age of unreconciled\n            transactions.\n          format: double\n          x-is-money: true\n        avgDaysUnreconciledNeg:\n          type: number\n          description: Sum-product of age of statement line in days multiplied by\n            transaction amount, divided by the sum of transaction amount - in for\n            those statement lines in which the reconciled flag is set to FALSE, and\n            the amount is negative. Provides an indication of the age of unreconciled\n            transactions.\n          format: double\n          x-is-money: true\n        earliestUnreconciledTransaction:\n          type: string\n          description: UTC Date which is the earliest transaction date of a statement\n            line for which the reconciled flag is set to FALSE.  This date is represented\n            in ISO 8601 format.\n          format: date\n        latestUnreconciledTransaction:\n          type: string\n          description: UTC Date which is the latest transaction date of a statement\n            line for which the reconciled flag is set to FALSE.  This date is represented\n            in ISO 8601 format.\n          format: date\n        deletedAmount:\n          type: number\n          description: Sum of the amounts of all deleted statement lines.  Transactions\n            may be deleted due to duplication or otherwise.\n          format: double\n          x-is-money: true\n        totalAmount:\n          type: number\n          description: Sum of the amounts of all statement lines.  This is used as\n            a metric of comparison to the unreconciled figures above.\n          format: double\n          x-is-money: true\n        dataSource:\n          $ref: \"#/components/schemas/DataSourceResponse\"\n        earliestReconciledTransaction:\n          type: string\n          description: UTC Date which is the earliest transaction date of a statement\n            line for which the reconciled flag is set to TRUE.  This date is represented\n            in ISO 8601 format.\n          format: date\n        latestReconciledTransaction:\n          type: string\n          description: UTC Date which is the latest transaction date of a statement\n            line for which the reconciled flag is set to TRUE.  This date is represented\n            in ISO 8601 format.\n          format: date\n        reconciledAmountPos:\n          type: number\n          description: Sum of the amounts of all statement lines where both the reconciled\n            flag is set to TRUE, and the amount is positive.\n          format: double\n          x-is-money: true\n        reconciledAmountNeg:\n          type: number\n          description: Sum of the amounts of all statement lines where both the reconciled\n            flag is set to TRUE, and the amount is negative.\n          format: double\n          x-is-money: true\n        reconciledLines:\n          type: integer\n          description: Count of all statement lines where the reconciled flag is set\n            to TRUE\n          format: int32\n        totalAmountPos:\n          type: number\n          description: Sum of the amounts of all statement lines where the amount\n            is positive\n          format: double\n          x-is-money: true\n        totalAmountNeg:\n          type: number\n          description: Sum of the amounts of all statement lines where the amount\n            is negative.\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    BalanceSheetAccountDetail:\n      type: object\n      properties:\n        code:\n          type: string\n          description: \"Accounting code\"\n        accountID:\n          type: string\n          description: \"ID of the account\"\n          format: uuid\n        name:\n          type: string\n          description: \"Account name\"\n        reportingCode:\n          type: string\n          description: \"Reporting code\"\n        total:\n          type: number\n          description: \"Total movement on this account\"\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    BalanceSheetAccountGroup:\n      type: object\n      properties:\n        accountTypes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/BalanceSheetAccountType\"\n        total:\n          type: number\n          description: \"Total value of all the accounts in this type\"\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    BalanceSheetAccountType:\n      type: object\n      properties:\n        accountType:\n          type: string\n          description: \"The type of the account. See \u003ca href='https://developer.xero.com/documentation/api/types#AccountTypes'\u003eAccount Types\u003c/a\u003e\"\n        accounts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/BalanceSheetAccountDetail\"\n          description: \"A list of all accounts of this type. Refer to the Account section below for each account element detail.\"\n        total:\n          type: number\n          description: \"Total value of all the accounts in this type\"\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    BalanceSheetResponse:\n      type: object\n      properties:\n        balanceDate:\n          type: string\n          format: date\n          description: \"Balance date of the report\"\n        asset:\n          $ref: \"#/components/schemas/BalanceSheetAccountGroup\"\n        liability:\n          $ref: \"#/components/schemas/BalanceSheetAccountGroup\"\n        equity:\n          $ref: \"#/components/schemas/BalanceSheetAccountGroup\"\n      additionalProperties: false\n    CashBalance:\n      type: object\n      properties:\n        openingCashBalance:\n          type: number\n          description: \"Opening balance of cash and cash equivalents\"\n          format: double\n          x-is-money: true\n        closingCashBalance:\n          type: number\n          description: \"Closing balance of cash and cash equivalents\"\n          format: double\n          x-is-money: true\n        netCashMovement:\n          type: number\n          description: \"Net movement of cash and cash equivalents for the period\"\n          format: double\n          x-is-money: true\n          readOnly: true\n      additionalProperties: false\n    CashflowAccount:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description: \"ID of the account\"\n          format: uuid\n        accountType:\n          type: string\n          description: \"The type of the account. See \u003ca href='https://developer.xero.com/documentation/api/types#AccountTypes'\u003eAccount Types\u003c/a\u003e\"\n        accountClass:\n          type: string\n          description: \"The class of the account. See \u003ca href='https://developer.xero.com/documentation/api/types#AccountClassTypes'\u003eAccount Class Types\u003c/a\u003e\"\n        code:\n          type: string\n          description: \"Account code\"\n        name:\n          type: string\n          description: \"Account name\"\n        reportingCode:\n          type: string\n          description: \"Reporting code used for cash flow classification\"\n        total:\n          type: number\n          description: \"Total amount for the account\"\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    CashflowActivity:\n      type: object\n      properties:\n        name:\n          type: string\n          description: \"Name of the cashflow activity type. It will be either Operating Activities, Investing Activities or Financing Activities\"\n        total:\n          type: number\n          description: \"Total value of the activity type\"\n          format: double\n          x-is-money: true\n        cashflowTypes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CashflowType\"\n      additionalProperties: false\n    CashflowResponse:\n      type: object\n      properties:\n        startDate:\n          type: string\n          description: \"Start date of the report\"\n          format: \"date\"\n        endDate:\n          type: string\n          description: \"End date of the report\"\n          format: \"date\"\n        cashBalance:\n          $ref: \"#/components/schemas/CashBalance\"\n        cashflowActivities:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CashflowActivity\"\n          description: \"Break down of cash and cash equivalents for the period\"\n      additionalProperties: false\n    CashflowType:\n      type: object\n      properties:\n        name:\n          type: string\n          description: \"Name of the activity\"\n        total:\n          type: number\n          description: \"Total value of the activity\"\n          format: double\n          x-is-money: true\n        accounts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CashflowAccount\"\n          description: \"List of the accounts in this activity\"\n      additionalProperties: false\n    PnlAccount:\n      type: object\n      properties:\n        accountID:\n          type: string\n          description: \"ID of the account\"\n          format: uuid\n        accountType:\n          type: string\n          description: \"The type of the account. See \u003ca href='https://developer.xero.com/documentation/api/types#AccountTypes'\u003eAccount Types\u003c/a\u003e\"\n        code:\n          type: string\n          description: \"Account code\"\n        name:\n          type: string\n          description: \"Account name\"\n        reportingCode:\n          type: string\n          description: \"Reporting code (Shown if set)\"\n        total:\n          type: number\n          description: \"Total movement on this account\"\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    PnlAccountClass:\n      type: object\n      properties:\n        total:\n          type: number\n          description: \"Total revenue/expense value\"\n          format: double\n          x-is-money: true\n        accountTypes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PnlAccountType\"\n          description: \"Contains trading income and other income for revenue section / operating expenses and direct cost for expense section if the data is available for each section. Refer to the account type element below\"\n      additionalProperties: false\n    PnlAccountType:\n      type: object\n      properties:\n        total:\n          type: number\n          description: \"Total movement on this account type\"\n          format: double\n          x-is-money: true\n        title:\n          type: string\n          description: \"Name of this account type, it will be either Trading Income or Other Income for Revenue section / Direct Cost or Operating Expenses for Expense section\"\n        accounts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PnlAccount\"\n          description: \"A list of the movement on each account detail during the query period. Refer to the account detail element below\"\n      additionalProperties: false\n    ProfitAndLossResponse:\n      type: object\n      properties:\n        startDate:\n          type: string\n          description: \"Start date of the report\"\n          format: \"date\"\n        endDate:\n          type: string\n          description: \"End date of the report\"\n          format: \"date\"\n        netProfitLoss:\n          type: number\n          description: \"Net profit loss value\"\n          format: double\n          x-is-money: true\n        revenue:\n          $ref: \"#/components/schemas/PnlAccountClass\"\n        expense:\n          $ref: \"#/components/schemas/PnlAccountClass\"\n      additionalProperties: false\n    TrialBalanceAccount:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description: \"ID of the account\"\n          format: uuid\n        accountType:\n          type: string\n          description: \"The type of the account. See \u003ca href='https://developer.xero.com/documentation/api/types#AccountTypes'\u003eAccount Types\u003c/a\u003e\"\n        accountCode:\n          type: string\n          description: \"Customer defined alpha numeric account code e.g 200 or SALES\"\n        accountClass:\n          type: string\n          description: \"The class of the account. See \u003ca href='https://developer.xero.com/documentation/api/types#AccountClassTypes'\u003eAccount Class Types\u003c/a\u003e\"\n        status:\n          type: string\n          description: \"Accounts with a status of ACTIVE can be updated to ARCHIVED. See \u003ca href='https://developer.xero.com/documentation/api/types#AccountStatusCodes'\u003eAccount Status Codes\u003c/a\u003e\"\n        reportingCode:\n          type: string\n          description: \"Reporting code (Shown if set)\"\n        accountName:\n          type: string\n          description: \"Name of the account\"\n        balance:\n          $ref: \"#/components/schemas/TrialBalanceEntry\"\n        signedBalance:\n          type: number\n          description: \"Value of balance. Expense and Asset accounts code debits as positive. Revenue, Liability, and Equity accounts code debits as negative\"\n          format: double\n          x-is-money: true\n        accountMovement:\n          $ref: \"#/components/schemas/TrialBalanceMovement\"\n      additionalProperties: false\n    TrialBalanceEntry:\n      type: object\n      properties:\n        value:\n          type: number\n          description: \"Net movement or net balance in the account\"\n          format: double\n          x-is-money: true\n        entryType:\n          type: string\n          description: \"Sign (Debit/Credit) of the movement of balance in the account\"\n      additionalProperties: false\n    TrialBalanceMovement:\n      type: object\n      properties:\n        debits:\n          type: number\n          description: \"Debit amount\"\n          format: double\n          x-is-money: true\n        credits:\n          type: number\n          description: \"Credit amount\"\n          format: double\n          x-is-money: true\n        movement:\n          $ref: \"#/components/schemas/TrialBalanceEntry\"\n        signedMovement:\n          type: number\n          description: \"Value of movement. Expense and Asset accounts code debits as positive. Revenue, Liability, and Equity accounts code debits as negative\"\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    TrialBalanceResponse:\n      type: object\n      properties:\n        startDate:\n          type: string\n          format: date\n          description: \"Start date of the report\"\n        endDate:\n          type: string\n          format: date\n          description: \"End date of the report\"\n        accounts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TrialBalanceAccount\"\n          description: \"Refer to the accounts section below\"\n      additionalProperties: false\n    IncomeByContactResponse:\n      type: object\n      properties:\n        startDate:\n          type: string\n          description: Start date of the report\n          format: date\n        endDate:\n          type: string\n          description: End date of the report\n          format: date\n        total:\n          type: number\n          description: Total value\n          format: double\n          x-is-money: true\n        totalDetail:\n          $ref: '#/components/schemas/TotalDetail'\n        totalOther:\n          $ref: '#/components/schemas/TotalOther'\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactDetail'\n        manualJournals:\n          $ref: '#/components/schemas/ManualJournalTotal'\n      additionalProperties: false\n    ManualJournalTotal:\n      type: object\n      properties:\n        total:\n          type: number\n          description: Total value of manual journals.\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    TotalDetail:\n      type: object\n      properties:\n        totalPaid:\n          type: number\n          description: Total paid invoice and cash value within the period.\n          format: double\n          x-is-money: true\n        totalOutstanding:\n          type: number\n          description: Total outstanding invoice value within the period.\n          format: double\n          x-is-money: true\n        totalCreditedUnApplied:\n          type: number\n          description: Total unapplied credited value within the period.\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    TotalOther:\n      type: object\n      properties:\n        totalOutstandingAged:\n          type: number\n          description: \u003e-\n            Total outstanding invoice value within the period where the invoices\n            are more than 90 days old\n          format: double\n          x-is-money: true\n        totalVoided:\n          type: number\n          description: Total voided value.\n          format: double\n          x-is-money: true\n        totalCredited:\n          type: number\n          description: Total credited value.\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    ContactDetail:\n      type: object\n      properties:\n        contactId:\n          type: string\n          description: \"ID of the contact associated with the transactions.\\r\\n\\r\\nTransactions with no contact will be grouped under the special ID: 86793108-198C-46D8-90A3-43C1D12686CE.\\r\\n\\r\\nTransactions that are receive or spend bank transfers will be grouped under the special ID: 207322B3-6A58-4BE7-80F1-430123914AD6\"\n          format: uuid\n        name:\n          type: string\n          description: \"Name of the contact associated with the transactions.\\r\\n\\r\\nIf no contact is associated with the transactions this will appear as “None Provided”,\\r\\n\\r\\nFor receive or spend bank transfer transactions, this will appear as “Bank Transfer”.\"\n        total:\n          type: number\n          description: Total value for the contact\n          format: double\n          x-is-money: true\n        totalDetail:\n          $ref: '#/components/schemas/ContactTotalDetail'\n        totalOther:\n          $ref: '#/components/schemas/ContactTotalOther'\n        accountCodes:\n          type: array\n          items:\n            type: string\n          description: A list of account codes involved in transactions.\n      additionalProperties: false\n    ContactTotalDetail:\n      type: object\n      properties:\n        totalPaid:\n          type: number\n          description: Total paid invoice and cash value for the contact within the period.\n          format: double\n          x-is-money: true\n        totalOutstanding:\n          type: number\n          description: Total outstanding invoice value for the contact within the period.\n          format: double\n          x-is-money: true\n        totalCreditedUnApplied:\n          type: number\n          description: Total unapplied credited value for the contact within the period.\n          format: double\n          x-is-money: true\n      additionalProperties: false\n    ContactTotalOther:\n      type: object\n      properties:\n        totalOutstandingAged:\n          type: number\n          description: \u003e-\n            Total outstanding invoice value for the contact within the period\n            where the invoices are more than 90 days old\n          format: double\n          x-is-money: true\n        totalVoided:\n          type: number\n          description: Total voided value for the contact.\n          format: double\n          x-is-money: true\n        totalCredited:\n          type: number\n          description: Total credited value for the contact.\n          format: double\n          x-is-money: true\n        transactionCount:\n          type: integer\n          description: Number of transactions for the contact.\n          format: int32\n      additionalProperties: false\n    BankStatementAccountingResponse:\n      type: object\n      properties:\n        bankAccountId:\n          type: string\n          description: Xero Identifier of bank account\n          format: uuid\n        bankAccountName:\n          type: string\n          description: Name of bank account\n        bankAccountCurrencyCode:\n          type: string\n          description: Currency code of the bank account\n        statements:\n          type: array\n          items:\n            $ref: '#/components/schemas/StatementResponse'\n          description: List of bank statements and linked accounting data for the requested period\n      additionalProperties: false\n    BankTransactionResponse:\n      type: object\n      properties:\n        bankTransactionId:\n          type: string\n          description: Xero Identifier of transaction\n          format: uuid\n        batchPaymentId:\n          type: string\n          description: Xero Identifier of batch payment. Present if the transaction is part of a batch.\n          format: uuid\n        contact:\n          $ref: '#/components/schemas/ContactResponse'\n        date:\n          type: string\n          description: Date of transaction - YYYY-MM-DD\n          format: date\n        amount:\n          type: number\n          description: Amount of transaction\n          format: double\n          x-is-money: true\n        lineItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineItemResponse'\n          description: The LineItems element can contain any number of individual LineItem sub-elements. Not included in summary mode\n      additionalProperties: false\n    ContactResponse:\n      type: object\n      properties:\n        contactId:\n          type: string\n          description: Xero Identifier of contact\n          format: uuid\n        contactName:\n          type: string\n          description: Full name of contact/organisation\n      additionalProperties: false\n    CreditNoteResponse:\n      type: object\n      properties:\n        creditNoteId:\n          type: string\n          description: Xero Identifier of credit note\n          format: uuid\n        contact:\n          $ref: '#/components/schemas/ContactResponse'\n        total:\n          type: number\n          description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax); Not included in summary mode\n          format: double\n          x-is-money: true\n        lineItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineItemResponse'\n          description: Not included in summary mode\n      additionalProperties: false\n    InvoiceResponse:\n      type: object\n      properties:\n        invoiceId:\n          type: string\n          description: Xero Identifier of invoice\n          format: uuid\n        contact:\n          $ref: '#/components/schemas/ContactResponse'\n        total:\n          type: number\n          description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax); Not included in summary mode\n          format: double\n          x-is-money: true\n        lineItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineItemResponse'\n          description: Not included in summary mode\n      additionalProperties: false\n    LineItemResponse:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description: Xero Identifier of account\n          format: uuid\n        reportingCode:\n          type: string\n          description: Shown if set\n        lineAmount:\n          type: number\n          description: Amount of line item\n          format: double\n          x-is-money: true\n        accountType:\n          type: string\n          description: Account type\n      additionalProperties: false\n    OverpaymentResponse:\n      type: object\n      properties:\n        overpaymentId:\n          type: string\n          description: Xero Identifier of overpayment\n          format: uuid\n        contact:\n          $ref: '#/components/schemas/ContactResponse'\n        total:\n          type: number\n          description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax); Not included in summary mode\n          format: double\n          x-is-money: true\n        lineItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineItemResponse'\n          description: Not included in summary mode\n      additionalProperties: false\n    PaymentResponse:\n      type: object\n      properties:\n        paymentId:\n          type: string\n          description: Xero Identifier of payment\n          format: uuid\n        batchPaymentId:\n          type: string\n          description: Xero Identifier of batch payment. Present if the payment was created as part of a batch.\n          format: uuid\n        date:\n          type: string\n          description: Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06\n          format: date\n        amount:\n          type: number\n          description: The amount of the payment\n          format: double\n          x-is-money: true\n        bankAmount:\n          type: number\n          description: The bank amount of the payment\n          format: double\n          x-is-money: true\n        currencyRate:\n          type: number\n          description: Exchange rate when payment is received. Only used for non base currency invoices and credit notes e.g. 0.7500\n          format: double\n        invoice:\n          $ref: '#/components/schemas/InvoiceResponse'\n        creditNote:\n          $ref: '#/components/schemas/CreditNoteResponse'\n        prepayment:\n          $ref: '#/components/schemas/PrepaymentResponse'\n        overpayment:\n          $ref: '#/components/schemas/OverpaymentResponse'\n      additionalProperties: false\n    PrepaymentResponse:\n      type: object\n      properties:\n        prepaymentId:\n          type: string\n          description: Xero Identifier of prepayment\n          format: uuid\n        contact:\n          $ref: '#/components/schemas/ContactResponse'\n        total:\n          type: number\n          description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax); Not included in summary mode\n          format: double\n          x-is-money: true\n        lineItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineItemResponse'\n          description: Not included in summary mode\n      additionalProperties: false\n    StatementLineResponse:\n      type: object\n      properties:\n        statementLineId:\n          type: string\n          description: Xero Identifier of statement line\n          format: uuid\n        postedDate:\n          type: string\n          description: Date of when statement line was posted\n          format: date\n        reference:\n          type: string\n          description: Reference description of statement line\n        notes:\n          type: string\n          description: Notes description of statement line\n        chequeNo:\n          type: string\n          description: Cheque number of statement line\n        amount:\n          type: number\n          description: Amount of statement line\n          format: double\n          x-is-money: true\n        transactionDate:\n          type: string\n          description: Transaction date of statement line\n          format: date\n        type:\n          type: string\n          description: Type of statement line\n        isReconciled:\n          type: boolean\n          description: Boolean to show if statement line is reconciled\n        isDuplicate:\n          type: boolean\n          description: Boolean to show if statement line is duplicate\n        isDeleted:\n          type: boolean\n          description: Boolean to show if statement line is deleted\n        payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentResponse'\n          description: List of payments associated with reconciled statement lines\n        bankTransactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/BankTransactionResponse'\n          description: List of bank transactions associated with reconciled statement lines\n      additionalProperties: false\n    StatementResponse:\n      type: object\n      properties:\n        statementId:\n          type: string\n          description: Xero Identifier of statement\n          format: uuid\n        startDate:\n          type: string\n          description: Start date of statement\n          format: date\n        endDate:\n          type: string\n          description: End date of statement\n          format: date\n        importedDateTimeUtc:\n          type: string\n          description: Utc date time of when the statement was imported in Xero\n          format: date-time\n        importSource:\n          type: string\n          description: Indicates the source of the statement data. Either imported from 1) direct bank feed OR 2) manual customer entry or upload. Manual import sources are STMTIMPORTSRC/MANUAL, STMTIMPORTSRC/CSV, STMTIMPORTSRC/OFX, Ofx or STMTIMPORTSRC/QIF. All other import sources are direct and, depending on the direct solution, may contain the name of the financial institution.\n        startBalance:\n          type: number\n          description: Opening balance sourced from imported bank statements (if supplied). Note, for manually uploaded statements, this balance is also manual and usually not supplied.\n          format: double\n          x-is-money: true\n        endBalance:\n            type: number\n            description: Closing balance sourced from imported bank statements (if supplied). Note, for manually uploaded statements, this balance is also manual and usually not supplied.\n            format: double\n            x-is-money: true\n        statementLines:\n          type: array\n          items:\n            $ref: '#/components/schemas/StatementLineResponse'\n          description: List of statement lines\n      additionalProperties: false\n",
			"canonicalURL": "/github.com/XeroAPI/Xero-OpenAPI@36ba3f99bd14a6111b631ae9153811960f272727/-/blob/xero-finance.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/XeroAPI/Xero-OpenAPI/blob/36ba3f99bd14a6111b631ae9153811960f272727/xero-finance.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/CashValidation\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}