{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/clouditor/clouditor"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/assessment/openapi.yaml",
			"byteSize": 8256,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: Assessment API\n    description: |-\n        Representing the link between orchestrator and discovery: Assessing evidences\n         from discovery and sending results to orchestrator\n    version: 0.0.1\npaths:\n    /v1/assessment/evidences:\n        post:\n            tags:\n                - Assessment\n            description: |-\n                Assesses the evidence sent by the discovery. Part of the public API, also\n                 exposed as REST.\n            operationId: Assessment_AssessEvidence\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Evidence'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/AssessEvidenceResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/assessment/results:\n        get:\n            tags:\n                - Assessment\n            description: List all assessment results. Part of the public API, also exposed as REST.\n            operationId: Assessment_ListAssessmentResults\n            parameters:\n                - name: pageSize\n                  in: query\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListAssessmentResultsResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\ncomponents:\n    schemas:\n        AssessEvidenceResponse:\n            type: object\n            properties:\n                status:\n                    enum:\n                        - ASSESSMENT_STATUS_UNSPECIFIED\n                        - WAITING_FOR_RELATED\n                        - ASSESSED\n                        - FAILED\n                    type: string\n                    format: enum\n                statusMessage:\n                    type: string\n        AssessmentResult:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: Assessment result id\n                timestamp:\n                    type: string\n                    description: Time of assessment\n                    format: date-time\n                metricId:\n                    type: string\n                    description: Reference to the metric the assessment was based on\n                metricConfiguration:\n                    $ref: '#/components/schemas/MetricConfiguration'\n                compliant:\n                    type: boolean\n                    description: 'Compliant case: true or false'\n                evidenceId:\n                    type: string\n                    description: Reference to the assessed evidence\n                resourceId:\n                    type: string\n                    description: Reference to the resource of the assessed evidence\n                resourceTypes:\n                    type: array\n                    items:\n                        type: string\n                    description: Resource types\n                nonComplianceComments:\n                    type: string\n                    description: Some comments on the reason for non-compliance\n            description: A result resource, representing the result after assessing the cloud resource with id resource_id.\n        Evidence:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: the ID in a uuid format\n                timestamp:\n                    type: string\n                    description: time of evidence creation\n                    format: date-time\n                serviceId:\n                    type: string\n                    description: Reference to a service this evidence was gathered from\n                toolId:\n                    type: string\n                    description: Reference to the tool which provided the evidence\n                raw:\n                    type: string\n                    description: Contains the evidence in its original form without following a defined schema, e.g. the raw JSON\n                resource:\n                    $ref: '#/components/schemas/GoogleProtobufValue'\n            description: An evidence resource\n        GoogleProtobufAny:\n            type: object\n            properties:\n                '@type':\n                    type: string\n                    description: The type of the serialized message.\n            additionalProperties: true\n            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.\n        GoogleProtobufValue:\n            description: Represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values.\n        ListAssessmentResultsResponse:\n            type: object\n            properties:\n                results:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/AssessmentResult'\n                nextPageToken:\n                    type: string\n        MetricConfiguration:\n            type: object\n            properties:\n                operator:\n                    type: string\n                    description: The operator to compare the metric, such as == or \u003e\n                targetValue:\n                    $ref: '#/components/schemas/GoogleProtobufValue'\n                isDefault:\n                    type: boolean\n                    description: Whether this configuration is a default configuration\n                updatedAt:\n                    type: string\n                    description: The last time of update\n                    format: date-time\n            description: Defines the operator and a target value for an individual metric\n        Status:\n            type: object\n            properties:\n                code:\n                    type: integer\n                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n                    format: int32\n                message:\n                    type: string\n                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n                details:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GoogleProtobufAny'\n                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.\n            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'\ntags:\n    - name: Assessment\n",
			"canonicalURL": "/github.com/clouditor/clouditor@4296b5e2ecb9c33601fe45231f026cde1b71940c/-/blob/openapi/assessment/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/clouditor/clouditor/blob/4296b5e2ecb9c33601fe45231f026cde1b71940c/openapi/assessment/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/assessment/evidences\": post: responses: 200: contents: application/json: generate schema: field status: primitive: format \"enum\": enum format not implemented",
	"NotImplemented": [
		"enum format"
	]
}