{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kinvolk/nebraska"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "backend/api/spec.yaml",
			"byteSize": 50404,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 0.0.1\n  title: Nebraska\n  description: Nebraska is an update manager.\n  contact:\n    name: Kinvolk\n    email: hello@kinvolk.io\n    url: http://kinvolk.io\npaths:\n  /login:\n    get:\n      operationId: login\n      description: login browser flow\n      security: []\n      parameters:\n        - in: query\n          name: login_redirect_url\n          required: true\n          schema:\n            type: string\n      responses:\n        \"302\":\n          description: login response\n        \"400\":\n          description: bad request\n        \"500\":\n          description: internal server error\n        \"501\":\n          description: not implemented for non oidc auth modes\n  /login/token:\n    post:\n      operationId: loginToken\n      description: login token flow\n      security: []\n      requestBody:\n        description: payload for login token\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/loginInfo\"\n      responses:\n        \"200\":\n          description: login token response      \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/loginToken\"\n        \"500\":\n          description: internal server error\n        \"501\":\n          description: not implemented for non oidc auth modes          \n  /login/cb: \n    get:\n      operationId: loginCb\n      description: login callback\n      security: []\n      responses:\n        \"200\":\n          description: login cb success response\n        \"400\":\n          description: bad request\n        \"401\":\n          description: unauthorized\n        \"500\":\n          description: internal server error        \n  /login/validate_token:\n    get:\n      operationId: validateToken\n      description: validate token\n      security: []\n      responses:\n        \"200\":\n          description: validate token response\n  /login/webhook:\n    post:\n      operationId: loginWebhook\n      description: login web hook\n      security: []\n      parameters:\n        - in: header\n          name: X-Hub-Signature\n          required: true\n          schema:\n            type: string\n        - in: header\n          name: X-Github-Event\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: login webhook response\n  /health:\n    get:\n      operationId: health\n      description: health endpoint\n      security: []\n      responses:\n        \"200\":\n          description: health response\n  /config:\n    get:\n      operationId: getConfig\n      description: get app config\n      security:\n        - githubCookieAuth: [] \n      responses:\n        \"200\":\n          description: get config response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/config\"\n  /v1/update:\n    post:\n      operationId: omaha\n      description: omaha endpoint\n      security: []\n      requestBody:\n        description: payload for omaha endpoint\n        required: true\n        content:\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/omahaRequest\"\n      responses:\n        \"200\":\n          description: Omaha Response\n        \"400\":\n          description: Bad Request if request size is too large \n  /api/apps:\n    get:\n      description: get Apps\n      operationId: paginateApps\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: perpage\n          required: false\n          schema:\n            type: integer\n            minimum: 10\n      responses:\n        \"200\":\n          description: Get App success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/appsPage\"\n        \"404\":\n          description: Apps not found response\n        \"400\":\n          description: Bad request response\n    post:\n      description: create app\n      operationId: createApp\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: query\n          name: clone_from\n          required: false\n          schema:\n            type: string\n      requestBody:\n        description: payload for create app\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/appConfig\"\n      responses:\n        \"200\":\n          description: Create App success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/application\"\n        \"400\":\n          description: Bad request response\n        \"500\":\n          description: Create App error response\n\n  /api/apps/{appIDorProductID}:\n    get:\n      description: get app\n      operationId: getApp\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Get app success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/application\"\n        \"404\":\n          description: App not found response\n        \"500\":\n          description: Get App error response\n    put:\n      description: update app\n      operationId: updateApp\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: payload for update app\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/appConfig\"\n      responses:\n        \"200\":\n          description: Update App success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/application\"\n        \"400\":\n          description: Bad request response\n        \"500\":\n          description: Update app error response\n    delete:\n      description: delete app\n      operationId: deleteApp\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Delete App success response\n        \"500\":\n          description: Delete App error response\n\n  /api/apps/{appIDorProductID}/groups:\n    get:\n      description: paginate groups of an app\n      operationId: paginateGroups\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: perpage\n          required: false\n          schema:\n            type: integer\n            minimum: 10\n      responses:\n        \"200\":\n          description: get Groups success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/groupPage\"\n        \"404\":\n          description: Groups not found response\n        \"500\":\n          description: get Groups error response\n    post:\n      description: create group in app\n      operationId: createGroup\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: payload for create group\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/groupConfig\"\n      responses:\n        \"200\":\n          description: Create Group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/group\"\n        \"400\":\n          description: Bad request response\n        \"500\":\n          description: Create Group error response\n\n  /api/apps/{appIDorProductID}/groups/{groupID}:\n    get:\n      description: get group given its groupID and appID\n      operationId: getGroup\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Get Group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/group\"\n        \"404\":\n          description: Group not found response\n        \"500\":\n          description: Get Group error response\n    put:\n      description: update group given its groupID and appID\n      operationId: updateGroup\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: payload for update group\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/groupConfig\"      \n      responses:\n        \"200\":\n          description: Update Group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/group\"\n        \"404\":\n          description: Group not found response\n        \"400\":\n          description: Update Group Bad request response\n        \"500\":\n          description: Update Group error response\n    delete:\n      description: delete group given its groupID and appID\n      operationId: deleteGroup\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Delete Group success response\n        \"404\":\n          description: Group not found response\n        \"500\":\n          description: Delete Group error response\n\n  /api/apps/{appIDorProductID}/groups/{groupID}/version_timeline:\n    get:\n      description: get version timeline of a group given its groupID and appID\n      operationId: getGroupVersionTimeline\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: duration\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Version Timeline of group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/groupVersionCountTimeline\"\n        \"404\":\n          description: Group not found response\n        \"500\":\n          description: Version Timeline of group error response\n  /api/apps/{appIDorProductID}/groups/{groupID}/status_timeline:\n    get:\n      description: get status timeline of a group given its groupID and appID\n      operationId: getGroupStatusTimeline\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: duration\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Status Timeline of group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/groupStatusCountTimeline\"\n        \"404\":\n          description: Group not found response        \n        \"500\":\n          description: Status Timeline of group error response\n\n  /api/apps/{appIDorProductID}/groups/{groupID}/instances_stats:\n    get:\n      description: get instance stats of a group given its groupID and appID\n      operationId: getGroupInstanceStats\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: duration\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instance Stats of group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/groupInstanceStats\"\n        \"404\":\n          description: Group not found response\n        \"500\":\n           description: Instance Stats of group error response\n  /api/apps/{appIDorProductID}/groups/{groupID}/version_breakdown:\n    get:\n      description: get version breakdown of a group given its groupID and appID\n      operationId: getGroupVersionBreakdown\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Version Breakdown of group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/groupVersionBreakdown\"\n        \"404\":\n          description: Group not found response\n        \"500\":\n          description:  Version Breakdown of group error response\n  /api/apps/{appIDorProductID}/channels:\n    get:\n      description: paginate channels of an app\n      operationId: paginateChannels\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in : path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: perpage\n          required: false\n          schema:\n            type: integer\n            minimum: 10\n      responses:\n        \"200\":\n          description: Get channels success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/channelPage\"\n        \"404\":\n          description: Channel not found response\n        \"500\":\n          description: Get channels error response\n    post:\n      description: create channel\n      operationId: createChannel\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in : path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: payload for create channel\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/channelConfig\"      \n      responses:\n        \"200\":\n          description: Create channel success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/channel\"\n        \"400\":\n          description: Bad request response\n        \"500\":\n          description: Create channel error response\n  /api/apps/{appIDorProductID}/channels/{channelID}:\n    get:\n      description: get channel by id\n      operationId: getChannel\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: channelID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Get channel success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/channel\"\n        \"404\":\n          description: Channel not found response\n        \"500\":\n          description: Get channel error response\n    put:\n      description: update channel by id\n      operationId: updateChannel\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: channelID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: payload for create channel\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/channelConfig\"      \n      responses:\n        \"200\":\n          description: Update channel success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/channel\"\n        \"404\":\n          description: Channel not found response\n        \"400\":\n          description: Bad request response\n        \"500\":\n          description: Update channel error response\n    delete:\n      description: delete channel by id\n      operationId: deleteChannel\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: channelID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Delete channel success response\n        \"500\":\n          description: Delete channel error response\n  /api/apps/{appIDorProductID}/packages:\n    get:\n      description: paginate packages of an app\n      operationId: paginatePackages\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: perpage\n          required: false\n          schema:\n            type: integer\n            minimum: 10\n        - in: query\n          name: searchVersion\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: get Packages success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/packagePage\"\n        \"404\":\n          description: Packages not found response\n    post:\n      description: create package\n      operationId: createPackage\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: payload for create package\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/packageConfig\"\n      responses:\n        \"200\":\n          description: Create Package success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/package\"\n        \"400\": \n          description: Create Package bad request response\n        \"500\":\n          description: Create package error response\n  /api/apps/{appIDorProductID}/packages/{packageID}:\n    get:\n      description: get package given its packageID and appID\n      operationId: getPackage\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: packageID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Get Package success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/package\"\n        \"404\":\n          description: Package not found response\n        \"500\":\n          description: Get Package error response\n    put:\n      description: update package given its packageID and appID\n      operationId: updatePackage\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: packageID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: payload for update package\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/packageConfig\"\n      responses:\n        \"200\":\n          description: Update Package success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/package\"\n        \"404\":\n          description: Package not found response\n        \"500\":\n          description: Update package error response\n    delete:\n      description: delete package given its packageID and appID\n      operationId: deletePackage\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: packageID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Delete Package success response\n        \"404\":\n          description: Package not found response\n        \"500\":\n          description: Delete package error response\n  /api/apps/{appIDorProductID}/groups/{groupID}/instances:\n    get:\n      description: get instances of a group given its groupID and appID\n      operationId: getGroupInstances\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: status \n          required: true\n          schema:\n            type: integer\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: perpage\n          required: false\n          schema:\n            type: integer\n            minimum: 10\n        - in: query\n          name: sortFilter\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: searchFilter\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: searchValue\n          required: false\n          schema:\n            type: string        \n        - in: query\n          name: duration\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: version\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Get Instances of a Group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/instancePage\"\n        \"500\":\n          description: Get Instances of a Group error response\n  /api/apps/{appIDorProductID}/groups/{groupID}/instancescount:\n    get:\n      description: get instance count of a group given its groupID and appID\n      operationId: getGroupInstancesCount\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: duration\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Get Instance count of a Group success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/instanceCount\"\n        \"500\":\n          description: Get Instance count of a Group error response\n  /api/apps/{appIDorProductID}/groups/{groupID}/instances/{instanceID}:\n    get:\n      description: get instance of a group given its groupID and appID\n      operationId: getInstance\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: instanceID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Get instance success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/instance\"\n        \"404\":\n          description: Instance not found response\n        \"500\":\n          description: Get instance error response\n  /api/apps/{appIDorProductID}/groups/{groupID}/instances/{instanceID}/status_history:\n    get:\n      description: get instance status_history.\n      operationId: getInstanceStatusHistory\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: appIDorProductID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: groupID\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: instanceID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n      responses:\n        \"200\":\n          description: Get instance status history success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/instanceStatusHistories\"\n        \"404\":\n          description: Instance not found response\n        \"500\":\n          description: Get instance status history error response\n  /api/instances/{instanceID}:\n    put:\n      description: update instance\n      operationId: updateInstance\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: path\n          name: instanceID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: payload for update instance\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updateInstanceConfig\"\n\n      responses:\n        \"200\":\n          description: Update instance success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/instance\"\n        \"500\":\n          description: Update instance error response\n  /api/activity:\n    get:\n      description: paginate activity\n      operationId: paginateActivity\n      security:\n        - oidcBearerAuth: []\n        - oidcCookieAuth: []\n        - githubCookieAuth: []\n      parameters:\n        - in: query\n          name: appIDorProductID\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: groupID\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: channelID\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: instanceID\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: version\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: severity\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: start\n          required: true\n          schema:\n            type: string\n            format: string\n        - in: query\n          name: end\n          required: true\n          schema:\n            type: string\n            format: string\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: perpage\n          required: false\n          schema:\n            type: integer\n            minimum: 10\n      responses:\n        \"200\":\n          description: List activity success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/activityPage\"\n        \"404\":\n          description: Activity not found response\n        \"500\":\n          description: List activity error response\ncomponents:\n  schemas:\n    ## request Body\n    loginInfo:\n      type: object\n      required:\n        - username\n        - password\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n\n    appConfig:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        product_id:\n          type: string\n          nullable: true\n\n    groupConfig:\n      type: object\n      required:\n        - name\n        - policy_max_updates_per_period\n        - policy_period_interval\n        - policy_timezone\n        - policy_update_timeout\n      properties:\n        name:\n          type: string\n          maxLength: 50\n        description:\n          type: string\n          maxLength: 250\n        channel_id:\n          type: string\n        policy_updates_enabled:\n          type: boolean\n        policy_safe_mode:\n          type: boolean\n        policy_office_hours:\n          type: boolean\n        policy_timezone:\n          type: string\n        policy_period_interval:\n          type: string\n        policy_max_updates_per_period:\n          type: integer\n        policy_update_timeout:\n          type: string\n        track:\n          type: string\n          maxLength: 256\n\n    flatcarActionPackage:\n      type: object\n      properties:\n        id:\n          type: string\n        sha256: \n          type: string\n      x-oapi-codegen-extra-tags:\n        json: flatcar_action\n\n    extraFiles:\n      type: array\n      items:\n        type: object\n        properties:\n          id:\n            type: integer\n          name:\n            type: string\n          hash:\n            type: string\n          size:\n            type: string\n      x-oapi-codegen-extra-tags:\n        json: extra_files\n\n    packageConfig:\n      type: object\n      required:\n        - application_id\n        - arch\n        - channels_blacklist\n        - description\n        - filename\n        - hash\n        - size\n        - type\n        - url \n        - version\n      properties:\n        application_id:\n          type: string\n        arch:\n          type: integer\n        channels_blacklist:\n          type: array\n          items:\n            type: string\n        description:\n          type: string\n        filename:\n          type: string\n        hash:\n          type: string\n        size:\n          type: string\n        url:\n          type: string\n        version:\n          type: string\n        type:\n          type: integer\n        flatcarAction:\n          $ref: \"#/components/schemas/flatcarActionPackage\"\n        extraFiles:\n          $ref: \"#/components/schemas/extraFiles\"\n\n    updateInstanceConfig:\n      type: object\n      required:\n        - alias\n      properties:\n        alias:\n          type: string   \n    \n    omahaRequest:\n      type: object\n\n    channelConfig:\n      type: object\n      required:\n        - application_id\n        - arch\n        - color\n        - name\n      properties:\n        application_id:\n          type: string\n        arch:\n          type: integer\n          x-go-type: uint\n        color:\n          type: string\n        name:\n          type: string\n        package_id:\n          type: string\n\n\n    ## response     \n    config:\n      type: object\n      required:\n        - accessManagementUrl\n        - logoutUrl\n        - nebraskaVersion\n        - logo\n        - title\n        - headerStyle\n        - loginUrl\n        - authMode\n      properties:\n        accessManagementUrl:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"access_management_url\"\n        logoutUrl:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"logout_url\"\n        nebraskaVersion:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"nebraska_version\"\n        logo:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"logo\"\n        title:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"title\"\n        headerStyle:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"header_style\"\n        loginUrl:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"login_url\"\n        authMode:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"auth_mode\"\n    loginToken:\n      type: object\n      required:\n        - \"token\"\n      properties:\n        token:\n          type: string\n    flatcarAction:\n      type: object\n      required:\n        - id\n        - event\n        - chromeOSVersion\n        - sha256\n        - needsAdmin\n        - isDelta\n        - disablePayloadBackoff\n        - metadataSignatureRsa\n        - metadataSize\n        - deadline\n        - createdTs\n      properties:\n        id:\n          type: string\n        event:\n          type: string\n        chromeOSVersion:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: chromeos_version\n        sha256:\n          type: string\n        needsAdmin:\n          type: boolean\n          x-oapi-codegen-extra-tags:\n            json: needs_admin\n        isDelta:\n          type: boolean\n          x-oapi-codegen-extra-tags:\n            json: is_delta\n        disablePayloadBackoff:\n          type: boolean\n          x-oapi-codegen-extra-tags:\n            json: disable_payload_backoff\n        metadataSignatureRsa:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: metadata_signature_rsa\n        metadataSize:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: metadata_size\n        deadline:\n          type: string\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: created_ts\n      x-oapi-codegen-extra-tags:\n        json: flatcar_action\n\n    package:\n      type: object\n      required:\n        - id\n        - type\n        - version\n        - url\n        - filename\n        - description\n        - size\n        - hash\n        - createdTs\n        - channelsBlacklist\n        - applicationID\n        - arch\n      properties:\n        id:\n          type: string\n        type:\n          type: integer\n        version:\n          type: string\n        url:\n          type: string\n        filename:\n          type: string\n        description:\n          type: string\n        size:\n          type: string\n        hash:\n          type: string\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: created_ts\n        channelsBlacklist:\n          type: array\n          items:\n            type: string\n          x-oapi-codegen-extra-tags:\n            json: channels_blacklist\n        extraFiles:\n          $ref: \"#/components/schemas/extraFiles\"\n        applicationID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: application_id\n        flatcarAction:\n          $ref: \"#/components/schemas/flatcarAction\"\n        arch:\n          $ref: \"#/components/schemas/arch\"\n\n    arch:\n      type: integer\n\n    channel:\n      type: object\n      required:\n        - id\n        - name\n        - color\n        - createdTs\n        - applicationID\n        - packageID\n        - arch\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n          maxLength: 50\n        color:\n          type: string\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: created_ts\n        applicationID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: application_id\n        packageID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: package_id\n        package:\n          $ref: \"#/components/schemas/package\"\n        arch:\n          $ref: \"#/components/schemas/arch\"\n      x-oapi-codegen-extra-tags:\n        db: channel\n\n    group:\n      type: object\n      required:\n        - id\n        - name\n        - description\n        - createdTs\n        - rolloutInProgress\n        - applicationID\n        - channelID\n        - policyUpdatesEnabled\n        - policySafeMode\n        - policyOfficeHours\n        - policyTimezone\n        - policyPeriodInterval\n        - policyMaxUpdatesPerPeriod\n        - policyUpdateTimeout\n        - track\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: created_ts\n        rolloutInProgress:\n          type: boolean\n          x-oapi-codegen-extra-tags:\n            json: rollout_in_progress\n        applicationID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: application_id\n        channelID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: channel_id\n        policyUpdatesEnabled:\n          type: boolean\n          x-oapi-codegen-extra-tags:\n            json: policy_updates_enabled\n        policySafeMode:\n          type: boolean\n          x-oapi-codegen-extra-tags:\n            json: policy_safe_mode\n        policyOfficeHours:\n          type: boolean\n          x-oapi-codegen-extra-tags:\n            json: policy_office_hours\n        policyTimezone:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: policy_timezone\n        policyPeriodInterval:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: policy_period_interval\n        policyMaxUpdatesPerPeriod:\n          type: integer\n          minimum: 0\n          x-oapi-codegen-extra-tags:\n            json: policy_max_updates_per_period\n        policyUpdateTimeout:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: policy_update_timeout\n        channel:\n          $ref: \"#/components/schemas/channel\"\n        track:\n          type: string\n          \n    groupVersionCountTimeline:\n      type: object\n      x-go-type: map[time.Time]map[string]uint64\n      \n    groupStatusCountTimeline:\n      type: object\n      x-go-type: map[time.Time]map[int]map[string]uint64\n\n    versionBreakdownEntry:\n      type: object\n      required:\n        - version\n        - instance\n        - percentage\n      properties:\n        version:\n          type: string\n        instances:\n          type: integer\n        percentage:\n          type: number\n          format: double\n        \n    groupVersionBreakdown:\n      type: array\n      items: \n        $ref:  \"#/components/schemas/versionBreakdownEntry\"\n\n    application:\n      type: object\n      required:\n        - id\n        - name\n        - description\n        - createdTs\n        - groups\n        - channels\n        - instances\n        - productId\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: created_ts\n        productId:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: \"product_id\"\n        groups:\n          type: array\n          items:\n            $ref: \"#/components/schemas/group\"\n\n        channels:\n          type: array\n          items:\n            $ref: \"#/components/schemas/channel\"\n\n        instances:\n          type: object\n          required:\n            - count\n          properties:\n            count:\n              type: integer\n\n    groupInstanceStats:\n      type: object\n      required:\n        - total\n        - undefined\n        - updateGranted\n        - error\n        - complete\n        - installed\n        - downloaded\n        - downloading\n        - onHold\n      properties:\n        total:\n          type: integer\n        undefined:\n          type: integer\n        updateGranted:\n          type: integer\n          x-oapi-codegen-extra-tags:\n            json: update_granted\n        error:\n          type: integer\n        complete:\n          type: integer\n        installed:\n          type: integer\n        downloaded:\n          type: integer\n        downloading:\n          type: integer\n        onHold:\n          type: integer\n\n    instanceApplication:\n      type: object\n      required:\n        - instanceID\n        - applicationID\n        - groupID\n        - version\n        - createdTs\n        - status\n        - lastCheckForUpdates\n        - lastUpdateGrantedTs\n        - lastUpdateVersion\n        - updateInProgress\n      properties:\n        instanceID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: instance_id\n        applicationID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: application_id\n        groupID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: group_id\n        version:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: version\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: created_ts\n        status:\n          type: integer\n        lastCheckForUpdates:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: last_check_for_updates\n        lastUpdateGrantedTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: last_update_granted_ts\n        lastUpdateVersion:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: last_update_version\n        updateInProgress:\n          type: boolean\n          x-oapi-codegen-extra-tags:\n            json: update_in_progress\n      x-oapi-codegen-extra-tags:\n        json: application\n\n    instance:\n      type: object\n      required:\n        - id\n        - ip\n        - createdTs\n      properties:\n        id:\n          type: string\n        ip:\n          type: string\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: created_ts\n        application:\n          $ref: \"#/components/schemas/instanceApplication\"\n        alias:\n          type: string\n\n    instancePage:\n      type: object\n      required:\n        - total\n        - instances\n      properties:\n        total:\n          type: integer\n        instances:\n          type: array\n          items:\n            $ref: \"#/components/schemas/instance\"\n\n    instanceCount:\n      type: object\n      required:\n        - count\n      properties:\n        count:\n          type: integer\n          x-go-type: uint64\n\n    instanceStatusHistory:\n      type: object\n      required:\n        - status\n        - verison\n        - createdTs\n        - errorCode\n      properties:\n        status:\n          type: integer\n        verison:\n          type: string\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            json: created_ts\n        errorCode:\n          type: string\n          x-oapi-codegen-extra-tags:\n            db: error_code\n            json: error_code\n\n    activity:\n      type: object\n      required:\n        - id\n        - appID\n        - groupID\n        - createdTs\n        - class\n        - severity\n        - version\n        - applicationName\n        - groupName\n        - channelName\n        - instanceID\n      properties:\n        id:\n          type: string\n        appID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: app_id\n        groupID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: group_id\n        createdTs:\n          type: string\n          format: date-time\n          x-oapi-codegen-extra-tags:\n            db: created_ts\n            json: created_ts\n        class:\n          type: integer\n        severity:\n          type: integer\n        version:\n          type: string\n        applicationName:\n          type: string \n          x-oapi-codegen-extra-tags:\n            json: application_name\n        groupName:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: group_name\n        channelName:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: channel_name\n        instanceID:\n          type: string\n          x-oapi-codegen-extra-tags:\n            json: instance_id\n\n    instanceStatusHistories:\n      type: array\n      items:\n        $ref: \"#/components/schemas/instanceStatusHistory\"\n    \n    appsPage:\n      type: object\n      required:\n        - totalCount\n        - count\n        - applications\n      properties:\n        totalCount:\n          type: integer\n        count:\n          type: integer\n        applications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/application\"\n\n    groupPage:\n      type: object\n      required:\n        - totalCount\n        - count\n        - groups\n      properties:\n        totalCount:\n          type: integer\n        count:\n          type: integer\n        groups:\n          type: array\n          items:\n            $ref: \"#/components/schemas/group\"\n\n    channelPage:\n      type: object\n      required:\n        - totalCount\n        - count\n        - channels\n      properties:\n        totalCount:\n          type: integer\n        count:\n          type: integer\n        channels:\n          type: array\n          items:\n            $ref: \"#/components/schemas/channel\"\n    packagePage:\n      type: object\n      required:\n        - totalCount\n        - count\n        - packages\n      properties:\n        totalCount:\n          type: integer\n        count:\n          type: integer\n        packages:\n          type: array\n          items:\n            $ref: \"#/components/schemas/package\"\n\n    activityPage:\n      type: object\n      required:\n        - totalCount\n        - count\n        - activities\n      properties:\n        totalCount:\n          type: integer\n        count:\n          type: integer\n        activities:\n          type: array\n          items:\n            $ref: \"#/components/schemas/activity\"\n\n  securitySchemes:\n    oidcBearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    oidcCookieAuth:\n      type: apiKey\n      in: cookie\n      name: oidc\n    githubCookieAuth:\n      type: apiKey\n      in: cookie\n      name: github\n",
			"canonicalURL": "/github.com/kinvolk/nebraska@1f519c6302e87eb054d9296f1e70917ddfd1f194/-/blob/backend/api/spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kinvolk/nebraska/blob/1f519c6302e87eb054d9296f1e70917ddfd1f194/backend/api/spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/apps/{appIDorProductID}/groups/{groupID}/status_timeline\": get: security: security \"oidcCookieAuth\" (index 1): cookie security not implemented",
	"NotImplemented": [
		"cookie security",
		"unsupported content types"
	]
}