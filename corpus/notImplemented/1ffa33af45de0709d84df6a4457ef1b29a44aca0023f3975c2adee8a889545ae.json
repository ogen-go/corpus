{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/googleapis.com/blogger/v2/openapi.yaml",
			"byteSize": 32073,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://blogger.googleapis.com/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: The Blogger API provides access to posts, comments and pages of a Blogger blog.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Blogger API\n  version: v2\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - analytics\n    - media\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - format: openapi\n      url: https://blogger.googleapis.com/$discovery/rest?version=v2\n      version: \"3.0\"\n  x-providerName: googleapis.com\n  x-serviceName: blogger\nexternalDocs:\n  url: https://developers.google.com/blogger/docs/3.0/getting_started\ntags:\n  - name: blogs\n  - name: comments\n  - name: pages\n  - name: posts\n  - name: users\npaths:\n  \"/v2/blogs/{blogId}\":\n    get:\n      description: Gets a blog by id.\n      operationId: blogger.blogs.get\n      parameters:\n        - in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Blog\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - blogs\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v2/blogs/{blogId}/pages\":\n    get:\n      description: Lists pages.\n      operationId: blogger.pages.list\n      parameters:\n        - in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: fetchBodies\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PageList\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - pages\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v2/blogs/{blogId}/pages/{pageId}\":\n    get:\n      description: Gets a page by blog id and page id.\n      operationId: blogger.pages.get\n      parameters:\n        - in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: pageId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Page\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - pages\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v2/blogs/{blogId}/posts\":\n    get:\n      description: Lists posts.\n      operationId: blogger.posts.list\n      parameters:\n        - in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: fetchBodies\n          schema:\n            type: boolean\n        - in: query\n          name: maxResults\n          schema:\n            type: integer\n        - in: query\n          name: pageToken\n          schema:\n            type: string\n        - in: query\n          name: startDate\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PostList\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - posts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v2/blogs/{blogId}/posts/{postId}\":\n    get:\n      description: Gets a post by blog id and post id\n      operationId: blogger.posts.get\n      parameters:\n        - in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: postId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Post\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - posts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v2/blogs/{blogId}/posts/{postId}/comments\":\n    get:\n      description: Lists comments.\n      operationId: blogger.comments.list\n      parameters:\n        - in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: postId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: fetchBodies\n          schema:\n            type: boolean\n        - in: query\n          name: maxResults\n          schema:\n            type: integer\n        - in: query\n          name: pageToken\n          schema:\n            type: string\n        - in: query\n          name: startDate\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentList\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - comments\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v2/blogs/{blogId}/posts/{postId}/comments/{commentId}\":\n    get:\n      description: Gets a comment by blog id, post id and comment id.\n      operationId: blogger.comments.get\n      parameters:\n        - in: path\n          name: blogId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: postId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: commentId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - comments\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v2/users/{userId}\":\n    get:\n      description: Gets a user by user id.\n      operationId: blogger.users.get\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - users\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v2/users/{userId}/blogs\":\n    get:\n      description: Lists blogs by user id, possibly filtered.\n      operationId: blogger.blogs.list\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlogList\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/blogger\n          Oauth2c:\n            - https://www.googleapis.com/auth/blogger\n      tags:\n        - blogs\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\ncomponents:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n          - \"1\"\n          - \"2\"\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n          - json\n          - media\n          - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    Blog:\n      properties:\n        customMetaData:\n          description: The JSON custom meta-data for the Blog.\n          type: string\n        description:\n          description: The description of this blog. This is displayed underneath the title.\n          type: string\n        id:\n          description: The identifier for this resource.\n          type: string\n        kind:\n          description: The kind of this entry. Always blogger#blog.\n          type: string\n        locale:\n          description: The locale this Blog is set to.\n          properties:\n            country:\n              description: The country this blog's locale is set to.\n              type: string\n            language:\n              description: The language this blog is authored in.\n              type: string\n            variant:\n              description: The language variant this blog is authored in.\n              type: string\n          type: object\n        name:\n          description: The name of this blog. This is displayed as the title.\n          type: string\n        pages:\n          description: The container of pages in this blog.\n          properties:\n            selfLink:\n              description: The URL of the container for pages in this blog.\n              type: string\n            totalItems:\n              description: The count of pages in this blog.\n              format: int32\n              type: integer\n          type: object\n        posts:\n          description: The container of posts in this blog.\n          properties:\n            items:\n              description: The List of Posts for this Blog.\n              items:\n                $ref: \"#/components/schemas/Post\"\n              type: array\n            selfLink:\n              description: The URL of the container for posts in this blog.\n              type: string\n            totalItems:\n              description: The count of posts in this blog.\n              format: int32\n              type: integer\n          type: object\n        published:\n          description: RFC 3339 date-time when this blog was published.\n          type: string\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        status:\n          description: The status of the blog.\n          enum:\n            - LIVE\n            - DELETED\n          type: string\n        updated:\n          description: RFC 3339 date-time when this blog was last updated.\n          type: string\n        url:\n          description: The URL where this blog is published.\n          type: string\n      type: object\n    BlogList:\n      properties:\n        blogUserInfos:\n          description: Admin level list of blog per-user information.\n          items:\n            $ref: \"#/components/schemas/BlogUserInfo\"\n          type: array\n        items:\n          description: The list of Blogs this user has Authorship or Admin rights over.\n          items:\n            $ref: \"#/components/schemas/Blog\"\n          type: array\n        kind:\n          description: The kind of this entity. Always blogger#blogList.\n          type: string\n      type: object\n    BlogPerUserInfo:\n      properties:\n        blogId:\n          description: ID of the Blog resource.\n          type: string\n        hasAdminAccess:\n          description: True if the user has Admin level access to the blog.\n          type: boolean\n        kind:\n          description: The kind of this entity. Always blogger#blogPerUserInfo.\n          type: string\n        photosAlbumKey:\n          description: The Photo Album Key for the user when adding photos to the blog.\n          type: string\n        role:\n          description: Access permissions that the user has for the blog (ADMIN, AUTHOR, or READER).\n          enum:\n            - VIEW_TYPE_UNSPECIFIED\n            - READER\n            - AUTHOR\n            - ADMIN\n          type: string\n        userId:\n          description: ID of the User.\n          type: string\n      type: object\n    BlogUserInfo:\n      properties:\n        blog:\n          $ref: \"#/components/schemas/Blog\"\n          description: The Blog resource.\n        blog_user_info:\n          $ref: \"#/components/schemas/BlogPerUserInfo\"\n          description: Information about a User for the Blog.\n        kind:\n          description: The kind of this entity. Always blogger#blogUserInfo.\n          type: string\n      type: object\n    Comment:\n      properties:\n        author:\n          description: The author of this Comment.\n          properties:\n            displayName:\n              description: The display name.\n              type: string\n            id:\n              description: The identifier of the creator.\n              type: string\n            image:\n              description: The creator's avatar.\n              properties:\n                url:\n                  description: The creator's avatar URL.\n                  type: string\n              type: object\n            url:\n              description: The URL of the creator's Profile page.\n              type: string\n          type: object\n        blog:\n          description: Data about the blog containing this comment.\n          properties:\n            id:\n              description: The identifier of the blog containing this comment.\n              type: string\n          type: object\n        content:\n          description: The actual content of the comment. May include HTML markup.\n          type: string\n        id:\n          description: The identifier for this resource.\n          type: string\n        inReplyTo:\n          description: Data about the comment this is in reply to.\n          properties:\n            id:\n              description: The identified of the parent of this comment.\n              type: string\n          type: object\n        kind:\n          description: The kind of this entry. Always blogger#comment.\n          type: string\n        post:\n          description: Data about the post containing this comment.\n          properties:\n            id:\n              description: The identifier of the post containing this comment.\n              type: string\n          type: object\n        published:\n          description: RFC 3339 date-time when this comment was published.\n          type: string\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        status:\n          description: The status of the comment (only populated for admin users).\n          enum:\n            - LIVE\n            - EMPTIED\n            - PENDING\n            - SPAM\n          type: string\n        updated:\n          description: RFC 3339 date-time when this comment was last updated.\n          type: string\n      type: object\n    CommentList:\n      properties:\n        etag:\n          description: Etag of the response.\n          type: string\n        items:\n          description: The List of Comments for a Post.\n          items:\n            $ref: \"#/components/schemas/Comment\"\n          type: array\n        kind:\n          description: The kind of this entry. Always blogger#commentList.\n          type: string\n        nextPageToken:\n          description: Pagination token to fetch the next page, if one exists.\n          type: string\n        prevPageToken:\n          description: Pagination token to fetch the previous page, if one exists.\n          type: string\n      type: object\n    Page:\n      properties:\n        author:\n          description: The author of this Page.\n          properties:\n            displayName:\n              description: The display name.\n              type: string\n            id:\n              description: The identifier of the creator.\n              type: string\n            image:\n              description: The creator's avatar.\n              properties:\n                url:\n                  description: The creator's avatar URL.\n                  type: string\n              type: object\n            url:\n              description: The URL of the creator's Profile page.\n              type: string\n          type: object\n        blog:\n          description: Data about the blog containing this Page.\n          properties:\n            id:\n              description: The identifier of the blog containing this page.\n              type: string\n          type: object\n        content:\n          description: The body content of this Page, in HTML.\n          type: string\n        etag:\n          description: Etag of the resource.\n          type: string\n        id:\n          description: The identifier for this resource.\n          type: string\n        kind:\n          description: The kind of this entity. Always blogger#page.\n          type: string\n        published:\n          description: RFC 3339 date-time when this Page was published.\n          type: string\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        status:\n          description: The status of the page for admin resources (either LIVE or DRAFT).\n          enum:\n            - LIVE\n            - DRAFT\n            - SOFT_TRASHED\n          type: string\n        title:\n          description: The title of this entity. This is the name displayed in the Admin user interface.\n          type: string\n        updated:\n          description: RFC 3339 date-time when this Page was last updated.\n          type: string\n        url:\n          description: The URL that this Page is displayed at.\n          type: string\n      type: object\n    PageList:\n      properties:\n        etag:\n          description: Etag of the response.\n          type: string\n        items:\n          description: The list of Pages for a Blog.\n          items:\n            $ref: \"#/components/schemas/Page\"\n          type: array\n        kind:\n          description: The kind of this entity. Always blogger#pageList.\n          type: string\n        nextPageToken:\n          description: Pagination token to fetch the next page, if one exists.\n          type: string\n      type: object\n    Post:\n      properties:\n        author:\n          description: The author of this Post.\n          properties:\n            displayName:\n              description: The display name.\n              type: string\n            id:\n              description: The identifier of the creator.\n              type: string\n            image:\n              description: The creator's avatar.\n              properties:\n                url:\n                  description: The creator's avatar URL.\n                  type: string\n              type: object\n            url:\n              description: The URL of the creator's Profile page.\n              type: string\n          type: object\n        blog:\n          description: Data about the blog containing this Post.\n          properties:\n            id:\n              description: The identifier of the Blog that contains this Post.\n              type: string\n          type: object\n        content:\n          description: The content of the Post. May contain HTML markup.\n          type: string\n        customMetaData:\n          description: The JSON meta-data for the Post.\n          type: string\n        etag:\n          description: Etag of the resource.\n          type: string\n        id:\n          description: The identifier of this Post.\n          type: string\n        images:\n          description: Display image for the Post.\n          items:\n            properties:\n              url:\n                type: string\n            type: object\n          type: array\n        kind:\n          description: The kind of this entity. Always blogger#post.\n          type: string\n        labels:\n          description: The list of labels this Post was tagged with.\n          items:\n            type: string\n          type: array\n        location:\n          description: The location for geotagged posts.\n          properties:\n            lat:\n              description: Location's latitude.\n              format: double\n              type: number\n            lng:\n              description: Location's longitude.\n              format: double\n              type: number\n            name:\n              description: Location name.\n              type: string\n            span:\n              description: Location's viewport span. Can be used when rendering a map preview.\n              type: string\n          type: object\n        published:\n          description: RFC 3339 date-time when this Post was published.\n          type: string\n        readerComments:\n          description: Comment control and display setting for readers of this post.\n          enum:\n            - ALLOW\n            - DONT_ALLOW_SHOW_EXISTING\n            - DONT_ALLOW_HIDE_EXISTING\n          type: string\n        replies:\n          description: The container of comments on this Post.\n          properties:\n            items:\n              description: The List of Comments for this Post.\n              items:\n                $ref: \"#/components/schemas/Comment\"\n              type: array\n            selfLink:\n              description: The URL of the comments on this post.\n              type: string\n            totalItems:\n              description: The count of comments on this post.\n              format: int64\n              type: string\n          type: object\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        status:\n          description: Status of the post. Only set for admin-level requests.\n          enum:\n            - LIVE\n            - DRAFT\n            - SCHEDULED\n            - SOFT_TRASHED\n          type: string\n        title:\n          description: The title of the Post.\n          type: string\n        titleLink:\n          description: The title link URL, similar to atom's related link.\n          type: string\n        updated:\n          description: RFC 3339 date-time when this Post was last updated.\n          type: string\n        url:\n          description: The URL where this Post is displayed.\n          type: string\n      type: object\n    PostList:\n      properties:\n        etag:\n          description: Etag of the response.\n          type: string\n        items:\n          description: The list of Posts for this Blog.\n          items:\n            $ref: \"#/components/schemas/Post\"\n          type: array\n        kind:\n          description: The kind of this entity. Always blogger#postList.\n          type: string\n        nextPageToken:\n          description: Pagination token to fetch the next page, if one exists.\n          type: string\n        prevPageToken:\n          description: Pagination token to fetch the previous page, if one exists.\n          type: string\n      type: object\n    User:\n      properties:\n        about:\n          description: Profile summary information.\n          type: string\n        blogs:\n          description: The container of blogs for this user.\n          properties:\n            selfLink:\n              description: The URL of the Blogs for this user.\n              type: string\n          type: object\n        created:\n          description: The timestamp of when this profile was created, in seconds since epoch.\n          type: string\n        displayName:\n          description: The display name.\n          type: string\n        id:\n          description: The identifier for this User.\n          type: string\n        kind:\n          description: The kind of this entity. Always blogger#user.\n          type: string\n        locale:\n          description: This user's locale\n          properties:\n            country:\n              description: The country this blog's locale is set to.\n              type: string\n            language:\n              description: The language this blog is authored in.\n              type: string\n            variant:\n              description: The language variant this blog is authored in.\n              type: string\n          type: object\n        selfLink:\n          description: The API REST URL to fetch this resource from.\n          type: string\n        url:\n          description: The user's profile page.\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/blogger: Manage your Blogger account\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/blogger: Manage your Blogger account\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\nsource:\n  url: {}\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/googleapis.com/blogger/v2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/googleapis.com/blogger/v2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v2/blogs/{blogId}/pages\": get: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}