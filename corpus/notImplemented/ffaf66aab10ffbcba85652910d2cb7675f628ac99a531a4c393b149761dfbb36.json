{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/datacite/lupo"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 42062,
			"content": "openapi: 3.0.0\ninfo:\n  title: REST API\n  description: The REST API is used for all API interactions with DataCite services.\n  contact:\n    name: DataCite Support\n    url: 'https://support.datacite.org'\n    email: support@datacite.org\n  license:\n    name: MIT\n    url: 'https://raw.githubusercontent.com/datacite/lupo/master/LICENSE'\n  version: 2.3.0\nservers:\n  - url: 'https://api.test.datacite.org'\n    description: Staging server\n  - url: 'https://api.datacite.org'\n    description: Production server\ntags:\n  - name: activities\n    description: Activities\n  - name: client-prefixes\n    description: Client Prefixes\n  - name: clients\n    description: Clients\n  - name: dois\n    description: DOIs\n  - name: events\n    description: Events\n  - name: heartbeat\n    description: Heartbeat\n  - name: prefixes\n    description: Prefixes\n  - name: provider-prefixes\n    description: Provider Prefixes\n  - name: providers\n    description: Providers\n  - name: reports\n    description: Reports\npaths:\n  /activities:\n    get:\n      tags:\n        - activities\n      summary: Get a JSON API result of activities.\n      security: []\n      parameters:\n        - in: query\n          name: id\n          description: Find activity by an id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: ids\n          description: Find activities by array of activity ids\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: query\n          description: Search the index by keyword or query string syntax.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: 'page[number]'\n          description: Pagination - page number\n          required: false\n          schema:\n            type: number\n        - in: query\n          name: 'page[size]'\n          required: false\n          description: Pagination - page size\n          schema:\n            type: number\n        - in: query\n          name: 'page[cursor]'\n          required: false\n          description: 'Pagination - page cursor (used instead of page[number])'\n          schema:\n            type: number\n      responses:\n        '200':\n          description: A JSON API result of activities.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Activity'\n  '/activities/{id}':\n    get:\n      parameters:\n        - name: id\n          in: path\n          description: Activity ID\n          required: true\n          schema:\n            type: string\n      tags:\n        - activities\n      summary: Get a JSON API result of a specific activity\n      responses:\n        '200':\n          description: A JSON object.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Activity'\n  /client-prefixes:\n    get:\n      tags:\n        - client-prefixes\n      summary: Returns a list of client-prefixes.\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n        - in: query\n          name: year\n          schema:\n            type: number\n        - in: query\n          name: client-id\n          schema:\n            type: string\n        - in: query\n          name: prefix-id\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: number\n        - in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - name\n              - '-name'\n              - created\n              - '-created'\n      responses:\n        '200':\n          description: A JSON array of client-prefixes.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/ClientPrefix'\n  /clients:\n    get:\n      tags:\n        - clients\n      summary: Returns a list of clients.\n      security: []\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n        - in: query\n          name: year\n          schema:\n            type: number\n        - in: query\n          name: provider-id\n          schema:\n            type: string\n        - in: query\n          name: software\n          schema:\n            type: string\n            enum:\n              - ckan\n              - dataverse\n              - dspace\n              - eprints\n              - escidoc\n              - fedora\n              - hal\n              - invenio\n              - islandora\n              - mysql\n              - nesstar\n              - opus\n        - in: query\n          name: 'page[number]'\n          schema:\n            type: number\n        - in: query\n          name: 'page[size]'\n          schema:\n            type: number\n        - in: query\n          name: include\n          schema:\n            type: string\n            enum:\n              - provider\n              - repository\n        - in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - relevance\n              - name\n              - '-name'\n              - created\n              - '-created'\n      responses:\n        '200':\n          description: A JSON array of clients.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Client'\n    post:\n      tags:\n        - clients\n      summary: Add a new client.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Client'\n      responses:\n        '201':\n          description: Created\n  /clients/totals:\n    get:\n      tags:\n        - clients\n      summary: Returns Clients DOI production statistics.\n      security: []\n      parameters:\n        - in: query\n          name: provider-id\n          schema:\n            type: string\n        - in: query\n          name: state\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A JSON array of clients stats.\n  '/clients/{id}':\n    get:\n      parameters:\n      - name: id\n        in: path\n        description: Client ID\n        required: true\n        schema:\n          type: string\n      tags:\n        - clients\n      summary: Returns a client.\n      security: []\n      responses:\n        '200':\n          description: A JSON object.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Client'\n    put:\n      parameters:\n      - name: id\n        in: path\n        description: Client ID\n        required: true\n        schema:\n          type: string\n      tags:\n        - clients\n      summary: Update a client.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Client'\n      responses:\n        '200':\n          description: OK\n    delete:\n      parameters:\n      - name: id\n        in: path\n        description: Client ID\n        required: true\n        schema:\n          type: string\n      tags:\n        - clients\n      summary: Delete a client.\n      responses:\n        '204':\n          description: No content\n  /dois:\n    get:\n      tags:\n        - dois\n      summary: Return a list of dois.\n      security: []\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n        - in: query\n          name: created\n          schema:\n            type: number\n        - in: query\n          name: registered\n          schema:\n            type: number\n        - in: query\n          name: provider-id\n          schema:\n            type: string\n        - in: query\n          name: client-id\n          schema:\n            type: string\n        - in: query\n          name: person-id\n          schema:\n            type: string\n        - in: query\n          name: resource-type-id\n          schema:\n            type: string\n        - in: query\n          name: subject\n          schema:\n            type: string\n        - in: query\n          name: schema-version\n          schema:\n            type: string\n        - in: query\n          name: random\n          schema:\n            type: boolean\n        - in: query\n          name: sample-size\n          schema:\n            type: number\n        - in: query\n          name: sample-group\n          schema:\n            type: string\n            enum:\n              - client\n              - provider\n              - resource-type\n        - in: query\n          name: 'page[number]'\n          schema:\n            type: number\n        - in: query\n          name: 'page[size]'\n          schema:\n            type: number\n        - in: query\n          name: 'page[cursor]'\n          schema:\n            type: number\n        - in: query\n          name: include\n          schema:\n            type: string\n            enum:\n              - client\n              - media\n        - in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - relevance\n              - name\n              - '-name'\n              - created\n              - '-created'\n              - updated\n              - '-updated'\n      responses:\n        '200':\n          description: A JSON array of dois.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Doi'\n    post:\n      tags:\n        - dois\n      summary: Add a new doi.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Doi'\n      responses:\n        '201':\n          description: Created\n  '/dois/{id}':\n    get:\n      parameters:\n      - name: id\n        in: path\n        description: DOI\n        required: true\n        schema:\n          type: string\n      tags:\n        - dois\n      summary: Returns a doi.\n      security: []\n      responses:\n        '200':\n          description: A JSON object.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Doi'\n    put:\n      parameters:\n      - name: id\n        in: path\n        description: DOI\n        required: true\n        schema:\n          type: string\n      tags:\n        - dois\n      summary: Update a doi.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Doi'\n      responses:\n        '200':\n          description: OK\n    delete:\n      parameters:\n      - name: id\n        in: path\n        description: DOI\n        required: true\n        schema:\n          type: string\n      tags:\n        - dois\n      summary: Delete a doi.\n      responses:\n        '204':\n          description: No content\n  '/dois/{id}/activities':\n    get:\n      parameters:\n      - name: id\n        in: path\n        description: DOI\n        required: true\n        schema:\n          type: string\n      tags:\n        - dois\n        - activities\n      summary: Returns activity for a specific DOI\n      security: []\n      responses:\n        '200':\n          description: A JSON object.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Activity'\n  /events:\n    get:\n      summary: Returns a list of events.\n      security: []\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n        - in: query\n          name: subj-id\n          schema:\n            type: string\n        - in: query\n          name: obj-id\n          schema:\n            type: string\n        - in: query\n          name: doi\n          schema:\n            type: string\n        - in: query\n          name: orcid\n          schema:\n            type: string\n        - in: query\n          name: prefix\n          schema:\n            type: string\n        - in: query\n          name: subtype\n          schema:\n            type: string\n        - in: query\n          name: citation-type\n          schema:\n            type: string\n        - in: query\n          name: source-id\n          schema:\n            type: string\n        - in: query\n          name: registrant-id\n          schema:\n            type: string\n        - in: query\n          name: relation-type-id\n          schema:\n            type: string\n        - in: query\n          name: issn\n          schema:\n            type: string\n        - in: query\n          name: publication-year\n          schema:\n            type: string\n        - in: query\n          name: year-month\n          schema:\n            type: string\n        - in: query\n          name: 'page[number]'\n          schema:\n            type: number\n        - in: query\n          name: 'page[size]'\n          schema:\n            type: number\n        - in: query\n          name: 'page[cursor]'\n          schema:\n            type: number\n        - in: query\n          name: include\n          schema:\n            type: string\n            enum:\n              - subj\n              - obj\n        - in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - relevance\n              - name\n              - '-name'\n              - created\n              - '-created'\n      responses:\n        '200':\n          description: A JSON array of events.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Event'\n      tags:\n        - events\n    post:\n      tags:\n        - events\n      summary: Add a new event.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Event'\n      responses:\n        '201':\n          description: Created\n  '/events/{id}':\n    get:\n      parameters:\n      - name: id\n        in: path\n        description: Event\n        required: true\n        schema:\n          type: string\n      tags:\n        - events\n      summary: Returns an event.\n      security: []\n      responses:\n        '200':\n          description: A JSON array of events.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Event'\n    put:\n      parameters:\n      - name: id\n        in: path\n        description: Event\n        required: true\n        schema:\n          type: string\n      tags:\n        - events\n      summary: Update an event.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Event'\n      responses:\n        '200':\n          description: OK\n    delete:\n      parameters:\n      - name: id\n        in: path\n        description: Event\n        required: true\n        schema:\n          type: string\n      tags:\n        - events\n      summary: Delete an event.\n      responses:\n        '204':\n          description: No content\n  /heartbeat:\n    get:\n      tags:\n        - heartbeat\n      summary: This resource returns the current status of the REST API.\n      security: []\n      responses:\n        '200':\n          description: REST API is operating normally.\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: OK\n        '500':\n          description: REST API is not working properly.\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: failed\n  /prefixes:\n    get:\n      tags:\n        - prefixes\n      summary: Returns a list of prefixes.\n      security: []\n      responses:\n        '200':\n          description: A JSON array of prefixes.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Prefix'\n  /prefixes/totals:\n    get:\n      tags:\n        - prefixes\n      summary: Returns prefixes DOI production statistics.\n      security: []\n      parameters:\n        - in: query\n          name: client-id\n          schema:\n            type: string\n        - in: query\n          name: state\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A JSON array of prefixes stats.\n  '/prefixes/{id}':\n    get:\n      tags:\n        - prefixes\n      summary: A prefix.\n      security: []\n      parameters:\n        - name: id\n          in: path\n          description: DOI\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a prefix.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Prefix'\n  /provider-prefixes:\n    get:\n      tags:\n        - provider-prefixes\n      summary: A JSON array of provider-prefixes.\n      responses:\n        '200':\n          description: A JSON array of provider-prefixes.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/ProviderPrefix'\n  /providers:\n    get:\n      tags:\n        - providers\n      summary: A JSON array of providers.\n      security: []\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n        - in: query\n          name: year\n          schema:\n            type: number\n        - in: query\n          name: region\n          schema:\n            type: string\n            enum:\n              - amer\n              - apac\n              - emea\n        - in: query\n          name: organization-type\n          schema:\n            type: string\n            enum:\n              - academicInstitution\n              - academicLibrary\n              - governmentAgency\n              - nationalInstitution\n              - nationalLibrary\n              - publisher\n              - professionalSociety\n              - researchInstitution\n              - serviceProvider\n              - vendor\n        - in: query\n          name: focus-area\n          schema:\n            type: string\n            enum:\n              - amer\n              - apac\n              - emea\n        - in: query\n          name: 'page[number]'\n          schema:\n            type: number\n        - in: query\n          name: 'page[size]'\n          schema:\n            type: number\n        - in: query\n          name: sort\n          schema:\n            type: string\n            enum:\n              - relevance\n              - name\n              - '-name'\n              - created\n              - '-created'\n      responses:\n        '200':\n          description: A JSON array of prefixes.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n    post:\n      tags:\n        - providers\n      summary: Add a new provider.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Provider'\n      responses:\n        '201':\n          description: Created\n  /providers/totals:\n    get:\n      tags:\n        - providers\n      summary: Returns Providers DOI production statistics.\n      security: []\n      parameters:\n        - in: query\n          name: state\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A JSON array of providers stats.\n  '/providers/{id}':\n    get:\n      parameters:\n      - name: id\n        in: path\n        description: DOI\n        required: true\n        schema:\n          type: string\n      tags:\n        - providers\n      summary: A provider.\n      responses:\n        '200':\n          description: A JSON object.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n    put:\n      parameters:\n      - name: id\n        in: path\n        description: DOI\n        required: true\n        schema:\n          type: string\n      tags:\n        - providers\n      summary: Update a provider.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Provider'\n      responses:\n        '200':\n          description: OK\n    delete:\n      parameters:\n      - name: id\n        in: path\n        description: DOI\n        required: true\n        schema:\n          type: string\n      tags:\n        - providers\n      summary: Delete a provider.\n      responses:\n        '204':\n          description: No content\n  /reports:\n    get:\n      tags:\n        - reports\n      summary: A JSON array of reports.\n      security: []\n      parameters:\n        - in: query\n          name: platform\n          description: \u003e-\n            Name of the Platform the usage is being requested for. This can be\n            omitted if the service provides usage for only one platform.\n          schema:\n            type: string\n        - in: query\n          name: report-name\n          description: The long name of the report.\n          schema:\n            type: string\n        - in: query\n          name: report-id\n          description: \u003e-\n            The report ID or code or shortname. Typically this will be the same\n            code provided in the Report parameter of the request.\n          schema:\n            type: string\n        - in: query\n          name: release\n          description: The release or version of the report.\n          schema:\n            type: string\n        - in: query\n          name: created\n          description: \u003e-\n            Time the report was prepared. Format as defined by date-time -\n            RFC3339\n          schema:\n            type: string\n            format: dateTime\n        - in: query\n          name: created-by\n          description: Name of the organization producing the report.\n          schema:\n            type: string\n        - in: query\n          name: 'page[number]'\n          schema:\n            type: number\n        - in: query\n          name: 'page[size]'\n          schema:\n            type: number\n      responses:\n        '200':\n          description: A JSON array of reports.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Report'\n    post:\n      tags:\n        - reports\n      summary: Add a new report.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Report'\n      responses:\n        '201':\n          description: Created\n  '/reports/{id}':\n    get:\n      parameters:\n      - name: id\n        in: path\n        description: Report\n        required: true\n        schema:\n          type: string\n      tags:\n        - reports\n      summary: A report.\n      responses:\n        '200':\n          description: A JSON object.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Report'\n    put:\n      parameters:\n      - name: id\n        in: path\n        description: Report\n        required: true\n        schema:\n          type: string\n      tags:\n        - reports\n      summary: Update a report.\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/Report'\n      responses:\n        '200':\n          description: OK\n    delete:\n      parameters:\n      - name: id\n        in: path\n        description: Report\n        required: true\n        schema:\n          type: string\n      tags:\n        - reports\n      summary: Delete a report.\n      responses:\n        '204':\n          description: No content\ncomponents:\n  schemas:\n    Client:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n            type:\n              type: string\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                symbol:\n                  type: string\n                contactName:\n                  type: string\n                contactEmail:\n                  type: string\n                description:\n                  type: string\n                domains:\n                  type: string\n                url:\n                  type: string\n                created:\n                  type: string\n                  readOnly: true\n                updated:\n                  type: string\n                  readOnly: true\n      required:\n        - id\n        - attributes - name - symbol - contactName - contactEmail\n      example:\n        id: tib.pangaea\n        attributes:\n          name: Pangaea\n    ClientPrefix:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n            type:\n              type: string\n            attributes:\n              type: object\n              properties:\n                created:\n                  type: string\n                  readOnly: true\n                updated:\n                  type: string\n                  readOnly: true\n      required:\n        - id\n    Activity:\n      type: object\n      description: Represents an activity for an event within DataCite systems.\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              example: 0000-0000-0000-0000\n            type:\n              type: string\n            attributes:\n              type: object\n              properties:\n                'prov:wasGeneratedBy':\n                  type: string\n                'prov:generatedAtTime':\n                  type: string\n                'prov:wasDerivedFrom':\n                  type: string\n                'prov:wasAttributedTo':\n                  type: string\n                action:\n                  type: string\n                version:\n                  type: number\n                changes:\n                  type: object\n    Doi:\n      description: \u003e-\n        Represents a DOI and provides access to metadata attributes, further\n        schema specific information can be found at https://schema.datacite.org\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n            type:\n              type: string\n            attributes:\n              type: object\n              properties:\n                doi:\n                  type: string\n                prefix:\n                  type: string\n                suffix:\n                  type: string\n                event:\n                  description: Can be set to trigger a DOI state change.\n                  type: string\n                  enum:\n                    - publish\n                    - register\n                    - hide\n                  writeOnly: true\n                identifiers:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      identifier:\n                        type: string\n                      identifierType:\n                        type: string\n                creators:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      nameType:\n                        type: string\n                      nameIdentifiers:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            nameIdentifier:\n                              type: string\n                            nameIdentifierScheme:\n                              type: string\n                            schemeUri:\n                              type: string\n                      name:\n                        type: string\n                      givenName:\n                        type: string\n                      familyName:\n                        type: string\n                      affiliation:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            affiliationIdentifier:\n                              type: string\n                            affiliationIdentifierScheme:\n                              type: string\n                            name:\n                              type: string\n                            schemeUri:\n                              type: string\n                titles:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      title:\n                        type: string\n                      titleType:\n                        type: string\n                      lang:\n                        type: string\n                publisher:\n                  type: string\n                container:\n                  readOnly: true\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                    identifier:\n                      type: string\n                    identifierType:\n                      type: string\n                    title:\n                      type: string\n                    volume:\n                      type: string\n                    issue:\n                      type: string\n                    firstPage:\n                      type: string\n                    lastPage:\n                      type: string\n                publicationYear:\n                  type: number\n                subjects:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      subject:\n                        type: string\n                      subjectScheme:\n                        type: string\n                      schemeUri:\n                        type: string\n                      valueUri:\n                        type: string\n                      lang:\n                        type: string\n                contributors:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      nameType:\n                        type: string\n                      nameIdentifiers:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            nameIdentifier:\n                              type: string\n                            nameIdentifierScheme:\n                              type: string\n                            schemeUri:\n                              type: string\n                      name:\n                        type: string\n                      givenName:\n                        type: string\n                      familyName:\n                        type: string\n                      affiliation:\n                        type: string\n                      contributorType:\n                        type: string\n                dates:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      date:\n                        type: string\n                      dateType:\n                        type: string\n                language:\n                  type: string\n                types:\n                  type: object\n                  properties:\n                    resourceTypeGeneral:\n                      type: string\n                    resourceType:\n                      type: string\n                    schemaOrg:\n                      type: string\n                    bibtex:\n                      type: string\n                    citeproc:\n                      type: string\n                    ris:\n                      type: string\n                relatedIdentifiers:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      relatedIdentifier:\n                        type: string\n                      relatedIdentifierType:\n                        type: string\n                      relationType:\n                        type: string\n                      resourceTypeGeneral:\n                        type: string\n                sizes:\n                  type: array\n                  items:\n                    type: string\n                formats:\n                  type: array\n                  items:\n                    type: string\n                version:\n                  type: string\n                rightsList:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      rights:\n                        type: string\n                      rightsUri:\n                        type: string\n                      lang:\n                        type: string\n                descriptions:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      description:\n                        type: string\n                      descriptionType:\n                        type: string\n                      lang:\n                        type: string\n                geoLocations:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      geoLocationPoint:\n                        type: object\n                      geoLocationBox:\n                        type: object\n                      geoLocationPlace:\n                        type: string\n                fundingReferences:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      funderName:\n                        type: string\n                      funderIdentifier:\n                        type: string\n                      funderIdentifierType:\n                        type: string\n                      awardNumber:\n                        type: string\n                      awardUri:\n                        type: string\n                      awardTitle:\n                        type: string\n                url:\n                  type: string\n                contentUrl:\n                  type: array\n                  items:\n                    type: string\n                metadataVersion:\n                  type: number\n                schemaVersion:\n                  type: string\n                source:\n                  type: string\n                isActive:\n                  type: boolean\n                state:\n                  readOnly: true\n                  type: string\n                reason:\n                  type: string\n                landingPage:\n                  description: 'Data describing the landing page, used by link checking.'\n                  type: object\n                  properties:\n                    checked:\n                      type: string\n                    url:\n                      type: string\n                    contentType:\n                      type: string\n                    error:\n                      type: string\n                    redirectCount:\n                      type: number\n                    redirectUrls:\n                      type: array\n                      items:\n                        type: string\n                    downloadLatency:\n                      type: number\n                    hasSchemaOrg:\n                      type: boolean\n                    schemaOrgid:\n                      type: string\n                    dcIdentifier:\n                      type: string\n                    citationDoi:\n                      type: string\n                    bodyhasPid:\n                      type: boolean\n                created:\n                  type: string\n                  readOnly: true\n                registered:\n                  type: string\n                  readOnly: true\n                updated:\n                  type: string\n                  readOnly: true\n      required:\n        - id\n        - attributes - doi - creators - titles - publisher - publicationYear\n      example:\n        id: 10.5438/0014\n        type: dois\n        attributes:\n          doi: 10.5438/0014\n          prefix: 10.5438\n          suffix: 12\n          identifiers:\n            - identifier: 'https://doi.org/10.5438/0014'\n              identifierType: DOI\n          creators:\n            - name: DataCite Metadata Working Group\n          titles:\n            - title: \u003e-\n                DataCite Metadata Schema Documentation for the Publication and\n                Citation of Research Data v4.1\n          publisher: DataCite\n          publicationYear: 2017\n    Event:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n            type:\n              type: string\n            attributes:\n              type: object\n              properties:\n                subjId:\n                  type: string\n                objId:\n                  type: string\n                messageAction:\n                  type: string\n                  enum:\n                    - create\n                    - delete\n                relationTypeId:\n                  type: string\n                sourceToken:\n                  type: string\n                sourceId:\n                  type: string\n                total:\n                  type: number\n                license:\n                  type: string\n                occuredAt:\n                  type: string\n                timestamp:\n                  type: string\n                subj:\n                  type: object\n                obj:\n                  type: object\n      required:\n        - id\n        - attributes - subjId - sourceToken - sourceId\n    Prefix:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            prefix:\n              type: string\n      required:\n        - prefix\n    ProviderPrefix:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                created:\n                  type: string\n                  readOnly: true\n                updated:\n                  type: string\n                  readOnly: true\n      required:\n        - id\n    Provider:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n            name:\n              type: string\n            symbol:\n              type: string\n      required:\n        - id\n        - attributes - name - symbol\n      example:\n        id: bl\n        attributes:\n          name: British Library\n          symbol: BL\n    Report:\n      type: object\n      description: \u003e-\n        Describes the formatting needs for the COUNTER Dataset Report. Response\n        may include the Report_Header (optional), Report_Datasets (usage stats).\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              example: 0000-0000-0000-0000\n            report-name:\n              type: string\n              description: The long name of the report.\n              example: Dataset Report\n            report-id:\n              type: string\n              description: \u003e-\n                The report ID or code or shortname. Typically this will be the\n                same code provided in the Report parameter of the request.\n              example: DSR\n            release:\n              type: string\n              description: The release or version of the report.\n              example: RD1\n            created:\n              type: string\n              format: dateTime\n              description: \u003e-\n                Time the report was prepared. Format as defined by date-time -\n                RFC3339\n              example: '2016-09-08T22:47:31Z'\n            created-by:\n              type: string\n              description: Name of the organization producing the report.\n              example: DataONE\n            report-filters:\n              type: string\n              description: \u003e-\n                Zero or more report filters used for this report. Typically\n                reflect filters provided on the Request. Filters limit the data\n                to be reported on.\n            report-attributes:\n              type: string\n              description: \u003e-\n                Zero or more additional attributes applied to the report.\n                Attributes inform the level of detail in the report.\n            reporting-period:\n              type: string\n              description: Time the report was prepared.\n            report-datasets:\n              type: string\n              description: \u003e-\n                Defines the output for the Report_Datasets being returned in a\n                Dataset Report. Collection of datasets from the report.\n      required:\n        - report-datasets\n        - report-id\n        - report-name\n        - release\n        - created-by\n        - reporting-period\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\nsecurity:\n  - BasicAuth: []\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/datacite/lupo@a7a221e405fdc59a7b3b4c703b196fe235f3a9ff/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/datacite/lupo/blob/a7a221e405fdc59a7b3b4c703b196fe235f3a9ff/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/clients/{id}\": get: responses: 200: contents: unsupported content types: [application/vnd.api+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}