{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aerospike/aerospike-client-rest"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "docs/openapi.json",
			"byteSize": 360128,
			"content": "{\n  \"openapi\":\"3.0.1\",\n  \"info\":{\n    \"title\":\"Aerospike REST Client\",\n    \"description\":\"REST Interface for Aerospike Database.\",\n    \"contact\":{\n      \"name\":\"Aerospike, Inc.\",\n      \"url\":\"https://www.aerospike.com\"\n    },\n    \"license\":{\n      \"name\":\"Apache 2.0 License\",\n      \"url\":\"http://www.apache.org/licenses/LICENSE-2.0\"\n    },\n    \"version\":\"1.10.4\"\n  },\n  \"servers\":[\n    {\n      \"url\":\"http://localhost:8080\",\n      \"description\":\"Generated server url\"\n    }\n  ],\n  \"tags\":[\n    {\n      \"name\":\"Scan Operations\",\n      \"description\":\"Read records in specified namespace, set.\"\n    },\n    {\n      \"name\":\"Admin Operations\",\n      \"description\":\"Manage users and privileges.\"\n    },\n    {\n      \"name\":\"Secondary Index methods\",\n      \"description\":\"Manage secondary indexes.\"\n    },\n    {\n      \"name\":\"Key Value Operations\",\n      \"description\":\"Perform simple operations on a single record.\"\n    },\n    {\n      \"name\":\"Batch Read Operations\",\n      \"description\":\"Retrieve multiple records from the server.\"\n    },\n    {\n      \"name\":\"Cluster information operations\",\n      \"description\":\"Retrieve basic information about the Aerospike cluster.\"\n    },\n    {\n      \"name\":\"Execute Operations\",\n      \"description\":\"Execute operations in background scan/query.\"\n    },\n    {\n      \"name\":\"Info Operations\",\n      \"description\":\"Send info commands to nodes in the Aerospike cluster.\"\n    },\n    {\n      \"name\":\"Document API Operations\",\n      \"description\":\"Perform operations on records using JSONPath queries.\"\n    },\n    {\n      \"name\":\"Truncate Operations\",\n      \"description\":\"Remove multiple records from the server.\"\n    },\n    {\n      \"name\":\"Operate operations\",\n      \"description\":\"Perform multiple operations atomically on a single record.\"\n    }\n  ],\n  \"paths\":{\n    \"/v1/kvs/{namespace}/{set}/{key}\":{\n      \"get\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Return the metadata and bins for a record.\",\n        \"operationId\":\"getRecordNamespaceSetKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Metadata and bins for a record returned successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRecord\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRecord\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Replace the bins of the specified record.\",\n        \"operationId\":\"replaceRecordNamespaceSetKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\",\n                \"additionalProperties\":{\n                  \"type\":\"object\"\n                }\n              },\n              \"examples\":{\n                \"Bins request body example\":{\n                  \"description\":\"Bins request body example\",\n                  \"value\":{\n                    \"bin1\":5,\n                    \"bin2\":\"hello\",\n                    \"bin3\":[\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\":{\n                      \"one\":1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"409\":{\n            \"description\":\"Generation mismatch for operation.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\":{\n            \"description\":\"Modified record successfully, no content expected.\"\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Create a new record with the provided bins into the record.\",\n        \"operationId\":\"createRecordNamespaceSetKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\",\n                \"additionalProperties\":{\n                  \"type\":\"object\"\n                }\n              },\n              \"examples\":{\n                \"Bins request body example\":{\n                  \"description\":\"Bins request body example\",\n                  \"value\":{\n                    \"bin1\":5,\n                    \"bin2\":\"hello\",\n                    \"bin3\":[\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\":{\n                      \"one\":1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"201\":{\n            \"description\":\"Created a new record successfully.\"\n          },\n          \"404\":{\n            \"description\":\"Namespace does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Record Already exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Delete the specified record.\",\n        \"operationId\":\"deleteRecordNamespaceSetKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"responses\":{\n          \"409\":{\n            \"description\":\"Generation mismatch for operation.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\":{\n            \"description\":\"Deleted a record successfully, no content expected.\"\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"head\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"recordExistsNamespaceSetKey\",\n        \"operationId\":\"Check if a record exists\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Record exists indication returned successfully.\"\n          },\n          \"404\":{\n            \"description\":\"Record does not exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Merge the provided bins into the record.\",\n        \"operationId\":\"updateRecordNamespaceSetKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\",\n                \"additionalProperties\":{\n                  \"type\":\"object\"\n                }\n              },\n              \"examples\":{\n                \"Bins request body example\":{\n                  \"description\":\"Bins request body example\",\n                  \"value\":{\n                    \"bin1\":5,\n                    \"bin2\":\"hello\",\n                    \"bin3\":[\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\":{\n                      \"one\":1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"409\":{\n            \"description\":\"Generation mismatch for operation.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\":{\n            \"description\":\"Modified record successfully, no content expected.\"\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record does not exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/kvs/{namespace}/{key}\":{\n      \"get\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Return the metadata and bins for a record.\",\n        \"operationId\":\"getRecordNamespaceKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Metadata and bins for a record returned successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRecord\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRecord\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Replace the bins of the specified record.\",\n        \"operationId\":\"replaceRecordNamespaceKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\",\n                \"additionalProperties\":{\n                  \"type\":\"object\"\n                }\n              },\n              \"examples\":{\n                \"Bins request body example\":{\n                  \"description\":\"Bins request body example\",\n                  \"value\":{\n                    \"bin1\":5,\n                    \"bin2\":\"hello\",\n                    \"bin3\":[\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\":{\n                      \"one\":1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"409\":{\n            \"description\":\"Generation mismatch for operation.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\":{\n            \"description\":\"Modified record successfully, no content expected.\"\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Create a new record with the provided bins into the record.\",\n        \"operationId\":\"createRecordNamespaceKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\",\n                \"additionalProperties\":{\n                  \"type\":\"object\"\n                }\n              },\n              \"examples\":{\n                \"Bins request body example\":{\n                  \"description\":\"Bins request body example\",\n                  \"value\":{\n                    \"bin1\":5,\n                    \"bin2\":\"hello\",\n                    \"bin3\":[\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\":{\n                      \"one\":1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"201\":{\n            \"description\":\"Created a new record successfully.\"\n          },\n          \"404\":{\n            \"description\":\"Namespace does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Record Already exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Delete the specified record.\",\n        \"operationId\":\"deleteRecordNamespaceKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"responses\":{\n          \"409\":{\n            \"description\":\"Generation mismatch for operation.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\":{\n            \"description\":\"Deleted a record successfully, no content expected.\"\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"head\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Check if a record exists\",\n        \"operationId\":\"recordExistsNamespaceKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING\",\n                \"INTEGER\",\n                \"BYTES\",\n                \"DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Record does not exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Record exists indication returned successfully.\"\n          }\n        }\n      },\n      \"patch\":{\n        \"tags\":[\n          \"Key Value Operations\"\n        ],\n        \"summary\":\"Merge the provided bins into the record.\",\n        \"operationId\":\"updateRecordNamespaceKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"Bins to be stored in the record. This is a mapping from a string bin name to a value. Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can only be sent using MessagePack\\n example: {\\\"bin1\\\":5, \\\"bin2\\\":\\\"hello\\\", \\\"bin3\\\": [1,2,3], \\\"bin4\\\": {\\\"one\\\": 1}}\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\",\n                \"additionalProperties\":{\n                  \"type\":\"object\"\n                }\n              },\n              \"examples\":{\n                \"Bins request body example\":{\n                  \"description\":\"Bins request body example\",\n                  \"value\":{\n                    \"bin1\":5,\n                    \"bin2\":\"hello\",\n                    \"bin3\":[\n                      1,\n                      2,\n                      3\n                    ],\n                    \"bin4\":{\n                      \"one\":1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"409\":{\n            \"description\":\"Generation mismatch for operation.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\":{\n            \"description\":\"Modified record successfully, no content expected.\"\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record does not exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/document/{namespace}/{set}/{key}\":{\n      \"get\":{\n        \"tags\":[\n          \"Document API Operations\"\n        ],\n        \"summary\":\"Retrieve the object in the document with key documentKey that is referenced by the JSON path.\",\n        \"operationId\":\"getDocumentObjectSet\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"User key for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Specify a set of bins to handle the JSONPath query.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"jsonPath\",\n            \"in\":\"query\",\n            \"description\":\"JSONPath query parameter.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Document read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"examples\":{\n                  \"Get document object response example\":{\n                    \"description\":\"Get document object response example\",\n                    \"value\":{\n                      \"docBin2\":[\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ],\n                      \"docBin1\":[\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ]\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"examples\":{\n                  \"Get document object response example\":{\n                    \"description\":\"Get document object response example\",\n                    \"value\":{\n                      \"docBin2\":[\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ],\n                      \"docBin1\":[\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\":{\n        \"tags\":[\n          \"Document API Operations\"\n        ],\n        \"summary\":\"Put a document.\",\n        \"operationId\":\"putDocumentObjectSet\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"User key for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Specify a set of bins to handle the JSONPath query.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"jsonPath\",\n            \"in\":\"query\",\n            \"description\":\"JSONPath query parameter.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"JSON Object\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\"\n              },\n              \"examples\":{\n                \"JSON object request body example\":{\n                  \"description\":\"JSON object request body example\",\n                  \"value\":\"str3\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to put a document has been accepted.\"\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Document API Operations\"\n        ],\n        \"summary\":\"Append an object to a list in a document specified by a JSON path.\",\n        \"operationId\":\"appendDocumentObjectSet\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"User key for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Specify a set of bins to handle the JSONPath query.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"jsonPath\",\n            \"in\":\"query\",\n            \"description\":\"JSONPath query parameter.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"JSON Object\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\"\n              },\n              \"examples\":{\n                \"JSON object request body example\":{\n                  \"description\":\"JSON object request body example\",\n                  \"value\":\"str3\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to append an object to a list in a document has been accepted.\"\n          }\n        }\n      },\n      \"delete\":{\n        \"tags\":[\n          \"Document API Operations\"\n        ],\n        \"summary\":\"Delete an object in a document specified by a JSON path.\",\n        \"operationId\":\"deleteDocumentObjectSet\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"User key for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Specify a set of bins to handle the JSONPath query.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"jsonPath\",\n            \"in\":\"query\",\n            \"description\":\"JSONPath query parameter.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\":{\n            \"description\":\"Deleted an object in a document successfully, no content expected.\"\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/document/{namespace}/{key}\":{\n      \"get\":{\n        \"tags\":[\n          \"Document API Operations\"\n        ],\n        \"summary\":\"Retrieve the object in the document with key documentKey that is referenced by the JSON path.\",\n        \"operationId\":\"getDocumentObject\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"User key for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Specify a set of bins to handle the JSONPath query.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"jsonPath\",\n            \"in\":\"query\",\n            \"description\":\"JSONPath query parameter.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Document read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"examples\":{\n                  \"Get document object response example\":{\n                    \"description\":\"Get document object response example\",\n                    \"value\":{\n                      \"docBin2\":[\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ],\n                      \"docBin1\":[\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ]\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"examples\":{\n                  \"Get document object response example\":{\n                    \"description\":\"Get document object response example\",\n                    \"value\":{\n                      \"docBin2\":[\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ],\n                      \"docBin1\":[\n                        \"A1\",\n                        \"B1\",\n                        \"C1\",\n                        \"D1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\":{\n        \"tags\":[\n          \"Document API Operations\"\n        ],\n        \"summary\":\"Put a document.\",\n        \"operationId\":\"putDocumentObject\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"User key for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Specify a set of bins to handle the JSONPath query.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"jsonPath\",\n            \"in\":\"query\",\n            \"description\":\"JSONPath query parameter.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"JSON Object\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\"\n              },\n              \"examples\":{\n                \"JSON object request body example\":{\n                  \"description\":\"JSON object request body example\",\n                  \"value\":\"str3\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to put a document has been accepted.\"\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Document API Operations\"\n        ],\n        \"summary\":\"Append an object to a list in a document specified by a JSON path.\",\n        \"operationId\":\"appendDocumentObject\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"User key for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Specify a set of bins to handle the JSONPath query.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"jsonPath\",\n            \"in\":\"query\",\n            \"description\":\"JSONPath query parameter.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"JSON Object\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"object\"\n              },\n              \"examples\":{\n                \"JSON object request body example\":{\n                  \"description\":\"JSON object request body example\",\n                  \"value\":\"str3\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to append an object to a list in a document has been accepted.\"\n          }\n        }\n      },\n      \"delete\":{\n        \"tags\":[\n          \"Document API Operations\"\n        ],\n        \"summary\":\"Delete an object in a document specified by a JSON path.\",\n        \"operationId\":\"deleteDocumentObject\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"User key for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Specify a set of bins to handle the JSONPath query.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"jsonPath\",\n            \"in\":\"query\",\n            \"description\":\"JSONPath query parameter.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"204\":{\n            \"description\":\"Deleted an object in a document successfully, no content expected.\"\n          },\n          \"404\":{\n            \"description\":\"Record not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operate/{namespace}/{set}/{key}\":{\n      \"post\":{\n        \"tags\":[\n          \"Operate operations\"\n        ],\n        \"summary\":\"Perform multiple operations atomically on the specified record.\",\n        \"operationId\":\"operateNamespaceSetKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"description\":\"An array of operation objects specifying the operations to perform on the record\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Multiple operations on a record performed successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRecord\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRecord\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Namespace or set does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Generation conflict.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operate/{namespace}/{key}\":{\n      \"post\":{\n        \"tags\":[\n          \"Operate operations\"\n        ],\n        \"summary\":\"Perform multiple operations atomically on the specified record.\",\n        \"operationId\":\"operateNamespaceKey\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"path\",\n            \"description\":\"Userkey for the record.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"description\":\"An array of operation objects specifying the operations to perform on the record\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Multiple operations on a record performed successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRecord\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRecord\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Namespace or set does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Generation conflict.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operate/read/{namespace}\":{\n      \"post\":{\n        \"tags\":[\n          \"Operate operations\"\n        ],\n        \"summary\":\"Perform read operations on multiple records.\",\n        \"operationId\":\"operateBatchNamespace\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"allowInline\",\n            \"in\":\"query\",\n            \"description\":\"Allow batch to be processed immediately in the server's receiving thread when the server deems it to be appropriate.  If false, the batch will always be processed in separate transaction threads.  This field is only relevant for the new batch index protocol.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"maxConcurrentThreads\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of concurrent synchronous batch request threads to server nodes at any point in time. If there are 16 node/namespace combinations requested and maxConcurrentThreads is 8, then batch requests will be made for 8 node/namespace combinations in parallel threads. When a request completes, a new request will be issued until all 16 requests are complete.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sendSetName\",\n            \"in\":\"query\",\n            \"description\":\"Send set name field to server for every key in the batch for batch index protocol.\\nThis is only necessary when authentication is enabled and security roles are defined on a per set basis.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"query\",\n            \"description\":\"Record keys to perform operations on.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"description\":\"An array of operation objects specifying the operations to perform on the record\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Namespace or set does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Read operations on multiple records performed successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Generation conflict.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operate/read/{namespace}/{set}\":{\n      \"post\":{\n        \"tags\":[\n          \"Operate operations\"\n        ],\n        \"summary\":\"Perform read operations on multiple records.\",\n        \"operationId\":\"operateBatchNamespaceSet\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"allowInline\",\n            \"in\":\"query\",\n            \"description\":\"Allow batch to be processed immediately in the server's receiving thread when the server deems it to be appropriate.  If false, the batch will always be processed in separate transaction threads.  This field is only relevant for the new batch index protocol.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"maxConcurrentThreads\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of concurrent synchronous batch request threads to server nodes at any point in time. If there are 16 node/namespace combinations requested and maxConcurrentThreads is 8, then batch requests will be made for 8 node/namespace combinations in parallel threads. When a request completes, a new request will be issued until all 16 requests are complete.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sendSetName\",\n            \"in\":\"query\",\n            \"description\":\"Send set name field to server for every key in the batch for batch index protocol.\\nThis is only necessary when authentication is enabled and security roles are defined on a per set basis.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"key\",\n            \"in\":\"query\",\n            \"description\":\"Record keys to perform operations on.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"description\":\"An array of operation objects specifying the operations to perform on the record\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Namespace or set does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Read operations on multiple records performed successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientRecord\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Generation conflict.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/info\":{\n      \"post\":{\n        \"tags\":[\n          \"Info Operations\"\n        ],\n        \"summary\":\"Send a list of info commands to a random node in the cluster\",\n        \"operationId\":\"infoAny\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"An array of info commands to send to the server. See https://www.aerospike.com/docs/reference/info/ for a list of valid commands.\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"type\":\"string\"\n                }\n              },\n              \"examples\":{\n                \"Array of info commands request body example\":{\n                  \"description\":\"Array of info commands request body example\",\n                  \"value\":[\n                    \"build\",\n                    \"edition\"\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"type\":\"string\"\n                }\n              },\n              \"examples\":{\n                \"Array of info commands request body example\":{\n                  \"description\":\"Array of info commands request body example\",\n                  \"value\":[\n                    \"build\",\n                    \"edition\"\n                  ]\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to perform the info command.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Commands sent successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"examples\":{\n                  \"Info response example\":{\n                    \"description\":\"Info response example\",\n                    \"value\":{\n                      \"edition\":\"Aerospike Enterprise Edition\",\n                      \"name\":\"BB9DE9B1B270008\"\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"examples\":{\n                  \"Info response example\":{\n                    \"description\":\"Info response example\",\n                    \"value\":{\n                      \"edition\":\"Aerospike Enterprise Edition\",\n                      \"name\":\"BB9DE9B1B270008\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/info/{node}\":{\n      \"post\":{\n        \"tags\":[\n          \"Info Operations\"\n        ],\n        \"summary\":\"Send a list of info commands to a specific node in the cluster.\",\n        \"operationId\":\"infoNode\",\n        \"parameters\":[\n          {\n            \"name\":\"node\",\n            \"in\":\"path\",\n            \"description\":\"The node ID for the node which will receive the info commands.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"description\":\"An array of info commands to send to the server. See https://www.aerospike.com/docs/reference/info/ for a list of valid commands.\",\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"type\":\"string\"\n                }\n              },\n              \"examples\":{\n                \"Array of info commands request body example\":{\n                  \"description\":\"Array of info commands request body example\",\n                  \"value\":[\n                    \"build\",\n                    \"edition\"\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"type\":\"string\"\n                }\n              },\n              \"examples\":{\n                \"Array of info commands request body example\":{\n                  \"description\":\"Array of info commands request body example\",\n                  \"value\":[\n                    \"build\",\n                    \"edition\"\n                  ]\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to perform the info command\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"The specified Node does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Commands sent successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"examples\":{\n                  \"Info response example\":{\n                    \"description\":\"Info response example\",\n                    \"value\":{\n                      \"edition\":\"Aerospike Enterprise Edition\",\n                      \"name\":\"BB9DE9B1B270008\"\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"examples\":{\n                  \"Info response example\":{\n                    \"description\":\"Info response example\",\n                    \"value\":{\n                      \"edition\":\"Aerospike Enterprise Edition\",\n                      \"name\":\"BB9DE9B1B270008\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/index\":{\n      \"get\":{\n        \"tags\":[\n          \"Secondary Index methods\"\n        ],\n        \"summary\":\"Return information about multiple secondary indexes.\",\n        \"operationId\":\"indexInformation\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"namespace\",\n            \"in\":\"query\",\n            \"description\":\"If specified, the list of returned indices will only contain entries from this namespace.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified namespace not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Information about secondary indexes read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientIndex\"\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientIndex\"\n                  }\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Secondary Index methods\"\n        ],\n        \"summary\":\"Create a secondary index.\",\n        \"operationId\":\"createIndex\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"$ref\":\"#/components/schemas/RestClientIndex\"\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"$ref\":\"#/components/schemas/RestClientIndex\"\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Index with the same name already exists, or equivalent index exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to create a secondary index has been accepted.\"\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid index creation parameters.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/execute/scan/{namespace}\":{\n      \"post\":{\n        \"tags\":[\n          \"Execute Operations\"\n        ],\n        \"summary\":\"Perform multiple operations in background scan/query.\",\n        \"operationId\":\"executeScanNamespace\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"description\":\"An array of operation objects specifying the operations to perform on the record.\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientOperation\"\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"description\":\"An array of operation objects specifying the operations to perform on the record.\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Namespace or set does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Multiple operations in background scan/query run successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientExecuteTask\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientExecuteTask\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Generation conflict.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/execute/scan/{namespace}/{set}\":{\n      \"post\":{\n        \"tags\":[\n          \"Execute Operations\"\n        ],\n        \"summary\":\"Perform multiple operations in background scan/query.\",\n        \"operationId\":\"executeScanNamespaceSet\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"expiration\",\n            \"in\":\"query\",\n            \"description\":\"Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"generation\",\n            \"in\":\"query\",\n            \"description\":\"Expected generation. Generation is the number of times a record has been modified (including creation) on the server.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"durableDelete\",\n            \"in\":\"query\",\n            \"description\":\"If the transaction results in a record deletion, leave a tombstone for the record.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"respondAllOps\",\n            \"in\":\"query\",\n            \"description\":\"For client operate(), return a result for every operation.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"commitLevel\",\n            \"in\":\"query\",\n            \"description\":\"Desired consistency guarantee when committing a transaction on the server.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"COMMIT_ALL, COMMIT_MASTER\"\n              ]\n            }\n          },\n          {\n            \"name\":\"generationPolicy\",\n            \"in\":\"query\",\n            \"description\":\"Qualify how to handle record writes based on record generation.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"NONE, EXPECT_GEN_EQUAL, EXPECT_GEN_GT\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordExistsAction\",\n            \"in\":\"query\",\n            \"description\":\"How to handle the existence of the record. This is ignored for POST/PUT/UPDATE kvs methods.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"UPDATE, UPDATE_ONLY, REPLACE, REPLACE_ONLY, CREATE_ONLY\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"description\":\"An array of operation objects specifying the operations to perform on the record.\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientOperation\"\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"description\":\"An array of operation objects specifying the operations to perform on the record.\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientOperation\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Namespace or set does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Multiple operations in background scan/query run successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientExecuteTask\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientExecuteTask\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"Generation conflict.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/batch\":{\n      \"post\":{\n        \"tags\":[\n          \"Batch Read Operations\"\n        ],\n        \"summary\":\"Return multiple records from the server in a single request.\",\n        \"operationId\":\"performBatchGet\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"allowInline\",\n            \"in\":\"query\",\n            \"description\":\"Allow batch to be processed immediately in the server's receiving thread when the server deems it to be appropriate.  If false, the batch will always be processed in separate transaction threads.  This field is only relevant for the new batch index protocol.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"maxConcurrentThreads\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of concurrent synchronous batch request threads to server nodes at any point in time. If there are 16 node/namespace combinations requested and maxConcurrentThreads is 8, then batch requests will be made for 8 node/namespace combinations in parallel threads. When a request completes, a new request will be issued until all 16 requests are complete.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sendSetName\",\n            \"in\":\"query\",\n            \"description\":\"Send set name field to server for every key in the batch for batch index protocol.\\nThis is only necessary when authentication is enabled and security roles are defined on a per set basis.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientBatchReadBody\"\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientBatchReadBody\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Batch read completed successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientBatchReadResponse\"\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientBatchReadResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Non existent namespace used in one or more key.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/user\":{\n      \"get\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Return a list of information about users.\",\n        \"operationId\":\"getUsers\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"403\":{\n            \"description\":\"Not authorized to read user information.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Users information read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/User\"\n                  }\n                },\n                \"examples\":{\n                  \"Users response example\":{\n                    \"description\":\"Users response example\",\n                    \"value\":[\n                      {\n                        \"name\":\"user1\",\n                        \"roles\":[\n                          \"sys-admin\"\n                        ],\n                        \"readInfo\":[\n                          0\n                        ],\n                        \"writeInfo\":[\n                          0\n                        ],\n                        \"connsInUse\":0\n                      }\n                    ]\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/User\"\n                  }\n                },\n                \"examples\":{\n                  \"Users response example\":{\n                    \"description\":\"Users response example\",\n                    \"value\":[\n                      {\n                        \"name\":\"user1\",\n                        \"roles\":[\n                          \"sys-admin\"\n                        ],\n                        \"readInfo\":[\n                          0\n                        ],\n                        \"writeInfo\":[\n                          0\n                        ],\n                        \"connsInUse\":0\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Create a new user.\",\n        \"operationId\":\"createUser\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"$ref\":\"#/components/schemas/RestClientUserModel\"\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"$ref\":\"#/components/schemas/RestClientUserModel\"\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"409\":{\n            \"description\":\"User already exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid user creation parameters.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to create a user has been accepted.\"\n          },\n          \"403\":{\n            \"description\":\"Not authorized to create users.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/user/{user}/role\":{\n      \"post\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Grant a set of roles to the specified user.\",\n        \"operationId\":\"grantRoles\",\n        \"parameters\":[\n          {\n            \"name\":\"user\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"type\":\"string\"\n                }\n              },\n              \"examples\":{\n                \"List of roles request body example\":{\n                  \"description\":\"List of roles request body example\",\n                  \"value\":[\n                    \"read-write\",\n                    \"read-write-udf\"\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"type\":\"string\"\n                }\n              },\n              \"examples\":{\n                \"List of roles request body example\":{\n                  \"description\":\"List of roles request body example\",\n                  \"value\":[\n                    \"read-write\",\n                    \"read-write-udf\"\n                  ]\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"403\":{\n            \"description\":\"Not authorized to modify users.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified user not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to grant set of roles to a user has been accepted.\"\n          },\n          \"400\":{\n            \"description\":\"Invalid role parameters.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role\":{\n      \"get\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Return a list of all roles registered with the Aerospike cluster.\",\n        \"operationId\":\"getRoles\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Roles information read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientRole\"\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"type\":\"array\",\n                  \"items\":{\n                    \"$ref\":\"#/components/schemas/RestClientRole\"\n                  }\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to read role information.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Create a role on the Aerospike cluster.\",\n        \"operationId\":\"createRole\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"$ref\":\"#/components/schemas/RestClientRole\"\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"$ref\":\"#/components/schemas/RestClientRole\"\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"409\":{\n            \"description\":\"Role already exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid role creation parameters.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to create a role has been accepted.\"\n          },\n          \"403\":{\n            \"description\":\"Not authorized to create roles.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role/{name}/quota\":{\n      \"post\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Set maximum reads/writes per second limits for a role.\",\n        \"operationId\":\"setRoleQuotas\",\n        \"parameters\":[\n          {\n            \"name\":\"name\",\n            \"in\":\"path\",\n            \"description\":\"The name of the role to which quotas will be set.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"$ref\":\"#/components/schemas/RestClientRoleQuota\"\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"$ref\":\"#/components/schemas/RestClientRoleQuota\"\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"409\":{\n            \"description\":\"Role already exists.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to modify a role has been accepted.\"\n          },\n          \"400\":{\n            \"description\":\"Invalid role creation parameters.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to create roles.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role/{name}/privilege\":{\n      \"post\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Grant a list of privileges to a specific role.\",\n        \"operationId\":\"grantPrivileges\",\n        \"parameters\":[\n          {\n            \"name\":\"name\",\n            \"in\":\"path\",\n            \"description\":\"The name of the role to which privileges will be granted.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientPrivilege\"\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientPrivilege\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to modify a role has been accepted.\"\n          },\n          \"403\":{\n            \"description\":\"Not authorized to modify roles.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid privilege parameters.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified role not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/user/{user}\":{\n      \"get\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Return information about a specific user.\",\n        \"operationId\":\"getUser\",\n        \"parameters\":[\n          {\n            \"name\":\"user\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Specified user not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to read user information.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"User information read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"examples\":{\n                  \"User response example\":{\n                    \"description\":\"User response example\",\n                    \"value\":{\n                      \"name\":\"user1\",\n                      \"roles\":[\n                        \"sys-admin\"\n                      ],\n                      \"readInfo\":[\n                        0\n                      ],\n                      \"writeInfo\":[\n                        0\n                      ],\n                      \"connsInUse\":0\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"examples\":{\n                  \"User response example\":{\n                    \"description\":\"User response example\",\n                    \"value\":{\n                      \"name\":\"user1\",\n                      \"roles\":[\n                        \"sys-admin\"\n                      ],\n                      \"readInfo\":[\n                        0\n                      ],\n                      \"writeInfo\":[\n                        0\n                      ],\n                      \"connsInUse\":0\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Remove a user.\",\n        \"operationId\":\"dropUser\",\n        \"parameters\":[\n          {\n            \"name\":\"user\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Specified user not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to delete a user has been accepted.\"\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to delete users.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Change the password of the specified user.\",\n        \"operationId\":\"changePassword\",\n        \"parameters\":[\n          {\n            \"name\":\"user\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"string\"\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"403\":{\n            \"description\":\"Not authorized to modify users.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified user not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to change user's password has been accepted.\"\n          }\n        }\n      }\n    },\n    \"/v1/admin/user/{user}/role/delete\":{\n      \"patch\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Revoke a set of roles from the specified user.\",\n        \"operationId\":\"revokeRoles\",\n        \"parameters\":[\n          {\n            \"name\":\"user\",\n            \"in\":\"path\",\n            \"description\":\"The user from which to revoke roles\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"type\":\"string\"\n                }\n              },\n              \"examples\":{\n                \"List of roles request body example\":{\n                  \"description\":\"List of roles request body example\",\n                  \"value\":[\n                    \"read-write\",\n                    \"read-write-udf\"\n                  ]\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"type\":\"string\"\n                }\n              },\n              \"examples\":{\n                \"List of roles request body example\":{\n                  \"description\":\"List of roles request body example\",\n                  \"value\":[\n                    \"read-write\",\n                    \"read-write-udf\"\n                  ]\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"403\":{\n            \"description\":\"Not authorized to modify users.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified user not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to revoke set of roles from a user has been accepted.\"\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid role parameters.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role/{name}/privilege/delete\":{\n      \"patch\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Remove a list of privileges from a specific role.\",\n        \"operationId\":\"revokePrivileges\",\n        \"parameters\":[\n          {\n            \"name\":\"name\",\n            \"in\":\"path\",\n            \"description\":\"The name of the role from which privileges will be removed.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientPrivilege\"\n                }\n              }\n            },\n            \"application/msgpack\":{\n              \"schema\":{\n                \"type\":\"array\",\n                \"items\":{\n                  \"$ref\":\"#/components/schemas/RestClientPrivilege\"\n                }\n              }\n            }\n          },\n          \"required\":true\n        },\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to modify a role has been accepted.\"\n          },\n          \"403\":{\n            \"description\":\"Not authorized to modify roles.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid privilege parameters.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified role not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/scan/{namespace}\":{\n      \"get\":{\n        \"tags\":[\n          \"Scan Operations\"\n        ],\n        \"summary\":\"Return multiple records from the server in a scan request.\",\n        \"operationId\":\"performScan\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"maxRecords\",\n            \"in\":\"query\",\n            \"description\":\"Number of records to return.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"recordsPerSecond\",\n            \"in\":\"query\",\n            \"description\":\"Limit returned records per second (rps) rate for each server.\\nDo not apply rps limit if recordsPerSecond is zero.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxConcurrentNodes\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of concurrent requests to server nodes at any point in time. If there are 16 nodes in the cluster and maxConcurrentNodes is 8, then scan requests will be made to 8 nodes in parallel.  When a scan completes, a new scan request will be issued until all 16 nodes have been scanned.\\nThis field is only relevant when concurrentNodes is true.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"concurrentNodes\",\n            \"in\":\"query\",\n            \"description\":\"Should scan requests be issued in parallel.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"includeBinData\",\n            \"in\":\"query\",\n            \"description\":\"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"from\",\n            \"in\":\"query\",\n            \"description\":\"Next page token parameter.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Namespace or set does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Scan multiple records successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientScanResponse\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientScanResponse\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/scan/{namespace}/{set}\":{\n      \"get\":{\n        \"tags\":[\n          \"Scan Operations\"\n        ],\n        \"summary\":\"Return multiple records from the server in a scan request.\",\n        \"operationId\":\"performScan_1\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"Namespace for the record; equivalent to database name.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"Set for the record; equivalent to database table.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"sendKey\",\n            \"in\":\"query\",\n            \"description\":\"Send user defined key in addition to hash digest on both reads and writes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"replica\",\n            \"in\":\"query\",\n            \"description\":\"Replica algorithm used to determine the target node for a single record command.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"MASTER, MASTER_PROLES, SEQUENCE, RANDOM\"\n              ]\n            }\n          },\n          {\n            \"name\":\"keytype\",\n            \"in\":\"query\",\n            \"description\":\"The Type of the userKey.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"STRING, INTEGER, BYTES, DIGEST\"\n              ]\n            }\n          },\n          {\n            \"name\":\"recordBins\",\n            \"in\":\"query\",\n            \"description\":\"Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"readModeSC\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALLOW_REPLICA, ALLOW_UNAVAILABLE, LINEARIZE, SESSION\"\n              ]\n            }\n          },\n          {\n            \"name\":\"readModeAP\",\n            \"in\":\"query\",\n            \"description\":\"Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"ALL, ONE\"\n              ]\n            }\n          },\n          {\n            \"name\":\"totalTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Total transaction timeout in milliseconds.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"socketTimeout\",\n            \"in\":\"query\",\n            \"description\":\"Socket idle timeout in milliseconds when processing a database command.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"sleepBetweenRetries\",\n            \"in\":\"query\",\n            \"description\":\"Milliseconds to sleep between retries.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxRetries\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of retries before aborting the current transaction.\\nThe initial attempt is not counted as a retry.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"predexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Predicate Expression filter (obsolete as of Aerospike Database 5.2.0) in infix notation DSL. If the Predicate Expression exists and evaluates to false, the transaction is ignored.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"filterexp\",\n            \"in\":\"query\",\n            \"description\":\"Optional Filter Expression (introduced in Aerospike Database 5.2.0) in infix notation DSL.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"compress\",\n            \"in\":\"query\",\n            \"description\":\"Use zlib compression on command buffers sent to the server and responses received from the server when the buffer size is greater than 128 bytes.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"maxRecords\",\n            \"in\":\"query\",\n            \"description\":\"Number of records to return.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"recordsPerSecond\",\n            \"in\":\"query\",\n            \"description\":\"Limit returned records per second (rps) rate for each server.\\nDo not apply rps limit if recordsPerSecond is zero.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"maxConcurrentNodes\",\n            \"in\":\"query\",\n            \"description\":\"Maximum number of concurrent requests to server nodes at any point in time. If there are 16 nodes in the cluster and maxConcurrentNodes is 8, then scan requests will be made to 8 nodes in parallel.  When a scan completes, a new scan request will be issued until all 16 nodes have been scanned.\\nThis field is only relevant when concurrentNodes is true.\",\n            \"schema\":{\n              \"type\":\"integer\"\n            }\n          },\n          {\n            \"name\":\"concurrentNodes\",\n            \"in\":\"query\",\n            \"description\":\"Should scan requests be issued in parallel.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"includeBinData\",\n            \"in\":\"query\",\n            \"description\":\"Should bin data be retrieved. If false, only record digests (and user keys if stored on the server) are retrieved.\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"from\",\n            \"in\":\"query\",\n            \"description\":\"Next page token parameter.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"404\":{\n            \"description\":\"Namespace or set does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Scan multiple records successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientScanResponse\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientScanResponse\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/index/{namespace}/{name}\":{\n      \"get\":{\n        \"tags\":[\n          \"Secondary Index methods\"\n        ],\n        \"summary\":\"Get Information about a single secondary index.\",\n        \"operationId\":\"getIndexStats\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"The namespace containing the index\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"name\",\n            \"in\":\"path\",\n            \"description\":\"The name of the index\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified Index does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Information about secondary index read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"examples\":{\n                  \"Secondary index response example\":{\n                    \"description\":\"Secondary index response example\",\n                    \"value\":{\n                      \"loadtime\":0,\n                      \"delete_success\":0,\n                      \"keys\":0,\n                      \"nbtr_memory_used\":0,\n                      \"delete_error\":0,\n                      \"load_pct\":100,\n                      \"stat_gc_recs\":0,\n                      \"query_basic_abort\":0,\n                      \"histogram\":false,\n                      \"entries\":0,\n                      \"query_basic_error\":0,\n                      \"query_basic_complete\":0,\n                      \"ibtr_memory_used\":18432,\n                      \"write_error\":0,\n                      \"query_basic_avg_rec_count\":0,\n                      \"write_success\":0\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"examples\":{\n                  \"Secondary index response example\":{\n                    \"description\":\"Secondary index response example\",\n                    \"value\":{\n                      \"loadtime\":0,\n                      \"delete_success\":0,\n                      \"keys\":0,\n                      \"nbtr_memory_used\":0,\n                      \"delete_error\":0,\n                      \"load_pct\":100,\n                      \"stat_gc_recs\":0,\n                      \"query_basic_abort\":0,\n                      \"histogram\":false,\n                      \"entries\":0,\n                      \"query_basic_error\":0,\n                      \"query_basic_complete\":0,\n                      \"ibtr_memory_used\":18432,\n                      \"write_error\":0,\n                      \"query_basic_avg_rec_count\":0,\n                      \"write_success\":0\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\":{\n        \"tags\":[\n          \"Secondary Index methods\"\n        ],\n        \"summary\":\"Remove a secondary Index\",\n        \"operationId\":\"dropIndex\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"The namespace containing the index\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"name\",\n            \"in\":\"path\",\n            \"description\":\"The name of the index\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified Index does not exist.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to remove a secondary index has been accepted.\"\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/execute/scan/status/{taskId}\":{\n      \"get\":{\n        \"tags\":[\n          \"Execute Operations\"\n        ],\n        \"description\":\"Get status of background scan by task id.\",\n        \"operationId\":\"executeScanStatus\",\n        \"parameters\":[\n          {\n            \"name\":\"taskId\",\n            \"in\":\"path\",\n            \"description\":\"Background scan task id.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Status of background scan read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientExecuteTaskStatus\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientExecuteTaskStatus\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/cluster\":{\n      \"get\":{\n        \"tags\":[\n          \"Cluster information operations\"\n        ],\n        \"summary\":\"Return an object containing information about the Aerospike cluster.\",\n        \"operationId\":\"getClusterInfo\",\n        \"parameters\":[\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Cluster information read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"examples\":{\n                  \"Cluster info response example\":{\n                    \"description\":\"Cluster info response example\",\n                    \"value\":{\n                      \"nodes\":[\n                        {\n                          \"name\":\"BB9020011AC4202\"\n                        }\n                      ],\n                      \"namespaces\":[\n                        {\n                          \"sets\":[\n                            {\n                              \"objectCount\":1,\n                              \"name\":\"junit\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"msgpack\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"executeSet\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"scanSet\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"auth\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"idxDemo\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"truncate\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"otherset\"\n                            }\n                          ],\n                          \"name\":\"test\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              },\n              \"application/msgpack\":{\n                \"examples\":{\n                  \"Cluster info response example\":{\n                    \"description\":\"Cluster info response example\",\n                    \"value\":{\n                      \"nodes\":[\n                        {\n                          \"name\":\"BB9020011AC4202\"\n                        }\n                      ],\n                      \"namespaces\":[\n                        {\n                          \"sets\":[\n                            {\n                              \"objectCount\":1,\n                              \"name\":\"junit\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"msgpack\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"executeSet\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"scanSet\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"auth\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"idxDemo\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"truncate\"\n                            },\n                            {\n                              \"objectCount\":0,\n                              \"name\":\"otherset\"\n                            }\n                          ],\n                          \"name\":\"test\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/admin/role/{name}\":{\n      \"get\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Get information about a specific role.\",\n        \"operationId\":\"getRole\",\n        \"parameters\":[\n          {\n            \"name\":\"name\",\n            \"in\":\"path\",\n            \"description\":\"The name of the role whose information should be retrieved.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"200\":{\n            \"description\":\"Role read successfully.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRole\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientRole\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to read role information.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified role not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\":{\n        \"tags\":[\n          \"Admin Operations\"\n        ],\n        \"summary\":\"Remove a specific role from the Aerospike cluster.\",\n        \"operationId\":\"dropRole\",\n        \"parameters\":[\n          {\n            \"name\":\"name\",\n            \"in\":\"path\",\n            \"description\":\"The name of the role to remove.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"404\":{\n            \"description\":\"Specified role not found.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to remove a role has been accepted.\"\n          },\n          \"403\":{\n            \"description\":\"Not authorized to remove roles.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/truncate/{namespace}\":{\n      \"delete\":{\n        \"tags\":[\n          \"Truncate Operations\"\n        ],\n        \"summary\":\"Truncate records in a specified namespace.\",\n        \"operationId\":\"truncateNamespace\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"The namespace whose records will be truncated.\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"date\",\n            \"in\":\"query\",\n            \"description\":\"All records last updated before this date/time will be truncated. If not specified, all records will be truncated.\\n This is a string representation of a date time utilizing the ISO-8601 extended offset date-time format. example: 2019-12-03T10:15:30+01:00\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            },\n            \"example\":\"2019-12-03T10:15:30+01:00\"\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to truncate record has been accepted.\"\n          }\n        }\n      }\n    },\n    \"/v1/truncate/{namespace}/{set}\":{\n      \"delete\":{\n        \"tags\":[\n          \"Truncate Operations\"\n        ],\n        \"summary\":\"Truncate records in a specified namespace and set.\",\n        \"operationId\":\"truncateSet\",\n        \"parameters\":[\n          {\n            \"name\":\"namespace\",\n            \"in\":\"path\",\n            \"description\":\"The namespace whose records will be truncated\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"set\",\n            \"in\":\"path\",\n            \"description\":\"The set, in the specified namespace, whose records will be truncated\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"date\",\n            \"in\":\"query\",\n            \"description\":\"All records last updated before this date/time will be truncated. If not specified, all records will be truncated.\\n This is a string representation of a date time utilizing the ISO-8601 extended offset date-time format. example: 2019-12-03T10:15:30+01:00\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            },\n            \"example\":\"2019-12-03T10:15:30+01:00\"\n          },\n          {\n            \"name\":\"Authorization\",\n            \"in\":\"header\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"500\":{\n            \"description\":\"REST Client encountered an error while processing the request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"400\":{\n            \"description\":\"Invalid parameters or request.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"403\":{\n            \"description\":\"Not authorized to access the resource.\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              },\n              \"application/msgpack\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/RestClientError\"\n                }\n              }\n            }\n          },\n          \"202\":{\n            \"description\":\"Request to truncate record has been accepted.\"\n          }\n        }\n      }\n    }\n  },\n  \"components\":{\n    \"schemas\":{\n      \"RestClientError\":{\n        \"required\":[\n          \"inDoubt\"\n        ],\n        \"type\":\"object\",\n        \"properties\":{\n          \"message\":{\n            \"type\":\"string\",\n            \"description\":\"A message describing the cause of the error.\",\n            \"example\":\"Error Message\"\n          },\n          \"inDoubt\":{\n            \"type\":\"boolean\",\n            \"description\":\"A boolean specifying whether it was possible that the operation succeeded. This is only included if true.\",\n            \"example\":false\n          },\n          \"internalErrorCode\":{\n            \"type\":\"integer\",\n            \"description\":\"An internal error code for diagnostic purposes. This may be null\",\n            \"format\":\"int32\",\n            \"example\":-3\n          }\n        }\n      },\n      \"RestClientOperation\":{\n        \"required\":[\n          \"opValues\",\n          \"operation\"\n        ],\n        \"type\":\"object\",\n        \"properties\":{\n          \"operation\":{\n            \"type\":\"string\",\n            \"description\":\"Aerospike operation to perform on the record\",\n            \"example\":\"LIST_APPEND_ITEMS\",\n            \"enum\":[\n              \"ADD\",\n              \"APPEND\",\n              \"GET\",\n              \"PREPEND\",\n              \"READ\",\n              \"GET_HEADER\",\n              \"TOUCH\",\n              \"PUT\",\n              \"DELETE\",\n              \"LIST_APPEND\",\n              \"LIST_APPEND_ITEMS\",\n              \"LIST_CLEAR\",\n              \"LIST_GET\",\n              \"LIST_GET_BY_INDEX\",\n              \"LIST_GET_BY_INDEX_RANGE\",\n              \"LIST_GET_BY_RANK\",\n              \"LIST_GET_BY_RANK_RANGE\",\n              \"LIST_GET_BY_VALUE_REL_RANK_RANGE\",\n              \"LIST_GET_BY_VALUE\",\n              \"LIST_GET_BY_VALUE_RANGE\",\n              \"LIST_GET_BY_VALUE_LIST\",\n              \"LIST_GET_RANGE\",\n              \"LIST_INCREMENT\",\n              \"LIST_INSERT\",\n              \"LIST_INSERT_ITEMS\",\n              \"LIST_POP\",\n              \"LIST_POP_RANGE\",\n              \"LIST_REMOVE\",\n              \"LIST_REMOVE_BY_INDEX\",\n              \"LIST_REMOVE_BY_INDEX_RANGE\",\n              \"LIST_REMOVE_BY_RANK\",\n              \"LIST_REMOVE_BY_RANK_RANGE\",\n              \"LIST_REMOVE_BY_VALUE_REL_RANK_RANGE\",\n              \"LIST_REMOVE_BY_VALUE\",\n              \"LIST_REMOVE_BY_VALUE_RANGE\",\n              \"LIST_REMOVE_BY_VALUE_LIST\",\n              \"LIST_REMOVE_RANGE\",\n              \"LIST_SET\",\n              \"LIST_SET_ORDER\",\n              \"LIST_SIZE\",\n              \"LIST_SORT\",\n              \"LIST_TRIM\",\n              \"LIST_CREATE\",\n              \"MAP_CLEAR\",\n              \"MAP_DECREMENT\",\n              \"MAP_GET_BY_INDEX\",\n              \"MAP_GET_BY_INDEX_RANGE\",\n              \"MAP_GET_BY_KEY\",\n              \"MAP_GET_BY_KEY_LIST\",\n              \"MAP_GET_BY_KEY_RANGE\",\n              \"MAP_GET_BY_RANK\",\n              \"MAP_GET_BY_RANK_RANGE\",\n              \"MAP_GET_BY_VALUE\",\n              \"MAP_GET_BY_VALUE_RANGE\",\n              \"MAP_GET_BY_VALUE_LIST\",\n              \"MAP_GET_BY_KEY_REL_INDEX_RANGE\",\n              \"MAP_GET_BY_VALUE_REL_RANK_RANGE\",\n              \"MAP_INCREMENT\",\n              \"MAP_PUT\",\n              \"MAP_PUT_ITEMS\",\n              \"MAP_REMOVE_BY_INDEX\",\n              \"MAP_REMOVE_BY_INDEX_RANGE\",\n              \"MAP_REMOVE_BY_KEY\",\n              \"MAP_REMOVE_BY_KEY_RANGE\",\n              \"MAP_REMOVE_BY_RANK\",\n              \"MAP_REMOVE_BY_RANK_RANGE\",\n              \"MAP_REMOVE_BY_KEY_REL_INDEX_RANGE\",\n              \"MAP_REMOVE_BY_VALUE_REL_RANK_RANGE\",\n              \"MAP_REMOVE_BY_VALUE\",\n              \"MAP_REMOVE_BY_VALUE_RANGE\",\n              \"MAP_REMOVE_BY_VALUE_LIST\",\n              \"MAP_SET_MAP_POLICY\",\n              \"MAP_SIZE\",\n              \"MAP_CREATE\",\n              \"BIT_RESIZE\",\n              \"BIT_INSERT\",\n              \"BIT_REMOVE\",\n              \"BIT_SET\",\n              \"BIT_OR\",\n              \"BIT_XOR\",\n              \"BIT_AND\",\n              \"BIT_NOT\",\n              \"BIT_LSHIFT\",\n              \"BIT_RSHIFT\",\n              \"BIT_ADD\",\n              \"BIT_SUBTRACT\",\n              \"BIT_SET_INT\",\n              \"BIT_GET\",\n              \"BIT_COUNT\",\n              \"BIT_LSCAN\",\n              \"BIT_RSCAN\",\n              \"BIT_GET_INT\",\n              \"HLL_INIT\",\n              \"HLL_ADD\",\n              \"HLL_SET_UNION\",\n              \"HLL_SET_COUNT\",\n              \"HLL_FOLD\",\n              \"HLL_COUNT\",\n              \"HLL_UNION\",\n              \"HLL_UNION_COUNT\",\n              \"HLL_INTERSECT_COUNT\",\n              \"HLL_SIMILARITY\",\n              \"HLL_DESCRIBE\"\n            ]\n          },\n          \"opValues\":{\n            \"type\":\"object\",\n            \"additionalProperties\":{\n              \"type\":\"object\",\n              \"example\":{\n                \"bin\":\"listbin\",\n                \"values\":[\n                  1,\n                  2,\n                  3\n                ]\n              }\n            },\n            \"example\":{\n              \"bin\":\"listbin\",\n              \"values\":[\n                1,\n                2,\n                3\n              ]\n            }\n          }\n        }\n      },\n      \"RestClientRecord\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"generation\":{\n            \"type\":\"integer\",\n            \"description\":\"The generation of the record.\",\n            \"format\":\"int32\",\n            \"example\":2\n          },\n          \"ttl\":{\n            \"type\":\"integer\",\n            \"description\":\"The time to live for the record, in seconds from now.\",\n            \"format\":\"int32\",\n            \"example\":1000\n          },\n          \"bins\":{\n            \"type\":\"object\",\n            \"additionalProperties\":{\n              \"type\":\"object\",\n              \"description\":\"A mapping from binName to binValue\",\n              \"example\":{\n                \"bin1\":\"val1\",\n                \"pi\":\"3.14\"\n              }\n            },\n            \"description\":\"A mapping from binName to binValue\",\n            \"example\":{\n              \"bin1\":\"val1\",\n              \"pi\":\"3.14\"\n            }\n          }\n        },\n        \"description\":\"Record associated with the key. Null if the record was not found\"\n      },\n      \"RestClientIndex\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"namespace\":{\n            \"type\":\"string\",\n            \"example\":\"testNS\"\n          },\n          \"set\":{\n            \"type\":\"string\",\n            \"example\":\"testSet\"\n          },\n          \"bin\":{\n            \"type\":\"string\",\n            \"description\":\"The bin which is indexed\",\n            \"example\":\"ageBin\"\n          },\n          \"name\":{\n            \"type\":\"string\",\n            \"description\":\"The name of the index. This must be unique per set\",\n            \"example\":\"ageIndex\"\n          },\n          \"type\":{\n            \"type\":\"string\",\n            \"enum\":[\n              \"NUMERIC\",\n              \"STRING\",\n              \"GEO2DSPHERE\"\n            ]\n          },\n          \"collection_type\":{\n            \"type\":\"string\",\n            \"enum\":[\n              \"DEFAULT\",\n              \"LIST\",\n              \"MAPKEYS\",\n              \"MAPVALUES\"\n            ]\n          }\n        }\n      },\n      \"RestClientExecuteTask\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"taskId\":{\n            \"type\":\"integer\",\n            \"description\":\"The task ID value.\",\n            \"format\":\"int64\"\n          },\n          \"scan\":{\n            \"type\":\"boolean\",\n            \"description\":\"The scan indicator.\"\n          }\n        }\n      },\n      \"RestClientBatchReadBody\":{\n        \"required\":[\n          \"key\"\n        ],\n        \"type\":\"object\",\n        \"properties\":{\n          \"key\":{\n            \"$ref\":\"#/components/schemas/RestClientKey\"\n          },\n          \"readAllBins\":{\n            \"type\":\"boolean\",\n            \"description\":\"Whether all bins should be returned with this record.\"\n          },\n          \"binNames\":{\n            \"type\":\"array\",\n            \"description\":\"List of bins to limit the record response to.\",\n            \"example\":[\n              \"bin1\"\n            ],\n            \"items\":{\n              \"type\":\"string\",\n              \"description\":\"List of bins to limit the record response to.\",\n              \"example\":\"[\\\"bin1\\\"]\"\n            }\n          }\n        }\n      },\n      \"RestClientKey\":{\n        \"required\":[\n          \"namespace\",\n          \"userKey\"\n        ],\n        \"type\":\"object\",\n        \"properties\":{\n          \"namespace\":{\n            \"type\":\"string\",\n            \"example\":\"testNS\"\n          },\n          \"userKey\":{\n            \"type\":\"object\",\n            \"description\":\"The user key, it may be a string, integer, or URL safe Base64 encoded bytes.\",\n            \"example\":\"userKey\"\n          },\n          \"setName\":{\n            \"type\":\"string\",\n            \"example\":\"testSet\"\n          },\n          \"keytype\":{\n            \"type\":\"string\",\n            \"description\":\"Enum describing the type of the userKey. This field is omitted in MessagePack responses.\",\n            \"example\":\"STRING\",\n            \"enum\":[\n              \"STRING\",\n              \"INTEGER\",\n              \"BYTES\",\n              \"DIGEST\"\n            ]\n          }\n        },\n        \"description\":\"Key to retrieve a record\"\n      },\n      \"RestClientBatchReadResponse\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"record\":{\n            \"$ref\":\"#/components/schemas/RestClientRecord\"\n          },\n          \"key\":{\n            \"$ref\":\"#/components/schemas/RestClientKey\"\n          },\n          \"readAllBins\":{\n            \"type\":\"boolean\",\n            \"description\":\"Whether all bins should be returned with this record\"\n          },\n          \"binNames\":{\n            \"type\":\"array\",\n            \"description\":\"List of bins to limit the record response to.\",\n            \"example\":[\n              \"bin1\"\n            ],\n            \"items\":{\n              \"type\":\"string\",\n              \"description\":\"List of bins to limit the record response to.\",\n              \"example\":\"[\\\"bin1\\\"]\"\n            }\n          }\n        }\n      },\n      \"RestClientUserModel\":{\n        \"required\":[\n          \"password\",\n          \"roles\",\n          \"username\"\n        ],\n        \"type\":\"object\",\n        \"properties\":{\n          \"username\":{\n            \"type\":\"string\"\n          },\n          \"password\":{\n            \"type\":\"string\"\n          },\n          \"roles\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"string\"\n            }\n          }\n        }\n      },\n      \"RestClientPrivilege\":{\n        \"required\":[\n          \"code\"\n        ],\n        \"type\":\"object\",\n        \"properties\":{\n          \"code\":{\n            \"type\":\"string\",\n            \"enum\":[\n              \"user-admin\",\n              \"sys-admin\",\n              \"data-admin\",\n              \"read\",\n              \"read-write\",\n              \"read-write-udf\",\n              \"write\"\n            ]\n          },\n          \"namespace\":{\n            \"type\":\"string\",\n            \"description\":\"Namespace Scope\",\n            \"example\":\"testNS\"\n          },\n          \"set\":{\n            \"type\":\"string\",\n            \"description\":\"setName Scope\",\n            \"example\":\"testSet\"\n          }\n        },\n        \"description\":\"List of assigned privileges.\"\n      },\n      \"RestClientRole\":{\n        \"required\":[\n          \"name\",\n          \"privileges\"\n        ],\n        \"type\":\"object\",\n        \"properties\":{\n          \"name\":{\n            \"type\":\"string\",\n            \"description\":\"Role name.\",\n            \"example\":\"customRole\"\n          },\n          \"privileges\":{\n            \"type\":\"array\",\n            \"description\":\"List of assigned privileges.\",\n            \"items\":{\n              \"$ref\":\"#/components/schemas/RestClientPrivilege\"\n            }\n          },\n          \"whitelist\":{\n            \"type\":\"array\",\n            \"description\":\"List of allowable IP addresses.\",\n            \"items\":{\n              \"type\":\"string\",\n              \"description\":\"List of allowable IP addresses.\"\n            }\n          },\n          \"readQuota\":{\n            \"type\":\"integer\",\n            \"description\":\"Maximum reads per second limit.\",\n            \"format\":\"int32\"\n          },\n          \"writeQuota\":{\n            \"type\":\"integer\",\n            \"description\":\"Maximum writes per second limit.\",\n            \"format\":\"int32\"\n          }\n        }\n      },\n      \"RestClientRoleQuota\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"readQuota\":{\n            \"type\":\"integer\",\n            \"description\":\"Maximum reads per second limit.\",\n            \"format\":\"int32\"\n          },\n          \"writeQuota\":{\n            \"type\":\"integer\",\n            \"description\":\"Maximum writes per second limit.\",\n            \"format\":\"int32\"\n          }\n        }\n      },\n      \"Pagination\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"nextToken\":{\n            \"type\":\"string\",\n            \"description\":\"The next page token.\"\n          },\n          \"totalRecords\":{\n            \"type\":\"integer\",\n            \"description\":\"The total number of records in page.\",\n            \"format\":\"int64\"\n          }\n        },\n        \"description\":\"Pagination details.\"\n      },\n      \"RestClientScanResponse\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"records\":{\n            \"type\":\"array\",\n            \"description\":\"List of records for current page.\",\n            \"items\":{\n              \"$ref\":\"#/components/schemas/RestClientRecord\"\n            }\n          },\n          \"pagination\":{\n            \"$ref\":\"#/components/schemas/Pagination\"\n          }\n        }\n      },\n      \"RestClientExecuteTaskStatus\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"task\":{\n            \"$ref\":\"#/components/schemas/RestClientExecuteTask\"\n          },\n          \"status\":{\n            \"type\":\"string\",\n            \"description\":\"The ExecuteTask status.\"\n          }\n        }\n      },\n      \"User\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"name\":{\n            \"type\":\"string\"\n          },\n          \"roles\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"string\"\n            }\n          },\n          \"readInfo\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"integer\",\n              \"format\":\"int32\"\n            }\n          },\n          \"writeInfo\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"integer\",\n              \"format\":\"int32\"\n            }\n          },\n          \"connsInUse\":{\n            \"type\":\"integer\",\n            \"format\":\"int32\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/aerospike/aerospike-client-rest@329dfcaaf2319e5f6a31b95802aa3bd264b138d7/-/blob/docs/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/aerospike/aerospike-client-rest/blob/329dfcaaf2319e5f6a31b95802aa3bd264b138d7/docs/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/index/{namespace}/{name}\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}