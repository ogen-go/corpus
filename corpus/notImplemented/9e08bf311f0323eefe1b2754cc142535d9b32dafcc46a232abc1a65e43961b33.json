{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dojot/dojot"
		},
		"file": {
			"name": "v1.yml",
			"size": 0,
			"path": "storage/time-series/influxdb/retriever/api/v1.yml",
			"byteSize": 10384,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  description: \"Dojot device attribute data recovery service\"\n  version: 0.0.1 #Version from package.json\n  title: \"InfluxDB-Retriever:  Dojot Time Series Service\"\ntags:\n  - name: devices\n    description: Device data\npaths:\n  \"/tss/v1/devices/{deviceId}/attrs/{attr}/data\": #TODO /tss/v1/ must be part of servers, but OpenApiValidator doest work\n    get:\n      tags:\n        - devices\n      security:\n        - bearerAuth: []\n      summary: \"Retrieve data from attribute on a device\"\n      description: |\n        Retrieve data from an attribute on a device in the dojot time series service.\n\n        Any date-time value is RFC3339 compliant.\n\n      operationId: findDataFromAttrInDevice\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/attr\"\n        - $ref: \"#/components/parameters/dateFrom\"\n        - $ref: \"#/components/parameters/dateTo\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/order\"\n      responses:\n        \"200\":\n          description: Recovered data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceAttrResponse\"\n            text/csv:\n              schema:\n                type: \"string\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        \"406\":\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        default:\n          description: Unexpected error\n  \"/tss/v1/devices/{deviceId}/data\": #TODO /tss/v1/ must be part of servers, but OpenApiValidator doest work\n    get:\n      tags:\n        - devices\n      security:\n        - bearerAuth: []\n      summary: \"Retrieve data from a device\"\n      description: |\n        Retrieve data from a device in the dojot time series service.\n\n        Any date-time value is RFC3339 compliant.\n\n        `NOTE THAT`: We recommend using the endpoint (/tss/v1/devices/{deviceId}/attrs/{attr}/data) to search for data attributes of a device instead of this. It will be more efficient in most cases considering the nature of a time series database.\n      operationId: findDataFromDevice\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/dateFrom\"\n        - $ref: \"#/components/parameters/dateTo\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/order\"\n      responses:\n        \"200\":\n          description: Recovered data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceResponse\"\n            text/csv:\n              schema:\n                type: \"string\"\n\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n\n        \"406\":\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n\n        default:\n          description: Unexpected error\n  \"/tss/v1/devices/graphql\":\n    get:\n      tags:\n        - graphql\n      summary: \"graphql\"\n      description: |\n        This endpoint is to be used with graphql, if graphiql (graphql graphical interface) is active, it is possible to access this endpoint via get via browser, containing documentation of queries and mutations available for graphql.\n      operationId: graphqlGet\n      x-allow-unknown-query-parameters: true\n      responses:\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        default:\n          description: Unexpected error\nexternalDocs:\n  description: Find out more about Dojot\n  url: https://dojotdocs.readthedocs.io/\nservers:\n  - url: \"{url}\"\n    description: URL for Time Series Service\n    variables:\n      url:\n        default: \"http://localhost:8000/\"\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      description: Bearer JWT\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    dateFrom:\n      name: dateFrom\n      in: query\n      description: |\n        Start time of a time-based query results.\n\n        Default is `1970-01-01T00:00:00.000Z`.\n\n        It must be `greater` than or `equal` to `1970-01-01T00:00:00.000Z`\n      required: false\n      allowReserved: true\n      examples:\n        init:\n          summary: Minimum possible date-time\n          value: \"1970-01-01T00:00:00.000Z\"\n        past:\n          summary: An example of a date-time in the past\n          value: \"2020-10-01T20:40:44.000123456Z\"\n      schema:\n        type: string\n        format: date-time\n    dateTo:\n      name: dateTo\n      in: query\n      description: |\n        End time of a time-based query results.\n\n        Default is `current` date-time.\n\n        It must be `greater` than the `dateFrom`.\n      required: false\n      allowReserved: true\n      examples:\n        future:\n          summary: An example of a date-time in the future\n          value: \"2025-10-01T20:40:44.000123456Z\"\n      schema:\n        type: string\n        format: date-time\n    limit:\n      name: limit\n      in: query\n      description: |\n        Limits the number of returned results by page.\n\n        `Note that`: The default and maximum values may vary according to the service settings.\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        default: 256\n    page:\n      name: page\n      in: query\n      description: Page to retrieve\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        default: 1\n    order:\n      in: query\n      name: order\n      description: |\n        order by time:\n        * `asc` - Ascending, from oldest to newest\n        * `desc` - Descending, from newest to oldest\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n        default: desc\n    deviceId:\n      name: deviceId\n      in: path\n      description: Device identifier\n      required: true\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 8\n        pattern: ^[0-9a-fA-F]*$\n    attr:\n      name: attr\n      in: path\n      description: Device attribute to be requested.\n      required: true\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 128\n        pattern: ^[a-zA-Z0-9_-]+$\n  schemas:\n    paging:\n      type: object\n      properties:\n        previous:\n          anyOf:\n            - type: object\n              default: null\n              nullable: true\n            - $ref: \"#/components/schemas/Page\"\n        current:\n          anyOf:\n            - $ref: \"#/components/schemas/Page\"\n            - type: object\n              properties:\n                number:\n                  default: 1\n                url:\n                  default: \"/tss/v1/devices...\"\n        next:\n          description: |\n            `Note that:` It can happen that the next is filled even when there is no data for a next page to avoid unnecessary counts. But don't worry, as the next one will be accessible and with next null.\n          anyOf:\n            - type: object\n              default: null\n              nullable: true\n              properties:\n                number:\n                  default: 2\n                url:\n                  default: \"/tss/v1/devices...\"\n            - $ref: \"#/components/schemas/Page\"\n    Page:\n      type: object\n      properties:\n        number:\n          type: integer\n          minimum: 0\n          exclusiveMinimum: true\n          default: 1\n        url:\n          type: string\n    DeviceResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              ts:\n                type: string\n                format: date-time\n              attrs:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    label:\n                      type: string\n                      minLength: 1\n                      maxLength: 128\n                      pattern: ^[a-zA-Z0-9_-]+$\n                    value:\n                      anyOf:\n                        - type: string\n                          nullable: true\n                        - type: number\n                        - type: integer\n                        - type: boolean\n                        - type: array\n                          items: {}\n                        - type: object\n        paging:\n          $ref: \"#/components/schemas/paging\"\n    DeviceAttrResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              ts:\n                type: string\n                format: date-time\n              value:\n                anyOf:\n                  - type: string\n                    nullable: true\n                  - type: number\n                  - type: integer\n                  - type: boolean\n                  - type: array\n                    items: {}\n                  - type: object\n        paging:\n          $ref: \"#/components/schemas/paging\"\n",
			"canonicalURL": "/github.com/dojot/dojot@b7e8701711d01e4dfe4083763ecdcb692424fb24/-/blob/storage/time-series/influxdb/retriever/api/v1.yml",
			"externalURLs": [
				{
					"url": "https://github.com/dojot/dojot/blob/b7e8701711d01e4dfe4083763ecdcb692424fb24/storage/time-series/influxdb/retriever/api/v1.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/tss/v1/devices/{deviceId}/attrs/{attr}/data\": get: responses: 200: contents: application/json: generate schema: field data: item: field value: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}