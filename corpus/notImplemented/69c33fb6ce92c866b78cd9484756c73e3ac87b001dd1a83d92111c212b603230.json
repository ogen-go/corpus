{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/spiral6/SpiralMediaTracker"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "app/testing/databases/unused_sql_draft/openapi.yaml",
			"byteSize": 14299,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: admin[at]spiral6[dot]xyz\n  description: Testing API for Spiral Media Tracker\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  termsOfService: https://spiral6.xyz/api/terms\n  title: Spiral Media Tracker\n  version: 0.1.0\nexternalDocs:\n  description: Documentation\n  url: https://spiral6.xyz/wiki/api\nservers:\n- url: http://localhost:8080/api/v1\ntags:\n- description: Anime items endpoint.\n  externalDocs:\n    description: Find out more\n    url: https://spiral6.xyz/wiki/api/anime\n  name: anime\n- description: Movie items endpoint.\n  externalDocs:\n    description: Find out more\n    url: https://spiral6.xyz/wiki/api/movies\n  name: movies\n\npaths:\n  /anime:\n    get:\n      description: Return all anime.\n      operationId: get_anime\n      responses:\n        200:\n          description: Operation successful.\n      tags:\n      - anime\n    post:\n      operationId: add_anime\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Anime'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Anime'\n        required: true\n      responses:\n        201:\n          description: Operation successful.\n        401:\n          description: Unauthorized.\n        400:\n          description: Invalid input.\n      security:\n      - mediatracker_auth:\n        - write\n      tags:\n      - anime\n  /anime/{ID}:\n    get:\n      description: Returns a single anime.\n      operationId: get_anime_by_id\n      parameters:\n      - name: ID\n        description: ID of anime to return.\n        explode: false\n        in: path\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Anime'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Anime'\n          description: Operation successful.\n        404:\n          description: Anime not found.\n      tags:\n      - anime\n    delete:\n      description: ID of anime to delete.\n      operationId: delete_anime\n      parameters:\n      - name: api_key\n        explode: false\n        in: header\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: ID of anime to delete.\n        explode: false\n        in: path\n        name: ID\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        200:\n          description: Operation successful.\n        404:\n          description: Anime not found.\n      security:\n      - mediatracker_auth:\n        - write\n      tags:\n      - anime\n    patch:\n      description: Updates a single anime.\n      operationId: update_anime_patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Anime'\n            example:\n                id: 337\n      parameters:\n      - explode: false\n        in: header\n        name: api_key\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: ID of anime to update.\n        explode: false\n        in: path\n        name: ID\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        200:\n          description: Operation successful.\n        404:\n          description: Anime not found.\n        400:\n          description: Invalid input.\n      security:\n      - mediatracker_auth:\n        - write\n      tags:\n      - anime\n    put:\n      description: Updates a single anime.\n      operationId: update_anime_put\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Anime'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Anime'\n      parameters:\n      - explode: false\n        in: header\n        name: api_key\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: ID of anime to update.\n        explode: false\n        in: path\n        name: ID\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        200:\n          description: Operation successful.\n        404:\n          description: Anime not found.\n        400:\n          description: Invalid input.\n      security:\n      - mediatracker_auth:\n        - write\n      tags:\n      - anime\n  /movies:\n    get:\n      description: Return all movies.\n      operationId: get_movies\n      responses:\n        200:\n          description: Operation successful.\n      tags:\n      - movies\n    post:\n      operationId: add_movie\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Movie'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Movie'\n        required: true\n      responses:\n        201:\n          description: Operation successful.\n        400:\n          description: Invalid input.\n        401:\n          description: Unauthorized.\n      security:\n      - mediatracker_auth:\n        - write\n      tags:\n      - movies\n  /movies/{ID}:\n    get:\n      description: Returns a single movie.\n      operationId: get_movie_by_name\n      parameters:\n      - description: ID of movie to return.\n        explode: false\n        in: path\n        name: ID\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Movie'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Movie'\n          description: Operation successful.\n        404:\n          description: Movie not found.\n      tags:\n      - movies\n    delete:\n      description: Deletes a single movie.\n      operationId: delete_movie\n      parameters:\n      - explode: false\n        in: header\n        name: api_key\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: ID of movie to delete.\n        explode: false\n        in: path\n        name: ID\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        200:\n          description: Operation successful.\n        404:\n          description: Movie not found.\n      security:\n      - mediatracker_auth:\n        - write\n      tags:\n      - movies\n    patch:\n      description: Updates a single movie.\n      operationId: update_movie_patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Movie'\n            example:\n                id: 337\n        required: true\n      parameters:\n      - explode: false\n        in: header\n        name: api_key\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: ID of movie to update.\n        explode: false\n        in: path\n        name: ID\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        200:\n          description: Operation successful.\n        400:\n          description: Invalid input.\n        404:\n          description: Movie not found.\n      security:\n      - mediatracker_auth:\n        - write\n      tags:\n      - movies\n    put:\n      description: Updates a single movie.\n      operationId: update_movie_put\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Movie'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Movie'\n        required: true\n      parameters:\n      - explode: false\n        in: header\n        name: api_key\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: ID of movie to update.\n        explode: false\n        in: path\n        name: ID\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        200:\n          description: Operation successful.\n        400:\n          description: Invalid input.\n        404:\n          description: Movie not found.\n      security:\n      - mediatracker_auth:\n        - write\n      tags:\n      - movies\n    \ncomponents:\n  callbacks: {}\n  examples: {}\n  headers: {}\n  links: {}\n  parameters: {}\n  requestBodies: {}\n  responses: {}\n  schemas:\n    Character:\n      example:\n        actor: actor\n        name: name\n        picture: picture\n        actor_picture: actor_picture\n      properties:\n        name:\n          type: string\n        actor:\n          type: string\n        picture:\n          type: string\n        actor_picture:\n          type: string\n      required:\n      - name\n      type: object\n    Anime:\n      example:\n        id: 0\n        studios:\n        - Bones\n        - Square Enix\n        format: TV\n        rating: 92\n        synopsis: synopsis\n        source: Manga\n        tags:\n        - tags\n        - tags\n        duration: 63\n        characters:\n        - actor: actor\n          name: name\n          picture: picture\n          actor_picture: actor_picture\n        - actor: actor\n          name: name\n          picture: picture\n          actor_picture: actor_picture\n        release_date: 2009-04-05\n        genres:\n        - genres\n        - genres\n        name:\n          romanji: 'Hagane no Renkinjutsushi: Fullmetal Alchemist'\n          native: '鋼の錬金術師 FULLMETAL ALCHEMIST'\n          english: 'Fullmetal Alchemist: Brotherhood'\n        season: Spring 2009\n        episodes: 6\n      properties:\n        id:\n          format: int32\n          type: integer\n        name:\n          $ref: '#/components/schemas/AnimeName'\n        format:\n          description: Broadcast format of anime.\n          enum:\n          - ONA\n          - OVA\n          - TV\n          - Movie\n          - Special\n          - Music\n          - TV Short\n          type: string\n        tags:\n          items:\n            type: string\n          type: array\n        genres:\n          items:\n            type: string\n          type: array\n        synopsis:\n          description: Anime synopsis.\n          type: string\n        season:\n          type: string\n        duration:\n          description: Duration in minutes.\n          format: int32\n          type: integer\n        release_date:\n          format: date\n          type: string\n        studios:\n          items:\n            type: string\n          type: array\n        episodes:\n          description: Number of episodes.\n          format: int32\n          type: integer\n        source:\n          description: Original source of anime.\n          enum:\n          - Original\n          - Manga\n          - Light Novel\n          - Visual Novel\n          - Novel\n          - Video Game\n          - Doujinshi\n          type: string\n        characters:\n          items:\n            $ref: '#/components/schemas/Character'\n          type: array\n        rating:\n          description: Rating out of 100.\n          format: float\n          type: number\n      required:\n      - format\n      - name\n      - synopsis\n      type: object\n      xml:\n        name: Anime\n    Movie:\n      example:\n        id: 0\n        duration: 0\n        characters:\n        - actor: actor\n          name: name\n          picture: picture\n          actor_picture: actor_picture\n        - actor: actor\n          name: name\n          picture: picture\n          actor_picture: actor_picture\n        release_date: 2000-01-23\n        genres:\n        - genres\n        - genres\n        directors:\n        - directors\n        - directors\n        name: The Godfather\n        rating: 6.0274563\n        synopsis: synopsis\n        writers:\n        - writers\n        - writers\n        tags:\n        - tags\n        - tags\n      properties:\n        id:\n          format: int32\n          type: integer\n        name:\n          example: The Godfather\n          type: string\n        synopsis:\n          description: Movie synopsis.\n          type: string\n        directors:\n          items:\n            type: string\n          type: array\n        writers:\n          items:\n            type: string\n          type: array\n        duration:\n          description: Duration in minutes.\n          format: int32\n          type: integer\n        tags:\n          items:\n            type: string\n          type: array\n        genres:\n          items:\n            type: string\n          type: array\n        release_date:\n          format: date\n          type: string\n        characters:\n          items:\n            $ref: '#/components/schemas/Character'\n          type: array\n        rating:\n          description: Rating out of 100.\n          format: float\n          type: number\n      required:\n      - name\n      - synopsis\n      type: object\n      xml:\n        name: Movie\n    ApiResponse:\n      properties:\n        code:\n          format: int32\n          type: integer\n        type:\n          type: string\n        message:\n          type: string\n      required:\n      - code\n      - message\n      - type\n      type: object\n    AnimeName:\n      example:\n        romaji: 'Hagane no Renkinjutsushi: Fullmetal Alchemist'\n        native: '鋼の錬金術師 FULLMETAL ALCHEMIST'\n        english: 'Fullmetal Alchemist: Brotherhood'\n      properties:\n        english:\n          example: 'Fullmetal Alchemist: Brotherhood'\n          type: string\n        romaji:\n          example: 'Hagane no Renkinjutsushi: Fullmetal Alchemist'\n          type: string\n        native:\n          example: '鋼の錬金術師 FULLMETAL ALCHEMIST'\n          type: string\n      required:\n      - english\n      - native\n      - romaji\n      type: object\n  securitySchemes:\n    mediatracker_auth:\n      flows:\n        implicit:\n          authorizationUrl: https://spiral6.xyz/api/oauth/dialog\n          scopes:\n            write: Modify items in database.\n            read: Read items from database.\n      type: oauth2\n    api_key:\n      in: header\n      name: api_key\n      type: apiKey\n",
			"canonicalURL": "/github.com/spiral6/SpiralMediaTracker@25f1c3640950c87fce10fdf6e5754a046473b82e/-/blob/app/testing/databases/unused_sql_draft/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/spiral6/SpiralMediaTracker/blob/25f1c3640950c87fce10fdf6e5754a046473b82e/app/testing/databases/unused_sql_draft/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/anime\": post: security: security \"mediatracker_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}