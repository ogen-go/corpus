{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wgu-opensource/osmt"
		},
		"file": {
			"name": "osmt-v2.x-openapi3.yaml",
			"size": 0,
			"path": "docs/osmt-v2.x-openapi3.yaml",
			"byteSize": 39720,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2.0.0\n  title: OSMT API\n  description: API for the Open Skills Management Toolset\nsecurity:\n  - bearerAuth: []\n\npaths:\n  /api/search/skills:\n    post:\n      tags:\n        - Search\n      summary: Search for skills\n      description: Return summaries for skills that match the provided query\n      parameters:\n        - in: query\n          name: size\n          description: number of skills to return per page\n          schema:\n            type: number\n            default: 50\n        - in: query\n          name: from\n          description: zero-indexed offset from beginning of records\n          schema:\n            type: number\n            default: 0\n        - in: query\n          name: status\n          schema:\n            default:\n              - Unpublished\n              - Published\n            type: array\n            items:\n              $ref: '#/components/schemas/PublishStatus'\n        - in: query\n          name: sort\n          schema:\n            $ref: '#/components/schemas/SortOrder'\n        - in: query\n          name: collectionId\n          schema:\n            type: string\n            format: uri\n            description: Limit skills to those associated with given collection id\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Search'\n      responses:\n        '200':\n          description: OK\n          headers:\n            Link:\n              $ref: '#/components/headers/Link'\n            X-Total-Count:\n              $ref: '#/components/headers/XTotalCount'\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/XRateLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/XRateRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/XRateReset'\n\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SkillDoc'\n\n  /api/search/skills/similarity:\n    post:\n      tags:\n        - Search\n      summary:  Find similar skills\n      description: Returns skills with similar statement fields\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Similarity'\n\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/XRateLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/XRateRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/XRateReset'\n\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SkillSummary'\n\n  /api/search/skills/similarities:\n    post:\n      tags:\n        - Search\n      summary: Check skill statements for similar existing skills\n      description: Returns array of boolean values that signify if a duplicate is found for a statement in the request\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Similarity'\n\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/XRateLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/XRateRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/XRateReset'\n\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: boolean\n\n\n  /api/skills:\n    get:\n      summary: Get all skills\n      description: Returns paginated list of all skills in the library\n      parameters:\n        - in: query\n          name: size\n          description: number of skills to return per page\n          schema:\n            type: number\n            default: 50\n        - in: query\n          name: from\n          description: zero-indexed offset from beginning of records\n          schema:\n            type: number\n            default: 0\n        - in: query\n          name: status\n          schema:\n            default:\n              - Unpublished\n              - Published\n            type: array\n            items:\n              $ref: '#/components/schemas/PublishStatus'\n        - in: query\n          name: sort\n          schema:\n            $ref: '#/components/schemas/SortOrder'\n      responses:\n        '200':\n          description: OK\n          headers:\n            Link:\n              $ref: '#/components/headers/Link'\n            X-Total-Count:\n              $ref: '#/components/headers/XTotalCount'\n\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SkillDoc'\n      tags:\n        - Skills\n    post:\n      tags:\n        - Skills\n      summary: Create new skills\n      description: Define one or more new Rich Skill Descriptors\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/SkillUpdate'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResult'\n          links:\n            CreateSkillResults:\n              operationRef: '/api/results/skills/{uuid}'\n              parameters:\n                uuid: '$response.body#/uuid'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n\n  /api/skills/{uuid}:\n    parameters:\n      - name: uuid\n        in: path\n        description: uuid of skill\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Skills\n      summary: Retrieve a skill\n      description: \u003e-\n        Return the full information about a Rich Skill Descriptor\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Skill'\n            text/html:\n              schema:\n                type: string\n                example: A human readable description of the skill\n            text/csv:\n              schema:\n                type: string\n                example: \u003e-\n                  id,type,author,skillName,skillStatement,alignments,keywords,category,occupations\n                  https://osmt.example.com/skills/9cd84455-2086-4f41-bcac-6d518beeb6ac,RichSkillDescriptor,\"https://osmt.example.com/organization\",\"Document Saving\",\"The learner copies and saves documents to their local machine.\",\"https://skillsource.example.com/base-skills/simple-compuhacking\",\"documents, file operations, computer basics\",\"Productivity Software\",\"13-0000, 13-2000, 13-2010, 13-2030, 13-2040, 13-2060, 13-2080\"\n\n  /api/skills/{uuid}/update:\n    parameters:\n      - name: uuid\n        in: path\n        description: uuid of skill\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Skills\n      summary: Update a skill\n      description: Update information in an existing Rich Skill Descriptor\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SkillUpdate'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Skill'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n\n  /api/skills/{uuid}/log:\n    parameters:\n      - name: uuid\n        in: path\n        description: uuid of skill\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Skills\n      summary: Retrieve skill log\n      description: Retrieve the audit log entries of a skill\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuditLog'\n\n\n  /api/skills/publish:\n    post:\n      tags:\n        - Skills\n      summary: Publish or Archive multiple skills\n      description: Publish or Archive multiple skills\n      parameters:\n        - in: query\n          name: newStatus\n          schema:\n            type: string\n            default: Published\n            enum:\n              - Published\n              - Archived\n        - in: query\n          name: filterByStatus\n          schema:\n            default:\n              - Unpublished\n              - Published\n            type: array\n            items:\n              $ref: '#/components/schemas/PublishStatus'\n        - in: query\n          name: collectionUuid\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Search'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResult'\n          links:\n            PublishBatchResults:\n              operationRef: '/api/results/batch/{uuid}'\n              parameters:\n                uuid: '$response.body#/uuid'\n\n\n  /api/search/collections:\n    post:\n      tags:\n        - Search\n      summary: Search for collections\n      description: Return summaries of Collections that match the provided query\n      parameters:\n        - in: query\n          name: size\n          description: number of records to return\n          schema:\n            type: number\n            default: 50\n        - in: query\n          name: from\n          description: zero-indexed offset from beginning of records\n          schema:\n            type: number\n            default: 0\n        - in: query\n          name: status\n          schema:\n            default:\n              - Unpublished\n              - Published\n            type: array\n            items:\n              $ref: '#/components/schemas/PublishStatus'\n        - in: query\n          name: sort\n          schema:\n            $ref: '#/components/schemas/SortOrder'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Search'\n      responses:\n        '200':\n          description: OK\n          headers:\n            Link:\n              $ref: '#/components/headers/Link'\n            X-Total-Count:\n              $ref: '#/components/headers/XTotalCount'\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/XRateLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/XRateRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/XRateReset'\n\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CollectionDoc'\n\n\n  /api/collections:\n    get:\n      tags:\n        - Collections\n      summary: Get all collections\n      description: Retrieve all the collections\n      parameters:\n        - in: query\n          name: size\n          description: number of records to return\n          schema:\n            type: number\n            default: 50\n        - in: query\n          name: from\n          description: zero-indexed offset from beginning of records\n          schema:\n            type: number\n            default: 0\n        - in: query\n          name: status\n          schema:\n            default:\n              - Unpublished\n              - Published\n            type: array\n            items:\n              $ref: '#/components/schemas/PublishStatus'\n        - in: query\n          name: sort\n          schema:\n            $ref: '#/components/schemas/SortOrder'\n      responses:\n        '200':\n          description: OK\n          headers:\n            Link:\n              $ref: '#/components/headers/Link'\n            X-Total-Count:\n              $ref: '#/components/headers/XTotalCount'\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/XRateLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/XRateRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/XRateReset'\n\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CollectionDoc'\n    post:\n      tags:\n        - Collections\n      summary: Create new collections\n      description: Define a new collection\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/CollectionUpdate'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Collection'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n\n\n  /api/collections/{uuid}:\n    parameters:\n      - name: uuid\n        in: path\n        description: Collection UUID\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Collections\n      summary: Retrieve a collection\n      description: Retrieve all the information about a collection\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Collection'\n            text/csv:\n              schema:\n                type: string\n                example: \u003e-\n                  id,type,author,skillName,skillStatement,alignments,keywords,category,occupations\n                  https://osmt.example.com/skills/9cd84455-2086-4f41-bcac-6d518beeb6ac,RichSkillDescriptor,\"https://osmt.example.com/organization\",\"Document Saving\",\"The learner copies and saves documents to their local machine.\",\"https://skillsource.example.com/base-skills/simple-compuhacking\",\"documents, file operations, computer basics\",\"Productivity Software\",\"13-0000, 13-2000, 13-2010, 13-2030, 13-2040, 13-2060, 13-2080\"\n\n  /api/collections/{uuid}/update:\n    parameters:\n      - name: uuid\n        in: path\n        description: Task uuid\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Collections\n      summary: Update a collection\n      description: Update an existing collection\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CollectionUpdate'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Collection'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n\n  /api/collections/{uuid}/log:\n    parameters:\n      - name: uuid\n        in: path\n        description: uuid of a collection\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Collections\n      summary: Retrieve collection log\n      description: Retrieve the audit log entries of a collection\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuditLog'\n\n  /api/collections/{uuid}/skills:\n    post:\n      tags:\n        - Collections\n      summary: Retrieve the skills in a collection\n      description: Retrieve paginated summaries of skills that belong to the collection\n      parameters:\n        - name: uuid\n          in: path\n          description: uuid of a collection\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: size\n          description: number of skills to return per page\n          schema:\n            type: number\n            default: 50\n        - in: query\n          name: from\n          description: zero-indexed offset from beginning of records\n          schema:\n            type: number\n            default: 0\n        - in: query\n          name: status\n          schema:\n            default:\n              - Unpublished\n              - Published\n            type: array\n            items:\n              $ref: '#/components/schemas/PublishStatus'\n        - in: query\n          name: sort\n          schema:\n            $ref: '#/components/schemas/SortOrder'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Search'\n      responses:\n        '200':\n          description: OK\n          headers:\n            Link:\n              $ref: '#/components/headers/Link'\n            X-Total-Count:\n              $ref: '#/components/headers/XTotalCount'\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/XRateLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/XRateRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/XRateReset'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SkillDoc'\n\n  /api/collections/{uuid}/csv:\n    get:\n      tags:\n        - Collections\n      summary: Retrieve the skills in a collection as a CSV\n      description: Retrieve the skills that belong to the collection in CSV format\n      parameters:\n        - name: uuid\n          in: path\n          description: uuid of a collection\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResult'\n          links:\n            CollectionCsvResults:\n              operationRef: '/api/results/text/{uuid}'\n              parameters:\n                uuid: '$response.body#/uuid'\n\n  /api/collections/{uuid}/updateSkills:\n    post:\n      tags:\n        - Collections\n      summary: Add or remove skills from a collection\n      description: Batch add or remove skills from an existing collection\n      parameters:\n        - name: uuid\n          in: path\n          description: uuid of a collection\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: status\n          schema:\n            default:\n              - Unpublished\n              - Published\n            type: array\n            items:\n              $ref: '#/components/schemas/PublishStatus'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SkillListUpdate'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResult'\n          links:\n            UpdateSkillsBatchResults:\n              operationRef: '/api/results/batch/{uuid}'\n              parameters:\n                uuid: '$response.body#/uuid'\n\n  /api/collections/publish:\n    post:\n      tags:\n        - Collections\n      summary: Publish, Archive or Unarchive multiple collections\n      description: Publish, Archive or Unarchive multiple collections\n      parameters:\n        - in: query\n          name: newStatus\n          schema:\n            type: string\n            default: Published\n            enum:\n              - Published\n              - Archived\n              - Unarchived\n        - in: query\n          name: filterByStatus\n          schema:\n            default:\n              - Unpublished\n              - Published\n            type: array\n            items:\n              $ref: '#/components/schemas/PublishStatus'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Search'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResult'\n          links:\n            PublishCollectionsBatchResults:\n              operationRef: '/api/results/batch/{uuid}'\n              parameters:\n                uuid: '$response.body#/uuid'\n\n  /api/results/text/{uuid}:\n    parameters:\n      - name: uuid\n        in: path\n        description: Task uuid\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Results\n      summary: Retrieve the results of a CSV task\n      description: Return the results of a previously requested task\n      responses:\n        '404':\n          description: NOT READY\n        '200':\n          description: OK\n          content:\n            text/csv:\n              schema:\n                type: string\n                example: \u003e-\n                  id,type,author,skillName,skillStatement,alignments,keywords,category,occupations\n                  https://osmt.example.com/skills/9cd84455-2086-4f41-bcac-6d518beeb6ac, RichSkillDescriptor, \"https://osmt.example.com/organization\", \"Document Saving\", \"The learner copies and saves documents to their local machine.\", \"https://skillsource.example.com/base-skills/simple-compuhacking\", \"documents, file operations, computer basics\", \"Productivity Software\", \"13-0000, 13-2000, 13-2010, 13-2030, 13-2040, 13-2060, 13-2080\"\n\n  /api/results/batch/{uuid}:\n    parameters:\n      - name: uuid\n        in: path\n        description: Task uuid\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Results\n      summary: Retrieve the batch results of a task\n      description: Return the results of a previously requested batch task\n      responses:\n        '404':\n          description: NOT READY\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResult'\n\n  /api/results/skills/{uuid}:\n    parameters:\n      - name: uuid\n        in: path\n        description: Task uuid\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Results\n      summary: Retrieve the results of a create skills task\n      description: Return the results of a previously requested skill creation task\n      responses:\n        '404':\n          description: NOT READY\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Skill'\n\n  /api/search/jobcodes:\n    get:\n      tags:\n        - Search\n      summary: Search for JobCodes\n      description: Return JobCodes that match the provided query\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/XRateLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/XRateRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/XRateReset'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JobCode'\n\n\n\n  /api/search/keywords:\n    get:\n      tags:\n        - Search\n      summary: Search for keyword like objects\n      description: Return matching keywords\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: type\n          description: Enum value of KeywordType\n          schema:\n            $ref: '#/components/schemas/KeywordType'\n          required: true\n\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/XRateLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/XRateRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/XRateReset'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NamedReference'\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  headers:\n    Link:\n      description: |\n        Links to related resources in\n        [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5) format.\n        This will include a link with relation type `next` or `prev` if present.\n      schema:\n        type: string\n    XTotalCount:\n      schema:\n        type: string\n      description: |\n        The total number of records returned on all pages for this request.\n    XRateLimit:\n      schema:\n        type: number\n      description: |\n        The number of requests permitted to make per hour.\n    XRateRemaining:\n      schema:\n        type: number\n      description: |\n        The number of requests remaining in the current rate limit window.\n    XRateReset:\n      schema:\n        type: string\n      description: |\n        The time at which the current rate limit window resets in UTC epoch seconds.\n  schemas:\n\n    Skill:\n      type: object\n      required:\n        - skillName\n        - skillStatement\n      properties:\n        id:\n          type: string\n          format: uri\n        uuid:\n          type: string\n          format: uuid\n        creator:\n          type: string\n          format: uri\n        status:\n          $ref: '#/components/schemas/PublishStatus'\n        skillName:\n          type: string\n        skillStatement:\n          type: string\n        category:\n          type: string\n        collections:\n          type: array\n          items:\n            $ref: '#/components/schemas/UuidReference'\n        keywords:\n          type: array\n          items:\n            type: string\n        alignments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Alignment'\n        standards:\n          type: array\n          items:\n            $ref: '#/components/schemas/Alignment'\n        certifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/NamedReference'\n        occupations:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobCode'\n        employers:\n          type: array\n          items:\n            $ref: '#/components/schemas/NamedReference'\n        author:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        updateDate:\n          type: string\n          format: date-time\n        publishDate:\n          type: string\n          format: date-time\n        archiveDate:\n          type: string\n          format: date-time\n      example:\n        id: https://osmt.example.com/skills/9cd84455-2086-4f41-bcac-6d518beeb6ac\n        type: RichSkillDescriptor\n        author: https://example.osmt.wgu.edu/organization\n        category: Business Ethics\n        skillName: \"Business Ethics: Responsibility Acceptance\"\n        skillStatement: The learner accepts responsibility and repercussions related to ethical behavior.\n        alignments:\n          - id: \"https://emsiservices.com/skills/versions/latest/skills/KS120FG6YP8PQYY\"\n        keywords:\n          - \"Business Ethics\"\n          - \"Being\"\n        standards:\n          - skillName: \"NICE: Investigate - Digital Forensics\"\n          - skillName: \"NICE: Protect and Defend - Computer Defense Analysis\"\n          - skillName: \"NICE: Protect and Defend - Cyber Defense Infrastructure Support\"\n          - skillName: \"NICE: Protect and Defend - Incident Response; NICE: Protect and Defend - Vulnerability Assessment and Management\"\n          - skillName: \"NICE: Operate and Maintain - Customer Service and Technical Support\"\n          - skillName: \"NICE: Operate and Maintain - Network Services\"\n          - skillName: \"NICE: Operate and Maintain - System Administration\"\n          - skillName: \"NSA-CAE KU: Networking\"\n          - skillName: \"NSA-CAE KU: Wireless Security\"\n          - skillName: \"NSA-CAE KU: HCI/Usability Security\"\n          - skillName: \"NSA-CAE KU: Wireless Security\"\n        certifications:\n          - name: CCNA Security\n          - name: CCIE Security\n          - name: CCNP Security\n        occupations:\n          - code: 11-3031.00\n          - code: 11-3031.02\n          - code: 13-1021.00\n          - code: 13-1022.00\n          - code: 13-1023.00\n          - code: 13-1111.00\n          - code: 13-1161.00\n          - code: 13-2011.01\n          - code: 13-2041.00\n          - code: 15-2041.00\n          - code: 19-3011.00\n          - code: 19-4061.00\n          - code: 15-1122.00\n        employer:\n          - name: Sample Company\n    SkillSummary:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uri\n        uuid:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/PublishStatus'\n        skillName:\n          type: string\n        skillStatement:\n          type: string\n        category:\n          type: string\n        keywords:\n          type: array\n          items:\n            type: string\n        occupations:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobCode'\n        publishDate:\n          type: string\n          format: date-time\n        archiveDate:\n          type: string\n          format: date-time\n    SkillDoc:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uri\n        uuid:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/PublishStatus'\n        skillName:\n          type: string\n        skillStatement:\n          type: string\n        category:\n          type: string\n        author:\n          type: string\n        keywords:\n          type: array\n          items:\n            type: string\n        occupations:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobCode'\n        publishDate:\n          type: string\n          format: date-time\n        archiveDate:\n          type: string\n          format: date-time\n    SkillUpdate:\n      type: object\n      properties:\n        skillName:\n          type: string\n        skillStatement:\n          type: string\n        status:\n          $ref: '#/components/schemas/PublishStatus'\n        category:\n          type: string\n        collections:\n          $ref: '#/components/schemas/StringListUpdate'\n        keywords:\n          $ref: '#/components/schemas/StringListUpdate'\n        standards:\n          $ref: '#/components/schemas/AlignmentListUpdate'\n        alignments:\n          $ref: '#/components/schemas/AlignmentListUpdate'\n        certifications:\n          $ref: '#/components/schemas/ReferenceListUpdate'\n        occupations:\n          $ref: '#/components/schemas/StringListUpdate'\n        employers:\n          $ref: '#/components/schemas/ReferenceListUpdate'\n        author:\n          type: string\n      example:\n        skillName: \"New Skill Name\"\n        keywords:\n          add:\n            - \"Added Keyword\"\n          remove:\n            - \"Removed Keyword\"\n        occupations:\n          add:\n            - 11-9013\n\n    Collection:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uri\n        uuid:\n          type: string\n          format: uuid\n        creator:\n          type: string\n          format: uri\n        status:\n          $ref: '#/components/schemas/PublishStatus'\n        creationDate:\n          type: string\n          format: date-time\n        updateDate:\n          type: string\n          format: date-time\n        publishDate:\n          type: string\n          format: date-time\n        archiveDate:\n          type: string\n          format: date-time\n        name:\n          type: string\n        author:\n          type: string\n        skills:\n          type: array\n          items:\n            $ref: '#/components/schemas/SkillSummary'\n\n    CollectionDoc:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/PublishStatus'\n        skillCount:\n          type: integer\n        publishDate:\n          type: string\n          format: date-time\n        archiveDate:\n          type: string\n          format: date-time\n\n    CollectionUpdate:\n      type: object\n      properties:\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/PublishStatus'\n        author:\n          type: string\n        skills:\n          $ref: '#/components/schemas/StringListUpdate'\n\n\n    NamedReference:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uri\n        name:\n          type: string\n\n    Alignment:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uri\n        skillName:\n          type: string\n        isPartOf:\n          $ref: '#/components/schemas/NamedReference'\n\n    UuidReference:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n      required:\n        - uuid\n\n    ReferenceListUpdate:\n      type: object\n      properties:\n        add:\n          type: array\n          items:\n            $ref: '#/components/schemas/NamedReference'\n        remove:\n          type: array\n          items:\n            $ref: '#/components/schemas/NamedReference'\n\n    AlignmentListUpdate:\n      type: object\n      properties:\n        add:\n          type: array\n          items:\n            $ref: '#/components/schemas/Alignment'\n        remove:\n          type: array\n          items:\n            $ref: '#/components/schemas/Alignment'\n\n    StringListUpdate:\n      type: object\n      properties:\n        add:\n          type: array\n          items:\n            type: string\n        remove:\n          type: array\n          items:\n            type: string\n\n    SkillListUpdate:\n      type: object\n      properties:\n        add:\n          $ref: '#/components/schemas/Search'\n        remove:\n          $ref: '#/components/schemas/Search'\n\n    JobCode:\n      type: object\n      properties:\n        major:\n          type: string\n        minor:\n          type: string\n        broad:\n          type: string\n        detailed:\n          $ref: '#/components/schemas/JobCodeLevel'\n        code:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        framework:\n          type: string\n      required:\n        - code\n    JobCodeLevel:\n      type: string\n      enum:\n        - onet\n        - detailed\n        - broad\n        - minor\n        - major\n\n    Search:\n      type: object\n      properties:\n        query:\n          type: string\n        advanced:\n          $ref: '#/components/schemas/AdvancedSearch'\n        uuids:\n          type: array\n          items:\n            type: string\n\n    AdvancedSearch:\n      type: object\n      properties:\n        skillName:\n          type: string\n        collectionName:\n          type: string\n        category:\n          type: string\n        skillStatement:\n          type: string\n        author:\n          type: string\n        keywords:\n          type: array\n          items:\n            type: string\n        occupations:\n          type: array\n          items:\n            type: string\n        standards:\n          type: array\n          items:\n            $ref: '#/components/schemas/Alignment'\n        certifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/NamedReference'\n        employers:\n          type: array\n          items:\n            $ref: '#/components/schemas/NamedReference'\n        alignments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Alignment'\n\n    PublishStatus:\n      type: string\n      enum:\n        - Unarchived\n        - Draft\n        - Published\n        - Archived\n        - Deleted\n\n    SortOrder:\n      type: string\n      enum:\n        - name.asc\n        - name.desc\n        - skill.asc\n        - skill.desc\n\n    TaskResult:\n      type: object\n      properties:\n        apiResultPath:\n          type: string\n          format: uri\n        uuid:\n          type: string\n          format: uuid\n        content-type:\n          type: string\n        status:\n          type: string\n          enum: [\"Processing\",\"Ready\"]\n      example:\n        apiResultPath: \"/results/batch/3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n        uuid: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n        status: \"Processing\"\n\n    BatchResult:\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n        modifiedCount:\n          type: number\n        totalCount:\n          type: number\n\n    ErrorResult:\n      type: object\n      properties:\n        message:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            properties:\n              message:\n                type: string\n              field:\n                type: string\n\n    KeywordType:\n      type: string\n      enum:\n        - category\n        - keyword\n        - standard\n        - certification\n        - alignment\n        - employer\n        - author\n\n    Change:\n      type: object\n      properties:\n        fieldName:\n          type: string\n        old:\n          type: string\n        new:\n          type: string\n\n    AuditLog:\n      type: object\n      properties:\n        creationDate:\n          type: string\n          format: date-time\n        operationType:\n          type: string\n          enum: [\"Insert\", \"Update\", \"PublishStatusChange\"]\n        user:\n          type: string\n        changedFields:\n          type: array\n          items:\n            $ref: '#/components/schemas/Change'\n\n    Similarity:\n      type: object\n      properties:\n        statement:\n          type: string\n      required:\n        - statement\n",
			"canonicalURL": "/github.com/wgu-opensource/osmt@25e25525b5bd6aac3c1e70173f7e0e3543f5655a/-/blob/docs/osmt-v2.x-openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wgu-opensource/osmt/blob/25e25525b5bd6aac3c1e70173f7e0e3543f5655a/docs/osmt-v2.x-openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/results/text/{uuid}\": get: responses: 200: contents: unsupported content types: [text/csv]",
	"NotImplemented": [
		"unsupported content types"
	]
}