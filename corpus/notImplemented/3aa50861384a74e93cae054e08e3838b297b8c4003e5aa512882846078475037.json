{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/jumpseller.com/1.0.0/openapi.yaml",
			"byteSize": 201542,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.jumpseller.com/v1\ninfo:\n  contact:\n    x-twitter: jumpseller\n  description: |\n    # Endpoint Structure\n\n    All URLs are in the format: \n\n    ```text\n    https://api.jumpseller.com/v1/path.json?login=XXXXXX\u0026authtoken=storetoken  \n    ```\n\n    The path is prefixed by the API version and the URL takes as parameters the login (your store specific API login) and your authentication token.\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n\n    # Version\n\n    The current version of the API is **v1**.  \n    If we change the API in backward-incompatible ways, we'll increase the version number and maintain stable support for the old urls.\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n\n    # Authentication\n\n    The API uses a token-based authentication with a combination of a login key and an auth token. **Both parameters can be found on the left sidebar of the Account section, accessed from the main menu of your Admin Panel**. The auth token of the user can be reset on the same page.\n\n    ![Store Login](/images/support/api/apilogin.png)\n\n    The auth token is a **32 characters** string.\n\n    If you are developing a Jumpseller App, the authentication should be done using [OAuth-2](/support/oauth-2). Please read the article [Build an App](/support/apps) for more information.\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n\n    # Curl Examples\n\n    To request all the products at your store, you would append the products index path to the base url to create an URL with the format:  \n\n    ```text\n    https://api.jumpseller.com/v1/products.json?login=XXXXXX\u0026authtoken=XXXXX\n    ```\n\n    In curl, you can invoque that URL with:  \n\n    ```text\n    curl -X GET \"https://api.jumpseller.com/v1/products.json?login=XXXXXX\u0026authtoken=XXXXX\"\n    ```\n\n    To create a product, you will include the JSON data and specify the MIME Type:  \n\n    ```text\n    curl -X POST -d '{ \"product\" : {\"name\": \"My new Product!\", \"price\": 100} }' \"https://api.jumpseller.com/v1/products.json?login=XXXXXX\u0026authtoken=XXXXX\" -H \"Content-Type:application/json\"\n    ```\n\n    and to update the product identified with 123:  \n\n    ```text\n    curl -X PUT -d '{ \"product\" : {\"name\": \"My updated Product!\", \"price\": 99} }' \"https://api.jumpseller.com/v1/products/123.json?login=XXXXXX\u0026authtoken=XXXXX\" -H \"Content-Type:application/json\"\n    ```\n\n    or delete it:  \n\n    ```text\n    curl -X DELETE \"https://api.jumpseller.com/v1/products/123.json?login=XXXXXX\u0026authtoken=XXXXX\" -H \"Content-Type:application/json\"\n    ```\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n\n    # PHP Examples\n\n    Create a new Product (POST method)\n\n    ```php\n    $url = 'https://api.jumpseller.com/v1/products.json?login=XXXXX\u0026authtoken=XXXXX;\n    $ch = curl_init($url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));\n\n    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\"); //post method\n    curl_setopt($ch, CURLOPT_POSTFIELDS, '{ \"product\" : {\"name\": \"My updated Product!\", \"price\": 99} }');\n\n    $result = curl_exec($ch);\n    print_r($result);\n    curl_close($ch);\n    ```\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n\n    # Plain JSON only. No XML.\n\n    * We only support JSON for data serialization.\n    * Our node format has no root element.  \n    * We use snake_case to describe attribute keys (like \"created_at\").  \n    * All empty value are replaced with **null** strings.\n    * All API URLs end in .json to indicate that they accept and return JSON.\n    * POST and PUT methods require you to explicitly state the MIME type of your request's body content as **\"application/json\"**.\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n\n    # Rate Limit\n    You can perform a maximum of:\n\n    + 240 (two hundred forty) requests per minute and\n    + 8 (eight) requests per second \n\n    If you exceed this limit, you'll get a 403 Forbidden (Rate Limit Exceeded) response for subsequent requests.  \n\n    The rate limits apply by IP address and by store. This means that multiple requests on different stores are not counted towards the same rate limit.\n\n    This limits are necessary to ensure resources are correctly used. Your application should be aware of this limits and retry any unsuccessful request, check the following Ruby stub:\n\n    ```ruby\n    tries = 0; max_tries = 3;\n    begin\n      HTTParty.send(method, uri) # perform an API call.\n      sleep 0.5\n      tries += 1\n    rescue\n      unless tries \u003e= max_tries\n        sleep 1.0 # wait the necessary time before retrying the call again.\n        retry\n      end\n    end\n    ```\n\n    Finally, you can review the Response Headers of each request:\n\n    ```text\n    Jumpseller-PerMinuteRateLimit-Limit: 60  \n    Jumpseller-PerMinuteRateLimit-Remaining: 59 # requests available on the per-second interval  \n    Jumpseller-PerSecondRateLimit-Limit: 2  \n    Jumpseller-PerSecondRateLimit-Remaining: 1 # requests available on the per-second interval\n    ``` \n\n    to better model your application requests intervals.\n\n    In the event of getting your IP banned, the Response Header `Jumpseller-BannedByRateLimit-Reset` informs you the time when will your ban be reseted.\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n\n    # Pagination\n\n    By default we will return 50 objects (products, orders, etc) per page. There is a maximum of 100, using a query string `\u0026limit=100`.\n    If the result set gets paginated it is your responsibility to check the next page for more objects -- you do this by using query strings `\u0026page=2`, `\u0026page=3` and so on.\n\n    ```text\n    https://api.jumpseller.com/v1/products.json?login=XXXXXX\u0026authtoken=XXXXX\u0026page=3\u0026limit=100\n    ```\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n\n    # More\n    * [Jumpseller API wrapper](https://gitlab.com/jumpseller-api/ruby) provides a public Ruby abstraction over our API;\n    * [Apps Page](/apps) showcases external integrations with Jumpseller done by technical experts;\n    * [Imgbb API](https://api.imgbb.com/) provides an easy way to upload and temporaly host for images and files.\n    \u003cbr/\u003e\u003cbr/\u003e\n    ***\n    \u003cbr/\u003e\u003cbr/\u003e\n  title: Jumpseller API\n  version: 1.0.0\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    altText: Jumpseller logo\n    href: /\n    url: https://twitter.com/jumpseller/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://api.jumpseller.com/swagger.json\n      version: \"3.0\"\n  x-providerName: jumpseller.com\npaths:\n  /categories.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n          description: OK\n      summary: Retrieve all Categories.\n      tags:\n        - Categories\n    post:\n      description: Category's permalink is automatically generated from the given category's name.\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/CategoryEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n          description: OK\n      summary: Create a new Category.\n      tags:\n        - Categories\n  /categories/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n      summary: Count all Categories.\n      tags:\n        - Categories\n  \"/categories/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Category\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Category Not Found.\n      summary: Delete an existing Category.\n      tags:\n        - Categories\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Category\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n          description: The selected Category.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Category Not Found.\n      summary: Retrieve a single Category.\n      tags:\n        - Categories\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Category\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/CategoryEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Category Not Found.\n      summary: Modify an existing Category.\n      tags:\n        - Categories\n  /checkout_custom_fields.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CheckoutCustomField\"\n                type: array\n          description: An array of Checkout Custom Fields\n      summary: Retrieve all Checkout Custom Fields.\n      tags:\n        - Checkout Custom Fields\n    post:\n      description: \"Type values can be: input, selection, checkbox, date or text. Area values can be: contact, billing_shipping or other.\"\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/CheckoutCustomFieldEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckoutCustomField\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CheckoutCustomField Not Found.\n      summary: Create a new CheckoutCustomField.\n      tags:\n        - Checkout Custom Fields\n  \"/checkout_custom_fields/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CheckoutCustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CheckoutCustomField Not Found.\n      summary: Delete an existing CheckoutCustomField.\n      tags:\n        - Checkout Custom Fields\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CheckoutCustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckoutCustomField\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CheckoutCustomField Not Found.\n      summary: Retrieve a single CheckoutCustomField.\n      tags:\n        - Checkout Custom Fields\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CheckoutCustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/CheckoutCustomFieldEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckoutCustomField\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CheckoutCustomField Not Found.\n      summary: Update a CheckoutCustomField.\n      tags:\n        - Checkout Custom Fields\n  /countries.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Country\"\n                type: array\n          description: An array of Countries\n      summary: Retrieve all Countries.\n      tags:\n        - Countries\n  \"/countries/{country_code}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ISO3166 Country Code\n          in: path\n          name: country_code\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Country\"\n          description: A Country information object\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Country Not Found.\n      summary: Retrieve a single Country information.\n      tags:\n        - Countries\n  \"/countries/{country_code}/regions.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ISO3166 Country Code\n          in: path\n          name: country_code\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Region\"\n                type: array\n          description: An array of Regions from a single Country\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Country Not Found.\n      summary: Retrieve all Regions from a single Country.\n      tags:\n        - Countries\n        - Regions\n  \"/countries/{country_code}/regions/{region_code}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ISO3166 Country Code\n          in: path\n          name: country_code\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Region Code\n          in: path\n          name: region_code\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Region\"\n          description: A Region information object\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Country or Region not found.\n      summary: Retrieve a single Region information object.\n      tags:\n        - Countries\n        - Regions\n  /custom_fields.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomField\"\n                type: array\n          description: An array of Custom Fields\n      summary: Retrieve all Store's Custom Fields.\n      tags:\n        - Custom Fields\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomFieldEdit\"\n        description: Custom Field parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n          description: OK\n      summary: Create a new Custom Field.\n      tags:\n        - Custom Fields\n  \"/custom_fields/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomField Not Found.\n      summary: Delete an existing CustomField.\n      tags:\n        - Custom Fields\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomField Not Found.\n      summary: Retrieve a single CustomField.\n      tags:\n        - Custom Fields\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomFieldEdit\"\n        description: CustomField parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomField Not Found.\n      summary: Update a CustomField.\n      tags:\n        - Custom Fields\n  \"/custom_fields/{id}/select_options.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomFieldSelectOption\"\n                type: array\n          description: An array of Custom Fields Select Options\n      summary: Retrieve all Store's Custom Fields.\n      tags:\n        - Custom Field Select Options\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Automatically added\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomFieldSelectOptionEdit\"\n        description: Custom Field Select Option parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomFieldSelectOption\"\n          description: OK\n      summary: Create a new Custom Field Select Option.\n      tags:\n        - Custom Field Select Options\n  \"/custom_fields/{id}/select_options/{custom_field_select_option_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Id of the CustomFieldSelectOption\n          in: path\n          name: custom_field_select_option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomFieldSelectOption Not Found.\n      summary: Delete an existing CustomFieldSelectOption.\n      tags:\n        - Custom Fields\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Id of the CustomFieldSelectOption\n          in: path\n          name: custom_field_select_option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomFieldSelectOption\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomFieldSelectOption Not Found.\n      summary: Retrieve a single SelectOption from a CustomField.\n      tags:\n        - Custom Field Select Options\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomField\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Id of the CustomFieldSelectOption\n          in: path\n          name: custom_field_select_option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomFieldSelectOptionEdit\"\n        description: CustomFieldSelectOption parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomFieldSelectOption\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomFieldSelectOption Not Found.\n      summary: Update a SelectOption from a CustomField.\n      tags:\n        - Custom Field Select Options\n  /customer_categories.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerCategory\"\n                type: array\n          description: An array of Customer Categories\n      summary: Retrieve all Customer Categories.\n      tags:\n        - Customer Categories\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerCategoryEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerCategory\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomerCategory Not Found.\n      summary: Create a new CustomerCategory.\n      tags:\n        - Customer Categories\n  \"/customer_categories/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomerCategory Not Found.\n      summary: Delete an existing CustomerCategory.\n      tags:\n        - Customer Categories\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerCategory\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomerCategory Not Found.\n      summary: Retrieve a single CustomerCategory.\n      tags:\n        - Customer Categories\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerCategoryEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerCategory\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomerCategory Not Found.\n      summary: Update a CustomerCategory.\n      tags:\n        - Customer Categories\n  \"/customer_categories/{id}/customers.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomersToCustomerCategory\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomerCategory Not Found.\n      summary: Delete Customers from an existing CustomerCategory.\n      tags:\n        - Customer Categories\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomerCategory Not Found.\n      summary: Retrieves the customers in a CustomerCategory.\n      tags:\n        - Customer Categories\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the CustomerCategory\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomersToCustomerCategory\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n          description: Array of Customers in the Customer Category\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: CustomerCategory Not Found.\n      summary: Adds Customers to a CustomerCategory.\n      tags:\n        - Customer Categories\n  /customers.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n          description: An array of Orders\n      summary: Retrieve all Customers.\n      tags:\n        - Customers\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerWithPasswordNoID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Not Found.\n      summary: Create a new Customer.\n      tags:\n        - Customers\n  /customers/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n      summary: Count all Customers.\n      tags:\n        - Customers\n  \"/customers/email/{email}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Email of the Customer\n          in: path\n          name: email\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Not Found.\n      summary: Retrieve a single Customer by email.\n      tags:\n        - Customers\n  \"/customers/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Not Found.\n      summary: Delete an existing Customer.\n      tags:\n        - Customers\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Not Found.\n      summary: Retrieve a single Customer by id.\n      tags:\n        - Customers\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerWithPasswordNoID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Not Found.\n      summary: Update a new Customer.\n      tags:\n        - Customers\n  \"/customers/{id}/fields\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerAdditionalField\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Not Found.\n      summary: Retrieves the Customer Additional Field of a Customer.\n      tags:\n        - Customer Additional Fields\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerAdditionalFieldEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerAdditionalField\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Additional Field Not Found.\n      summary: Adds Customer Additional Fields to a Customer.\n      tags:\n        - Customer Additional Fields\n  \"/customers/{id}/fields/{field_id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/CustomerIDParam\"\n        - description: Id of the Customer Additional Field\n          in: path\n          name: field_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Not Found.\n      summary: Delete a Customer Additional Field.\n      tags:\n        - Customer Additional Fields\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Customer\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Id of the Customer Additional Field\n          in: path\n          name: field_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerAdditionalField\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Not Found.\n      summary: Retrieve a single Customer Additional Field.\n      tags:\n        - Customer Additional Fields\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/CustomerIDParam\"\n        - description: Id of the Customer Additional Field\n          in: path\n          name: field_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerAdditionalFieldEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerAdditionalField\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadParams\"\n          description: Customer Additional Field Bad Parameters.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Customer Additional Field Not Found.\n      summary: Update a Customer Additional Field.\n      tags:\n        - Customer Additional Fields\n  /fulfillments.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Fulfillment\"\n                type: array\n          description: An array of Fulfillments\n      summary: Retrieve all Fulfillments.\n      tags:\n        - Fulfillments\n  /fulfillments/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n      summary: Count all Fulfillments.\n      tags:\n        - Fulfillments\n  \"/fulfillments/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Fulfillment\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Fulfillment\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Fulfillment Not Found.\n      summary: Retrieve a single Fulfillment.\n      tags:\n        - Fulfillments\n  /hooks.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Hook\"\n                type: array\n          description: An array of Hooks\n      summary: Retrieve all Hooks.\n      tags:\n        - Hooks\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/HookEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hook\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Hook Not Found.\n      summary: Create a new Hook.\n      tags:\n        - Hooks\n  \"/hooks/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Hook\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Hook Not Found.\n      summary: Delete an existing Hook.\n      tags:\n        - Hooks\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Hook\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hook\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Hook Not Found.\n      summary: Retrieve a single Hook.\n      tags:\n        - Hooks\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Hook\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/HookEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hook\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Hook Not Found.\n      summary: Update a Hook.\n      tags:\n        - Hooks\n  /jsapps.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/App\"\n          description: OK\n      summary: Retrieve all the Store's JSApps.\n      tags:\n        - Apps\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JSAppEdit\"\n        description: JSApp parameters to create\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JSApp\"\n          description: OK\n      summary: Create a Store JSApp.\n      tags:\n        - Apps\n  \"/jsapps/{code}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Code of the App\n          in: path\n          name: code\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: App Not Found.\n      summary: Delete an existing JSApp.\n      tags:\n        - Apps\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Code of the App\n          in: path\n          name: code\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JSApp\"\n          description: OK\n      summary: Retrieve a JSApp.\n      tags:\n        - Apps\n  \"/order/{id}/fulfillments.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Fulfillment\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Fulfillment Not Found.\n      summary: Retrieve the Fulfillments associated with the Order.\n      tags:\n        - Fulfillments\n  /orders.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Order\"\n                type: array\n          description: An array of Orders\n      summary: Retrieve all Orders.\n      tags:\n        - Orders\n    post:\n      description: Orders created externally keep the given order product's values (bypassing internal promotion or product amounts).\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderCreate\"\n        description: Order parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n          description: OK\n      summary: Create a new Order.\n      tags:\n        - Orders\n  \"/orders/after/{id}.json\":\n    get:\n      description: For example the GET /orders/after/5000 will return Order 5001, 5002, 5003, etc.\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Order Not Found.\n      summary: Retrieve orders filtered by Order Id.\n      tags:\n        - Orders\n  /orders/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n      summary: Count all Orders.\n      tags:\n        - Orders\n  \"/orders/status/{status}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Status of the Order used as filter\n          in: path\n          name: status\n          required: true\n          schema:\n            enum:\n              - Abandoned\n              - Canceled\n              - Pending Payment\n              - Paid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Order\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusInvalid\"\n          description: Status Invalid.\n      summary: Retrieve orders filtered by status.\n      tags:\n        - Orders\n  \"/orders/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Order Not Found.\n      summary: Retrieve a single Order.\n      tags:\n        - Orders\n    put:\n      description: Only `status`, `shipment_status`, `tracking_number`, `tracking_company`, `tracking_url`, `additional_information` and `additional_fields` are available for update. An email is send if `shipment_status` changes.\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderEdit\"\n        description: Order parameters to change\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Order Not Found.\n      summary: Modify an existing Order.\n      tags:\n        - Orders\n  \"/orders/{id}/history.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Order\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OrderHistory\"\n                type: array\n          description: An array with Order History\n      summary: Retrieve all Order History.\n      tags:\n        - Orders\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the OrderHistory\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderHistoryEdit\"\n        description: Order History parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderHistory\"\n          description: OK\n      summary: Create a new Order History Entry.\n      tags:\n        - Orders\n  /pages.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Page\"\n                type: array\n          description: An array of Pages\n      summary: Retrieve all Pages.\n      tags:\n        - Pages\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/PageModify\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Page\"\n          description: OK\n      summary: Create a new Page.\n      tags:\n        - Pages\n  /pages/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: Total number of pages\n      summary: Count all Pages.\n      tags:\n        - Pages\n  \"/pages/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Page\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Page Not Found.\n      summary: Delete an existing Page.\n      tags:\n        - Pages\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Page\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Page\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Page Not Found.\n      summary: Retrieve a single Page by id.\n      tags:\n        - Pages\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Page\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/PageModify\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Page\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Page Not Found.\n      summary: Update a Page.\n      tags:\n        - Pages\n  /partners/stores.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/PartnerCodeParam\"\n        - $ref: \"#/components/parameters/PartnerAuthtokenParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n        - description: Statistics start date. Should be in format 'Y-m-d'.\n          in: query\n          name: from\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Statistics end date. Should be in format 'Y-m-d'.\n          in: query\n          name: to\n          required: true\n          schema:\n            format: sting\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/type\"\n                type: array\n          description: Array of partner stores statistics.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartnerError\"\n          description: Bad Request.\n      summary: Retrieve statistics.\n      tags:\n        - Partners\n  /payment_methods.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentMethod\"\n                type: array\n          description: An array of Payment Methods\n      summary: Retrieve all Store's Payment Methods.\n      tags:\n        - Payment Methods\n  \"/payment_methods/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Payment Method\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentMethod\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: PaymentMethod Not Found.\n      summary: Retrieve a single Payment Method.\n      tags:\n        - Payment Methods\n  /products.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LimitParam\"\n        - $ref: \"#/components/parameters/PageParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n          description: OK\n      summary: Retrieve all Products.\n      tags:\n        - Products\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductEdit\"\n        description: Product parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: OK\n      summary: Create a new Product.\n      tags:\n        - Products\n  \"/products/after/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieves Products after the given id.\n      tags:\n        - Products\n  \"/products/category/{category_id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n        - description: Category ID of the Product used as filter\n          in: path\n          name: category_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve Products filtered by category.\n      tags:\n        - Products\n  \"/products/category/{category_id}/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n        - description: Category ID of the Product used as filter\n          in: path\n          name: category_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Category Not Found.\n      summary: Count Products filtered by category.\n      tags:\n        - Products\n  /products/count.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n      summary: Count all Products.\n      tags:\n        - Products\n  /products/search.json:\n    get:\n      description: |-\n        Endpoint example: \n\n        ```text\n        https://api.jumpseller.com/v1/products/search.json?login=XXXXXX\u0026authtoken=XXXXX\u0026query=test\u0026fields=name,description \n        ```\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n        - description: Text to query for the Product\n          in: query\n          name: query\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Comma separated values of the fields to query for the Product\n          in: query\n          name: fields\n          required: false\n          schema:\n            enum:\n              - sku\n              - barcode\n              - brand\n              - name\n              - description\n              - variants\n              - option_name\n              - custom_fields\n              - custom_fields_selects\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n          description: An array of products\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Invalid query.\n      summary: Retrieve a Product List from a query.\n      tags:\n        - Products\n  \"/products/status/{status}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n        - description: Status of the Product used as filter\n          in: path\n          name: status\n          required: true\n          schema:\n            enum:\n              - available\n              - not-available\n              - disabled\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusInvalid\"\n          description: Status Invalid.\n      summary: Retrieve Products filtered by status.\n      tags:\n        - Products\n  \"/products/status/{status}/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n        - description: Status of the Product used as filter\n          in: path\n          name: status\n          required: true\n          schema:\n            enum:\n              - available\n              - not-available\n              - disabled\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusInvalid\"\n          description: Status Invalid.\n      summary: Count Products filtered by status.\n      tags:\n        - Products\n  \"/products/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Delete an existing Product.\n      tags:\n        - Products\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve a single Product.\n      tags:\n        - Products\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - $ref: \"#/components/parameters/LocaleParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductEdit\"\n        description: Product parameters to change\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Modify an existing Product.\n      tags:\n        - Products\n  \"/products/{id}/attachments.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Attachment\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve all Product Attachments.\n      tags:\n        - Product Attachments\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AttachmentEdit\"\n        description: Product Attachment parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: OK\n      summary: Create a new Product Attachment.\n      tags:\n        - Product Attachments\n  \"/products/{id}/attachments/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Count all Product Attachments.\n      tags:\n        - Product Attachments\n  \"/products/{id}/attachments/{attachment_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Attachment\n          in: path\n          name: attachment_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Delete a Product Attachment.\n      tags:\n        - Product Attachments\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Attachment\n          in: path\n          name: attachment_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve a single Product Attachment.\n      tags:\n        - Product Attachments\n  \"/products/{id}/digital_products.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DigitalProduct\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve all Product DigitalProducts.\n      tags:\n        - Product DigitalProducts\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DigitalProductEdit\"\n        description: Product DigitalProduct parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DigitalProduct\"\n          description: OK\n      summary: Create a new Product DigitalProduct.\n      tags:\n        - Product DigitalProducts\n  \"/products/{id}/digital_products/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Count all Product DigitalProducts.\n      tags:\n        - Product DigitalProducts\n  \"/products/{id}/digital_products/{digital_product_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product DigitalProduct\n          in: path\n          name: digital_product_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Delete a Product DigitalProduct.\n      tags:\n        - Product DigitalProducts\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product DigitalProduct\n          in: path\n          name: digital_product_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DigitalProduct\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve a single Product DigitalProduct.\n      tags:\n        - Product DigitalProducts\n  \"/products/{id}/fields.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductCustomField\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve all Product Custom Fields\n      tags:\n        - Product Custom Fields\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddProductCustomField\"\n        description: Product Custom Field parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Add an existing Custom Field to a Product.\n      tags:\n        - Product Custom Fields\n  \"/products/{id}/fields/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Count all Product Custom Fields.\n      tags:\n        - Product Custom Fields\n  \"/products/{id}/images.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Image\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve all Product Images.\n      tags:\n        - Product Images\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ImageEdit\"\n        description: Product Image parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Image\"\n          description: OK\n      summary: Create a new Product Image.\n      tags:\n        - Product Images\n  \"/products/{id}/images/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Count all Product Images.\n      tags:\n        - Product Images\n  \"/products/{id}/images/{image_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Image\n          in: path\n          name: image_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Delete a Product Image.\n      tags:\n        - Product Images\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Image\n          in: path\n          name: image_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Image\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve a single Product Image.\n      tags:\n        - Product Images\n  \"/products/{id}/options.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOption\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve all Product Options.\n      tags:\n        - Product Options\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductOptionEdit\"\n        description: Product Option parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductOption\"\n          description: OK\n      summary: Create a new Product Option.\n      tags:\n        - Product Options\n  \"/products/{id}/options/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Count all Product Options.\n      tags:\n        - Product Options\n  \"/products/{id}/options/{option_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Delete a Product Option.\n      tags:\n        - Product Options\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductOption\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve a single Product Option.\n      tags:\n        - Product Options\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductOptionEdit\"\n        description: Product option parameters to change\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductOption\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Modify an existing Product Option.\n      tags:\n        - Product Options\n  \"/products/{id}/options/{option_id}/values.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: ID of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductOptionValue\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve all Product Option Values.\n      tags:\n        - Product Option Values\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductOptionValueEdit\"\n        description: Product Option Value parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductOptionValue\"\n          description: OK\n      summary: Create a new Product Option Value.\n      tags:\n        - Product Option Values\n  \"/products/{id}/options/{option_id}/values/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: ID of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Count all Product Option Values.\n      tags:\n        - Product Option Values\n  \"/products/{id}/options/{option_id}/values/{value_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: ID of the Product Option Value\n          in: path\n          name: value_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Delete a Product Option Value.\n      tags:\n        - Product Option Values\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: ID of the Product Option Value\n          in: path\n          name: value_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductOptionValue\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve a single Product Option Value.\n      tags:\n        - Product Option Values\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Option\n          in: path\n          name: option_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Id of the Product Option Value\n          in: path\n          name: value_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProductOptionValueEdit\"\n        description: Product option value parameters to change\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductOptionValue\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Modify an existing Product Option Value.\n      tags:\n        - Product Option Values\n  \"/products/{id}/variants.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Variant\"\n                type: array\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve all Product Variants.\n      tags:\n        - Product Variants\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VariantEdit\"\n        description: Product Variant parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Variant\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Create a new Product Variant.\n      tags:\n        - Product Variants\n  \"/products/{id}/variants/count.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: ID of the Product\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Count\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Count all Product Variants.\n      tags:\n        - Product Variants\n  \"/products/{id}/variants/{variant_id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Variant\n          in: path\n          name: variant_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Variant\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Retrieve a single Product Variant.\n      tags:\n        - Product Variants\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - $ref: \"#/components/parameters/ProductIDParam\"\n        - description: Id of the Product Variant\n          in: path\n          name: variant_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VariantEdit\"\n        description: Product Variant parameters to change\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Variant\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product Not Found.\n      summary: Modify an existing Product Variant.\n      tags:\n        - Product Variants\n  \"/products/{product_id}/fields/{field_id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Product.\n          in: path\n          name: product_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Id of the Custom Field Value.\n          in: path\n          name: field_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MessageObject\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product or Custom Field Value Not Found.\n      summary: Delete value of Product Custom Field\n      tags:\n        - Product Custom Fields\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Product.\n          in: path\n          name: product_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Id of the Custom Field Value.\n          in: path\n          name: field_id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductCustomField\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Product or Custom Field Value Not Found.\n      summary: Update value of Product Custom Field\n      tags:\n        - Product Custom Fields\n  /promotions.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: \"Promotions' list restriction (default: 50 | max: 200).\"\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: integer\n            type: integer\n        - description: \"Promotions' list page (default: 1).\"\n          in: query\n          name: page\n          required: false\n          schema:\n            format: integer\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Promotion\"\n                type: array\n          description: An array of Promotions\n      summary: Retrieve all Promotions.\n      tags:\n        - Promotions\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/PromotionEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Promotion\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Promotion Not Found.\n      summary: Create a new Promotion.\n      tags:\n        - Promotions\n  \"/promotions/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Promotion\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Promotion Not Found.\n      summary: Delete an existing Promotion.\n      tags:\n        - Promotions\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Promotion\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Promotion\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Promotion Not Found.\n      summary: Retrieve a single Promotion.\n      tags:\n        - Promotions\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Promotion\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/PromotionEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Promotion\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Promotion Not Found.\n      summary: Update a Promotion.\n      tags:\n        - Promotions\n  /shipping_methods.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShippingMethod\"\n                type: array\n          description: An array of Shipping Methods\n      summary: Retrieve all Store's Shipping Methods.\n      tags:\n        - Shipping Methods\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ShippingMethodEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShippingMethod\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: ShippingMethod Not Found.\n      summary: Creates a Shipping Method.\n      tags:\n        - Shipping Methods\n  \"/shipping_methods/{id}.json\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Shipping Method\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Shipping Method Not Found.\n      summary: Delete an existing Shipping Method.\n      tags:\n        - Shipping Methods\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Shipping Method\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShippingMethod\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: ShippingMethod Not Found.\n      summary: Retrieve a single Shipping Method.\n      tags:\n        - Shipping Methods\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Shipping Method\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/ShippingMethodEdit\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShippingMethod\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Shipping Method Not Found.\n      summary: Update a Shipping Method.\n      tags:\n        - Shipping Methods\n  /store/check_status.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/PartnerCodeParam\"\n        - $ref: \"#/components/parameters/PartnerAuthtokenParam\"\n        - description: Store Code\n          in: query\n          name: store_code\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: ISO 3166-2 code of the language used in the response messages.\n          in: query\n          name: locale\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/PartnerStoreStatus\"\n                  - $ref: \"#/components/schemas/NewPartnerStore\"\n          description: A Store status object if creation is still in progress. A new Partner Store object when creation is done.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartnerError\"\n          description: Bad Request.\n      summary: Retrive store creation status.\n      tags:\n        - Partners\n  /store/create.json:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/PartnerCodeParam\"\n        - $ref: \"#/components/parameters/PartnerAuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PartnerStoreCreate\"\n        description: New partnered Store parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartnerStoreCode\"\n          description: A Partner Store object.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartnerError\"\n          description: Bad Request.\n      summary: Create a Partnered Store\n      tags:\n        - Partners\n  /store/info.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Store\"\n          description: OK\n      summary: Retrieve Store Information.\n      tags:\n        - Stores\n  /store/languages.json:\n    get:\n      description: \"\"\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Language\"\n                type: array\n          description: OK\n      summary: Retrieve Store Languages.\n      tags:\n        - Stores\n  /taxes.json:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tax\"\n                type: array\n          description: An array of Taxes\n      summary: Retrieve all Taxes.\n      tags:\n        - Taxes\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxEdit\"\n        description: Tax parameters.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tax\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Tax Not Found.\n      summary: Create a new Tax.\n      tags:\n        - Taxes\n  \"/taxes/{id}.json\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/LoginParam\"\n        - $ref: \"#/components/parameters/AuthtokenParam\"\n        - description: Id of the Tax\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tax\"\n          description: A Tax information object\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n          description: Tax Not Found.\n      summary: Retrieve a single Tax information.\n      tags:\n        - Taxes\ncomponents:\n  parameters:\n    AuthtokenParam:\n      description: API OAuth token.\n      in: query\n      name: authtoken\n      required: true\n      schema:\n        format: string\n        type: string\n    CustomerIDParam:\n      description: Id of the Customer\n      in: path\n      name: id\n      required: true\n      schema:\n        format: int32\n        type: integer\n    LimitParam:\n      description: List restriction\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 50\n        format: integer\n        maximum: 200\n        type: integer\n    LocaleParam:\n      description: Locale code of the translation\n      in: query\n      name: locale\n      required: false\n      schema:\n        format: string\n        type: string\n    LoginParam:\n      description: API OAuth login.\n      in: query\n      name: login\n      required: true\n      schema:\n        format: string\n        type: string\n    PageParam:\n      description: List page\n      in: query\n      name: page\n      required: false\n      schema:\n        default: 1\n        format: integer\n        type: integer\n    PartnerAuthtokenParam:\n      description: Partner authentication token.\n      in: query\n      name: auth_token\n      required: true\n      schema:\n        format: string\n        type: string\n    PartnerCodeParam:\n      description: Partner code.\n      in: query\n      name: partner_code\n      required: true\n      schema:\n        format: string\n        type: string\n    ProductIDParam:\n      description: Id of the Product\n      in: path\n      name: id\n      required: true\n      schema:\n        format: int32\n        type: integer\n  requestBodies:\n    CategoryEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CategoryEdit\"\n      description: Category parameters.\n      required: true\n    CheckoutCustomFieldEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CheckoutCustomFieldEdit\"\n      description: CheckoutCustomField parameters.\n      required: true\n    CustomerAdditionalFieldEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CustomerAdditionalFieldEdit\"\n      description: Customer Additional Field parameters.\n      required: true\n    CustomerCategoryEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CustomerCategoryEdit\"\n      description: CustomerCategory parameters.\n      required: true\n    CustomerWithPasswordNoID:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CustomerWithPasswordNoID\"\n      description: Customer parameters.\n      required: true\n    CustomersToCustomerCategory:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CustomersToCustomerCategory\"\n      description: Customer parameters.\n      required: true\n    HookEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/HookEdit\"\n      description: Hook parameters.\n      required: true\n    PageModify:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PageModify\"\n      description: Page parameters.\n      required: true\n    PromotionEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PromotionEdit\"\n      description: Promotion parameters.\n      required: true\n    ShippingMethodEdit:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ShippingMethodEdit\"\n      description: Shipping Method parameters.\n      required: true\n  schemas:\n    AddProductCustomField:\n      properties:\n        field:\n          $ref: \"#/components/schemas/AddProductCustomFieldFields\"\n      type: object\n    AddProductCustomFieldFields:\n      properties:\n        id:\n          description: Unique identifier of the ProductCustomField (custom_field_id)\n          format: int32\n          type: integer\n        value:\n          description: The value for the ProductCustomField\n          type: string\n      type: object\n    App:\n      properties:\n        apps:\n          items:\n            $ref: \"#/components/schemas/AppFields\"\n          type: array\n      type: object\n    AppFields:\n      properties:\n        author:\n          description: Author of the app\n          type: string\n        code:\n          description: Code of the app\n          type: string\n        description:\n          description: Description of the app\n          type: string\n        js:\n          default: false\n          description: True if the app is a jsapp\n          type: boolean\n        name:\n          description: Name of the app\n          type: string\n        page:\n          description: Page of the app\n          type: string\n      type: object\n    Attachment:\n      properties:\n        attachment:\n          $ref: \"#/components/schemas/AttachmentFields\"\n      type: object\n    AttachmentEdit:\n      properties:\n        attachment:\n          $ref: \"#/components/schemas/AttachmentEditFields\"\n      type: object\n    AttachmentEditFields:\n      properties:\n        filename:\n          description: Filename of the attachment (with file extensison)\n          type: string\n        url:\n          description: \"Public accessible URL with the desired file contents. (LIMIT: 100MB)\"\n          type: string\n      type: object\n    AttachmentFields:\n      properties:\n        id:\n          description: Unique identifier of the attachment\n          format: int32\n          type: integer\n        url:\n          description: Private URL of the attachment\n          type: string\n      type: object\n    BadParams:\n      properties:\n        message:\n          type: string\n    BestSold:\n      properties:\n        count:\n          description: Quantity sold.\n          type: integer\n        product_id:\n          type: integer\n          x-descriprtion: Product ID.\n        product_name:\n          type: string\n          x-descriprtion: Product name.\n        total:\n          description: Total sold amount.\n          format: float\n          type: number\n      type: object\n    BillingAddress:\n      properties:\n        address:\n          description: Address of the Customer's Billing Address\n          type: string\n        city:\n          description: City of the Customer's Billing Address\n          type: string\n        country:\n          description: Country code of the Customer's Billing Address (ISO 3166-1 alpha-2)\n          type: string\n        municipality:\n          description: Municipality of the Customer's Billing Address\n          type: string\n        name:\n          description: Name of the Customer's Billing Address\n          type: string\n        postal:\n          description: Postal code of the Customer's Billing Address\n          type: string\n        region:\n          description: Region code of the Customer's Billing Address (Use the FIPS standard - http://www.geonames.org/countries/)\n          type: string\n        surname:\n          description: Surname of the Customer's Billing Address\n          type: string\n        taxid:\n          description: Tax id of the Customer's Billing Address\n          type: string\n    Category:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CategoryFields\"\n      type: object\n    CategoryEdit:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CategoryEditFields\"\n      type: object\n    CategoryEditFields:\n      properties:\n        name:\n          description: Name of the Category\n          type: string\n        parent_id:\n          description: Unique identifier of the Parent Category\n          format: int32\n          type: integer\n      type: object\n    CategoryFields:\n      properties:\n        id:\n          description: Unique identifier of the Category\n          format: int32\n          type: integer\n        name:\n          description: Name of the Category\n          type: string\n        parent_id:\n          description: Unique identifier of the Parent Category\n          format: int32\n          type: integer\n        permalink:\n          description: Category unique URL path\n          type: string\n      type: object\n    CheckoutCustomField:\n      properties:\n        checkout_custom_field:\n          $ref: \"#/components/schemas/CheckoutCustomFieldFields\"\n      type: object\n    CheckoutCustomFieldEdit:\n      properties:\n        checkout_custom_field:\n          $ref: \"#/components/schemas/CheckoutCustomFieldEditFields\"\n      type: object\n    CheckoutCustomFieldEditFields:\n      properties:\n        area:\n          description: Area of the CheckoutCustomField\n          enum:\n            - contact\n            - billing_shipping\n            - other\n          type: string\n        custom_field_select_options:\n          description: The values for the CheckoutCustomField selection\n          items:\n            type: string\n          type: array\n        deletable:\n          default: false\n          description: True if the CheckoutCustomField can be removed from the store\n          type: boolean\n        label:\n          description: Label given to the CheckoutCustomField\n          type: string\n        position:\n          description: Position of the CheckoutCustomField\n          format: int32\n          type: integer\n        required:\n          default: false\n          description: True if the CheckoutCustomField is mandatory\n          type: boolean\n        type:\n          description: Type of the CheckoutCustomField\n          enum:\n            - text\n            - select\n            - input\n            - checkbox\n            - date\n          type: string\n      type: object\n    CheckoutCustomFieldFields:\n      properties:\n        area:\n          description: Area of the CheckoutCustomField\n          enum:\n            - contact\n            - billing_shipping\n            - other\n          type: string\n        custom_field_select_options:\n          description: The values for the CheckoutCustomField selection\n          items:\n            type: string\n          type: array\n        deletable:\n          default: false\n          description: True if the CheckoutCustomField can be removed from the store\n          type: boolean\n        id:\n          description: Unique identifier of the CheckoutCustomField\n          format: int32\n          type: integer\n        label:\n          description: Label given to the CheckoutCustomField\n          type: string\n        position:\n          description: Position of the CheckoutCustomField\n          format: int32\n          type: integer\n        required:\n          default: false\n          description: True if the CheckoutCustomField is mandatory\n          type: boolean\n        type:\n          description: Type of the CheckoutCustomField\n          enum:\n            - text\n            - select\n            - input\n            - checkbox\n          type: string\n      type: object\n    Count:\n      properties:\n        count:\n          format: int32\n          type: integer\n    Country:\n      properties:\n        code:\n          type: string\n        name:\n          type: string\n    CountryOrders:\n      properties:\n        code:\n          type: string\n          x-descriprtion: Country code.\n        count:\n          description: Number of country orders.\n          type: integer\n        country:\n          type: string\n          x-descriprtion: Country name.\n        orders:\n          description: Orders per region.\n          items:\n            $ref: \"#/components/schemas/RegionOrders\"\n          type: array\n      type: object\n    CustomField:\n      properties:\n        custom_field:\n          $ref: \"#/components/schemas/CustomFieldFields\"\n      type: object\n    CustomFieldEdit:\n      properties:\n        custom_field:\n          $ref: \"#/components/schemas/CustomFieldEditFields\"\n      type: object\n    CustomFieldEditFields:\n      properties:\n        label:\n          description: Label given to the Custom Field\n          type: string\n        type:\n          description: Type of the Custom Field\n          enum:\n            - text\n            - selection\n            - input\n          type: string\n        values:\n          description: All the possible Values of the Custom Field (for type 'selection')\n          items:\n            type: string\n          type: array\n      type: object\n    CustomFieldFields:\n      properties:\n        id:\n          description: Unique identifier of the Custom Field\n          format: int32\n          type: integer\n        label:\n          description: Label given to the Custom Field\n          type: string\n        type:\n          description: Type of the Custom Field\n          enum:\n            - text\n            - selection\n            - input\n          type: string\n        values:\n          description: All the possible Values of the Custom Field (for type 'selection')\n          items:\n            type: string\n          type: array\n      type: object\n    CustomFieldSelectOption:\n      properties:\n        custom_field_select_option:\n          $ref: \"#/components/schemas/CustomFieldSelectOptionFields\"\n      type: object\n    CustomFieldSelectOptionEdit:\n      properties:\n        custom_field_select_option:\n          $ref: \"#/components/schemas/CustomFieldSelectOptionEditFields\"\n      type: object\n    CustomFieldSelectOptionEditFields:\n      properties:\n        value:\n          description: Value given to the Custom Field Select Option\n          type: string\n      type: object\n    CustomFieldSelectOptionFields:\n      properties:\n        id:\n          description: Unique identifier of the Custom Field Select Option\n          format: int32\n          type: integer\n        value:\n          description: Value given to the Custom Field Select Option\n          type: string\n      type: object\n    Customer:\n      properties:\n        customer:\n          $ref: \"#/components/schemas/CustomerFields\"\n      type: object\n    CustomerAdditionalField:\n      properties:\n        customer_additional_field:\n          $ref: \"#/components/schemas/CustomerAdditionalFieldFields\"\n      type: object\n    CustomerAdditionalFieldEdit:\n      properties:\n        customer_additional_field:\n          $ref: \"#/components/schemas/CustomerAdditionalFieldEditFields\"\n      type: object\n    CustomerAdditionalFieldEditFields:\n      properties:\n        checkout_custom_field_id:\n          description: Unique identifier of the Checkout Custom Field\n          format: int32\n          type: integer\n        value:\n          description: Value of the Customer Additional Field\n          type: string\n      type: object\n    CustomerAdditionalFieldFields:\n      properties:\n        area:\n          description: Area of the Customer Additional Field\n          type: string\n        checkout_custom_field_id:\n          description: Unique identifier of the Checkout Custom Field\n          format: int32\n          type: integer\n        customer_id:\n          description: Unique identifier of the Customer\n          format: int32\n          type: integer\n        id:\n          description: Unique identifier of the Customer Additional Field\n          format: int32\n          type: integer\n        label:\n          description: Label of the Customer Additional Field\n          type: string\n        value:\n          description: Value of the Customer Additional Field\n          type: string\n      type: object\n    CustomerCategory:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CustomerCategoryFields\"\n      type: object\n    CustomerCategoryEdit:\n      properties:\n        category:\n          $ref: \"#/components/schemas/CustomerCategoryEditFields\"\n      type: object\n    CustomerCategoryEditFields:\n      properties:\n        name:\n          description: Name of the CustomerCategory\n          type: string\n      type: object\n    CustomerCategoryFields:\n      properties:\n        code:\n          description: Code of the CustomerCategory\n          type: string\n        id:\n          description: Unique identifier of the CustomerCategory\n          format: int32\n          type: integer\n        name:\n          description: Name of the CustomerCategory\n          type: string\n      type: object\n    CustomerFields:\n      properties:\n        billing_address:\n          $ref: \"#/components/schemas/BillingAddress\"\n        customer_additional_fields:\n          items:\n            $ref: \"#/components/schemas/CustomerAdditionalField\"\n          type: array\n        customer_categories:\n          items:\n            $ref: \"#/components/schemas/CustomerCategory\"\n          type: array\n        email:\n          description: Email of the Customer\n          type: string\n        id:\n          description: Unique identifier of the Customer\n          format: int32\n          type: integer\n        name:\n          description: Name of the Customer\n          type: string\n        phone:\n          description: Phone of the Customer\n          type: string\n        shipping_address:\n          $ref: \"#/components/schemas/ShippingAddress\"\n        status:\n          description: Status of the Customer\n          enum:\n            - approved\n            - pending\n            - disabled\n          type: string\n        surname:\n          description: Surname of the Customer\n          type: string\n      type: object\n    CustomerFieldsWithBillingAddressAndShippingAddressFields:\n      properties:\n        billing_address:\n          $ref: \"#/components/schemas/BillingAddress\"\n        id:\n          description: Unique identifier of the Customer\n          format: int32\n          type: integer\n        shipping_address:\n          $ref: \"#/components/schemas/ShippingAddress\"\n      type: object\n    CustomerFieldsWithPassword:\n      properties:\n        billing_address:\n          $ref: \"#/components/schemas/BillingAddress\"\n        email:\n          description: Email of the Customer\n          type: string\n        id:\n          description: Unique identifier of the Customer\n          format: int32\n          type: integer\n        password:\n          description: Password\n          type: string\n        phone:\n          description: Phone of the Customer\n          type: string\n        shipping_address:\n          $ref: \"#/components/schemas/ShippingAddress\"\n        status:\n          description: Status of the Customer\n          enum:\n            - approved\n            - pending\n            - disabled\n          type: string\n      type: object\n    CustomerFieldsWithPasswordNoID:\n      properties:\n        billing_address:\n          $ref: \"#/components/schemas/BillingAddress\"\n        customer_category:\n          items:\n            type: integer\n          type: array\n        email:\n          description: Email of the Customer\n          type: string\n        password:\n          description: Password\n          type: string\n        phone:\n          description: Phone of the Customer\n          type: string\n        shipping_address:\n          $ref: \"#/components/schemas/ShippingAddress\"\n        status:\n          description: Status of the Customer\n          enum:\n            - approved\n            - pending\n            - disabled\n          type: string\n      type: object\n    CustomerToCustomerCategory:\n      properties:\n        email:\n          description: Email of the Customer\n          type: string\n        id:\n          description: Unique identifier of the Customer\n          format: int32\n          type: integer\n      type: object\n    CustomerWithPassword:\n      properties:\n        customer:\n          $ref: \"#/components/schemas/CustomerFieldsWithPassword\"\n      type: object\n    CustomerWithPasswordNoID:\n      properties:\n        customer:\n          $ref: \"#/components/schemas/CustomerFieldsWithPasswordNoID\"\n      type: object\n    CustomersToCustomerCategory:\n      properties:\n        customers:\n          items:\n            $ref: \"#/components/schemas/CustomerToCustomerCategory\"\n          type: array\n      type: object\n    DailyVisits:\n      properties:\n        date:\n          type: string\n          x-descriprtion: Date\n        visits:\n          type: integer\n          x-descriprtion: Total number of visits for the specified date.\n      type: object\n    DigitalProduct:\n      properties:\n        digital_product:\n          $ref: \"#/components/schemas/DigitalProductFields\"\n      type: object\n    DigitalProductEdit:\n      properties:\n        digital_product:\n          $ref: \"#/components/schemas/DigitalProductEditFields\"\n      type: object\n    DigitalProductEditFields:\n      properties:\n        filename:\n          description: Filename of the digital product (with file extensison)\n          type: string\n        url:\n          description: \"Public accessible URL with the desired file contents. (LIMIT: 100MB)\"\n          type: string\n      type: object\n    DigitalProductFields:\n      properties:\n        expiration_seconds:\n          description: Time left in seconds before the current private URL expires\n          format: int32\n          type: integer\n        id:\n          description: Unique identifier of the digital product\n          format: int32\n          type: integer\n        url:\n          description: Private URL of the digital product\n          type: string\n      type: object\n    Fulfillment:\n      properties:\n        category:\n          $ref: \"#/components/schemas/FulfillmentFields\"\n      type: object\n    FulfillmentCreate:\n      properties:\n        order:\n          $ref: \"#/components/schemas/FulfillmentCreateFields\"\n      type: object\n    FulfillmentCreateFields:\n      properties:\n        expected_arrival_from:\n          description: First date expected for the fulfillment to arrive at customer place\n          type: string\n        expected_arrival_to:\n          description: Last date expected for the fulfillment to arrive at customer place\n          type: string\n        external_id:\n          description: Unique identifier of the Fulfillment used by the tracking company\n          type: string\n        order_id:\n          description: Order associated with the fulfillment\n          type: string\n        service_type:\n          description: Type of Service requested to the tracking company\n          type: string\n        shipment_status:\n          description: Status of the Fulfillment\n          enum:\n            - requested\n            - in_transit\n            - delivered\n            - failed\n          type: string\n        tracking_company:\n          description: Tracking company responsible for the fulfillment\n          type: string\n        tracking_number:\n          description: Tracking Number associated with the fulfillment\n          type: string\n        type:\n          description: Type of fulfillment Service used\n          enum:\n            - manual\n            - shipit\n            - chilexpress\n            - ctt\n            - correos_chile\n            - dhl\n            - servientrega\n            - starken\n            - bluexpress\n          type: string\n    FulfillmentEdit:\n      properties:\n        order:\n          $ref: \"#/components/schemas/FulfillmentEditFields\"\n      type: object\n    FulfillmentEditFields:\n      properties:\n        expected_arrival_from:\n          description: First date expected for the fulfillment to arrive at customer place\n          type: string\n        expected_arrival_to:\n          description: Last date expected for the fulfillment to arrive at customer place\n          type: string\n        external_id:\n          description: Unique identifier of the Fulfillment used by the tracking company\n          type: string\n        order_id:\n          description: Order associated with the fulfillment\n          type: string\n        service_type:\n          description: Type of Service requested to the tracking company\n          type: string\n        shipment_status:\n          description: Status of the Fulfillment\n          enum:\n            - requested\n            - in_transit\n            - delivered\n            - failed\n          type: string\n        tracking_company:\n          description: Tracking company responsible for the fulfillment\n          type: string\n        tracking_number:\n          description: Tracking Number associated with the fulfillment\n          type: string\n        type:\n          description: Type of fulfillment Service used\n          enum:\n            - manual\n            - shipit\n            - chilexpress\n            - ctt\n            - correos_chile\n            - dhl\n            - servientrega\n            - starken\n            - bluexpress\n          type: string\n    FulfillmentFields:\n      properties:\n        external_id:\n          description: Unique identifier of the Fulfillment used by the tracking company\n          type: string\n        id:\n          description: Unique identifier of the Fulfillment\n          format: int32\n          type: integer\n        order_id:\n          description: Order associated with the fulfillment\n          type: string\n        service_type:\n          description: Type of Service requested to the tracking company\n          type: string\n        shipment_status:\n          description: Status of the fulfillment\n          type: string\n        tracking_company:\n          description: Tracking company responsible for the fulfillment\n          type: string\n        tracking_number:\n          description: Tracking Number associated with the fulfillment\n          type: string\n        type:\n          description: Type of fulfillment Service used\n          type: string\n      type: object\n    Hook:\n      properties:\n        hook:\n          $ref: \"#/components/schemas/HookFields\"\n      type: object\n    HookEdit:\n      properties:\n        hook:\n          $ref: \"#/components/schemas/HookEditFields\"\n      type: object\n    HookEditFields:\n      properties:\n        event:\n          description: Event associated with Hook\n          enum:\n            - order_updated\n            - order_pending_payment\n            - order_paid\n            - order_shipped\n            - order_canceled\n            - order_abandoned\n            - product_created\n            - product_updated\n            - product_deleted\n            - customer_created\n            - customer_updated\n            - customer_deleted\n          type: string\n        url:\n          description: Hook URL to be notified\n          type: string\n      required:\n        - event\n        - url\n      type: object\n    HookFields:\n      properties:\n        created_at:\n          description: Hook creation date\n          type: string\n        event:\n          description: Event associated with Hook\n          type: string\n        id:\n          description: Unique identifier of the Hook\n          format: int32\n          type: integer\n        name:\n          description: Hook name\n          type: string\n        url:\n          description: Hook URL to be notified\n          type: string\n      type: object\n    Id:\n      properties:\n        id:\n          format: int32\n          type: integer\n    Image:\n      properties:\n        image:\n          $ref: \"#/components/schemas/ImageFields\"\n      type: object\n    ImageEdit:\n      properties:\n        image:\n          $ref: \"#/components/schemas/ImageEditFields\"\n      type: object\n    ImageEditFields:\n      properties:\n        url:\n          description: Complete URL of the image\n          type: string\n      type: object\n    ImageFields:\n      properties:\n        id:\n          description: Unique identifier of the image\n          format: int32\n          type: integer\n        position:\n          description: Position of the image\n          format: int32\n          type: integer\n        url:\n          description: Complete URL of the image\n          type: string\n      type: object\n    JSApp:\n      properties:\n        element:\n          description: Element of Template to inject HTML\n          type: string\n        template:\n          description: Template of Store Theme to inject HTML\n          type: string\n        url:\n          description: Url of the HTML to inject\n          type: string\n      type: object\n    JSAppEdit:\n      properties:\n        app:\n          $ref: \"#/components/schemas/JSApp\"\n      type: object\n    Language:\n      properties:\n        code:\n          type: string\n        name:\n          type: string\n    MessageObject:\n      properties:\n        message:\n          type: string\n    NewPartnerStore:\n      properties:\n        store:\n          properties:\n            code:\n              description: New Store code.\n              type: string\n            email_partner:\n              description: Partner email.\n              format: email\n              type: string\n            name:\n              description: New Store name.\n              type: string\n            redirect_url:\n              description: New Store redirect url.\n              format: uri\n              type: string\n          type: object\n      type: object\n    NewVsReturning:\n      properties:\n        date:\n          type: string\n          x-descriprtion: Date.\n        new:\n          type: integer\n          x-descriprtion: Total number of new.\n        returning:\n          type: integer\n          x-descriprtion: Total number of returning.\n      type: object\n    NotFound:\n      properties:\n        message:\n          type: string\n    Order:\n      properties:\n        order:\n          $ref: \"#/components/schemas/OrderFields\"\n      type: object\n    OrderAdditionalFields:\n      description: Additional field of an order\n      properties:\n        label:\n          description: Label of the additional field\n          format: string\n          type: string\n        value:\n          description: Value of the additional field\n          format: string\n          type: string\n      type: object\n    OrderBillingAddress:\n      properties:\n        address:\n          description: Address of the Order's Billing Address\n          type: string\n        city:\n          description: City of the Order's Billing Address\n          type: string\n        country:\n          description: Country code of the Order's Billing Address (ISO 3166-1 alpha-2)\n          type: string\n        country_name:\n          description: Country name of the Order's Billing Address\n          type: string\n        municipality:\n          description: Municipality of the Order's Billing Address\n          type: string\n        name:\n          description: Name of the Order's Billing Address\n          type: string\n        postal:\n          description: Postal code of the Order's Billing Address\n          type: string\n        region:\n          description: Region code of the Order's Billing Address (Use the FIPS standard - http://www.geonames.org/countries/)\n          type: string\n        street_number:\n          description: Street number of the Order's Billing Address\n          type: number\n        surname:\n          description: Surname of the Order's Billing Address\n          type: string\n    OrderCreate:\n      properties:\n        order:\n          $ref: \"#/components/schemas/OrderCreateFields\"\n      type: object\n    OrderCreateFields:\n      properties:\n        customer:\n          $ref: \"#/components/schemas/CustomerFieldsWithBillingAddressAndShippingAddressFields\"\n        products:\n          items:\n            $ref: \"#/components/schemas/OrderProductOrderCreate\"\n          type: array\n        shipping_method_id:\n          description: Shipping method id\n          format: int32\n          type: integer\n        shipping_method_name:\n          description: Shipping method name e.g. Royal Mail\n          type: string\n        shipping_price:\n          description: Shipping method's price (applicable if shipping_method_name is provided instead of a shipping_method_id)\n          format: float\n          type: number\n        status:\n          description: Status of the Order\n          enum:\n            - Abandoned\n            - Canceled\n            - Pending Payment\n            - Paid\n          type: string\n    OrderEdit:\n      properties:\n        order:\n          $ref: \"#/components/schemas/OrderEditFields\"\n      type: object\n    OrderEditFields:\n      properties:\n        additional_fields:\n          description: Array of additional fields for the given Order\n          items:\n            $ref: \"#/components/schemas/OrderAdditionalFields\"\n          type: array\n        additional_information:\n          description: Additional information for the given Order\n          type: string\n        shipment_status:\n          description: Status of the Order Shipping\n          enum:\n            - requested\n            - in_transit\n            - delivered\n            - failed\n            - pickup_available\n          type: string\n        status:\n          description: Status of the Order\n          enum:\n            - Abandoned\n            - Canceled\n            - Pending Payment\n            - Paid\n          type: string\n        tracking_company:\n          description: Shipping Company used for the given Order\n          type: string\n        tracking_number:\n          description: Shipping Tracking Number used for the given Order\n          type: string\n        tracking_url:\n          description: URL to check delivery information for the given Order\n          type: string\n    OrderFields:\n      properties:\n        additional_fields:\n          description: Array of additional fields for the given Order\n          items:\n            $ref: \"#/components/schemas/OrderAdditionalFields\"\n          type: array\n        additional_information:\n          description: Additional information for the given Order\n          type: string\n        billing_address:\n          $ref: \"#/components/schemas/OrderBillingAddress\"\n        checkout_url:\n          description: Store Checkout Order URL for the given Order\n          type: string\n        coupons:\n          description: Promotion Coupons used on the given Order\n          type: string\n        created_at:\n          description: Order date\n          type: string\n        currency:\n          description: Currency of the Order\n          type: string\n        customer:\n          $ref: \"#/components/schemas/Customer\"\n        discount:\n          description: Discount value for the given Order\n          format: float\n          type: number\n        duplicate_url:\n          description: Duplicate Order URL for the given Order\n          type: string\n        external_shipping_rate_id:\n          description: Rate id for selected External Shipping Method rate\n          type: string\n        id:\n          description: Unique identifier of the Order\n          format: int32\n          type: integer\n        payment_information:\n          description: Payment information for the given Order\n          type: string\n        payment_method_name:\n          description: Payment Method name used e.g. PayPal\n          type: string\n        payment_method_type:\n          description: Payment Method type used e.g. paypal\n          type: string\n        products:\n          items:\n            $ref: \"#/components/schemas/OrderProduct\"\n          type: array\n        recovery_url:\n          description: Recovery Order URL for the given Order\n          type: string\n        shipment_status:\n          description: Shipment Status for Order Fulfillment.\n          enum:\n            - delivered\n            - requested\n            - in_transit\n            - failed\n            - pickup_available\n          type: string\n        shipping:\n          description: Shipping value for the given Order\n          format: float\n          type: number\n        shipping_address:\n          $ref: \"#/components/schemas/OrderShippingAddress\"\n        shipping_discount:\n          description: Shipping Discount value for the given order\n          format: float\n          type: number\n        shipping_method_id:\n          description: Shipping method e.g. Royal Mail\n          format: int32\n          type: integer\n        shipping_method_name:\n          description: Shipping method e.g. Royal Mail\n          type: string\n        shipping_option:\n          description: Shipping option for this order.\n          enum:\n            - delivery\n            - store_pickup\n            - no_shipping\n          type: string\n        shipping_required:\n          default: true\n          description: False if the order is digital.\n          type: boolean\n        shipping_tax:\n          description: Shipping Tax value for the given order\n          format: float\n          type: number\n        shipping_taxes:\n          items:\n            $ref: \"#/components/schemas/OrderShippingTax\"\n          type: array\n        source:\n          $ref: \"#/components/schemas/TrafficSource\"\n        status:\n          description: Status of the Order\n          enum:\n            - Abandoned\n            - Canceled\n            - Pending Payment\n            - Paid\n          type: string\n        subtotal:\n          description: Subtotal value for the given Order. Excluding taxes, shipping and discounts\n          format: float\n          type: number\n        tax:\n          description: Tax value for the given order\n          format: float\n          type: number\n        total:\n          description: Total value for the given Order. Including taxes, shipping and discounts\n          format: float\n          type: number\n        tracking_company:\n          description: Company Used for Order Fulfillment.\n          type: string\n        tracking_number:\n          description: Tracking Number for Order Fulfillment.\n          type: string\n        tracking_url:\n          description: Tracking URL for Order Fulfillment.\n          type: string\n    OrderHistory:\n      properties:\n        order_history:\n          $ref: \"#/components/schemas/OrderHistoryFields\"\n      type: object\n    OrderHistoryEdit:\n      properties:\n        order_history:\n          $ref: \"#/components/schemas/OrderHistoryEditFields\"\n      type: object\n    OrderHistoryEditFields:\n      properties:\n        message:\n          description: Message of the Order History\n          type: string\n      type: object\n    OrderHistoryFields:\n      properties:\n        created_at:\n          description: Creation date of the order history\n          type: string\n        id:\n          description: Unique identifier of the Order History\n          format: int32\n          type: integer\n        message:\n          description: Message of the Order History\n          type: string\n      type: object\n    OrderProduct:\n      properties:\n        discount:\n          description: Discount of the Order Product\n          format: float\n          type: number\n        id:\n          description: Unique identifier of the original Product\n          format: int32\n          type: integer\n        image:\n          description: Image URL of the Order Product\n          type: string\n        name:\n          description: Name of the Order Product\n          type: string\n        price:\n          description: Price of the Order Product\n          format: float\n          type: number\n        qty:\n          description: Price of the Order Product\n          format: int32\n          type: integer\n        sku:\n          description: Stock Keeping Unit of the Order Product\n          type: string\n        taxes:\n          items:\n            $ref: \"#/components/schemas/OrderProductTax\"\n          type: array\n        variant_id:\n          description: Unique identifier of the original Product Variant\n          format: int32\n          type: integer\n        weight:\n          default: 1\n          description: Weight of the Order Product\n          format: float\n          type: number\n      type: object\n    OrderProductOrderCreate:\n      properties:\n        discount:\n          description: Discount of the Order Product\n          format: float\n          type: number\n        id:\n          description: Unique identifier of the original Product\n          format: int32\n          type: integer\n        price:\n          description: Price of the Order Product\n          format: float\n          type: number\n        qty:\n          description: Price of the Order Product\n          format: int32\n          type: integer\n        variant_id:\n          description: Unique identifier of the original Product Variant\n          format: int32\n          type: integer\n      type: object\n    OrderProductTax:\n      properties:\n        fixed:\n          default: false\n          description: False if rate is a percentage and true if rate is monetary\n          type: boolean\n        id:\n          description: Unique identifier of the Order Product Tax\n          format: int32\n          type: integer\n        name:\n          description: Name of the category that the tax is associated with or the tax name\n          type: string\n        rate:\n          description: Tax rate\n          format: float\n          type: number\n        tax_on_product_price:\n          default: false\n          description: False if tax is not included on product price\n          type: boolean\n      type: object\n    OrderShippingAddress:\n      properties:\n        address:\n          description: Address of the Order's Shipping Address\n          type: string\n        city:\n          description: City of the Order's Shipping Address\n          type: string\n        country:\n          description: Country code of the Order's Shipping Address (ISO 3166-1 alpha-2)\n          type: string\n        country_name:\n          description: Country name of the Order's Shipping Address\n          type: string\n        latitude:\n          description: Latitude of the Order's Shipping Address\n          type: number\n        longitude:\n          description: Longitude of the Order's Shipping Address\n          type: number\n        municipality:\n          description: Municipality of the Order's Shipping Address\n          type: string\n        name:\n          description: Name of the Order's Shipping Address\n          type: string\n        postal:\n          description: Postal code of the Order's Shipping Address\n          type: string\n        region:\n          description: Region code of the Order's Shipping Address (Use the FIPS standard - http://www.geonames.org/countries/)\n          type: string\n        street_number:\n          description: Street number of the Order's Shipping Address\n          type: number\n        surname:\n          description: Surname of the Order's Shipping Address\n          type: string\n    OrderShippingTax:\n      properties:\n        country:\n          description: Code of the associated country\n          type: string\n        fixed:\n          default: false\n          description: False if rate is a percentage and true if rate is monetary\n          type: boolean\n        id:\n          description: Unique identifier of the Order Shipping Tax\n          format: int32\n          type: integer\n        name:\n          description: Tax name\n          type: string\n        rate:\n          description: Tax rate\n          format: float\n          type: number\n        region:\n          description: Code of the associated region\n          type: string\n        tax_on_shipping_price:\n          default: false\n          description: False if shipping tax is not included on shipping price\n          type: boolean\n      type: object\n    OrdersData:\n      properties:\n        average:\n          format: float\n          type: number\n          x-descriprtion: Average order total.\n        count:\n          format: float\n          type: number\n          x-descriprtion: Total number of placed orders.\n        date:\n          type: string\n          x-descriprtion: Date\n        paid:\n          description: Total amount paid.\n          format: float\n          type: number\n        pending:\n          format: float\n          type: number\n          x-descriprtion: Total amount in pending orders.\n        total:\n          format: float\n          type: number\n          x-descriprtion: Total amount in placed orders.\n      type: object\n    Page:\n      properties:\n        page:\n          $ref: \"#/components/schemas/PageFields\"\n      type: object\n    PageCategory:\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        position:\n          type: integer\n      type: object\n    PageFields:\n      properties:\n        body:\n          description: Body of the Page\n          type: string\n        categories:\n          description: Page categories to which the Page belongs to\n          items:\n            $ref: \"#/components/schemas/PageCategory\"\n          type: array\n        id:\n          description: Id of the Page\n          type: integer\n        image:\n          description: Image of the Page\n          properties:\n            id:\n              type: integer\n            url:\n              type: string\n          type: object\n        legal:\n          description: True if it is a legal page\n          type: boolean\n        meta_description:\n          description: Meta description of the Page\n          type: string\n        page_title:\n          description: Meta title of the Page\n          type: string\n        permalink:\n          description: URL of the Page\n          type: string\n        status:\n          description: Status of the Page\n          enum:\n            - public\n            - draft\n            - hidden\n          type: string\n        template:\n          $ref: \"#/components/schemas/PageTemplate\"\n        title:\n          description: Title of the Page\n          type: string\n      type: object\n    PageModify:\n      properties:\n        page:\n          $ref: \"#/components/schemas/PageModifyFields\"\n      type: object\n    PageModifyFields:\n      properties:\n        body:\n          description: Body of the Page\n          type: string\n        categories:\n          description: Page categories to which the Page belongs to\n          items:\n            $ref: \"#/components/schemas/PageCategory\"\n          type: array\n        image:\n          description: Image of the Page\n          properties:\n            id:\n              type: integer\n            url:\n              type: string\n          type: object\n        meta_description:\n          description: Meta description of the Page\n          type: string\n        page_title:\n          description: Meta title of the Page\n          type: string\n        permalink:\n          description: URL of the Page\n          type: string\n        status:\n          description: Status of the Page\n          enum:\n            - public\n            - draft\n            - hidden\n          type: string\n        template:\n          description: ID of the Page template. Use null for the blank layout ('None')\n          type: integer\n        title:\n          description: Title of the Page\n          type: string\n      type: object\n    PageTemplate:\n      description: Template of the Page\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      type: object\n    PartnerError:\n      properties:\n        error:\n          description: True when an error occurs.\n          type: boolean\n        field:\n          description: Field causing the error.\n          type: string\n        message:\n          description: Message describing the error.\n          type: string\n      type: object\n    PartnerStoreCode:\n      properties:\n        store:\n          properties:\n            code:\n              description: Store code.\n              type: string\n          type: object\n      type: object\n    PartnerStoreCreate:\n      properties:\n        aff:\n          description: Partner code.\n          type: string\n        email:\n          description: New Store administrator email.\n          format: email\n          type: string\n        locale:\n          default: en\n          description: ISO3166-2 code for the store langauge.\n          type: string\n        password:\n          description: New Store administrator password.\n          format: string\n          type: string\n        plan_name:\n          default: pro\n          description: New Store plan name.\n          enum:\n            - pro\n            - plus\n            - premium\n          type: string\n        reject_duplicates:\n          default: false\n          description: Indicates whether the request should fail if the Store name provided is already in use.\n          type: boolean\n        store_name:\n          description: New Store name.\n          type: string\n      type: object\n    PartnerStoreStatus:\n      properties:\n        status:\n          properties:\n            message:\n              description: Message describing the current creation status.\n              type: string\n            percentage:\n              description: Percentage of the creation process that was already completed.\n              type: string\n          type: object\n      type: object\n    PaymentMethod:\n      properties:\n        payment_method:\n          $ref: \"#/components/schemas/PaymentMethodFields\"\n      type: object\n    PaymentMethodFields:\n      properties:\n        id:\n          description: Unique identifier of the Payment Method\n          format: int32\n          type: integer\n        name:\n          description: Name of the Payment Method\n          type: string\n        type:\n          description: Type of the Payment Method\n          enum:\n            - manual\n            - paypal\n            - pagseguro\n            - moneybookers\n            - webpay_cl\n            - easypay\n            - easypaycc\n            - easypayboleto\n            - ideal_basic\n            - hipay\n            - khipu\n            - mercado_pago\n            - ifthenpay\n            - eupago\n            - stripe\n            - payu\n            - servipag\n          type: string\n      type: object\n    PaymentMethodFreq:\n      properties:\n        count:\n          type: string\n          x-descriprtion: Number of times payment method was used.\n        name:\n          type: string\n          x-descriprtion: Payment method name.\n      type: object\n    Product:\n      properties:\n        product:\n          $ref: \"#/components/schemas/ProductFields\"\n      type: object\n    ProductCustomField:\n      properties:\n        field:\n          $ref: \"#/components/schemas/ProductCustomFieldFields\"\n      type: object\n    ProductCustomFieldFields:\n      properties:\n        custom_field_id:\n          description: Unique identifier of the ProductCustomField\n          format: int32\n          type: integer\n        id:\n          description: Unique identifier of the ProductCustomField value\n          format: int32\n          type: integer\n        label:\n          description: The label for the ProductCustomField\n          type: string\n        type:\n          description: The type of the ProductCustomField\n          type: string\n        value:\n          description: The value for the ProductCustomField\n          type: string\n        value_id:\n          description: The value id for the ProductCustomField\n          type: string\n      type: object\n    ProductEdit:\n      properties:\n        product:\n          $ref: \"#/components/schemas/ProductEditFields\"\n      type: object\n    ProductEditFields:\n      properties:\n        barcode:\n          description: Barcode of the product\n          type: string\n        categories:\n          items:\n            $ref: \"#/components/schemas/CategoryFields\"\n          type: array\n        description:\n          description: Description of the product\n          type: string\n        diameter:\n          description: Diameter of the product\n          format: float\n          type: number\n        featured:\n          default: false\n          description: True if the product is featured\n          type: boolean\n        google_product_category:\n          description: Category of a Product based on the Google product taxonomy\n          type: string\n        height:\n          description: Height of the product\n          format: float\n          type: number\n        length:\n          description: Length of the product\n          format: float\n          type: number\n        meta_description:\n          description: SEO meta description of the product\n          type: string\n        name:\n          description: Name of the product\n          type: string\n        package_format:\n          default: box\n          description: Format the product package\n          enum:\n            - box\n            - cylinder\n          type: string\n        page_title:\n          description: SEO title of the product\n          type: string\n        permalink:\n          description: Product unique URL path\n          type: string\n        price:\n          description: Price of the product\n          format: float\n          type: number\n        shipping_required:\n          default: true\n          description: False if the product is digital\n          type: boolean\n        sku:\n          description: Stock Keeping Unit of the product\n          type: string\n        status:\n          default: available\n          description: Status of the product\n          enum:\n            - available\n            - not-available\n            - disabled\n          type: string\n        stock:\n          default: 100\n          description: Quantity in stock for the product\n          format: int32\n          type: integer\n        stock_unlimited:\n          description: True if the Product has unlimited stock\n          type: boolean\n        weight:\n          default: 1\n          description: Weight of the product\n          format: float\n          type: number\n        width:\n          description: Width of the product\n          format: float\n          type: number\n      required:\n        - name\n        - price\n      type: object\n    ProductFields:\n      properties:\n        barcode:\n          description: Barcode of the product\n          type: string\n        categories:\n          items:\n            $ref: \"#/components/schemas/CategoryFields\"\n          type: array\n        created_at:\n          description: Date of product creation\n          type: string\n        description:\n          description: Description of the product\n          type: string\n        diameter:\n          description: Diameter of the product\n          format: float\n          type: number\n        discount:\n          description: Discount of the product\n          format: float\n          type: number\n        featured:\n          default: false\n          description: True if the product is featured\n          type: boolean\n        google_product_category:\n          description: Category of a Product based on the Google product taxonomy\n          type: string\n        height:\n          description: Height of the product\n          format: float\n          type: number\n        id:\n          description: Unique identifier of the product\n          format: int32\n          type: integer\n        images:\n          items:\n            $ref: \"#/components/schemas/ImageFields\"\n          type: array\n        length:\n          description: Length of the product\n          format: float\n          type: number\n        name:\n          description: Name of the product\n          type: string\n        package_format:\n          default: box\n          description: Format the product package\n          enum:\n            - box\n            - cylinder\n          type: string\n        permalink:\n          description: Product unique URL path\n          type: string\n        price:\n          description: Price of the product\n          format: float\n          type: number\n        sku:\n          description: Stock Keeping Unit of the product\n          type: string\n        status:\n          default: available\n          description: Status of the product\n          enum:\n            - available\n            - not-available\n            - disabled\n          type: string\n        stock:\n          default: 100\n          description: Quantity in stock for the product\n          format: int32\n          type: integer\n        stock_unlimited:\n          description: True if the Product has unlimited stock\n          type: boolean\n        variants:\n          items:\n            $ref: \"#/components/schemas/VariantFields\"\n          type: array\n        weight:\n          default: 1\n          description: Weight of the product\n          format: float\n          type: number\n        width:\n          description: Width of the product\n          format: float\n          type: number\n      type: object\n    ProductOption:\n      properties:\n        option:\n          $ref: \"#/components/schemas/ProductOptionFields\"\n      type: object\n    ProductOptionEdit:\n      properties:\n        option:\n          $ref: \"#/components/schemas/ProductOptionEditFields\"\n      type: object\n    ProductOptionEditFields:\n      properties:\n        name:\n          description: Name of the product option\n          type: string\n        option_type:\n          description: Type of the product option\n          enum:\n            - option\n            - input\n            - text\n            - file\n          type: string\n        position:\n          description: Position of the product option\n          format: int32\n          type: integer\n      type: object\n    ProductOptionFields:\n      properties:\n        id:\n          description: Unique identifier of the product option\n          format: int32\n          type: integer\n        name:\n          description: Name of the product option\n          type: string\n        option_type:\n          description: Type of the product option\n          enum:\n            - option\n            - input\n            - text\n            - file\n          type: string\n        position:\n          description: Position of the product option\n          format: int32\n          type: integer\n        values:\n          items:\n            $ref: \"#/components/schemas/ProductOptionValueFields\"\n          type: array\n      type: object\n    ProductOptionValue:\n      properties:\n        value:\n          $ref: \"#/components/schemas/ProductOptionValueFields\"\n      type: object\n    ProductOptionValueEdit:\n      properties:\n        value:\n          $ref: \"#/components/schemas/ProductOptionValueEditFields\"\n      type: object\n    ProductOptionValueEditFields:\n      properties:\n        name:\n          description: Name of the product option value\n          type: string\n        position:\n          description: Position of the product option value\n          format: int32\n          type: integer\n      type: object\n    ProductOptionValueFields:\n      properties:\n        id:\n          description: Unique identifier of the product option value\n          format: int32\n          type: integer\n        name:\n          description: Name of the product option value\n          type: string\n        position:\n          description: Position of the product option value\n          format: int32\n          type: integer\n        product_option:\n          $ref: \"#/components/schemas/ProductOption\"\n        variants:\n          items:\n            $ref: \"#/components/schemas/Variant\"\n          type: array\n      type: object\n    ProductOptionVariantEdit:\n      properties:\n        name:\n          description: Name of the product option\n          type: string\n        product_option_id:\n          description: Id of the product option\n          format: int32\n          type: integer\n        product_option_position:\n          description: position of product option\n          format: int32\n          type: integer\n        product_option_value_id:\n          description: Id of product option value\n          format: int32\n          type: integer\n        product_value_position:\n          description: position of product option value\n          format: int32\n          type: integer\n        value:\n          description: Value of the product option\n          type: string\n      type: object\n    Promotion:\n      properties:\n        promotion:\n          $ref: \"#/components/schemas/PromotionFields\"\n      type: object\n    PromotionEdit:\n      properties:\n        promotion:\n          $ref: \"#/components/schemas/PromotionEditFields\"\n      type: object\n    PromotionEditFields:\n      properties:\n        begins_at:\n          description: Creation date of the promotion (requires 'lasts' param - 'date')\n          type: string\n        buys_at_least:\n          description: Controls the promotion's condition ('none', 'price', 'qty')\n          type: string\n        categories:\n          description: Products Categories where the promotion will be applied (requires 'discount_target' param - 'categories')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        code:\n          description: Code of the promotion\n          type: string\n        condition_price:\n          description: Minimum order amount to validate the promotion (requires 'buys_at_least' param - 'price')\n          format: float\n          type: number\n        condition_qty:\n          description: Minimum quantity of ordered itens to validate the promotion (requires 'buys_at_least' param - 'qty')\n          format: int32\n          type: integer\n        cumulative:\n          default: false\n          description: True if the promotion can be acumulated with others\n          type: boolean\n        customer_categories:\n          description: Customer Categories to whom the promotion will be applied (requires 'customers' param - 'categories')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        customers:\n          description: Controls to which customers the promotion will be applied ('all', 'loggedin', 'categories', 'guests')\n          type: string\n        discount_amount_fix:\n          description: Fixed discount amount of the promotion (requires 'type' param - 'fix')\n          format: float\n          type: number\n        discount_amount_percent:\n          description: Percentual discount amount of the promotion (requires 'type' param - 'percentage')\n          format: float\n          type: number\n        discount_target:\n          description: Where the promotion will be applied ('order', 'shipping', 'categories', 'buy_x_get_y)\n          type: string\n        enabled:\n          default: true\n          description: If the promotion is to be temporarily disabled\n          type: boolean\n        expires_at:\n          description: Expiration date of the promotion (requires 'lasts' param - 'date')\n          type: string\n        lasts:\n          description: Controls when the promotion will expire ('none', 'date', 'max_times_used')\n          type: string\n        max_times_used:\n          description: Maximum amount a promotion can be used (requires 'lasts' param - 'max_times_used')\n          format: int32\n          type: integer\n        name:\n          description: Name of the product\n          type: string\n        products:\n          description: Products where the promotion will be applied (requires 'discount_target' param - 'categories' or 'buy_x_get_y')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        products_x:\n          description: Products required to apply the promotion (requires 'discount_target' param - 'buy_x_get_y')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        quantity_x:\n          description: Number of sets of products_x needed to be able to apply the promotion (requires 'discount_target' param - 'buy_x_get_y')\n          format: int32\n          type: integer\n        type:\n          description: Controls if the discount will be a fixed area ('fix', 'percentage')\n          type: string\n      type: object\n    PromotionFields:\n      properties:\n        begins_at:\n          description: Creation date of the promotion (requires 'lasts' param - 'date')\n          type: string\n        categories:\n          description: Products Categories where the promotion will be applied (requires 'discount_target' param - 'categories')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        code:\n          description: Code of the promotion\n          type: string\n        condition_price:\n          description: Minimum order amount to validate the promotion\n          format: float\n          type: number\n        condition_qty:\n          description: Minimum quantity of ordered itens to validate the promotion\n          format: int32\n          type: integer\n        cumulative:\n          default: false\n          description: True if the promotion can be acumulated with others\n          type: boolean\n        customer_categories:\n          description: Customer Categories to whom the promotion will be applied (requires 'customers' param - 'categories')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        discount_amount_fix:\n          description: Fixed discount amount of the promotion\n          format: float\n          type: number\n        discount_amount_percent:\n          description: Percentual discount amount of the promotion\n          format: float\n          type: number\n        discount_target:\n          description: Where the promotion will be applied ('order', 'shipping', 'categories', 'buy_x_get_y)\n          type: string\n        enabled:\n          default: true\n          description: If the promotion is currently enabled\n          type: boolean\n        expires_at:\n          description: Expiration date of the promotion (requires 'lasts' param - 'date')\n          type: string\n        id:\n          description: Unique identifier of the product\n          format: int32\n          type: integer\n        lasts:\n          description: Controls when the promotion will expire ('none', 'date', 'max_times_used')\n          type: string\n        max_times_used:\n          description: Maximum amount a promotion can be used (requires 'lasts' param - 'max_times_used')\n          format: int32\n          type: integer\n        name:\n          description: Name of the product\n          type: string\n        products:\n          description: Products where the promotion will be applied (requires 'discount_target' param - 'categories' or 'buy_x_get_y')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        products_x:\n          description: Products required to apply the promotion (requires 'discount_target' param - 'buy_x_get_y')\n          items:\n            $ref: \"#/components/schemas/Id\"\n          type: array\n        quantity_x:\n          description: Number of sets of products_x needed to be able to apply the promotion (requires 'discount_target' param - 'buy_x_get_y')\n          format: int32\n          type: integer\n        status:\n          description: Status of the promotion ('active', 'expired')\n          type: string\n        times_used:\n          description: Amount of times the promotion was used\n          format: int32\n          type: integer\n      type: object\n    Referrer:\n      properties:\n        count:\n          type: integer\n          x-descriprtion: Number of times referrer source was used.\n        source:\n          type: string\n          x-descriprtion: Referrer source.\n      type: object\n    Region:\n      properties:\n        code:\n          type: string\n        name:\n          type: string\n    RegionOrders:\n      properties:\n        city:\n          type: string\n          x-descriprtion: City name.\n        code:\n          type: integer\n          x-descriprtion: Region code.\n        country:\n          type: integer\n          x-descriprtion: Number of region orders.\n      type: object\n    ShippingAddress:\n      properties:\n        address:\n          description: Address of the Customer's Shipping Address\n          type: string\n        city:\n          description: City of the Customer's Shipping Address\n          type: string\n        country:\n          description: Country code of the Customer's Shipping Address (ISO 3166-1 alpha-2)\n          type: string\n        municipality:\n          description: Municipality of the Customer's Shipping Address\n          type: string\n        name:\n          description: Name of the Customer's Shipping Address\n          type: string\n        postal:\n          description: Postal code of the Customer's Shipping Address\n          type: string\n        region:\n          description: Region code of the Customer's Shipping Address (Use the FIPS standard - http://www.geonames.org/countries/)\n          type: string\n        surname:\n          description: Surname of the Customer's Shipping Address\n          type: string\n    ShippingMethod:\n      properties:\n        shipping_method:\n          $ref: \"#/components/schemas/ShippingMethodFields\"\n      type: object\n    ShippingMethodEdit:\n      properties:\n        shipping_method:\n          properties:\n            callback_url:\n              description: URL that receives the shipping data and returns rates\n              type: string\n            city:\n              description: City/Municipality name of origin\n              type: string\n            fetch_services_url:\n              description: URL that returns available shipping services\n              type: string\n            name:\n              description: Name of the Shipping Method\n              type: string\n            postal:\n              description: Postal/Zipcode of origin\n              type: string\n            state:\n              description: State/Region code of origin\n              type: string\n            token:\n              description: Token used to authentica on the the fetch_services_url\n              type: string\n          type: object\n      type: object\n    ShippingMethodFields:\n      properties:\n        callback_url:\n          description: URL that receives the shipping data and returns rates\n          type: string\n        city:\n          description: City/Municipality name of origin\n          type: string\n        fetch_services_url:\n          description: URL that returns available shipping services\n          type: string\n        id:\n          description: Unique identifier of the Shipping Method\n          format: int32\n          type: integer\n        name:\n          description: Name of the Shipping Method\n          type: string\n        postal:\n          description: Postal/Zipcode of origin\n          type: string\n        services:\n          items:\n            $ref: \"#/components/schemas/ShippingService\"\n          type: array\n        state:\n          description: State/Region code of origin\n          type: string\n        type:\n          description: Type of the Shipping Method\n          enum:\n            - free\n            - tables\n            - correiosbr\n            - correos_chile\n            - chilexpress\n            - flat\n            - ups\n            - external\n          type: string\n      type: object\n    ShippingMethodFreq:\n      properties:\n        count:\n          type: string\n          x-descriprtion: Number of times shipping method was used.\n        name:\n          type: string\n          x-descriprtion: Shipping method name.\n      type: object\n    ShippingService:\n      properties:\n        id:\n          description: Unique identifier of the Shipping Service\n          format: int32\n          type: integer\n        name:\n          description: Name of the Shipping Service\n          type: string\n        service_code:\n          description: Code of the Shipping Service\n          type: string\n      type: object\n    StatusInvalid:\n      properties:\n        message:\n          type: string\n    Store:\n      properties:\n        address:\n          $ref: \"#/components/schemas/StoreAddress\"\n        code:\n          description: Store Code\n          type: string\n        country:\n          description: Store Country\n          type: string\n        currency:\n          description: Store Currency\n          type: string\n        email:\n          description: Store Admin Email\n          type: string\n        hooks_token:\n          description: Store Hooks Auth token\n          type: string\n        logo:\n          description: Store Logo URL\n          type: string\n        name:\n          description: Store Name\n          type: string\n        timezone:\n          description: Store Timezone\n          type: string\n        url:\n          description: Store URL\n          type: string\n        weight_unit:\n          description: Store Weight Unit\n          type: string\n      type: object\n    StoreAddress:\n      properties:\n        address:\n          description: Address of the Store's Address\n          type: string\n        city:\n          description: City of the Store's Address\n          type: string\n        country:\n          description: Country of the Store's Address (ISO 3166-1 alpha-2)\n          type: string\n        country_code:\n          description: Country code of the Store's Address\n          type: string\n        postal:\n          description: Postal code of the Store's Address\n          type: string\n        region:\n          description: Region of the Store's Address\n          type: string\n        region_code:\n          description: Region code of the Store's Address\n          type: string\n    StoreStats:\n      properties:\n        best_sold:\n          description: Top 10 best sold products.\n          items:\n            $ref: \"#/components/schemas/BestSold\"\n          type: array\n        conversions:\n          properties:\n            added_to_cart:\n              description: Total add to cart conversions.\n              format: float\n              type: number\n            checkout:\n              description: Total checkout conversions.\n              format: float\n              type: number\n            paid:\n              description: Total paid conversions.\n              format: float\n              type: number\n          type: object\n        currency:\n          description: Store currency.\n          type: string\n        daily_visits:\n          description: Visits per day.\n          items:\n            $ref: \"#/components/schemas/DailyVisits\"\n          type: array\n        from:\n          description: Statistics start date.\n          type: string\n          x-fromat: iso8601\n        new_vs_returning_customers:\n          properties:\n            global:\n              description: Global percentage of new vs returning customers.\n              type: integer\n            per_day:\n              description: Numbers of new and returning customers per day.\n              items:\n                $ref: \"#/components/schemas/NewVsReturning\"\n              type: array\n          type: object\n        new_vs_returning_orders:\n          properties:\n            global:\n              description: Global percentage of new vs returning customers.\n              type: integer\n            per_day:\n              description: Numbers of new and returning customers per day.\n              items:\n                $ref: \"#/components/schemas/NewVsReturning\"\n              type: array\n          type: object\n        orders:\n          properties:\n            average:\n              description: Average order amount.\n              format: float\n              type: number\n            count:\n              description: Total number of orders.\n              type: integer\n            data:\n              description: Orders data.\n              items:\n                $ref: \"#/components/schemas/OrdersData\"\n              type: array\n            total:\n              description: Total amount from all orders.\n              format: float\n              type: number\n          type: object\n        payment_methods:\n          description: Store payment methods and their frequency.\n          items:\n            $ref: \"#/components/schemas/PaymentMethodFreq\"\n          type: array\n        referrers:\n          description: Top 10 referrer sources and their frequency.\n          items:\n            $ref: \"#/components/schemas/Referrer\"\n          type: array\n        region_orders:\n          properties:\n            display_mode:\n              description: Can be 'regions' when orders are specific of 1 country or 'auto'.\n              type: string\n            regions_orders:\n              description: Orders per country and region(inside the country).\n              items:\n                $ref: \"#/components/schemas/CountryOrders\"\n              type: array\n          type: object\n        search_frequencies_all:\n          description: Number of times each search was conducted under the form of an aggregation query.\n          items: {}\n          type: array\n        search_frequencies_without_results:\n          description: Number of times each search with zero results was conducted under the form of an aggregation query.\n          items: {}\n          type: array\n        shipping_methods:\n          description: Store shipping methods and their frequency.\n          items:\n            $ref: \"#/components/schemas/ShippingMethodFreq\"\n          type: array\n        to:\n          description: Statistics end date.\n          type: string\n          x-fromat: iso8601\n        traffic_type:\n          description: Type of store traffic and its frequency.\n          items:\n            $ref: \"#/components/schemas/TrafficType\"\n          type: array\n        visits:\n          description: Total number of visits.\n          type: integer\n      type: object\n    Tax:\n      properties:\n        tax:\n          $ref: \"#/components/schemas/TaxFields\"\n      type: object\n    TaxEdit:\n      properties:\n        tax:\n          $ref: \"#/components/schemas/TaxEditFields\"\n      type: object\n    TaxEditFields:\n      properties:\n        category_id:\n          description: Unique identifier of the category of the Tax\n          format: int32\n          type: integer\n        country:\n          description: Country where the Tax applies\n          type: string\n        fixed:\n          default: false\n          description: True if the tax has a fixed valued amount\n          type: boolean\n        name:\n          description: Name that identifies tax\n          type: string\n        region:\n          description: Region where the Tax applies\n          type: string\n        shipping:\n          default: false\n          description: True if the tax should be applied to shipping costs\n          type: boolean\n        tax:\n          description: Tax value for the given Tax\n          format: float\n          type: number\n      type: object\n    TaxFields:\n      properties:\n        category_id:\n          description: Unique identifier of the category of the Tax\n          format: int32\n          type: integer\n        country:\n          description: Country name where the Tax applies\n          type: string\n        fixed:\n          default: false\n          description: True if the tax has a fixed valued amount\n          type: boolean\n        id:\n          description: Unique identifier of the Tax\n          format: int32\n          type: integer\n        name:\n          description: Name that identifies tax\n          type: string\n        region:\n          description: Region name where the Tax applies\n          type: string\n        shipping:\n          default: false\n          description: True if the tax should be applied to shipping costs\n          type: boolean\n        tax_amount:\n          description: Tax value for the given Tax\n          format: float\n          type: number\n      type: object\n    TrafficSource:\n      properties:\n        campaign:\n          description: The campaign that referred the customer to the checkout\n          type: string\n        first_page_visited:\n          description: The first url visited by the customer\n          type: string\n        first_page_visited_at:\n          description: The date when the customer visited the first page\n          type: string\n        medium:\n          description: The medium that referred the customer to the checkout\n          type: string\n        referral_code:\n          description: The code that referred the customer to the checkout\n          type: string\n        referral_source:\n          description: The source that referred the customer to the website\n          type: string\n        referral_url:\n          description: The website that referred the customer to the checkout\n          type: string\n        source_name:\n          description: Where the checkout originated\n          type: string\n        user_agent:\n          description: User agent of the referred request to checkout\n          type: string\n    TrafficType:\n      properties:\n        count:\n          type: integer\n          x-descriprtion: Frequency of the specified traffic type.\n        name:\n          type: string\n          x-descriprtion: Traffic name.\n      type: object\n    Variant:\n      properties:\n        variant:\n          $ref: \"#/components/schemas/VariantFields\"\n      type: object\n    VariantEdit:\n      properties:\n        variant:\n          $ref: \"#/components/schemas/VariantEditFields\"\n      type: object\n    VariantEditFields:\n      properties:\n        image_id:\n          description: Unique identifier of the product image to associate with this variant\n          format: int32\n          type: integer\n        options:\n          items:\n            $ref: \"#/components/schemas/ProductOptionVariantEdit\"\n          type: array\n        price:\n          description: Price of the product\n          format: float\n          type: number\n        sku:\n          description: Stock Keeping Unit of the Product's Variant\n          type: string\n        stock:\n          default: 100\n          description: Quantity in stock for the Product's Variant\n          format: int32\n          type: integer\n        stock_unlimited:\n          description: True if the Product's Variant has unlimited stock\n          type: boolean\n      type: object\n    VariantFields:\n      properties:\n        id:\n          description: Unique identifier of the product\n          format: int32\n          type: integer\n        image:\n          $ref: \"#/components/schemas/ImageFields\"\n        options:\n          items:\n            $ref: \"#/components/schemas/ProductOptionVariantEdit\"\n          type: array\n        price:\n          description: Price of the product\n          format: float\n          type: number\n        sku:\n          description: Stock Keeping Unit of the Product's Variant\n          type: string\n        stock:\n          default: 100\n          description: Quantity in stock for the Product's Variant\n          format: int32\n          type: integer\n        stock_unlimited:\n          description: True if the Product's Variant has unlimited stock\n          type: boolean\n      type: object\n    type:\n      properties:\n        code:\n          description: Store code.\n          type: string\n        stats:\n          $ref: \"#/components/schemas/StoreStats\"\n      type: object\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/jumpseller.com/1.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/jumpseller.com/1.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"fields\": primitive: format \"string\": enum format not implemented",
	"NotImplemented": [
		"enum format"
	]
}