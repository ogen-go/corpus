{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codingsoo/REST_Go"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "services/erc20-rest-service/openapi.yaml",
			"byteSize": 13907,
			"content": "openapi: 3.0.0\ninfo:\n  description: ERC-20 token standard RESTful service\n  title: ERC-20 API\n  version: \"0.1\"\ntags:\n  - name: controller\n    description: Controller\npaths:\n  /config:\n    get:\n      tags:\n        - controller\n      summary: Application configuration\n      operationId: configUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/NodeConfiguration\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /deploy:\n    post:\n      tags:\n        - controller\n      summary: Deploy new ERC-20 token\n      description: Returns hex encoded contract address\n      operationId: deployUsingPOST\n      parameters:\n        - name: privateFor\n          in: header\n          description: Comma separated list of public keys of enclave nodes that\n            transaction is private for\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ContractSpecification\"\n        description: contractSpecification\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/allowance\":\n    get:\n      tags:\n        - controller\n      summary: Get quantity of tokens you can transfer on another token holder's behalf\n      operationId: allowanceUsingGET\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: ownerAddress\n          in: query\n          description: ownerAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: spenderAddress\n          in: query\n          description: spenderAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/approve\":\n    post:\n      tags:\n        - controller\n      summary: Approve transfers by a specific address up to the provided total quantity\n      description: Returns hex encoded transaction hash, and Approval event if called\n      operationId: approveUsingPOST\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: privateFor\n          in: header\n          description: Comma separated list of public keys of enclave nodes that\n            transaction is private for\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ApproveRequest\"\n        description: approveRequest\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/TransactionResponse_ApprovalEventRespon\\\n                  se_\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/approveAndCall\":\n    post:\n      tags:\n        - controller\n      summary: Approve transfers by a specific contract address up to the provided\n        total quantity, and notify that contract address of the approval\n      description: Returns hex encoded transaction hash, and Approval event if called\n      operationId: approveAndCallUsingPOST\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: privateFor\n          in: header\n          description: Comma separated list of public keys of enclave nodes that\n            transaction is private for\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ApproveAndCallRequest\"\n        description: approveAndCallRequest\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/TransactionResponse_ApprovalEventRespon\\\n                  se_\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/balanceOf/{ownerAddress}\":\n    get:\n      tags:\n        - controller\n      summary: Get token balance for address\n      operationId: balanceOfUsingGET\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: ownerAddress\n          in: path\n          description: ownerAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/decimals\":\n    get:\n      tags:\n        - controller\n      summary: Get decimal precision of tokens\n      operationId: decimalsUsingGET\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/name\":\n    get:\n      tags:\n        - controller\n      summary: Get token name\n      operationId: nameUsingGET\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/symbol\":\n    get:\n      tags:\n        - controller\n      summary: Get token symbol\n      operationId: symbolUsingGET\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/totalSupply\":\n    get:\n      tags:\n        - controller\n      summary: Get total supply of tokens\n      operationId: totalSupplyUsingGET\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/transfer\":\n    post:\n      tags:\n        - controller\n      summary: Transfer tokens you own to another address\n      description: Returns hex encoded transaction hash, and Transfer event if called\n      operationId: transferUsingPOST\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: privateFor\n          in: header\n          description: Comma separated list of public keys of enclave nodes that\n            transaction is private for\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransferRequest\"\n        description: transferRequest\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/TransactionResponse_TransferEventRespon\\\n                  se_\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/transferFrom\":\n    post:\n      tags:\n        - controller\n      summary: Transfer tokens between addresses (must already be approved)\n      description: Returns hex encoded transaction hash, and Transfer event if called\n      operationId: transferFromUsingPOST\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: privateFor\n          in: header\n          description: Comma separated list of public keys of enclave nodes that\n            transaction is private for\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransferFromRequest\"\n        description: transferFromRequest\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/TransactionResponse_TransferEventRespon\\\n                  se_\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/{contractAddress}/version\":\n    get:\n      tags:\n        - controller\n      summary: Get contract version\n      operationId: versionUsingGET\n      parameters:\n        - name: contractAddress\n          in: path\n          description: contractAddress\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\nservers:\n  - url: http://localhost:50109/\ncomponents:\n  schemas:\n    ApprovalEventResponse:\n      type: object\n      properties:\n        owner:\n          type: string\n        spender:\n          type: string\n        value:\n          type: integer\n          format: int64\n    ApproveAndCallRequest:\n      type: object\n    ApproveRequest:\n      type: object\n      properties:\n        spender:\n          type: string\n        value:\n          type: integer\n    ContractSpecification:\n      type: object\n      properties:\n        decimalUnits:\n          type: integer\n        initialAmount:\n          type: integer\n        tokenName:\n          type: string\n        tokenSymbol:\n          type: string\n    NodeConfiguration:\n      type: object\n      properties:\n        fromAddress:\n          type: string\n        nodeEndpoint:\n          type: string\n    TransferEventResponse:\n      type: object\n      properties:\n        from:\n          type: string\n        to:\n          type: string\n        value:\n          type: integer\n          format: int64\n    TransferFromRequest:\n      type: object\n      properties:\n        from:\n          type: string\n        to:\n          type: string\n    TransferRequest:\n      type: object\n      properties:\n        to:\n          type: string\n        value:\n          type: integer\n    TransactionResponse_ApprovalEventResponse_:\n      type: object\n      properties:\n        event:\n          $ref: \"#/components/schemas/ApprovalEventResponse\"\n        transactionHash:\n          type: string\n    TransactionResponse_TransferEventResponse_:\n      type: object\n      properties:\n        event:\n          $ref: \"#/components/schemas/TransferEventResponse\"\n        transactionHash:\n          type: string",
			"canonicalURL": "/github.com/codingsoo/REST_Go@ed67007a3d9cc852de4c47d395991f602a381c67/-/blob/services/erc20-rest-service/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codingsoo/REST_Go/blob/ed67007a3d9cc852de4c47d395991f602a381c67/services/erc20-rest-service/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/{contractAddress}/approve\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}