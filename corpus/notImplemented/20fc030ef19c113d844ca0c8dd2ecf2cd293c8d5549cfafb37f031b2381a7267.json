{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/baloise-incubator/spectral-ruleset"
		},
		"file": {
			"name": "base-openapi.yml",
			"size": 0,
			"path": "tests/fixtures/base-openapi.yml",
			"byteSize": 5418,
			"content": "openapi: 3.0.0\ninfo:\n  x-api-id: d0184f38-b98d-11e7-9c56-68f728c1ba70\n  x-audience: company-internal\n  version: 1.0.0\n  title: API Title\n  description: My fancy API\n  license:\n    name: GNU\n  contact:\n    name: team x\n    url: www.team-x.com\n    email: team@x.com\ntags:\n  - name: foo\n  - name: bar\nservers:\n  - url: https://example.com\npaths:\n  /example:\n    get:\n      description: get an example\n      operationId: get-example\n      tags: [foo]\n      parameters:\n        - in: query\n          name: test\n          schema:\n            type: integer\n            format: int32\n        - $ref: '#/components/parameters/QueryParamComponent'\n        - in: header\n          name: My-Header\n          schema:\n            type: integer\n            format: int32\n        - $ref: '#/components/parameters/HeaderParamComponent'\n        - $ref: '#/components/parameters/HeaderB3Traceid'\n        - $ref: '#/components/parameters/HeaderB3Spanid'\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Example'\n        '404':\n          description: not found\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n        default:\n          description: unknown server error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    patch:\n      description: update an example\n      operationId: update-example\n      tags: [foo]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  content:\n                    type: array\n                    items:\n                      properties:\n                        foo: {}\n        '500':\n          description: server error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n        default:\n          description: unknown server error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n\ncomponents:\n  parameters:\n    QueryParamComponent:\n      in: query\n      name: param\n      schema:\n        type: integer\n    HeaderParamComponent:\n      in: header\n      name: Header-Param-From-Component\n      schema:\n        type: integer\n    HeaderB3Traceid:\n      in: header\n      name: X-B3-Traceid\n      required: true\n      schema:\n        type: string\n    HeaderB3Spanid:\n      in: header\n      name: X-B3-Spanid\n      required: false\n      schema:\n        type: string\n  schemas:\n    Example:\n      type: object\n      properties:\n        name:\n          type: string\n        foo:\n          properties:\n            bar:\n              type: number\n              format: decimal\n        xenum:\n          type: string\n          x-extensible-enum:\n            - FOO\n            - BAR\n        integers:\n          properties:\n            int32:\n              type: integer\n              format: int32\n            int64:\n              type: integer\n              format: int64\n            bigint:\n              type: integer\n              format: bigint\n        numbers:\n          properties:\n            float:\n              type: number\n              format: float\n            double:\n              type: number\n              format: double\n            decimal:\n              type: number\n              format: decimal\n    Problem: # from https://opensource.zalando.com/problem/schema.yaml#/Problem\n      type: object\n      properties:\n        type:\n          type: string\n          format: uri\n          description: |\n            An absolute URI that identifies the problem type.  When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          default: 'about:blank'\n          example: 'https://zalando.github.io/problem/constraint-violation'\n        title:\n          type: string\n          description: |\n            A short, summary of the problem type. Written in english and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized); example: Service Unavailable\n        status:\n          type: integer\n          format: int32\n          description: |\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          minimum: 100\n          maximum: 600\n          exclusiveMaximum: true\n          example: 503\n        detail:\n          type: string\n          description: |\n            A human readable explanation specific to this occurrence of the\n            problem.\n          example: Connection to database timed out\n        instance:\n          type: string\n          format: uri\n          description: |\n            An absolute URI that identifies the specific occurrence of the problem.\n            It may or may not yield further information if dereferenced.",
			"canonicalURL": "/github.com/baloise-incubator/spectral-ruleset@b2c774efe5d5b999797c6a630ba72262385d4223/-/blob/tests/fixtures/base-openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/baloise-incubator/spectral-ruleset/blob/b2c774efe5d5b999797c6a630ba72262385d4223/tests/fixtures/base-openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/example\": get: responses: 404: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}