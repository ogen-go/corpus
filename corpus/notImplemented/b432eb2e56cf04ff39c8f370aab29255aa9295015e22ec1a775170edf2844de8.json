{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/agoncal/agoncal-fascicle-quarkus"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "http/open-api-advanced/openapi.yaml",
			"byteSize": 4069,
			"content": "# tag::adocInfo[]\nopenapi: 3.0.3\ninfo:\n  title: Book API\n  description: This API allows CRUD operations on books\n  contact:\n    name: '@agoncal'\n    url: https://twitter.com/agoncal\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  version: \"1.0\"\nexternalDocs:\n  description: All the Quarkus fascicle code\n  url: https://github.com/agoncal/agoncal-fascicle-quarkus\n# end::adocInfo[]\n# tag::adocServer[]\nservers:\n  - url: \"http://{host}.vintage-store/{port}\"\n    description: Vintage Store server 1\n    variables:\n      host:\n        default: localhost\n        description: Vintage Store main server\n      port:\n        default: \"80\"\n        description: Vintage Store listening port\n# end::adocServer[]\n# tag::adocTag[]\ntags:\n  - name: api\n    description: Public API that can be used by anybody\n  - name: books\n    description: Anybody interested in books\n# end::adocTag[]\n# tag::adocResponse[]\npaths:\n  /api/books:\n    get:\n      summary: Returns all the books from the database\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Book'\n        \"204\":\n          description: No books\n    # end::adocResponse[]\n    put:\n      summary: Updates an exiting  book\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Book'\n        required: true\n      responses:\n        \"200\":\n          description: The updated book\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Book'\n    # tag::adocRequestBody[]\n    post:\n      summary: Creates a book\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Book'\n        required: true\n      # end::adocRequestBody[]\n      responses:\n        \"201\":\n          description: The URI of the created book\n          content:\n            application/json:\n              schema:\n                format: uri\n                type: string\n  /api/books/ping:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n  # tag::adocOperation[]\n  /api/books/random:\n    get:\n      summary: Returns a random book\n      description: Each time this API is invoked, a random book is returned from the database\n      responses:\n        \"200\":\n          description: OK\n  # end::adocOperation[]\n  # tag::adocParameter[]\n  /api/books/{id}:\n    get:\n      summary: Returns a book for a given identifier\n      parameters:\n        - name: id\n          in: path\n          description: Book identifier\n          required: true\n          schema:\n            format: int64\n            type: integer\n      # end::adocParameter[]\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Book'\n        \"404\":\n          description: The book is not found for the given identifier\n    delete:\n      summary: Deletes an exiting book\n      parameters:\n        - name: id\n          in: path\n          description: Book identifier\n          required: true\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"204\":\n          description: The book has been successfully deleted\n# tag::adocSchema[]\ncomponents:\n  schemas:\n    Book:\n      description: Book representation\n      required:\n        - id\n        - title\n        - isbn\n      type: object\n      properties:\n        id:\n          format: int64\n          type: integer\n          readOnly: true\n        title:\n          type: string\n        isbn:\n          type: string\n          example: \"9798629562115\"\n        author:\n          type: string\n        price:\n          type: number\n        description:\n          type: string\n# end::adocSchema[]\n",
			"canonicalURL": "/github.com/agoncal/agoncal-fascicle-quarkus@2a319b7a25e0286667be7df1cb928b289d5a98c9/-/blob/http/open-api-advanced/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/agoncal/agoncal-fascicle-quarkus/blob/2a319b7a25e0286667be7df1cb928b289d5a98c9/http/open-api-advanced/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/books/ping\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}