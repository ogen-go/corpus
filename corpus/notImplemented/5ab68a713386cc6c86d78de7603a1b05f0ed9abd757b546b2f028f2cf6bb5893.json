{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/goadesign/plugins"
		},
		"file": {
			"name": "openapi3.yaml",
			"size": 0,
			"path": "goakit/examples/fetcher/archiver/gen/http/openapi3.yaml",
			"byteSize": 6410,
			"content": "openapi: 3.0.3\ninfo:\n    title: The goakit example downstream service\n    description: Archiver is a service that manages the content of HTTP responses\n    version: \"1.0\"\nservers:\n    - url: http://localhost:80\n      description: Default server for archiver\npaths:\n    /archive:\n        post:\n            tags:\n                - archiver\n            summary: archive archiver\n            description: Archive HTTP response\n            operationId: archiver#archive\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ArchiveRequestBody'\n                        example:\n                            body: Unde sed nulla.\n                            status: 200\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ArchiveMedia'\n                            example:\n                                body: Asperiores quas quas mollitia tempora expedita.\n                                href: /archive/1\n                                status: 200\n    /archive/{id}:\n        get:\n            tags:\n                - archiver\n            summary: read archiver\n            description: Read HTTP response from archive\n            operationId: archiver#read\n            parameters:\n                - name: id\n                  in: path\n                  description: ID of archive\n                  required: true\n                  schema:\n                    type: integer\n                    description: ID of archive\n                    example: 2499395481066573742\n                    minimum: 0\n                  example: 1007502908903998631\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ArchiveMedia'\n                            example:\n                                body: Provident at explicabo cum odit.\n                                href: /archive/1\n                                status: 200\n                \"400\":\n                    description: 'bad_request: Bad Request response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'not_found: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n    /health:\n        get:\n            tags:\n                - health\n            summary: show health\n            description: Health check endpoint\n            operationId: health#show\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        text/plain:\n                            schema:\n                                type: string\n                                example: Rem consequuntur consequatur.\n                            example: Dolorum corrupti voluptas ut consequuntur.\ncomponents:\n    schemas:\n        ArchiveMedia:\n            type: object\n            properties:\n                body:\n                    type: string\n                    description: HTTP response body content\n                    example: Aut culpa.\n                href:\n                    type: string\n                    description: The archive resouce href\n                    example: /archive/1\n                    pattern: ^/archive/[0-9]+$\n                status:\n                    type: integer\n                    description: HTTP status\n                    example: 200\n                    minimum: 0\n            example:\n                body: Aliquam cupiditate similique.\n                href: /archive/1\n                status: 200\n            required:\n                - href\n                - status\n                - body\n        ArchiveRequestBody:\n            type: object\n            properties:\n                body:\n                    type: string\n                    description: HTTP response body content\n                    example: Soluta iusto vel ad.\n                status:\n                    type: integer\n                    description: HTTP status\n                    example: 200\n                    minimum: 0\n            example:\n                body: Incidunt consequuntur aperiam.\n                status: 200\n            required:\n                - status\n                - body\n        Error:\n            type: object\n            properties:\n                fault:\n                    type: boolean\n                    description: Is the error a server-side fault?\n                    example: false\n                id:\n                    type: string\n                    description: ID is a unique identifier for this particular occurrence of the problem.\n                    example: 123abc\n                message:\n                    type: string\n                    description: Message is a human-readable explanation specific to this occurrence of the problem.\n                    example: parameter 'p' must be an integer\n                name:\n                    type: string\n                    description: Name is the name of this class of errors.\n                    example: bad_request\n                temporary:\n                    type: boolean\n                    description: Is the error temporary?\n                    example: true\n                timeout:\n                    type: boolean\n                    description: Is the error a timeout?\n                    example: false\n            example:\n                id: 3F1FKVRR\n                message: Value of ID must be an integer\n                name: bad_request\n            required:\n                - name\n                - id\n                - message\n                - temporary\n                - timeout\n                - fault\ntags:\n    - name: archiver\n    - name: health\n",
			"canonicalURL": "/github.com/goadesign/plugins@cfecc53d74ae98a8e35bab68f1de7caa4df4c63d/-/blob/goakit/examples/fetcher/archiver/gen/http/openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/goadesign/plugins/blob/cfecc53d74ae98a8e35bab68f1de7caa4df4c63d/goakit/examples/fetcher/archiver/gen/http/openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/health\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}