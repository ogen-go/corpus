{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/openapi/etransfer/openapi.yaml",
			"byteSize": 115421,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.interac.ca/publicapi/api/v2\ninfo:\n  version: 2.0.0\n  title: e-Transfer Public API\npaths:\n  /oauth/access-tokens:\n    parameters:\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n    get:\n      description: |\n        Get the access token\n      parameters:\n        - name: grantType\n          in: header\n          required: true\n          description: |\n            token grant type; 'client_credentials' or 'request_token'\n          schema:\n            type: string\n        - name: grantRequest\n          in: header\n          required: true\n          description: \u0026gt;\n            for 'client_credentials' use the secret key generated during the\n            partner registration; for 'request_token' use the JWT request token\n            built according to the Public API Integration Guide\n          schema:\n            type: string\n      tags:\n        - Authentication\n      security:\n        - etransfer_auth:\n            - 'etransfer.r'\n            - 'etransfer.w'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessToken'\n              examples:\n                response:\n                  value:\n                    accessToken: 4863dc7c-2a00-11e8-b467-0ed5f89f718b\n                    tokenType: bearer\n                    expiresIn: 600\n                    scope: etransfer.r etransfer.w\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 9999\n                      message: Unknown application error\n  /user-registrations:\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/participantAccessToken'\n    post:\n      description: \u0026gt;-\n        creates a public api user registration for an e-Transfer customer; the\n        operation is asynchronous, a notification will be sent to the third\n        party partner when the registration is created\n      operationId: addUserRegistration\n      tags:\n        - User Registration management\n      responses:\n        '202':\n          description: Successful response\n          headers:\n            location:\n              description: URL for accessing the newly created user registration\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                required:\n                  - apiRegistrationId\n                properties:\n                  apiRegistrationId:\n                    description: id of the newly created user registration\n                    type: string\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n                    - code: 1004\n                      message: Duplicate User registration - Participant UserId\n                    - code: 1008\n                      message: Duplicate ThirdPartyUserId\n                    - code: 1009\n                      message: Invalid ParticipantId\n                    - code: 1010\n                      message: Invalid IndirectConnectorId of participant\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1002\n                      message: Allowed feature list not supported for user\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1003\n                      message: Customer doesn't exist - ParticipantUserId doesn't exist\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserRegistration'\n        required: true\n  '/user-registrations/{apiRegistartionId}':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/participantAccessToken'\n    get:\n      description: retrieves a public api user registration for an e-Transfer customer\n      operationId: getUserRegistration\n      parameters:\n        - name: apiRegistartionId\n          in: path\n          required: true\n          schema:\n            type: string\n            maximum: 50\n      tags:\n        - User Registration management\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserRegistration'\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n        '401':\n          description: Unauthorized / invalid credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n    delete:\n      description: deletes a public api user registration for an e-Transfer customer\n      operationId: deleteUserRegistration\n      parameters:\n        - name: apiRegistartionId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - User Registration management\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n        '401':\n          description: Unauthorized / invalid credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n    patch:\n      description: updates a public api user registration for an e-Transfer customer\n      operationId: updateUserRegistration\n      parameters:\n        - name: apiRegistartionId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - User Registration management\n      responses:\n        '202':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1002\n                      message: Allowed feature list not supported for user\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserRegistrationUpdate'\n        required: true\n  /contacts:\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    get:\n      operationId: getContacts\n      description: Retrieves all the contacts\n      parameters:\n        - name: maxResponseItems\n          in: query\n          required: false\n          schema:\n            type: integer\n        - name: fromLastUpdatedDate\n          in: query\n          required: false\n          description: \u0026gt;-\n            UTC datatime of contact used to retrieve only contacts updated from\n            the specified dateTime; format is yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g.\n            '2016-09-11T16:12:12.000'\n          schema:\n            type: string\n            format: datetime\n        - name: offset\n          in: query\n          required: false\n          description: \u0026gt;-\n            offset is starting point of contacts filter; if offset is not\n            provided it would be defaulted to zero; \n          schema:\n            type: integer\n        - name: sortBy\n          in: query\n          required: false\n          description: |-\n            contacts will be sorted based on sortBy column, \n             - sortBy will be set to contactUpdatedDate if fromLastUpdatedDate.\n             - sortBy will be defaulted to contactName if no filters are specified.\n          schema:\n            type: string\n            enum:\n              - contactName\n              - contactUpdatedDate\n        - name: orderBy\n          in: query\n          required: false\n          description: order by is required if sort by is specified.\n          schema:\n            type: string\n            enum:\n              - desc\n              - asc\n      tags:\n        - Contact management\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                description: List of contacts returned for customer\n                items:\n                  $ref: '#/components/schemas/Contact'\n        '206':\n          description: 'Partial content returned, use pagination filters'\n          headers:\n            x-limit:\n              description: contact range returned\n              schema:\n                type: string\n            x-total-count:\n              description: total number of contacts for provided filter.\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                type: array\n                description: List of partial contacts returned based on max item\n                items:\n                  $ref: '#/components/schemas/Contact'\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1048\n                      message: Hard contact already exist for sender.\n                    - code: 1053\n                      message: orderBy field is missing.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1037\n                      message: Feature is not supported for current user\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n    post:\n      description: creates a public api user registration for an e-Transfer customer\n      operationId: addContact\n      tags:\n        - Contact management\n      responses:\n        '201':\n          description: Successful response\n          headers:\n            location:\n              description: URL for accessing the newly created contact\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                required:\n                  - contactId\n                  - contactHash\n                properties:\n                  contactId:\n                    description: Id of the newly created Contact.\n                    type: string\n                  contactHash:\n                    description: unique hash value of newly created Contact.\n                    type: string\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1043\n                      message: Duplicate contact name.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1037\n                      message: Feature is not supported for current user.\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist\n                    - code: 1006\n                      message: Hard contact doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        $ref: '#/components/requestBodies/Contact'\n  '/contacts/{contactId}':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    put:\n      description: updates a contact for an e-Transfer customer\n      operationId: updateContact\n      parameters:\n        - name: contactId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - Contact management\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                required:\n                  - contactHash\n                properties:\n                  contactHash:\n                    description: unique hash value of newly created Contact.\n                    type: string\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n                    - code: 1012\n                      message: 'Invalid contact hash, get last updated contact details'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1037\n                      message: Feature is not supported for current user.\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1006\n                      message: Hard contact doesn't exist.\n                    - code: 1007\n                      message: contact doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        $ref: '#/components/requestBodies/Contact'\n    delete:\n      description: deletes a contact for an e-Transfer customer\n      operationId: deleteContact\n      parameters:\n        - name: contactId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - Contact management\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n                    - code: 1011\n                      message: Invalid apiRegistartionId\n                    - code: 1044\n                      message: Contact can't be deleted; if in flight transfers exist.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1037\n                      message: Feature is not supported for current user.\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1006\n                      message: Hard contact doesn't exist.\n                    - code: 1007\n                      message: contact doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n    get:\n      description: \u0026gt;-\n        retrieves a contact of an e-Transfer customer that has a public api\n        registartion and the associated auto-deposit registration details if the\n        registration exists and is associated with one of contact's notification\n        handles\n      operationId: getContact\n      parameters:\n        - name: contactId\n          in: path\n          required: true\n          schema:\n            type: string\n            minLength: 16\n            maxLength: 16\n      tags:\n        - Contact management\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Contact'\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n                    - code: 1011\n                      message: Invalid apiRegistartionId\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1037\n                      message: Feature is not supported for current user.\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1007\n                      message: contact doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n  /transfers:\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    get:\n      operationId: getTransfers\n      description: retrieves all transfers sent/received ( Bulk transfers are exluded )\n      parameters:\n        - name: fromDate\n          in: query\n          required: false\n          description: \u0026gt;-\n            UTC datatime format is yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g.\n            '2016-09-11T16:12:12.000'; this parameter is mandatory if\n             sourceTransferId or referenceNumber is not given.\n          schema:\n            type: string\n            format: dateTime\n        - name: toDate\n          in: query\n          required: false\n          description: \u0026gt;-\n            UTC datatime format is yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g.\n            '2016-09-11T16:12:12.000'; this parameter is mandatory if\n             sourceTransferId or referenceNumber is not given.\n          schema:\n            type: string\n            format: dateTime\n        - name: maxResponseItems\n          in: query\n          required: false\n          description: \u0026gt;-\n            if offset is provided then maxResponse items is required; all items\n            are returned if this field is absent\n          schema:\n            type: integer\n        - name: offset\n          in: query\n          required: false\n          description: \u0026gt;-\n            offset is starting point of transfers filter; if offset is not\n            provided it would be defaulted to zero; \n          schema:\n            type: integer\n        - name: sortBy\n          in: query\n          required: false\n          description: transfers will be sorted based on sortBy column.\n          schema:\n            type: string\n            enum:\n              - creationDate\n        - name: orderBy\n          in: query\n          required: false\n          description: order by is required if sort by is specified.\n          schema:\n            type: string\n            enum:\n              - desc\n              - asc\n        - name: sourceTransferId\n          in: query\n          required: false\n          description: \u0026gt;-\n            transferId generated by originating system, either source transfer\n            id or reference number can be specified.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: referenceNumber\n          in: query\n          required: false\n          description: \u0026gt;-\n            unique identifier of the transfer, either source transfer id or\n            reference number can be specified. \n          schema:\n            type: string\n            maxLength: 14\n      tags:\n        - Send Transfer\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transfer'\n        '206':\n          description: 'Partial content returned, use pagination filters'\n          headers:\n            x-limit:\n              description: range of transfers\n              schema:\n                type: string\n            x-total-count:\n              description: total number of transfers.\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transfer'\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1030\n                      message: Invalid date range.\n                    - code: 1031\n                      message: Mutually exclusive options are specified.\n                    - code: 1053\n                      message: orderBy field is missing.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1007\n                      message: Contact doesn't exist.\n                    - code: 1029\n                      message: Transfer doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n  /transfers/send:\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n      - $ref: '#/components/parameters/participantAccessToken'\n    post:\n      description: \u0026gt;-\n        creates a transfer for an e-Transfer customer; the operation is\n        asynchronous, a notification will be sent to the third party partner\n        when the transfer is created\n      operationId: sendTransfer\n      tags:\n        - Send Transfer\n      responses:\n        '202':\n          description: Successful response\n          headers:\n            location:\n              description: URL for accessing the newly created transfer\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                required:\n                  - referenceNumber\n                properties:\n                  referenceNumber:\n                    description: reference Number of the newly created transfer\n                    type: string\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request\n                    - code: 1011\n                      message: Invalid apiRegistartionId\n                    - code: 1012\n                      message: 'Invalid contact hash, get last updated contact details'\n                    - code: 1013\n                      message: \u0026gt;-\n                        Contact has notification handle registered for direct\n                        deposit, regular transfer cannot be sent\n                    - code: 1014\n                      message: Sender and Recipient cannot be same customer\n                    - code: 1015\n                      message: Sender is disabled\n                    - code: 1016\n                      message: \u0026gt;-\n                        Transfer amount exceeds the individual outgoing transfer\n                        threshold\n                    - code: 1017\n                      message: \u0026gt;-\n                        Total cumulative transfers exceeds the daily outgoing\n                        transfer amount threshold\n                    - code: 1018\n                      message: \u0026gt;-\n                        Total cumulative transfers exceeds the first rolling\n                        limit outgoing transfer amount threshold\n                    - code: 1019\n                      message: \u0026gt;-\n                        Total cumulative transfers exceeds the second rolling\n                        limit outgoing transfer amount threshold\n                    - code: 1020\n                      message: Duplicate source system id\n                    - code: 1021\n                      message: Expiry Date is less than Creation Date\n                    - code: 1022\n                      message: Transfer creation date is too early or too late\n                    - code: 1023\n                      message: Expiry Date exceeds threshold limit\n                    - code: 1024\n                      message: Invalid Transfer authentication for the Transfer type.\n                    - code: 1027\n                      message: Hash algorithm not supported by the system.\n                    - code: 1028\n                      message: Fullfill amount should be same as requested amount.\n                    - code: 1045\n                      message: \u0026gt;-\n                        Transfer can't be created, due to intrruption in\n                        previous transfer.\n                    - code: 1046\n                      message: Currency code or product type is not supported.\n                    - code: 1047\n                      message: Invalid Transfer type.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist\n                    - code: 1007\n                      message: contact doesn't exist\n                    - code: 1025\n                      message: moneyRequestReferenceNumber doesn't exist.\n                    - code: 1026\n                      message: directDepositRegistrationId doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Transfer'\n        required: true\n  '/transfers/send/{referenceNumber}/notice':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    patch:\n      description: the sender re-sends a transfer notice\n      operationId: sendtransferNotice\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 14\n      tags:\n        - Send Transfer\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1029\n                      message: Transfer doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n  '/transfers/send/{referenceNumber}/updateTransferAuthentication':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    patch:\n      description: the sender updates the transfer authentication\n      operationId: updateTransferAuthentication\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 14\n      tags:\n        - Send Transfer\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1032\n                      message: Hash Salt is required if hashtype is not MD5.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1029\n                      message: Transfer doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferAuthentication'\n        required: true\n  '/transfers/send/{referenceNumber}/cancel':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n      - $ref: '#/components/parameters/participantAccessToken'\n    patch:\n      description: \u0026gt;-\n        the sender cancels a transfer; the operation is asynchronous, a\n        notification will be sent to the third party partner when the transfer\n        is cancelled\n      operationId: cancelTransfer\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 14\n      tags:\n        - Send Transfer\n      responses:\n        '202':\n          description: Successful response\n          headers:\n            location:\n              description: URL for accessing the newly created transfer\n              schema:\n                type: string\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1029\n                      message: Transfer doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        $ref: '#/components/requestBodies/CancellationReason'\n  '/transfers/receive/{referenceNumber}':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    get:\n      description: \u0026gt;-\n        the recipient retrieves an incoming transfer; details about sender are\n        part of the response\n      operationId: getIncomingTransfer\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 14\n      tags:\n        - Receive Transfer\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncomingTransfer'\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1029\n                      message: Transfer doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n  '/transfers/receive/{referenceNumber}/authenticate':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    patch:\n      description: \u0026gt;-\n        the recipient authenticates a transfer by providing the answer to the\n        security question\n      operationId: authenticateTransfer\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 14\n      tags:\n        - Receive Transfer\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n                    - code: 1034\n                      message: 'Authentication failed, try again later.'\n                    - code: 1035\n                      message: 'Authentication failed, can''t try again.'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1029\n                      message: Transfer doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityAnswer'\n        required: true\n  '/transfers/receive/{referenceNumber}/complete':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n      - $ref: '#/components/parameters/participantAccessToken'\n    patch:\n      description: \u0026gt;-\n        the recipient completes the receive of a transfer; the operation is\n        asynchronous, a notification will be sent to the third party partner\n        when the transfer is completed\n      operationId: completeTransfer\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 14\n      tags:\n        - Receive Transfer\n      responses:\n        '202':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n                    - code: 1036\n                      message: Transfer was authenticated by a different customer.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1029\n                      message: Transfer doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RecipientMemo'\n  '/transfers/receive/{referenceNumber}/decline':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    patch:\n      description: the recipient declines a transfer\n      operationId: declineTransfer\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 14\n      tags:\n        - Receive Transfer\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1029\n                      message: Transfer doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        $ref: '#/components/requestBodies/DeclineReason'\n  /money-requests/send:\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    get:\n      operationId: getMoneyRequests\n      description: retrieves all money requests\n      parameters:\n        - name: fromDate\n          in: query\n          required: false\n          description: \u0026gt;-\n            UTC datatime format is yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g.\n            '2016-09-11T16:12:12.000'; this parameter is mandatory if\n            sourceMoneyRequestId or referenceNumber is not given.\n          schema:\n            type: string\n            format: dateTime\n        - name: toDate\n          in: query\n          required: false\n          description: \u0026gt;-\n            UTC datatime format is yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g.\n            '2016-09-11T16:12:12.000'; this parameter is mandatory if\n            sourceMoneyRequestId or referenceNumber is not given.\n          schema:\n            type: string\n            format: dateTime\n        - name: maxResponseItems\n          in: query\n          required: false\n          description: \u0026gt;-\n            if offset is provided then maxResponse items is required; all ( OR\n            maximum set by interac system ) items are returned if this field is\n            absent\n          schema:\n            type: integer\n        - name: offset\n          in: query\n          required: false\n          description: \u0026gt;-\n            offset is starting point of money-requests filter; if offset is not\n            provided it would be defaulted  to zero; \n          schema:\n            type: integer\n        - name: sortBy\n          in: query\n          required: false\n          description: 'money-requests will be sorted based on sortBy column. '\n          schema:\n            type: string\n            enum:\n              - creationDate\n        - name: orderBy\n          in: query\n          required: false\n          description: order by is required if sort by is specified.\n          schema:\n            type: string\n            enum:\n              - desc\n              - asc\n        - name: sourceMoneyRequestId\n          in: query\n          required: false\n          description: id created at originating system\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: referenceNumber\n          in: query\n          required: false\n          description: 'unique money request reference Number  '\n          schema:\n            type: string\n            maxLength: 16\n      tags:\n        - Send Money Request\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MoneyRequest'\n        '206':\n          description: Partial content returned\n          headers:\n            x-limit:\n              description: range of money request\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MoneyRequest'\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1030\n                      message: Invalid date range.\n                    - code: 1031\n                      message: Mutually exclusive options are specified.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1007\n                      message: Contact doesn't exist.\n                    - code: 1025\n                      message: Money request doesn't exist.\n                    - code: 1053\n                      message: orderBy field is missing.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n    post:\n      description: creates a money request for an e-Transfer customer\n      operationId: sendMoneyRequest\n      tags:\n        - Send Money Request\n      responses:\n        '201':\n          description: Successful response\n          headers:\n            location:\n              description: URL for accessing the newly created money request\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                required:\n                  - referenceNumber\n                properties:\n                  referenceNumber:\n                    description: reference Number of the newly created money request\n                    type: string\n                  paymentGatewayUrl:\n                    description: the payment gateway url for money request fullfilment\n                    type: string\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1012\n                      message: 'Invalid contact hash, get last updated contact details.'\n                    - code: 1020\n                      message: Duplicate source system id.\n                    - code: 1021\n                      message: Expiry Date is less than Creation Date.\n                    - code: 1023\n                      message: Expiry Date exceeds threshold limit.\n                    - code: 1038\n                      message: Outgoing money request amount threshold exceeded.\n                    - code: 1039\n                      message: \u0026gt;-\n                        Maximum number of outgoing money requests threshold\n                        exceeded.\n                    - code: 1040\n                      message: Customer can't send money request to Recipient/Contact.\n                    - code: 1041\n                      message: Invoice due date exceeds the money request expiry date.\n                    - code: 1049\n                      message: \u0026gt;-\n                        Customer blocked to send money request notifications to\n                        Recipient/Contact.\n                    - code: 1050\n                      message: \u0026gt;-\n                        Editable fulfill amount is not supported for requesting\n                        customer.\n                    - code: 1052\n                      message: \u0026gt;-\n                        Notice cannot be sent. Notifications are supressed for\n                        this Money Request.\n                    - code: 1053\n                      message: Invalid Direct deposit registration handle.\n                    - code: 1054\n                      message: \u0026gt;-\n                        1054 supressResponderNotifications has to be true when\n                        RequestedFrom is not specified.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1037\n                      message: Feature is not supported for current user\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1006\n                      message: Hard contact doesn't exist.\n                    - code: 1007\n                      message: contact doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        $ref: '#/components/requestBodies/MoneyRequest'\n  '/money-requests/send/{referenceNumber}':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    put:\n      description: updates a money request for an e-Transfer customer\n      operationId: updateMoneyRequest\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 16\n      tags:\n        - Send Money Request\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1012\n                      message: 'Invalid contact hash, get last updated contact details.'\n                    - code: 1020\n                      message: Duplicate source system id.\n                    - code: 1021\n                      message: Expiry Date is less than Creation Date.\n                    - code: 1023\n                      message: Expiry Date exceeds threshold limit.\n                    - code: 1038\n                      message: Outgoing money request amount threshold exceeded.\n                    - code: 1039\n                      message: \u0026gt;-\n                        Maximum number of outgoing money requests threshold\n                        exceeded.\n                    - code: 1040\n                      message: Customer can't send money request to Recipient/Contact.\n                    - code: 1041\n                      message: Invoice due date exceeds the money request expiry date.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '403':\n          description: \u0026gt;-\n            Forbidden - The server understood the request, but is refusing to\n            fulfill it.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1037\n                      message: Feature is not supported for current user\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1006\n                      message: Hard contact doesn't exist.\n                    - code: 1007\n                      message: contact doesn't exist.\n                    - code: 1025\n                      message: Money request doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        $ref: '#/components/requestBodies/MoneyRequest'\n  '/money-requests/send/{referenceNumber}/notice':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    patch:\n      description: re-send a money request notice\n      operationId: sendMoneyRequestNotice\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 16\n      tags:\n        - Send Money Request\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n                    - code: 1042\n                      message: \u0026gt;-\n                        Exceeded max number of notifications for the Money\n                        Request.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1025\n                      message: Money request doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n  '/money-requests/send/{referenceNumber}/cancel':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    patch:\n      description: cancels a money request\n      operationId: cancelMoneyRequest\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 16\n      tags:\n        - Send Money Request\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1025\n                      message: Money request doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        $ref: '#/components/requestBodies/CancellationReason'\n  '/money-requests/receive/{referenceNumber}':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    get:\n      description: \u0026gt;-\n        retrieves an incoming money request; details about requester are part of\n        the response\n      operationId: getMoneyRequest\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - Fulfill Money Request\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncomingMoneyRequest'\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1014\n                      message: Sender and Recipient cannot be same customer.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1007\n                      message: Contact doesn't exist.\n                    - code: 1025\n                      message: Money request doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n  '/money-requests/receive/{referenceNumber}/decline':\n    parameters:\n      - $ref: '#/components/parameters/accessToken'\n      - $ref: '#/components/parameters/thirdPartyAccessId'\n      - $ref: '#/components/parameters/requestId'\n      - $ref: '#/components/parameters/deviceId'\n      - $ref: '#/components/parameters/applicationId'\n      - $ref: '#/components/parameters/apiRegistrationId'\n    patch:\n      description: decline a money request\n      operationId: declineMoneyRequest\n      parameters:\n        - name: referenceNumber\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 16\n      tags:\n        - Fulfill Money Request\n      responses:\n        '204':\n          description: Successful response\n        '400':\n          description: Validation Errors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1000\n                      message: Invalid request.\n                    - code: 1011\n                      message: Invalid apiRegistartionId.\n                    - code: 1014\n                      message: Sender and Recipient cannot be same customer.\n                    - code: 1033\n                      message: Request cannot be processed due to current status.\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1001\n                      message: Invalid access\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n              examples:\n                response:\n                  value:\n                    - code: 1005\n                      message: ApiRegistartionId doesn't exist.\n                    - code: 1007\n                      message: Contact doesn't exist.\n                    - code: 1025\n                      message: Money request doesn't exist.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorModel'\n      requestBody:\n        $ref: '#/components/requestBodies/DeclineReason'\ncomponents:\n  parameters:\n    thirdPartyAccessId:\n      name: thirdPartyAccessId\n      in: header\n      description: unique id that identifies a third party partner\n      required: true\n      schema:\n        type: string\n        maximum: 50\n    requestId:\n      name: requestId\n      in: header\n      description: \u0026gt;-\n        partner generated unique id for each request used for message tracking\n        purposes\n      required: true\n      schema:\n        type: string\n        minimum: 1\n        maximum: 64\n    deviceId:\n      name: deviceId\n      in: header\n      description: user device unique identifier\n      required: true\n      schema:\n        type: string\n        minimum: 1\n        maximum: 64\n    applicationId:\n      name: applicationId\n      in: header\n      description: user application unique identifier\n      required: false\n      schema:\n        type: string\n        minimum: 1\n        maximum: 64\n    accessToken:\n      name: accessToken\n      in: header\n      required: true\n      description: |\n        OAuth2 access token, the format is 'Bearer AccessToken'.\n      schema:\n        type: string\n        maximum: 64\n    apiRegistrationId:\n      name: apiRegistrationId\n      in: header\n      description: unique identifier for the user api registration\n      required: true\n      schema:\n        type: string\n        maximum: 50\n    participantAccessToken:\n      name: participantAccessToken\n      in: header\n      description: access token provided by participant.\n      required: false\n      schema:\n        type: string\n        maximum: 64\n  requestBodies:\n    Contact:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Contact'\n      required: true\n    DeclineReason:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeclineReason'\n    MoneyRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MoneyRequest'\n      required: true\n    CancellationReason:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CancellationReason'\n  securitySchemes:\n    etransfer_auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'etransfer.w': write permission\n            'etransfer.r': read permission\n  schemas:\n    AccessToken:\n      type: object\n      required:\n        - accessToken\n        - expiresIn\n      properties:\n        accessToken:\n          type: string\n        tokenType:\n          type: string\n          description: example value is 'bearer'\n        expiresIn:\n          type: integer\n          description: how many seconds the token will expire\n        scope:\n          type: string\n          description: example value is 'read trust write'\n    UserRegistration:\n      type: object\n      required:\n        - thirdPartyUserId\n        - allowedFeatures\n      properties:\n        apiRegistrationId:\n          type: string\n          maxLength: 50\n          description: \u0026gt;-\n            unique identifier for the user api registration; not required in\n            POST request\n        participantId:\n          type: string\n          minLength: 8\n          maxLength: 8\n          description: \u0026gt;-\n            participant id in e-Transfer system; required if api registration is\n            created through the public api and directDepositRegistration is not\n            specified.\n        indirectConnectorId:\n          type: string\n          minLength: 9\n          maxLength: 9\n          description: indirect connector id in e-Transfer system\n        participantUserId:\n          type: string\n          minLength: 1\n          maxLength: 32\n          description: \u0026gt;-\n            participant defined user id in e-Transfer system; required if api\n            registration is created through the public api and\n            directDepositRegistration is not specified.\n        participantApiRegistrationId:\n          type: string\n          minLength: 1\n          maxLength: 32\n          description: \u0026gt;-\n            participant defined identifier for this Api registration; required\n            if api registration is created through the public api\n        fiAccountId:\n          type: string\n          minLength: 1\n          maxLength: 50\n          description: \u0026gt;-\n            unique identifier set by financial institution corresponding to the\n            user's bank account; required if api registration is created through\n            the public api and directDepositRegistration is not specified.\n        registrationStatus:\n          type: string\n          enum:\n            - pending\n            - active\n            - inactive\n            - failed\n            - in-review\n          description: \u0026gt;-\n            status of the user registration request\n            'pending','active','inactive','failed','in-review'\n        allowedFeatures:\n          type: array\n          items:\n            type: string\n            enum:\n              - contact_mgmnt\n              - money_request_mgmt\n              - transfer_mgmt\n              - send_money_requests\n              - fulfill_money_requests\n              - send_transfers\n              - receive_transfers\n              - user_registration_mgmnt\n              - contact_mgmnt_ext_api\n              - money_request_mgmt_ext_api\n              - transfer_mgmt_ext_api\n            description: \u0026gt;-\n              functionality allowed to be used through this API;\n              'contact_mgmnt', 'send_money_requests', 'fulfill_money_requests',\n              'send_transfers', 'receive_transfers', 'user_registration_mgmnt'\n              The below feature's are only for external app's, which doesn't\n              need to be synchronized with online banking transfers, contacts\n              and money requests  'contact_mgmnt_ext_api',\n              'money_request_mgmt_ext_api,'transfer_mgmt_ext_api'\n        thirdPartyUserId:\n          type: string\n          minLength: 1\n          maxLength: 50\n          description: unique third party partner defined user id in e-Transfer system\n        directDepositRegistration:\n          $ref: '#/components/schemas/DirectDepositRegistration'\n        customerDetails:\n          $ref: '#/components/schemas/CustomerDetails'\n        name:\n          type: string\n          minLength: 1\n          maxLength: 64\n        logoUrl:\n          type: string\n          minLength: 1\n          maxLength: 200\n        websiteUrl:\n          type: string\n          minLength: 1\n          maxLength: 64\n    UserRegistrationUpdate:\n      type: object\n      properties:\n        allowedFeatures:\n          type: array\n          items:\n            type: string\n            enum:\n              - contact_mgmnt\n              - money_request_mgmt\n              - transfer_mgmt\n              - send_money_requests\n              - fulfill_money_requests\n              - send_transfers\n              - receive_transfers\n              - user_registration_mgmnt\n              - contact_mgmnt_ext_api\n              - money_request_mgmt_ext_api\n              - transfer_mgmt_ext_api\n          description: |-\n            functionality allowed to be used through this API; 'contact_mgmnt',\n             'send_money_requests', 'fulfill_money_requests', 'send_transfers',\n             'receive_transfers', 'user_registration_mgmnt'\n             The below feature's are only for external app's, which doesn't need to be synchronized with online banking transfers, contacts and money requests \n             'contact_mgmnt_ext_api', 'money_request_mgmt_ext_api,'transfer_mgmt_ext_api'\n        fiAccountId:\n          type: string\n          minLength: 1\n          maxLength: 50\n          description: \u0026gt;-\n            updated fi account id; unique identifier set by financial\n            institution corresponding to the user's bank account\n        directDepositRegistration:\n          $ref: '#/components/schemas/DirectDepositRegistration'\n        name:\n          type: string\n          minLength: 1\n          maxLength: 64\n        logoUrl:\n          type: string\n          minLength: 1\n          maxLength: 200\n        websiteUrl:\n          type: string\n          minLength: 1\n          maxLength: 64\n    CustomerDetails:\n      description: \u0026gt;-\n        auto deposit registration details associated with a notification handle\n        or hard contact customer details.\n      type: object\n      required:\n        - customerType\n        - registrationName\n        - legalName\n      properties:\n        customerType:\n          type: string\n          enum:\n            - retail\n            - small_business\n            - corporate\n        registrationName:\n          type: string\n          minLength: 1\n          maxLength: 80\n          description: name used by the customer to register in e-Transfer system\n        legalName:\n          type: object\n          properties:\n            retailName:\n              type: object\n              required:\n                - firstName\n                - lastName\n              properties:\n                firstName:\n                  type: string\n                  minLength: 1\n                  maxLength: 100\n                  description: customer's first name\n                middleName:\n                  type: string\n                  minLength: 1\n                  maxLength: 100\n                  description: customer's middle name\n                lastName:\n                  type: string\n                  minLength: 1\n                  maxLength: 100\n                  description: customer's last name\n            businessName:\n              type: object\n              required:\n                - companyName\n              properties:\n                companyName:\n                  type: string\n                  minLength: 1\n                  maxLength: 100\n                  description: customer's corporate name\n                tradeName:\n                  type: string\n                  minLength: 1\n                  maxLength: 100\n                  description: customer's trade name\n    DirectDepositRegistration:\n      description: auto deposit registration details associated with a notification handle\n      type: object\n      required:\n        - directDepositHandle\n      properties:\n        directDepositRegistrationId:\n          type: string\n          minLength: 1\n          maxLength: 16\n          description: \u0026gt;-\n            unique identifier of the direct depost registration in e-Transfer\n            system\n        directDepositHandle:\n          type: string\n          minLength: 1\n          maxLength: 240\n          description: 'email address, phone number or unique user identifier'\n        directDepositHandleType:\n          type: string\n          enum:\n            - email\n            - uuid\n            - sms\n    NotificationPreference:\n      type: object\n      required:\n        - handle\n        - handleType\n        - active\n      properties:\n        handle:\n          type: string\n          minLength: 6\n          maxLength: 64\n          description: \u0026gt;-\n            Email address (format a@b.ca) or mobile phone number ( format\n            123-222-7777 )\n        handleType:\n          type: string\n          enum:\n            - email\n            - sms\n        active:\n          type: boolean\n          description: specifies if notifications will not be sent\n    Contact:\n      type: object\n      required:\n        - contactName\n        - language\n      properties:\n        contactId:\n          type: string\n          minLength: 16\n          maxLength: 16\n          description: unique identifier for the contact; not required in POST request\n        contactName:\n          type: string\n          minLength: 1\n          maxLength: 80\n          description: unique contact name to be provided for each contacts.\n        contactHash:\n          type: string\n          description: \u0026gt;-\n            unique hash value to identify version of contact, not required in\n            POST request\n        language:\n          type: string\n          minLength: 2\n          maxLength: 2\n          enum:\n            - en\n            - fr\n          description: language used to notify this contact\n        notificationPreferences:\n          type: array\n          description: notification preferences for the contact\n          items:\n            $ref: '#/components/schemas/NotificationPreference'\n        hardContactUser:\n          type: object\n          required:\n            - thirdPartyUserId\n          properties:\n            thirdPartyUserId:\n              type: string\n              minLength: 1\n              maxLength: 50\n              description: unique third party partner defined user id in e-Transfer system\n            hardContactStatus:\n              type: string\n              enum:\n                - active\n                - not active\n              description: 'status of hard contact, if customer is disabled or de reg'\n        directDepositRegistration:\n          $ref: '#/components/schemas/DirectDepositRegistration'\n          description: \u0026gt;-\n            direct deposit registration associated with a contact notification\n            handle\n        customerDetails:\n          $ref: '#/components/schemas/CustomerDetails'\n          description: \u0026gt;-\n            customer details associated the hard contract or the auto deposit\n            registration associated with one of the contact notification handles\n        onUs:\n          type: boolean\n          description: \u0026gt;-\n            the registered user and the coustomer associated with the direct\n            deposit registration have the same financial institution\n    TransferAuthentication:\n      type: object\n      required:\n        - securityQuestion\n        - securityAnswer\n      properties:\n        securityQuestion:\n          type: string\n          minLength: 1\n          maxLength: 40\n          description: the security question\n        securityAnswer:\n          type: string\n          description: \u0026gt;-\n            answer to the security question (as provided by the customer) with\n            leading and trailing whitespace trimmed, uppercased, postfixed with\n            hashSalt if present, hashed using the alghoritm identified by\n            hashType and then Base64 encoded. ISO-8859-1 encoding to be used\n            when the hash is generated, values not returned in GET requests for\n            security reasons.\n        hashType:\n          type: string\n          enum:\n            - MD5\n            - SHA2\n          description: \u0026gt;-\n            alghorithm used to hash the security answer; it has to be one of\n            values supported by the system\n        hashSalt:\n          type: string\n          minLength: 1\n          maxLength: 44\n          description: \u0026gt;-\n            required if hashType is not MD5, values not returned in GET requests\n            for security reasons.\n    CancellationReason:\n      type: object\n      required:\n        - cancellationReason\n      properties:\n        cancellationReason:\n          type: string\n          minLength: 1\n          maxLength: 400\n          description: cancellation reason\n    SecurityAnswer:\n      type: object\n      required:\n        - securityAnswer\n      properties:\n        securityAnswer:\n          type: string\n          description: \u0026gt;-\n            answer to the security question (as provided by the customer) with\n            leading and trailing whitespace trimmed, uppercased, postfixed with\n            hashSalt if present, hashed using the alghoritm identified by\n            hashType and then Base64 encoded. ISO-8859-1 encoding to be used\n            when the hash is generated\n    DeclineReason:\n      type: object\n      required:\n        - declineReason\n      properties:\n        declineReason:\n          type: string\n          minLength: 1\n          maxLength: 400\n          description: decline reason\n    RecipientMemo:\n      type: object\n      minLength: 1\n      maxLength: 400\n      required:\n        - recipientMemo\n      properties:\n        recipientMemo:\n          type: string\n          description: recipient memo\n    Invoice:\n      type: object\n      properties:\n        invoiceNumber:\n          type: string\n          minLength: 1\n          maxLength: 120\n          description: number of the invoice to be paid\n        dueDate:\n          type: string\n          format: dateTime\n          description: \u0026gt;-\n            UTC date  of  the invoice is to be paid by; format is\n            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'\n    MoneyRequest:\n      type: object\n      required:\n        - sourceMoneyRequestId\n        - requestedFrom\n        - amount\n        - currency\n        - editableFulfillAmount\n        - expiryDate\n        - supressResponderNotifications\n      properties:\n        referenceNumber:\n          type: string\n          maxLength: 16\n          description: \u0026gt;-\n            unique identifier for the money request; this field should not be\n            specified in the POST request\n        sourceMoneyRequestId:\n          type: string\n          minLength: 1\n          maxLength: 64\n          description: unique identifier of the money request in the originating system\n        requestedFrom:\n          type: object\n          description: \u0026gt;-\n            Responder details of the money request, required for get money\n            request.     \n          properties:\n            contactId:\n              type: string\n              description: \u0026gt;-\n                Unique identifier for the contact; required for permanent\n                contact.\n            contactHash:\n              type: string\n              description: \u0026gt;-\n                unique hash value to identify version of contact;required for\n                permanent contact.\n            contactName:\n              type: string\n              description: 'contact name, required for onetime contact.'\n            language:\n              type: string\n              enum:\n                - en\n                - fr\n              description: \u0026gt;-\n                language used to notify this contact, required for onetime\n                contact.\n            notificationPreferences:\n              type: array\n              description: \u0026gt;-\n                notification preferences for the contact, required for onetime\n                contact.\n              items:\n                $ref: '#/components/schemas/NotificationPreference'\n        amount:\n          type: number\n          format: double\n          description: the requested amount\n        currency:\n          type: string\n          description: the currency of the requested amount; only CAD is supported for now\n        editableFulfillAmount:\n          type: boolean\n          description: \u0026gt;-\n            flag indicating if the transfer amount can be different from the\n            requested amount\n        requesterMessage:\n          type: string\n          minLength: 1\n          maxLength: 400\n          description: message from the requester\n        invoice:\n          $ref: '#/components/schemas/Invoice'\n        expiryDate:\n          type: string\n          format: datetime\n          description: \u0026gt;-\n            UTC datatime this money request is valid until; format is\n            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'\n        supressResponderNotifications:\n          type: boolean\n          description: \u0026gt;-\n            if flag is on, Interac will not send notifications to the intended\n            responder; the requester is expected to handle the notification part\n            themselves. If requestedFrom is not specified,\n            supressResponderNotifications has to be true.\n        returnURL:\n          type: string\n          description: \u0026gt;-\n            return URL to redirect the Responder after the Money Request\n            fulfillment\n        creationDate:\n          type: string\n          format: datetime\n          description: \u0026gt;-\n            UTC datatime of creation for this request; this field should not be\n            specified in POST or PUT requests; format is\n            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'\n        status:\n          type: integer\n          description: \u0026gt;\n            Does not need to be provided at request creation time; this field\n            should not be specified in POST or PUT requests | \n             - REQUEST_INITIATED(1)\n             - AVAILABLE_TO_BE_FULFILLED(2)\n             - REQUEST_FULFILLED(3)\n             - DECLINED(4)\n             - CANCELLED(5)\n             - EXPIRED(6)\n             - DEPOSIT_FAILED(7)\n             - REQUEST_COMPLETED(8)\n        fulfillAmount:\n          type: number\n          format: double\n          description: \u0026gt;-\n            the fulfilled amount; to not be specified in POST or PUT requests;\n            present if status is completed\n        responderMessage:\n          type: string\n          description: \u0026gt;-\n            message from the responder; this field should not be specified in\n            POST or PUT requests\n        notificationStatus:\n          type: integer\n          description: \u0026gt;\n            indicates the status of the notifications sent to the recipient;\n            this field should not be specified in POST or PUT requests | \n              SENT(0)\n              PENDING(1)\n              PENDING_SEND_FAILURE(2)\n              DELIVERY_FAILURE(3)\n              \n    IncomingMoneyRequest:\n      type: object\n      required:\n        - moneyRequest\n        - requesterDetails\n      properties:\n        moneyRequest:\n          $ref: '#/components/schemas/MoneyRequest'\n          description: base money request data\n        requesterDetails:\n          $ref: '#/components/schemas/CustomerDetails'\n          description: customer details associated with the requester of the money request\n        requesterNotifications:\n          type: array\n          description: notifications associated with the requester\n          items:\n            type: object\n            required:\n              - handle\n              - handleType\n            properties:\n              handle:\n                type: string\n                minLength: 6\n                maxLength: 64\n                description: Email address or mobile phone number\n              handleType:\n                type: string\n                enum:\n                  - email\n                  - sms\n    Transfer:\n      type: object\n      required:\n        - transferType\n        - sourceTransferId\n        - amount\n        - currency\n        - expiryDate\n        - supplementaryInfo\n      properties:\n        referenceNumber:\n          type: string\n          maxLength: 14\n          description: \u0026gt;-\n            unique identifier for the transfer; this field should not be\n            specified in the POST request\n        transferType:\n          type: string\n          enum:\n            - REGULAR_TRANSFER\n            - MONEY_REQUEST_FULFILLMENT\n            - DIRECT_DEPOSIT\n        sourceTransferId:\n          type: string\n          minLength: 1\n          maxLength: 64\n          description: unique identifier of the transfer in the originating system\n        sentTo:\n          type: object\n          description: \u0026gt;-\n            Receipient details of the transfers, required for outgoing or get\n            transfers      \n          properties:\n            contactId:\n              type: string\n              description: \u0026gt;-\n                Unique identifier for the contact; required for permanent\n                contact transfers.\n            contactHash:\n              type: string\n              description: \u0026gt;-\n                unique hash value to identify version of contact;required for\n                permanent contact transfers.\n            contactName:\n              type: string\n              description: 'contact name, required for onetime contact.'\n            language:\n              type: string\n              enum:\n                - en\n                - fr\n              description: \u0026gt;-\n                language used to notify this contact, required for onetime\n                contact.\n            notificationPreferences:\n              type: array\n              description: \u0026gt;-\n                notification preferences for the contact, required for onetime\n                contact.\n              items:\n                $ref: '#/components/schemas/NotificationPreference'\n        amount:\n          type: number\n          format: double\n          description: the sent amount\n        currency:\n          type: string\n          description: the currency of the sent amount; only CAD is supported for now\n        transferAuthentication:\n          $ref: '#/components/schemas/TransferAuthentication'\n          description: transfer authentication required for regular transfers\n        senderMessage:\n          type: string\n          minLength: 1\n          maxLength: 400\n          description: message from the sender\n        requestReferenceNumber:\n          type: string\n          maxLength: 16\n          description: \u0026gt;-\n            reference number of the money request to be fufilled; required for\n            money request fulfillment      \n        expiryDate:\n          type: string\n          format: datetime\n          description: \u0026gt;-\n            UTC datatime this transfer is valid until; format is\n            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'\n        supplementaryInfo:\n          type: object\n          description: \u0026gt;-\n            supplementaryInfo is required for POST request, as we have to\n            capture where the request came from.\n          required:\n            - ipAddress\n          properties:\n            ipAddress:\n              type: string\n              description: IP address used by the user\n            deviceFingerprint:\n              type: string\n              description: device fingerprint\n        creationDate:\n          type: string\n          format: datetime\n          description: \u0026gt;-\n            UTC datatime of creation for this transfer; this field should not be\n            specified in POST or PUT requests; format is\n            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'\n        senderRegistrationName:\n          type: string\n          minLength: 1\n          maxLength: 80\n          description: \u0026gt;-\n            name used by the sender to register in e-Transfer system; this field\n            should not be specified in POST, PUT  or PATCH requests    \n        receivedDate:\n          type: string\n          format: datetime\n          description: \u0026gt;-\n            UTC datatime when this transfer was completed/received; this field\n            should not be specified in POST or PUT requests; format is\n            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'\n        status:\n          type: integer\n          description: \u0026gt;\n            Does not need to be provided at request creation time; this field\n            should not be specified in POST or PUT requests |\n             - TRANSFER_CREATION_INITIATED(21)\n             - TRANSFER_CREATION_IN_PROCESS(22)\n             - TRANSFER_CREATION_FAILED(23)\n             - TRANSFER_CREATED(1)\n             - TRANSFER_AVAILABLE(3)\n             - AUTHENTICATION_FAILURE(5)\n             - AUTHENTICATION_SUCCESSFUL(6)\n             - DECLINED(7)\n             - CANCELLED(8)\n             - EXPIRED(9)\n             - DIRECT_DEPOSIT_PENDING(17)\n             - DIRECT_DEPOSIT_FAILED(18)\n             - COMPLETED(10)\n        recipientMessage:\n          type: string\n          minLength: 1\n          maxLength: 400\n          description: \u0026gt;-\n            message from the recipient; this field should not be specified in\n            POST or PUT requests\n        transactionType:\n          type: string\n          enum:\n            - incoming\n            - outgoing\n          description: type of the transactions sent or received.\n        notificationStatus:\n          type: integer\n          description: \u0026gt;\n            indicates the status of the notifications sent to the recipient;\n            this field should not be specified in POST or PUT requests | \n              SENT(0)\n              PENDING(1)\n              PENDING_SEND_FAILURE(2)\n              DELIVERY_FAILURE(3)\n                          \n    IncomingTransfer:\n      type: object\n      required:\n        - referenceNumber\n        - transferType\n        - amount\n        - currency\n        - expiryDate\n        - senderRegistrationName\n        - status\n        - recipientLanguage\n        - authenticationRequired\n      properties:\n        referenceNumber:\n          type: string\n          maxLength: 16\n          description: unique identifier for the transfer\n        transferType:\n          type: string\n          enum:\n            - REGULAR_TRANSFER\n            - MONEY_REQUEST_FULFILLMENT\n            - DIRECT_DEPOSIT\n        amount:\n          type: number\n          format: double\n          description: the sent amount\n        currency:\n          type: string\n          description: the currency of the sent amount; only CAD is supported for now\n        senderMessage:\n          type: string\n          minLength: 1\n          maxLength: 400\n          description: message from the sender\n        expiryDate:\n          type: string\n          format: datetime\n          description: \u0026gt;-\n            UTC datatime this transfer is valid until; format is\n            yyyy-MM-dd'T'HH:mm:ss.SSS'Z', e.g. '2016-09-11T16:12:12.000'\n        senderRegistrationName:\n          type: string\n          minLength: 1\n          maxLength: 80\n          description: \u0026gt;-\n            name used by the sender to register in e-Transfer system; this field\n            should not be specified in POST or PUT requests\n        recipientLanguage:\n          type: string\n          enum:\n            - en\n            - fr\n          description: recipient's preferred language as defined by the sender\n        status:\n          type: integer\n          description: \u0026gt;-\n            Incoming Transfer statuses | TRANSFER_AVAILABLE(3)\n            AUTHENTICATION_FAILURE(5) AUTHENTICATION_SUCCESSFUL(6) DECLINED(7)\n            CANCELLED(8) EXPIRED(9) DIRECT_DEPOSIT_PENDING(17)\n            DIRECT_DEPOSIT_FAILED(18) COMPLETED(10)\n        authenticationRequired:\n          type: boolean\n          description: true if recipient authentication is required\n        securityQuestion:\n          type: string\n          minLength: 1\n          maxLength: 40\n          description: the security question\n        hashType:\n          type: string\n          enum:\n            - MD5\n            - SHA2\n          description: alghorithm used to hash the security answer by the sending party\n        hashSalt:\n          type: string\n          maxLength: 44\n          description: salt used to hash the security answer by the sending party\n    errorModel:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          description: \u0026gt;\n            Error list for all the API's, please refer example tag for api\n            specific error code.\n\n            1000 Invalid request. \n\n            1001 Invalid access.\n\n            1002 Allowed feature list not supported for user.\n\n            1003 Customer doesn't exist - ParticipantUserId doesn't exist.\n\n            1004 Duplicate User registration.\n\n            1005 ApiRegistartionId doesn't exist.\n\n            1006 Hard contact doesn't exist.\n\n            1007 Contact doesn't exist. \n\n            1008 Duplicate ThirdPartyUserId. \n\n            1009 Invalid ParticipantId. \n\n            1010 Invalid IndirectConnectorId of participant.\n\n            1011 Invalid apiRegistartionId.\n\n            1012 Retrive last updated contact details, contact hash invalid.\n\n            1013 Contact has notification handle registered for direct deposit,\n            regular transfer cannot be sent.\n\n            1014 Sender and Recipient cannot be same customer.   \n\n            1015 Sender is disabled.\n\n            1016 Transfer amount exceeds the individual outgoing transfer\n            threshold.\n\n            1017 Total cumulative transfers exceeds the daily outgoing transfer\n            amount threshold.\n\n            1018 Total cumulative transfers exceeds the first rolling limit\n            outgoing transfer amount threshold.\n\n            1019 Total cumulative transfers exceeds the second rolling limit\n            outgoing transfer amount threshold.\n\n            1020 Duplicate source system id.\n\n            1021 Expiry Date is less than Creation Date.\n\n            1022 Contact is not registered for direct deposit, direct deposit\n            cannot be sent.\n\n            1023 Expiry Date exceeds threshold limit. \n\n            1024 Invalid Transfer authentication for the Transfer type.\n\n            1025 Money request doesn't exist.\n\n            1026 Direct deposit registration doesn't exist. \n\n            1027 Hash algorithm not supported by the system.\n\n            1028 Fullfill amount should be same as requested amount.\n\n            1029 Transfer doesn't exist.      \n\n            1030 Invalid date range.\n\n            1031 Mutually exclusive options are specified.\n\n            1032 Hash Salt is required if hashtype is not MD5.\n\n            1033 Request cannot be processed due to current status.\n\n            1034 Authentication failed, try again later.\n\n            1035 Authentication failed, can't try later.\n\n            1036 Transfer was authenticated by a different customer.\n\n            1037 Feature is not supported for current user.\n\n            1038 Outgoing money request amount threshold exceeded.\n\n            1039 Maximum number of outgoing money requests threshold exceeded.\n\n            1040 Customer can't send money request to Recipient/Contact.\n\n            1041 Invoice due date exceeds the money request expiry date.\n\n            1042 Exceeded max number of notifications for the Money Request.\n\n            1043 Duplicate contact name.  \n\n            1044 Contact can't be deleted if there are in flight transfers.\n\n            1045 Transfer can't be created, due to intrruption in previous\n            transfer.\n\n            1046 Currency code or product type is not supported.\n\n            1047 Invalid Transfer type.\n\n            1048 Hard contact already exist for sender. \n\n            1049 Customer blocked to send money request notifications to\n            Recipient/Contact \n\n            1050 Editable fulfill amount is not supported for requesting\n            customer. \n\n            1051 Recipient  / Responder is disabled.\n\n            1052 Notice cannot be sent. Notifications are supressed for this\n            Money Request.  \n\n            1053 Invalid Direct deposit registration handle.\n\n            1054 supressResponderNotifications has to be true when RequestedFrom\n            is not specified.\n          format: int32\n        message:\n          type: string\n"
		}
	},
	"Error": "invalidYAML: yaml: line 26: did not find expected alphabetic or numeric character"
}