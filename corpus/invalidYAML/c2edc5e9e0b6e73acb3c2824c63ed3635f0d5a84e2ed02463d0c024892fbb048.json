{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/prusa3d/Prusa-Link-Web"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "spec/openapi.yaml",
			"byteSize": 6827,
			"content": "openapi: 3.0.1\ninfo:\n  title: PrusaLink Web\n  description:\n    This is a printer webservice.\n  contact:\n    email: link@prusa3d.cz\n  license:\n    name: AGPLv3\n  version: 1.0.0-draft\nexternalDocs:\n  description: Find out more about API\n  url: http://connect.prusa3d.cz\nsecurity:\n  - digestAuth: []\npaths:\n  /api/version:\n    get:\n      summary: api version informations\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Version\"\n\n  /api/v1/info:\n    get:\n      summary: printer informations\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Info\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n\ncomponents:\n  schemas:\n    Version:\n      type: object\n      properties:\n        api:\n          type: string\n          example: \"1.0.0\"\n        version:\n          type: string\n          example: \"0.7.0\"\n        printer:\n          type: string\n          example: \"1.3.1\"\n        text:\n          type: string\n          example: \"PrusaLink 0.7.0\"\n        firmware:\n          type: string\n          example: \"3.10.1-4697\"\n        sdk:\n          type: string\n          example: \"0.7.0\"\n      required:\n        - api\n        - version\n        - printer\n        - text\n        - firmware\n\n    Info:\n      type: object\n      properties:\n        mmu:\n          type: boolean\n          example: false\n        name:\n          type: string\n          example: \"MuadDib\"\n        location:\n          type: string\n          example: \"Arrakis\"\n        farm_mode:\n          type: boolean\n          example: false\n        serial:\n          type: string\n          example: \"CZPX4720X004XC34242\"\n        sd_ready:\n          type: boolean\n          example: true\n        hostname:\n          type: string\n          example: \"prusa-mk3.lan\"\n        port:\n          type: string\n          example: \"/dev/tty\"\n\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Prusa error code. Must be string if we will have printer with code for example 04\n          example: \"10108\"\n        title:\n          type: string\n          description: Prusa error text string with prefiled variable macros.\n          example: \"RESIN TOO LOW\"\n        text:\n          type: string\n          description: Prusa error text string with prefiled variable macros.\n          example: \"Measured resin volume 22.4 ml is lower than required for this print. Refill the tank and restart the print.\"\n        url:\n          type: string\n          description: Link to the Prusa help page\n          example: \"https://help.prusa3d.com/en/10108/LHE3Q0I1\"\n      required:\n        - title\n        - text\n\n    ResponsePlaintext:\n      type: string\n      default: \"Project with same name has been already uploaded.\"\n      description: Prusa error message (raw_message)\n\n  responses:\n    NotModified: # 304\n      description: Not Modified\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    BadRequest: # 400\n      description: Bad Request\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Unauthorized: # 401\n      description: Unauthorized\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Forbidden: # 403\n      description: Forbidden\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    NotFound: # 404\n      description: Not Found\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Conflict: # 409\n      description: Conflict\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    UnsupportedMediaType: # 415\n      description: Unsupported Media Type\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    InternalServerError: # 500\n      description: Internal Server Error\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    NotImplemented: # 501\n      description: Not Implemented\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n  headers:\n    Accept:\n      required: false\n      schema:\n        type: string\n        default: text/plain\n      description: Parameter specifying supported data format from client. PCL has to support it.\n      Slicer doesn't have to use this. If the header is not present, it defaults to text/plain\n    Content-Location:\n      schema:\n        type: string\n        default: \"http://\u003cPCL IP\u003e/error\"\n      description: URI path to nice error page. We can send URI to help.prusa3d.com in the future.\n\n  securitySchemes:\n    digestAuth:\n      type: http\n      scheme: digest\n"
		}
	},
	"Error": "invalidYAML: yaml: line 253: could not find expected ':'"
}