{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/BBVA/hancock-dlt-adapter"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "raml/api.yaml",
			"byteSize": 57256,
			"content": "\nopenapi: 3.0.0\n\ninfo:\n  title: Hancock dlt adapter API\n  version: \"7.0.4\"\n  description: \"DLT Adapter is a web service that abstracts user interactions with DLT networks on a high-level common HTTP REST interface that conveniently provides the user with the specific DLT type adapted transaction that can be easily inspected, signed and personally sent to a DLT network trusted node of the choice of the user. \n\t\\n \\n \u003cstrong\u003eCurrent blockchains supported {dlt}\u003c/strong\u003e `ethereum`    \"\n  contact:\n    name: BBVA Hancock\n    url: https://github.com/BBVA/hancock-dlt-adapter\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers: \n  - url: https://host/{version}/dlt-adapter\nhost: \"https://host/{version}/dlt-adapter\"\ntags:\n- name: \"{dlt}/smartcontracts\"\n  description: \"All operations about smartcontracts registered in Hancock, as well as operations with smartcontract with abi attached.\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://github.com/BBVA/hancock-dlt-adapter\"\n- name: \"{dlt}/transfers\"\n  description: \"Adapt a transfer call to the DLT between two addresses.\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://github.com/BBVA/hancock-dlt-adapter\"\n- name: \"{dlt}/balance\"\n  description: \"Obtain the native cryptocurrency balance of an address.\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://github.com/BBVA/hancock-dlt-adapter\"\n- name: \"{dlt}/token\"\n  description: \"All operations about ERC20 tokens, a facility to operate with tokens of ethereum.\n  \\n \n  \\n All token`s operations about ERC20 tokens can be invoked without {addressAlias} parameter in path, and with smartcontract \n  address in request form ('smartContractAddress':'') on post calls, or with queryparam (contractAddress='') on get calls.\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://github.com/BBVA/hancock-dlt-adapter\"\n- name: \"Protocol\"\n  description: \"API to adapt operations to Hancock Protocol, transform de data operations to a encode protocol to work with qr code.\"\n\npaths:\n  /{dlt}/smartcontracts:\n    get:\n      tags:\n      - \"{dlt}/smartcontracts\"\n      operationId: List of smartcontracts\n      description: Retrieve the list of all smart contracts registered in Hancock.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of smartcontracts registered\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/smartContractListResponse'\n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n  /{dlt}/smartcontracts/{addressAlias}:\n    get:\n      tags:\n      - \"{dlt}/smartcontracts\"\n      operationId: Abi of a smartcontract\n      description: Retrieve ABI from registered Smart Contract in Hancock.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the smartcontract\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Properties of registered smartcontract\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/smartContractResponse'\n        '404':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'                \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n    delete:\n      tags:\n      - \"{dlt}/smartcontracts\"\n      operationId: Delete a registered smartcontract\n      description: Delete a registered Smart Contract in Hancock.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the smartcontract\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Smartcontract registration deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericResponse'\n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n  /{dlt}/smartcontracts/deploy:\n    post:\n      tags:\n      - \"{dlt}/smartcontracts\"\n      operationId: Adapt deploy smartcontract\n      description: Adapt a Smart Contract deployment transaction. Give a binary data to deploy the smartcontract in a dlt network.\n      consumes:\n        - \"application/json\"  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string          \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transactionDeployRequest'    \n        description: Deploy request schema to adapt the deploy order  \n        required: true                       \n      responses:\n        '200':\n          description: Deploy success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transactionDeployResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'  \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n  /{dlt}/smartcontracts/invoke:\n    post:\n      tags:\n      - \"{dlt}/smartcontracts\"\n      operationId: Adapt invocation smartcontract\n      description: Adapt a Smart Contract invocation transaction.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transactionInvokeRequest'    \n        description: Invoke request schema to adapt the invoke order  \n        required: true               \n      responses:\n        '200':\n          description: Action send to DLT network\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transactionInvokeResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'  \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'   \n  /{dlt}/smartcontracts/invoke/{addressAlias}:\n    post:\n      tags:\n      - \"{dlt}/smartcontracts\"\n      operationId: Adapt invocation method of smartcontract\n      description: Adapt transaction that will invoke a method in the registered Smart Contract  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias registered in Hancock of the smartcontract \n          required: true\n          schema:\n            type: string            \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transactionInvokeRegisterRequest'    \n        description: Invoke request schema to adapt the invoke order  \n        required: true       \n      responses:\n        '200':\n          description: Action send to DLT network\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transactionInvokeResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'  \n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'                 \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'  \n  /{dlt}/smartcontracts/invoke/abi:\n    post:\n      tags:\n      - \"{dlt}/smartcontracts\"\n      operationId: Adapt invocation method with abi\n      description: Adapt transaction that will invoke a method in the registered Smart Contract with abi in params  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transactionInvokeAbiRequest'    \n        description: Invoke request schema to adapt the invoke order  \n        required: true               \n      responses:\n        '200':\n          description: Action send to DLT network\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transactionInvokeResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'  \n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'                 \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'                  \n  /{dlt}/smartcontracts/register:\n    post:\n      tags:\n      - \"{dlt}/smartcontracts\"\n      operationId: Register smartcontract\n      description: Register a deployed Smart Contract.  \n      consumes:\n        - \"application/json\"  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transactionRegisterRequest'    \n        description: Invoke request schema to adapt the invoke order  \n        required: true                                             \n      responses:\n        '201':\n          description: Successful registration action\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'  \n        '409':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericResponse'                  \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'    \n  /{dlt}/transfers:\n    post:\n      tags:\n      - \"{dlt}/transfers\"\n      operationId: Adapt transfer\n      description: Adapt a transfer call to the DLT between two addresses.  \n      consumes:\n        - \"application/json\"  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string       \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transferRequest'    \n        description: Transfer request schema to adapt the transfer order  \n        required: true                                                 \n      responses:\n        '200':\n          description: Transfer send to mine on DLT network\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transferResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'               \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'          \n  /{dlt}/balance/{address}:\n    get:\n      tags:\n      - \"{dlt}/balance\"\n      operationId: Balance\n      description: Obtain the native cryptocurrency balance of an address.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: address\n          in: path\n          description: Address of the user\n          required: true\n          schema:\n            type: string  \n      responses:\n        '200':\n          description: The native cryptocurrency balance of an address\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/balanceResponse'\n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'      \n  /{dlt}/token:\n    get:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Token list\n      description: Retrieve the list of all ERC20 tokens of Ethereum environment registered in Hancock.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The list of all token registered in Hancock\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/smartContractListResponse'\n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'    \n  /{dlt}/token/register:\n    post:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Token register\n      description: Register a ERC20 token contract of Ethereum environment in Hancock.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transferTokenRegister'    \n        description: Transfer token request schema to register\n        required: true   \n      responses:\n        '200':\n          description: \tSuccessful registration action \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericResponse'\n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError' \n  /{dlt}/token/{addressAlias}:\n    delete:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Delete a registered token\n      description: Unregister the token in Hancock.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the token smartcontract\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Token registration deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericResponse'\n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'      \n  /{dlt}/token/{addressAlias}/balanceOf/{address}:\n    get:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Token balance\n      description: Obtain the native ERC20 token currency balance of an address.    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the token smartcontract\n          required: true\n          schema:\n            type: string \n        - name: address\n          in: path\n          description: Address of the user\n          required: true\n          schema:\n            type: string                    \n      responses:\n        '200':\n          description: Get token balance operation success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/balancetokenResponse'\n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'        \n  /{dlt}/token/{addressAlias}/metadata:\n    get:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Token metadata\n      description: Obtain the info associated to the ERC20 Token (name, symbol, decimals and totalSupply).    \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the token smartcontract\n          required: true\n          schema:\n            type: string             \n      responses:\n        '200':\n          description: Info associated to the ERC20 Token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/metadataResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'                   \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'     \n  /{dlt}/token/{addressAlias}/transfer:\n    post:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Adapt token transfer\n      description: Adapt a token ERC20 transfer call to the DLT between two addresses.  \n      consumes:\n        - \"application/json\"  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the token smartcontract\n          required: true\n          schema:\n            type: string                    \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transferTokenRequest'    \n        description: Transfer token request schema to adapt the order  \n        required: true                                               \n      responses:\n        '200':\n          description: Token transfer adapted to send\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transferTokenResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'               \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'            \n  /{dlt}/token/{addressAlias}/transferFrom:\n    post:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Adapt token transferFrom\n      description: Adapt a token ERC20 transferFrom call to the DLT between two addresses.  \n      consumes:\n        - \"application/json\"  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the token smartcontract\n          required: true\n          schema:\n            type: string                 \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/transferfromTokenRequest'    \n        description: Transferfrom token request schema to adapt the order  \n        required: true                                                   \n      responses:\n        '200':\n          description: Token transfer adapted to send\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transferTokenResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'               \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'         \n  /{dlt}/token/{addressAlias}/approve:\n    post:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Adapt token approve\n      description: Token ERC20 owner can approve for spender to transfer tokens from the token owner's account.  \n      consumes:\n        - \"application/json\"  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the token smartcontract\n          required: true\n          schema:\n            type: string                 \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/approveTokenRequest'    \n        description: Approve token request schema to adapt the order  \n        required: true                                               \n      responses:\n        '200':\n          description: Token approve order adapted to send\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transferTokenResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'               \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'           \n  /{dlt}/token/{addressAlias}/allowance:\n    post:\n      tags:\n      - \"{dlt}/token\"\n      operationId: Token allowance\n      description: Provides the number of tokens allowed to be transferred from a given address by another given address.  \n      consumes:\n        - \"application/json\"  \n      parameters:\n        - name: dlt\n          in: path\n          description: Dlt to work with \n          required: true\n          schema:\n            type: string\n        - name: addressAlias\n          in: path\n          description: Address or alias of the token smartcontract\n          required: true\n          schema:\n            type: string               \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/allowanceTokenRequest'    \n        description: Allowance token request schema to adapt the order  \n        required: true                                               \n      responses:\n        '200':\n          description: Token approve order adapted to send\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/allowanceTokenResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'               \n        '500':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'                \n  /protocol/encode:\n    post:\n      tags:\n      - \"Protocol\"\n      operationId: Encode\n      description: Encode operation data to Hancock Protocol. Give us a code with all info to generate a qr. \n      consumes:\n        - \"application/json\"      \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/encodeRequest'    \n        description: Encode request schema  \n        required: true                                                       \n      responses:\n        '200':\n          description: Encode operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/encodeResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'                   \n  /protocol/decode:\n    post:\n      tags:\n      - \"Protocol\"\n      operationId: Decode\n      description: Obtain all data about an operation from an encoded string.  \n      requestBody:\n        content:\n          application/json:              \n            schema: \n              $ref: '#/components/schemas/decodeRequest'    \n        description: Decode request schema   \n        required: true              \n      responses:\n        '200':\n          description: Decode operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/decodeResponse'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'                                                                                                                                                                          \ncomponents:\n  schemas:\n    genericResponse:\n      $schema: 'http://json-schema.org/schema'\n      description: Generic Response Schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n      required:\n        - result\n      example:\n        result:\n          code: 20X\n          description: \"DLT - Operation successfully requested\"\n    genericError:\n      $schema: 'http://json-schema.org/schema'\n      description: Generic Response Schema\n      type: object\n      properties:\n        error:\n          description: \"Identification error code\"\n          type: string\n        internalError:\n          description: \"Hancock error code\"\n          type: string\n        message:\n          description: \"Hancock message\"\n          type: string\n        extendedMessage:\n          description: \"Detailed message\"\n          type: string\n      required:\n        - error\n        - internalError\n      example:\n        error: 400 - 500\n        internalError: \"HKAD5000X\"\n        message: \"Call Error\"\n        extendedMessage: \"Error: Description\"\n    smartContractListResponse:\n      $schema: 'http://json-schema.org/schema'\n      description: Registered Smart Contract Schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          list: smartcontract\n          type: array\n          items:\n            type: object\n            properties:\n              address:\n                description: \"smartcontract address\"\n                type: string\n              alias:\n                description: \"alias of smartcontract registered\"\n                type: string\n              abi:\n                description: \"abi of the smartcontract\"\n                type: array\n              abiname:\n                description: \"alias of the abi\"\n                type: string\n            required:\n              - address\n              - alias\n              - abi\n      required:\n        - result\n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          list:\n            address: \"0xcffffffffffffff000000000000000000000000\"\n            alias: \"smartcontract\"\n            abi: [{abi:[]}]\n            abiname: \"alias\"\n    smartContractResponse:\n      $schema: 'http://json-schema.org/schema'\n      description: Registered Smart Contract Schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          address:\n            description: \"smartcontract address\"\n            type: string\n          alias:\n            description: \"alias of smartcontract registered\"\n            type: string\n          abi:\n            description: \"abi of the smartcontract\"\n            type: array\n          abiname:\n            description: \"alias of the abi\"\n            type: string        \n          required:\n            - address\n            - alias\n            - abi     \n      required:\n        - result\n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          address: \"0xcffffffffffffff000000000000000000000000\"\n          alias: \"smartcontract\"\n          abi: [{abi:[]}]            \n          abiname: \"alias\"          \n    transactionDeployRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Deploy request schema to adapt the deploy order\n      type: object\n      properties:\n        method:\n          in: \"body\"\n          description: \"Name of the constructor method of the smartcontract\"\n          schema:\n            type: \"string\"\n        params:\n          in: \"body\"\n          description: \"Params to pass to the constructor of the smartcontract\"\n          schema:\n            type: \"array\"\n            items:\n              type: \"string\"\n        urlBase:\n          in: \"body\"\n          description: \"Url where are stored the abi and the bin of the smart contract to invoke\"\n          type: \"string\"\n        from:\n          in: \"body\"\n          description: \"Address of the owner\"\n          type: \"string\"    \n      required:\n        - method\n        - urlBase\n        - from\n      example:        \n        method: constructor\n        params: [\"0xcffffffffffffff000000000000000000000000\",\"2\"]\n        urlBase: \"http://storage/smartcontract\"\n        from: \"0xcffffffffffffff000000000000000000000000\"                           \n    transactionDeployResponse:            \n      $schema: 'http://json-schema.org/schema'\n      description: Created Smart Contract Response Schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          type: object\n          properties:\n            nonce:\n              description: \"Counter assigned to transaction\"\n              type: string\n            from:\n              description: \"address of the owner\"\n              type: string\n            data:\n              description: \"Smartcontract data encoded\"\n              type: string\n            gas:\n              description: \"Gas limit assigned\"\n              type: string\n            gasPrice:\n              description: \"Gas estimated assigned\"\n              type: string\n      required:\n        - result\n        - data      \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          from: \"0xcffffffffffffff000000000000000000000001\"\n          data: \"0x606060405260a060405190810160405280604060405190810160405280600781526020017f637265617465640000000000000000000000000000000000000000000000000081\"\n          gasPrice: \"0x3b9aca00\"\n          nonce: \"0x642\"\n          gas: \"0x5208\"         \n    transactionInvokeRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Invoke request schema to adapt the invoke order\n      type: object\n      properties:\n        method:\n          in: \"body\"\n          description: \"Method to invoke in the smart contract\"\n          required: true\n          schema:\n            type: \"string\"\n        params:\n          in: \"body\"\n          description: \"Params to pass to the method\"\n          required: false\n          schema:\n            type: \"array\"\n            items:\n              type: \"string\"\n        urlBase:\n          in: \"body\"\n          description: \"Url where are stored the abi and the bin of the smart contract to invoke\"\n          required: true\n          type: \"string\"\n        from:\n          in: \"body\"\n          description: \"Address of the owner\"\n          required: true\n          type: \"string\"     \n        to:\n          in: \"body\"\n          description: \"Address of the smart contract to invoke\"\n          required: true\n          type: \"string\"             \n      example:        \n        method: attest\n        params: [\"2\"]\n        urlBase: \"http://storage/smartcontract\"\n        from: \"0xcffffffffffffff000000000000000000000000\"    \n        to: \"0xcffffffffffffff000000000000000000000001\"                             \n    transactionInvokeResponse:            \n      $schema: 'http://json-schema.org/schema'\n      description: Invoked Smart Contract Response Schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          type: object\n          properties:\n            nonce:\n              description: \"Counter assigned to transaction\"\n              type: string\n            from:\n              description: \"address of the owner\"\n              type: string\n            data:\n              description: \"Smartcontract data encoded\"\n              type: string\n            gas:\n              description: \"Gas limit assigned\"\n              type: string\n            gasPrice:\n              description: \"Gas estimated assigned\"\n              type: string\n            to:\n              description: \"address of the smartcontract\"\n              type: string\n      required:\n        - result\n        - data       \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          to: \"0xcffffffffffffff000000000000000000000000\"\n          from: \"0xcffffffffffffff000000000000000000000001\"\n          data: \"transaction\"\n          gasPrice: \"0x3b9aca00\"\n          nonce: \"0x642\"\n          gas: \"0x5208\"        \n    transactionInvokeRegisterRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Invoke request schema to adapt the invoke order\n      type: object\n      properties:\n        method:\n          in: \"body\"\n          description: \"Method to invoke in the smart contract\"\n          required: true\n          schema:\n            type: \"string\"\n        params:\n          in: \"body\"\n          description: \"Params to pass to the method\"\n          required: false\n          schema:\n            type: \"array\"\n            items:\n              type: \"string\"\n        from:\n          in: \"body\"\n          description: \"Address of the owner\"\n          required: true\n          type: \"string\"             \n      example:        \n        method: attest\n        params: [\"2\"]\n        from: \"0xcffffffffffffff000000000000000000000000\"               \n    transactionInvokeAbiRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Invoke request schema to adapt the invoke order\n      type: object\n      properties:\n        method:\n          in: \"body\"\n          description: \"Method to invoke in the smart contract\"\n          required: true\n          schema:\n            type: \"string\"\n        action:\n          in: \"body\"\n          description: \"Kind of action (send , call)\"\n          required: false\n          schema:\n            type: string\n            enum: [send, call]\n        params:\n          in: \"body\"\n          description: \"Params to pass to the method\"\n          required: false\n          schema:\n            type: \"array\"\n            items:\n              type: \"string\"\n        abi:\n          in: \"body\"\n          description: Abi of the smartcontract \n          required: true\n          schema:\n            type: array    \n        from:\n          in: \"body\"\n          description: \"Address of the owner\"\n          required: true\n          type: \"string\"     \n        to:\n          in: \"body\"\n          description: \"Address of the smart contract to invoke\"\n          required: true\n          type: \"string\"             \n      example:        \n        method: attest\n        action: \"call\"\n        params: [\"2\"]\n        abi: [{abi:[]}]\n        from: \"0xcffffffffffffff000000000000000000000000\"    \n        to: \"0xcffffffffffffff000000000000000000000001\"  \n    transactionRegisterRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Invoke request schema to adapt the invoke order\n      type: object\n      properties:\n        abi:\n          in: \"body\"\n          description: Abi of the smartcontract \n          schema:\n            type: array    \n        alias:\n          in: \"body\"\n          description: \"Alias of the smartcontract\"\n          type: \"string\"     \n        adddres:\n          in: \"body\"\n          description: \"Address of the smartcontract\"\n          type: \"string\"  \n      required:\n        - abi\n        - adddres\n        - alias           \n      example:        \n        abi: [{abi:[]}]\n        alias: \"name\"\n        adddres: \"0xcffffffffffffff000000000000000000000000\"         \n    transferRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Transfer request schema\n      type: object\n      properties:\n        from:\n          in: \"body\"\n          description: \"Address of the sender in the DLT\"\n          schema:\n            type: \"string\"\n        to:\n          in: \"body\"\n          description: \"Address of the receiver in the DLT\"\n          schema:\n            type: \"string\"               \n        value:\n          in: \"body\"\n          description: \"Value of Weis to be transferred\"\n          schema:\n            type: \"string\"\n        data:\n          in: \"body\"\n          description: \"Information about the transfer\"\n          required: false\n          schema:\n            type: \"string\"             \n      required:\n        - from\n        - to\n        - value  \n      example: \n        to: \"0xcffffffffffffff000000000000000000000000\"\n        from: \"0xcffffffffffffff000000000000000000000001\"\n        data: \"transaction\"\n        value: \"2\"                         \n    transferResponse:            \n      $schema: 'http://json-schema.org/schema'\n      description: Transfer response schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          type: object\n          properties:\n            nonce:\n              description: \"Nonce assigned to transaction\"\n              type: string\n            from:\n              description: \"Address of the sender in the DLT\"\n              type: string\n            gas:\n              description: \"Gas value of transaction\"\n              type: string\n            to:\n              description: \"Address of the receiver in the DLT\"\n              type: string\n            gasPrice:\n              description: \"Gas estimated\"\n              type: string\n            value:\n              description: \"Value of Weis to be transferred\"\n              type: string\n            data:\n              description: \"Information about the transfer\"\n              type: string              \n      required:\n        - result\n        - data  \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          to: \"0xcffffffffffffff000000000000000000000000\"\n          from: \"0xcffffffffffffff000000000000000000000001\"\n          data: \"transaction\"\n          value: \"2\"\n          gasPrice: \"0x3b9aca00\"\n          nonce: \"0x642\"\n          gas: \"0x5208\"          \n    balanceResponse:\n      $schema: 'http://json-schema.org/schema'\n      description: Get balance Response Schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          balance:\n            description: \"Balance in minimum unit of the cryptocurrency\"\n            type: string\n      required:\n        - result\n        - data \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          balance: \"2\"        \n    balancetokenResponse:\n      $schema: 'http://json-schema.org/schema'\n      description: Get balance token Response Schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          balance:\n            description: \"Token balance for account\"\n            type: string\n      required:\n        - result\n        - data  \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          balance: \"2\"                 \n    metadataResponse:            \n      $schema: 'http://json-schema.org/schema'\n      description: Metadata info Schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          type: object\n          properties:\n            name:\n              description: \"Token name\"\n              type: string\n            symbol:\n              description: \"Symbol of token\"\n              type: string\n            decimals:\n              description: \"Decimals defined in smartcontract\"\n              type: string\n            totalSupply:\n              description: \"Supply total defined in smartcontract\"\n              type: string\n      required:\n        - result\n        - data     \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          name: \"Token name\"                 \n          symbol: \"TKN\"\n          decimals: \"0\"\n          totalSupply: \"1000\"\n    transferTokenRegister:            \n      $schema: 'http://json-schema.org/schema'\n      description: Token request schema\n      type: object\n      properties:\n        address:\n          in: \"body\"\n          description: \"Address of the contract\"\n          schema:\n            type: \"string\"\n        alias:\n          in: \"body\"\n          description: \"Alias of the contract\"\n          schema:\n            type: \"string\"                       \n      required:\n        - address\n        - alias\n      example: \n        address: \"0xcffffffffffffff000000000000000000000000\"\n        alias: \"TKN\" \n    transferTokenRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Token request schema\n      type: object\n      properties:\n        from:\n          in: \"body\"\n          description: \"Address of the sender in the DLT\"\n          schema:\n            type: \"string\"\n        to:\n          in: \"body\"\n          description: \"Address of the receiver in the DLT\"\n          schema:\n            type: \"string\"               \n        value:\n          in: \"body\"\n          description: \"Value of token to be transfered\"\n          schema:\n            type: \"string\"           \n      required:\n        - from\n        - to\n        - value  \n      example: \n        to: \"0xcffffffffffffff000000000000000000000000\"\n        from: \"0xcffffffffffffff000000000000000000000001\"\n        value: \"2\"               \n    transferTokenResponse:            \n      $schema: 'http://json-schema.org/schema'\n      description: Token response schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          type: object\n          properties:\n            nonce:\n              description: \"Nonce assigned to transaction\"\n              type: string\n            from:\n              description: \"Address of the sender in the DLT\"\n              type: string\n            gas:\n              description: \"Gas value of transaction\"\n              type: string\n            to:\n              description: \"Address of the receiver in the DLT\"\n              type: string\n            gasPrice:\n              description: \"Gas estimated\"\n              type: string\n            data:\n              description: \"Information about the transfer\"\n              type: string           \n      required:\n        - result\n        - data     \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          to: \"0xcffffffffffffff000000000000000000000000\"\n          from: \"0xcffffffffffffff000000000000000000000001\"\n          data: \"0xa9059cbb000000000000000000000000de8e772f0350e992ddef81bf8f51d94a8ea9216d0000000000000000000000000000000000000000000000000000000000000001\"\n          gasPrice: \"0x3b9aca00\"\n          nonce: \"0x642\"\n          gas: \"0x5208\"  \n    transferfromTokenRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Token transferFrom request schema\n      type: object\n      properties:\n        from:\n          in: \"body\"\n          description: \"Address of the sender in the DLT\"\n          schema:\n            type: \"string\"\n        sender:\n          in: \"body\"\n          description: \"Address with enough allowance in the DLT\"\n          schema:\n            type: \"string\"              \n        to:\n          in: \"body\"\n          description: \"Address of the receiver in the DLT\"\n          schema:\n            type: \"string\"               \n        value:\n          in: \"body\"\n          description: \"Value of token to be transfered\"\n          schema:\n            type: \"string\"           \n      required:\n        - from\n        - to\n        - sender\n        - value  \n      example: \n        to: \"0xcffffffffffffff000000000000000000000000\"\n        from: \"0xcffffffffffffff000000000000000000000001\"\n        sender: \"0xcffffffffffffff000000000000000000000002\"\n        value: \"2\"               \n    approveTokenRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Allowance request schema\n      type: object\n      properties:\n        from:\n          in: \"body\"\n          description: \"Address of the receiver in the DLT\"\n          schema:\n            type: \"string\"\n        spender:\n          in: \"body\"\n          description: \"Address of the spender in the DLT\"\n          schema:\n            type: \"string\"               \n        value:\n          in: \"body\"\n          description: \"Value of token to be transfered\"\n          schema:\n            type: \"string\"        \n      required:\n        - from\n        - spender\n        - value  \n      example: \n        to: \"0xcffffffffffffff000000000000000000000000\"\n        spender: \"0xcffffffffffffff000000000000000000000001\"\n        value: \"2\"              \n    allowanceTokenRequest:            \n      $schema: 'http://json-schema.org/schema'\n      description: Allowance request schema\n      type: object\n      properties:\n        from:\n          in: \"body\"\n          description: \"Address of the receiver in the DLT\"\n          schema:\n            type: \"string\"\n        spender:\n          in: \"body\"\n          description: \"Address of the spender in the DLT\"\n          schema:\n            type: \"string\"               \n        tokenOwner:\n          in: \"body\"\n          description: \"Address of the owner in the DLT\"\n          schema:\n            type: \"string\"           \n      required:\n        - from\n        - spender\n        - tokenOwner  \n      example: \n        to: \"0xcffffffffffffff000000000000000000000000\"\n        spender: \"0xcffffffffffffff000000000000000000000001\"\n        tokenOwner: \"0xcffffffffffffff000000000000000000000002\"                       \n    allowanceTokenResponse:            \n      $schema: 'http://json-schema.org/schema'\n      description: Allowance response schema\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          description: Amount of tokens approved\n          type: string       \n      required:\n        - result\n        - data     \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          data: \"2\"    \n    decodeRequest:\n      $schema: 'http://json-schema.org/schema'\n      description: Protocol Decode Param Model Request\n      type: object\n      properties:\n        code:\n          description: \"Encode string with data\"\n          type: string\n      required:\n      - code   \n      example: \n        code: \"hancock://qr?code=%7B%22action%22%3A%22transfer%22%2C%22body%22%3A%7B%22to%22%3A%22006c0a14f7561898b9ddc0c57652a53b2c6665443e%22%2C%22value%22%3A%221%22%2C%22data%22%3A%22concept%22%7D%2C%22dlt%22%3A%22ethereum%22%7D\"            \n    encodeResponse:\n      $schema: 'http://json-schema.org/schema'\n      description: Protocol Encode Param Model Response\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          type: object\n          properties:\n            qrEncode:\n              description: \"Encode string with data\"\n              type: string\n          required:\n            - qrEncode\n      required:\n        - result      \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          qrEncode: \"hancock://qr?code=%7B%22action%22%3A%22transfer%22%2C%22body%22%3A%7B%22to%22%3A%22006c0a14f7561898b9ddc0c57652a53b2c6665443e%22%2C%22value%22%3A%221%22%2C%22data%22%3A%22concept%22%7D%2C%22dlt%22%3A%22ethereum%22%7D\"            \n    encodeRequest:          \n      $schema: 'http://json-schema.org/schema'\n      description: Protocol Encode Param Model Request\n      type: object\n      properties:\n        action:\n          description: \"Action encoded\"\n          type: string\n          enum:\n            - transfer\n        body:\n          type: object\n          properties:\n            to:\n              description: \"address\"\n              type: string\n            value:\n              description: \"value\"\n              type: string\n            data:\n              description: \"data about transfer\"\n              type: string\n        dlt:\n          description: \"dlt\"\n          type: string\n          enum:\n            - ethereum\n      required:\n        - action\n        - body\n        - dlt           \n      example: \n        action: \"transfer\"\n        body:\n          to: \"0xcffffffffffffff000000000000000000000000\"\n          value: \"2\"\n          data: \"concept\"\n        dlt: \"Ethereum\"             \n    decodeResponse:          \n      $schema: 'http://json-schema.org/schema'\n      description: Protocol Decode Param Model Response\n      type: object\n      properties:\n        result:\n          type: object\n          properties:\n            code:\n              description: \"Api code\"\n              type: string\n            description:\n              description: \"Description about the api code\"\n              type: string\n          required:\n            - code\n            - description\n        data:\n          type: object\n          properties:\n            action:\n              description: \"Action encoded\"\n              type: string\n              enum:\n                - transfer\n            body:\n              type: object\n              properties:\n                to:\n                  description: \"address\"\n                  type: string\n                value:\n                  description: \"value\"\n                  type: string\n                data:\n                  description: \"data about transfer\"\n                  type: string\n            dlt:\n              description: \"dlt\"\n              type: string\n              enum:\n                - ethereum\n          required:\n            - action\n            - body\n            - dlt\n      required:\n        - result              \n      example: \n        result:\n          code: 200\n          description: \"DLT - Operation successfully requested\"\n        data:\n          action: \"transfer\"\n          body:\n            to: \"0xcffffffffffffff000000000000000000000000\"\n            value: \"2\"\n            data: \"concept\"\n          dlt: \"Ethereum\"            \n                    \n",
			"canonicalURL": "/github.com/BBVA/hancock-dlt-adapter@dbdbdda475a3355f24594f38d18e4924e486268a/-/blob/raml/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/BBVA/hancock-dlt-adapter/blob/dbdbdda475a3355f24594f38d18e4924e486268a/raml/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 944:18: did not find expected ',' or '}'"
}