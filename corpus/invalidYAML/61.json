{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zurichat/zc_plugin_company_goals"
		},
		"file": {
			"name": "documentation.yaml",
			"path": "docs/documentation.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: Goal Plugin API\n  description: This list all the api's for goal plugin.\n  version: 0.0.1\nservers:\n  - url: https://goals.zuri.chat/api/v1\n    description: This point to Goals Plugin (Production server)\n  - url: http://localhost:4000/api/v1\n    description: This point to Goals Plugin (Development server)\n\ncomponents:\n  schemas:\n    # Goasl schema\n    Goals:\n      type: object\n      properties:\n        status:\n          type: string\n          example: 200\n        message:\n          type: string\n          example: 'success'\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleGoal'\n    # Single goal schema\n    SingleGoal:\n      type: object\n      properties:\n        _id:\n          type: string\n          example: '613ddbd3e4010959c8dc0c5e'\n        category:\n          type: string\n          example: '#backend'\n        createdBy:\n          type: string\n          example: 'Depeju'\n        description:\n          type: string\n          example: 'test goal'\n        start_date:\n          type: date\n          example: '2020-10-02'\n        due_date:\n          type: date\n          example: '2020-10-02'\n        goal_type:\n          type: string\n          example: 'annual'\n        goal_name:\n          type: string\n          example: 'public room'\n        isComplete:\n          type: boolean\n          example: true\n        isExpired:\n          type: boolean\n          example: true\n        room_id:\n          type: string\n          example: 'b66e5fe5-2c66-413c-b2fc-a38d6ab76330'\n    #Target goals schema\n    TargetGoal:\n      type: object\n      properties:\n        _id:\n          type: string\n          example: '613ddbd3e4010959c8dc0c5e'\n        targetType:\n          type: numbers\n            example: 1,10,1000\n          type: logical\n            example: done or undone\n        mileStones:\n          type: array\n          example: [{1,'finish this'},{2,'finish this next year'}]\n  responses:\n    BadRequest:\n      description: 'Bad request'\n    NotFound:\n      description: 'Not found'\n    Unauthorized:\n      description: 'Unauthorized'\n    Success:\n      description: 'success'\n    ServerError:\n      description: 'Internal server error'\n    201GoalSuccess:\n      description: Successfully created.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SingleGoal'\n    200GoalSuccess:\n      description: Success\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Goals'\npaths:\n  # Sidebar Definition start from here\n  /sidebar:\n    get:\n      tags:\n        - Sidebar\n      summary: Get user sidebar.\n      description: This endpoint get all the user sidebar for a particular organization.\n      parameters:\n        - name: org\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to get all user sidebar.\n          example: 200\n        - name: user\n          in: query\n          schema:\n            type: string\n          description: Provide a user id to get all user sidebar.\n          example: '613fa4a56173056af01b4b26'\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  # Goals resources definition start from here\n  /goals:\n    post:\n      tags:\n        - Goals\n      summary: Create a brand new goals.\n      description: This endpoint a new goals for a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to create a new goal.\n          example: '6145d099285e4a184020742e'\n      requestBody:\n        description: Provide all the required fields to create a new goal.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                category:\n                  type: string\n                  example: '#backend'\n                description:\n                  type: string\n                  example: 'test goal'\n                start_date:\n                  type: date\n                  example: '2020-10-02'\n                due_date:\n                  type: date\n                  example: '2020-10-02'\n                goal_type:\n                  type: string\n                  example: 'annual'\n                goal_name:\n                  type: string\n                  example: 'public room'\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    get:\n      tags:\n        - Goals\n      summary: Returns a list of all goals.\n      description: This endpoint list all the goals for a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n            example: '6145d099285e4a184020742e'\n          description: Provide an org_id to fetch for all your goals.\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /goals/single:\n    get:\n      tags:\n        - Goals\n      summary: Returns a single goals.\n      description: This endpoint return a single goal for a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to fetch a single goal.\n          example: 200\n        - name: room_id\n          in: query\n          schema:\n            type: string\n          description: Provide a room_id to fetch a single goal.\n          example: '42174f6c-bac3-4526-b71d-daba1cd2a056'\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /goals/update:\n    put:\n      tags:\n        - Goals\n      summary: Update a single goals.\n      description: This endpoint updates a single goal for a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to fetch a single goal.\n        - name: room_id\n          in: query\n          schema:\n            type: string\n          description: Provide a room_id to fetch a single goal.\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /goals/delete:\n    delete:\n      tags:\n        - Goals\n      summary: Delete a single goals.\n      description: This endpoint delete a single goal for a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to delete a single goal.\n          example: 200\n        - name: goal_id\n          in: query\n          schema:\n            type: string\n          description: Provide a goal_id to delete a single goal.\n          example: '613fa4a56173056af01b4b26'\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /goals/assign:\n    post:\n      tags:\n        - Goals\n      summary: Assign a single goals.\n      description: This endpoint assign a single goal to a user from a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to assign a single goal.\n          example: 200\n        - name: room_id\n          in: query\n          schema:\n            type: string\n          description: Provide a room_id to assign a single goal.\n          example: '613fa4a56173056af01b4b26'\n        - name: user_id\n          in: query\n          schema:\n            type: string\n          description: Provide a user_id to assign a single goal.\n          example: '613fa4a56173056af01b4b26'\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /goals/like:\n    get:\n      tags:\n        - Goals\n      summary: Like a single goals.\n      description: This endpoint assign a single goal to a user from a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to like a single goal.\n          example: 200\n        - name: goal_id\n          in: query\n          schema:\n            type: string\n          description: Provide a goal_id to like a single goal.\n          example: '613fa4a56173056af01b4b26'\n        - name: user_id\n          in: query\n          schema:\n            type: string\n          description: Provide a user_id to like a single goal.\n          example: '613fa4a56173056af01b4b26'\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /goals/goallikes:\n    get:\n      tags:\n        - Goals\n      summary: Get all goals likes.\n      description: This endpoint get all the like goals for a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to get all like goals.\n          example: 200\n        - name: goal_id\n          in: query\n          schema:\n            type: string\n          description: Provide a goal_id to get all like goals.\n          example: '613fa4a56173056af01b4b26'\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /goals/userlike:\n    get:\n      tags:\n        - Goals\n      summary: Get all user like goals.\n      description: This endpoint get all the goals a user has liked for a particular organization.\n      parameters:\n        - name: org_id\n          in: query\n          schema:\n            type: string\n          description: Provide an org_id to get all user like goals.\n          example: 200\n        - name: goal_id\n          in: query\n          schema:\n            type: string\n          description: Provide a goal_id to get all user like goals.\n          example: '613fa4a56173056af01b4b26'\n        - name: user_id\n          in: query\n          schema:\n            type: string\n          description: Provide a user_id to get all user like goals.\n          example: '613fa4a56173056af01b4b26'\n      responses:\n        '200':\n          $ref: '#/components/responses/200GoalSuccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n"
		}
	},
	"Error": "yaml: line 74: mapping values are not allowed in this context"
}