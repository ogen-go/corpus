{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NetwerkExamineringDigitalisering/NED-OOAPI"
		},
		"file": {
			"name": "ooapiv5_MBO.yaml",
			"size": 0,
			"path": "specification/ooapiv5_MBO.yaml",
			"byteSize": 191056,
			"content": "openapi: 3.0.3\ninfo:\n  version: 5.0.0\n  title: Open Education API\n  description: \"OpenAPI (fka Swagger) specification for the Open Education API.\\n\u003cbr/\u003e\\nNOTE:This is a subset of the OOAPI that is used in the \\\"MBO-Toetsafname\\\" project (sponsored by mbo-digitaal in the netherlands) \\n\u003cbr/\u003e\\n\u003cfigure\u003e\\n\\t\u003ca target=\\\"_blank\\\" href=\\\"OOAPIv5_model.png\\\"\u003e\\n  \u003cimg src=\\\"OOAPIv5_model.png\\\" alt=\\\"OOAPI information model that feeds OOAPI specification\\\" width=\\\"70%\\\" class=\\\"img-responsive\\\"\u003e\\n  \u003c/a\u003e\\n  \u003cfigcaption\u003e OOAPI information model that feeds OOAPI specification (click to enlage)\u003c/figcaption\u003e\\n\u003c/figure\u003e\\n\\nThe model provides an overview of how the objects on which the API is specified are related. The overarching concept educations is not found in the in the end points of the API. The smaller concepts of programOffering, courseOffering and conceptOffering are all found in the offering endpoint. The different types of association can all be found in the association endpoint.\\n\\nThe original file for this model can be found \u003ca target=\\\"_blank\\\" href=\\\"OOAPIv5_model_v0.4.drawio\\\"\u003ehere\u003c/a\u003e\\n\\nThe program relations object is not found as a separate endpoint but relations between programs can be found within the program endpoint by expanding that endpoint.\\n\\nInformation about earlier meetings and presentations can be found \u003ca target=\\\"_blank\\\" href=\\\"https://github.com/open-education-api/notulen\\\"\u003ehere\u003c/a\u003e\\n\\nInformation on the EDU-API model that was also used for this api is shown \u003ca target=\\\"_blank\\\" href=\\\"eduapi.png\\\"\u003ehere\u003c/a\u003e\\n\"\n  x-logo:\n    url: ../logo.png\nservers:\n  - url: http://demo01.eduapi.nl/v5\n    description: SURF demo implementation\ntags:\n  - name: associations\n    description: |\n      The associations API provides information about the association between an offering and a person (e.g. students, lecturers, etc).\n      Associations can be posted between institutions This requires information details on the offering and the persons.\n      To allow for this information a complete person object and offering object can be part of the API.\n      The structure is explained in the following model:\n      \u003ctable\u003e\n        \u003ctr\u003e\n         \u003ctd\u003e\u003c/td\u003e\n         \u003ctd colspan=3 align=center\u003eoffering\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n         \u003ctd rowspan=3\u003estudent\u003c/td\u003e\n         \u003ctd\u003e\u003c/td\u003e\n         \u003c!-- \u003ctd\u003einternal\u003c/td\u003e\n         --\u003e\n         \u003ctd\u003eexternal\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n         \u003ctd\u003einternal\u003c/td\u003e\n         \u003c!-- \u003ctd\u003ePOST \u003ca href=\"#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post\"\u003e/offerings/{offeringId}/associations/me\u003c/a\u003e local enrollment based on selected offering\n          This call will allow for a local student using his .wellknown credentials to enroll for the offering identified by the offeringId\n          \u003cbr\u003eAlternatively the association can also be created through POST \u003ca href=\"#tag/associations/paths/~1associations~1me/post\"\u003e/associations/me\u003c/a\u003e\n         \u003c/td\u003e\n         --\u003e\n         \u003ctd\u003ePOST \u003ca href=\"#tag/associations/paths/~1associations~1external~1me/post\"\u003e/associations/external/me\u003c/a\u003e gets student details from .wellknown at home institution. It passes offering details (provided by external institution) to the home institution so the home institution can create a placeholder for the offering and its results.\n         \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n         \u003ctd\u003eexternal\u003c/td\u003e\n          \u003c!--\n          \u003ctd\u003e\n          This method is not yet implemented it requires full student details and offering details. This would mean the\n          OOAPI message would contain more than one resource in the message. At the moment the student mobility project is looking into\n          a sollution.\n          \u003cbr\u003e Alternatively it could be achieved through using two calls:\n          \u003cul\u003e\n           \u003cli\u003ecreate student with POST \u003ca href=\"#tag/persons/paths/~1persons~1{personId}/post\"\u003e/persons\u003c/a\u003e\u003c/li\u003e\n           \u003cli\u003e\u003ca href=\"#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post\"\u003e/offerings/{offeringId}/associations/me\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n          for the enrollment\n         \u003c/td\u003e\n          --\u003e\n         \u003ctd\u003eno support needed\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      Direct update of current information: \u003ca href=\"#tag/associations/paths/~1associations~1{associationId}/patch\"\u003e PATCH /associations/{associationId}\u003c/a\u003e\n      This call is currently limited to passing results and a remote state. For future use other association resource information could be passed.\n      More information on the support for student mobility can be found\n      \u003ca href=\"https://swimlanes.io/d/s5mfpj7Si\"\u003ehere\u003c/a\u003e\n  - name: components\n    description: The components API provides information about components being part of parent courses.\n  - name: offerings\n    description: The offerings API provides information about offerings which have a global timeframe, e.g. a period to which students can enroll.\n  - name: persons\n    description: The persons API provides information about persons related to an organization.\n  - name: component_model\n    x-displayName: Component\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Component\" /\u003e\n  - name: component_offering_model\n    x-displayName: ComponentOffering\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/ComponentOffering\" /\u003e\n  - name: association_model\n    x-displayName: Association\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Association\" /\u003e\n  - name: person_model\n    x-displayName: Person\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Person\" /\u003e\nx-tagGroups:\n  - name: Requests and responses\n    tags:\n      - associations\n      - components\n      - offerings\n  - name: Models\n    tags:\n      - association_model\n      - component_model\n      - component_offering_model\n      - person_model\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n    openId:\n      type: openIdConnect\n      openIdConnectUrl: https://example.nl/.well-known/openid-configuration\n    oAuthFlows:\n      type: oauth2\n      description: |\n        This API uses oauth Cleint credentials for server to server #/components/schemas/EducationSpecification\n      flows:\n        clientCredentials:\n          tokenUrl: https://example.nl/oauth2/authorize\n          scopes:\n            test-admin-flow: functions needed to allow the transfer of enrollments, persons and offerings between systems in MBO\n  schemas:\n    PersonId:\n      type: object\n      properties: \u0026ref_14\n        personId:\n          type: string\n          description: Unique id of this person\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n      required: \u0026ref_15\n        - personId\n    codeType:\n      type: string\n      description: |\n        The code/identifier type. \n\n        This is an *extensible enumeration*. Use `x-` to prefix custom values\n\n        The predefined values are:\n          - `brin`: The registration number for a Dutch educational institution that is issued by the Dutch Ministry of Education, Culture and Science\n          - `crohoCreboCode`: programs with a CREBO and CROHO number are accredited by the Dutch Ministry of Education, Culture and Science (OCW)\n          - `programCode`: Identifier for the program (collection of courses)\n          - `componentCode`: The code for a component (part of a course)\n          - `offeringCode`: The code to identify a specific offering (program, course or component offering)\n          - `organizationId`: The identifier for the organization\n          - `buildingId`: The number or code to identify a building\n          - `bagId`: The identification of a building as it is known in the Dutch Building Administration (BAG)\n          - `roomCode`: The code for a room\n          - `systemId`: Identifier assigned to an entity in context of a specific system\n          - `productId`: Identifier assigned to a specific product\n          - `nationalIdentityNumber`: Identifier assigned by the governement of the person. e.g. a social security number in the USA\n          - `studentNumber`: Identifier for the student\n          - `studielinkNumber`: Identifier for the person as determined by Studielink\n          - `esi`: European Student Identifier\n          - `userName`: The name of a user\n          - `accountId`: Identifier assigned to a specific account\n          - `emailAdress`: An email address\n          - `groupCode`: The identifier for a group (of persons)\n          - `isbn`: International Standard Book Number that serve as product identifiers for Books\n          - `issn`: International Standard Book Number that serve as product identifiers for periodicals\n          - `orcId`: Open Researcher and Contributor ID\n          - `uuid`: A universally unique identifier\n          - `schacHome`: Home organization using the domain name of the organization\n          - `identifier`: Generic Identifier\n          - `eckid`: ID used in the education content chain\n      x-ooapi-extensible-enum: \u0026ref_0\n        - brin\n        - crohoCreboCode\n        - programCode\n        - componentCode\n        - offeringCode\n        - organizationId\n        - buildingId\n        - bagId\n        - roomCode\n        - systemId\n        - productId\n        - nationalIdentityNumber\n        - studentNumber\n        - studielinkNumber\n        - esi\n        - userName\n        - accountId\n        - emailAdress\n        - groupCode\n        - isbn\n        - issn\n        - orcId\n        - uuid\n        - schacHome\n        - identifier\n        - eckid\n      example: identifier\n    IdentifierEntry:\n      type: object\n      properties: \u0026ref_4\n        codeType:\n          type: string\n          description: |\n            The code/identifier type. \n\n            This is an *extensible enumeration*. Use `x-` to prefix custom values\n\n            The predefined values are:\n              - `brin`: The registration number for a Dutch educational institution that is issued by the Dutch Ministry of Education, Culture and Science\n              - `crohoCreboCode`: programs with a CREBO and CROHO number are accredited by the Dutch Ministry of Education, Culture and Science (OCW)\n              - `programCode`: Identifier for the program (collection of courses)\n              - `componentCode`: The code for a component (part of a course)\n              - `offeringCode`: The code to identify a specific offering (program, course or component offering)\n              - `organizationId`: The identifier for the organization\n              - `buildingId`: The number or code to identify a building\n              - `bagId`: The identification of a building as it is known in the Dutch Building Administration (BAG)\n              - `roomCode`: The code for a room\n              - `systemId`: Identifier assigned to an entity in context of a specific system\n              - `productId`: Identifier assigned to a specific product\n              - `nationalIdentityNumber`: Identifier assigned by the governement of the person. e.g. a social security number in the USA\n              - `studentNumber`: Identifier for the student\n              - `studielinkNumber`: Identifier for the person as determined by Studielink\n              - `esi`: European Student Identifier\n              - `userName`: The name of a user\n              - `accountId`: Identifier assigned to a specific account\n              - `emailAdress`: An email address\n              - `groupCode`: The identifier for a group (of persons)\n              - `isbn`: International Standard Book Number that serve as product identifiers for Books\n              - `issn`: International Standard Book Number that serve as product identifiers for periodicals\n              - `orcId`: Open Researcher and Contributor ID\n              - `uuid`: A universally unique identifier\n              - `schacHome`: Home organization using the domain name of the organization\n              - `identifier`: Generic Identifier\n              - `eckid`: ID used in the education content chain\n          x-ooapi-extensible-enum: *ref_0\n          example: identifier\n        code:\n          description: Human readable value for the code/identifier\n          type: string\n      required: \u0026ref_5\n        - codeType\n        - code\n      additionalProperties: false\n      example: \u0026ref_11\n        codeType: identifier\n        code: 1234qwe12\n    personAffiliations:\n      type: array\n      description: |\n        The affiliations of this person, the relations a person has with the organization providing this endpoint\n        - student: student\n        - employee: medewerker\n        - guest: gast\n      items: \u0026ref_6\n        type: string\n        enum:\n          - student\n          - employee\n          - guest\n        example: student\n    gender:\n      type: string\n      description: The gender of this person\n      enum: \u0026ref_7\n        - M\n        - F\n        - U\n        - X\n      example: F\n    addressType:\n      type: string\n      description: |\n        Address type\n        - postal: post\n        - visit: bezoek\n        - deliveries: bezorg\n        - billing: factuur\n        - teaching: the address where education takes place\n      enum: \u0026ref_1\n        - postal\n        - visit\n        - deliveries\n        - billing\n        - teaching\n    LanguageTypedString:\n      type: object\n      description: A String with an associated language code.\n      properties: \u0026ref_2\n        language:\n          description: The language used in the described entity. A string formatted according to RFC3066.\n          type: string\n          pattern: ^[a-z]{2,4}(-[A-Z][a-z]{3})?(-([A-Z]{2}|[0-9]{3}))?$\n        value:\n          description: String to describe the entity.\n          type: string\n      example: \u0026ref_3\n        language: en-GB\n        value: program that is a place holder for all courses that are made available for student mobility\n    Ext:\n      type: object\n      description: Object for additional non-standard attributes\n    Address:\n      type: object\n      description: The full street address\n      required: \u0026ref_8\n        - addressType\n      properties: \u0026ref_9\n        addressType:\n          type: string\n          description: |\n            Address type\n            - postal: post\n            - visit: bezoek\n            - deliveries: bezorg\n            - billing: factuur\n            - teaching: the address where education takes place\n          enum: *ref_1\n        street:\n          type: string\n          description: The street name\n          example: Moreelsepark\n        streetNumber:\n          type: string\n          description: The street number\n          example: '48'\n        additional:\n          type: array\n          description: Further details like building name, suite, apartment number, etc.\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: On the other side of the road\n        postalCode:\n          type: string\n          description: Postal code\n          example: 3511 EP\n        city:\n          type: string\n          description: name of the city / locality\n          example: Utrecht\n        countryCode:\n          type: string\n          description: the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n          example: NL\n        geolocation:\n          type: object\n          description: Geolocation of the entrance of this address (WGS84 coordinate reference system)\n          required:\n            - latitude\n            - longitude\n          properties:\n            latitude:\n              type: number\n              format: double\n              example: 52.089123\n            longitude:\n              type: number\n              format: double\n              example: 5.113337\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    ICERelationType:\n      type: string\n      description: Type of relation between person and In Case of Emergency contact\n      enum: \u0026ref_10\n        - partner\n        - parent\n        - other\n      example: partner\n    Consumer:\n      type: object\n      description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n      required: \u0026ref_12\n        - consumerKey\n      properties: \u0026ref_13\n        consumerKey:\n          description: The key of the consumer (destination) for which this information is intended. See the [consumer registry](https://open-education-api.github.io/specification/#/consumers) for more information.\n          type: string\n      additionalProperties: true\n    PersonProperties:\n      type: object\n      description: A person that has a relationship with this institution\n      required: \u0026ref_16\n        - givenName\n        - surname\n        - displayName\n        - affiliations\n        - mail\n        - primaryCode\n        - activeEnrollment\n      properties: \u0026ref_17\n        primaryCode:\n          description: The primary human readable identifier for the person. This is often the source identifier as defined by the institution.\n          example:\n            codeType: studentNumber\n            code: 0\n          readOnly: true\n          type: object\n          properties: *ref_4\n          required: *ref_5\n          additionalProperties: false\n        givenName:\n          type: string\n          description: The first name of this person\n          maxLength: 256\n          example: Maartje\n        surnamePrefix:\n          type: string\n          description: The prefix of the family name of this person\n          example: van\n        surname:\n          type: string\n          description: The family name of this person\n          maxLength: 256\n          example: Damme\n        displayName:\n          type: string\n          description: The name of this person which will be displayed\n          maxLength: 256\n          example: Maartje van Damme\n        initials:\n          type: string\n          description: The initials of this person\n          example: MCW\n        activeEnrollment:\n          type: boolean\n          description: Whether this person has an active enrollment.\n          example: false\n        dateOfBirth:\n          type: string\n          description: The date of birth of this person, RFC3339 (full-date)\n          format: date\n          example: '2003-09-30'\n        cityOfBirth:\n          type: string\n          description: The city of birth of this person\n          example: Utrecht\n        countryOfBirth:\n          type: string\n          description: The country of birth of this person the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n          example: NL\n        nationality:\n          type: string\n          description: The nationality of this person the nationality according to https://gist.github.com/zspine/2365808\n          example: Dutch\n        dateOfNationality:\n          type: string\n          description: The date of nationality of this person, RFC3339 (full-date)\n          format: date\n          example: '2003-09-30'\n        affiliations:\n          type: array\n          description: |\n            The affiliations of this person, the relations a person has with the organization providing this endpoint\n            - student: student\n            - employee: medewerker\n            - guest: gast\n          items: *ref_6\n        mail:\n          type: string\n          description: The primary e-mailaddress of this person\n          format: email\n          maxLength: 256\n          example: vandamme.mcw@universiteitvanharderwijk.nl\n        secondaryMail:\n          type: string\n          description: The secondary e-mailaddress of this person\n          format: email\n          maxLength: 256\n          example: poekie@xyz.nl\n        telephoneNumber:\n          type: string\n          description: The telephone number of this person\n          maxLength: 256\n          example: +31 123 456 789\n        mobileNumber:\n          type: string\n          description: The mobile number of this person\n          maxLength: 256\n          example: +31 612 345 678\n        photoSocial:\n          type: string\n          description: The url of the informal picture of this person\n          format: uri\n          maxLength: 2048\n          example: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Placeholder_female_superhero_c.png/203px-Placeholder_female_superhero_c.png\n        photoOfficial:\n          type: string\n          description: The url of the official picture of this person\n          format: uri\n          maxLength: 2048\n          example: https://upload.wikimedia.org/wikipedia/commons/6/66/Johannes_Vermeer_%281632-1675%29_-_The_Girl_With_The_Pearl_Earring_%281665%29.jpg\n        gender:\n          type: string\n          description: The gender of this person\n          enum: *ref_7\n          example: F\n        titlePrefix:\n          type: string\n          description: A title prefix to be used for this person\n          example: drs\n        titleSuffix:\n          type: string\n          description: A title suffix to be used for this person\n          example: BSc\n        office:\n          type: string\n          description: The name of the office where this person is located\n        address:\n          type: object\n          description: The full street address\n          required: *ref_8\n          properties: *ref_9\n        ICEName:\n          type: string\n          description: Full name of In Case of Emergency contact\n          maxLength: 256\n          example: Janne\n        ICEPhoneNumber:\n          type: string\n          description: Phone number of In Case of Emergency contact\n          maxLength: 256\n          example: +31 623 456 789\n        ICERelation:\n          type: string\n          description: Type of relation between person and In Case of Emergency contact\n          enum: *ref_10\n          example: partner\n        languageOfChoice:\n          type: array\n          description: The language(s) of choice for this person, RFC3066\n          items:\n            type: string\n            example: nl-NL\n        otherCodes:\n          type: array\n          description: An array of additional human readable codes/identifiers for the entity being described.\n          items:\n            type: object\n            properties: *ref_4\n            required: *ref_5\n            additionalProperties: false\n            example: *ref_11\n          example:\n            - codeType: nationalIdentityNumber\n              code: '00000'\n        consumers:\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          type: array\n          items:\n            type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          example: \u0026ref_30\n            - consumerKey: x-test-consumer\n              additional: custom\n              attributes: here\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    Person:\n      allOf: \u0026ref_41\n        - type: object\n          properties: *ref_14\n          required: *ref_15\n        - type: object\n          description: A person that has a relationship with this institution\n          required: *ref_16\n          properties: *ref_17\n    Problem:\n      type: object\n      description: A system message including the error code and an explanation\n      required: \u0026ref_104\n        - status\n        - title\n      properties: \u0026ref_105\n        status:\n          type: string\n          description: The HTTP status code\n          example: '404'\n        title:\n          type: string\n          description: A short, human-readable summary of the problem type\n          example: Resource not found\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of the problem\n    componentType:\n      type: string\n      description: |\n        The component type\n        - test: tentamen\n        - lecture: college\n        - practical: practicum\n        - tutorial: werkcollege\n        - consultation: consultatie\n        - project: project\n        - workshop: workshop\n        - excursion: excursie\n        - independent study: zelfstudie\n        - external: extern\n        - skills training: vaardighedentraining\n      enum: \u0026ref_48\n        - test\n        - lecture\n        - practical\n        - tutorial\n        - consultation\n        - project\n        - workshop\n        - excursion\n        - independent study\n        - external\n        - skills training\n      example: test\n    modesOfDelivery:\n      type: array\n      description: |\n        The mode of delivery of the component (ECTS-mode of delivery)\n        - distance-learning: afstandsleren\n        - on campus: op de campus\n        - online: online\n        - hybrid: hybride\n        - situated: op locatie\n      items: \u0026ref_39\n        type: string\n        enum:\n          - distance-learning\n          - on campus\n          - online\n          - hybrid\n          - situated\n        example: situated\n    Identifier:\n      type: string\n      description: An identifier of another resource.\n      format: uuid\n    CourseId:\n      type: object\n      description: An object describing the metadata of a course\n      required: \u0026ref_44\n        - courseId\n      properties: \u0026ref_45\n        courseId:\n          type: string\n          description: Unique id of this course\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n          readOnly: true\n    StudyLoadDescriptor:\n      type: object\n      description: The amount of effort to complete this education in the specified unit.\n      properties: \u0026ref_25\n        studyLoadUnit:\n          description: \"The unit in which the studyload is specfied\\n- contacttime: CONTACTUUR\\tamount of time spent in classes\\n- ects: ECTS_PUNT\\tEuropean Credit Transfer System\\n- sbu: SBU\\tstudentloadhours\\n- sp: STUDIEPUNT studentpoints\\n- hour: UUR\\thours\\n\"\n          type: string\n          enum:\n            - contacttime\n            - ects\n            - sbu\n            - sp\n            - hour\n          example: ects\n        value:\n          description: The amount of load depicted in numbers\n          type: number\n          example: 3\n      example: \u0026ref_26\n        studyLoadUnit: ects\n        value: 3\n    level:\n      type: string\n      description: |\n        The level of this course (ECTS-year of study if applicable)\n        - secondary vocational education: mbo\n        - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1\n        - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2\n        - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3\n        - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4\n        - associate degree: associate degree, corresponds to levelOfQualification 5\n        - bachelor: bachelor, corresponds to levelOfQualification 6\n        - master: master, corresponds to levelOfQualification 7\n        - doctoral: doctoraal, corresponds to levelOfQualification 8\n        - undefined: onbepaald\n        - undivided: ongedeeld\n        - nt2-1: NT2 niveau 1\n        - nt2-2: NT2 niveau 2\n      enum: \u0026ref_22\n        - secondary vocational education\n        - secondary vocational education 1\n        - secondary vocational education 2\n        - secondary vocational education 3\n        - secondary vocational education 4\n        - associate degree\n        - bachelor\n        - master\n        - doctoral\n        - undefined\n        - undivided\n        - nt2-1\n        - nt2-2\n      example: master\n    EducationSpecificationId:\n      type: object\n      properties: \u0026ref_18\n        educationSpecificationId:\n          type: string\n          description: Unique id for this education specification\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n      required: \u0026ref_19\n        - educationSpecificationId\n    educationSpecificationType:\n      type: string\n      description: |\n        The type of education specification\n          - program: HOOPLEIDING\n          - privateProgram: PARTICULIEREOPLEIDING\n          - programCluster: HOONDERWIJSEENHEDENCLUSTER\n          - course: HOONDERWIJSEENHEID\n      enum: \u0026ref_20\n        - program\n        - privateProgram\n        - cluster\n        - course\n      example: program\n    formalDocument:\n      type: string\n      description: |\n        The type of formal document obtained after completion of this education\n          - diploma: DIPLOMA\n          - certificate: CERTIFICAAT\n          - no official document: GEEN OFFICIEEL DOCUMENT\n          - testimonial: GETUIGSCHRIFT\n          - school advice: SCHOOLADVIES\n      enum: \u0026ref_21\n        - diploma\n        - certificate\n        - no official document\n        - testimonial\n        - school advice\n      example: diploma\n    sector:\n      type: string\n      description: |\n        The sector for this program\n        - secondary vocational education: middelbaar beroepsonderwijs\n        - higher professional education: hoger beroepsonderwijs\n        - university education: universitair onderwijs\n      enum: \u0026ref_23\n        - secondary vocational education\n        - higher professional education\n        - university education\n      example: university education\n    levelOfQualification:\n      type: string\n      description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.\n      enum: \u0026ref_24\n        - '1'\n        - '2'\n        - '3'\n        - '4'\n        - 4+\n        - '5'\n        - '6'\n        - '7'\n        - '8'\n      example: '6'\n    EducationSpecification:\n      allOf: \u0026ref_27\n        - type: object\n          properties: *ref_18\n          required: *ref_19\n        - type: object\n          description: |\n            The specification of an education object. This specification allows for other education objects to be derived from it.\n            It is used to aggregate education objects from a supplying institution.\n            It clusters programs to a main educationSpecification that is used in registries such as RIO. \n          required: \u0026ref_32\n            - primaryCode\n            - educationSpecificationType\n            - name\n          properties: \u0026ref_33\n            primaryCode:\n              description: |\n                The primary human readable identifier for the entity. \n                This will often take the form of a human readable code as defined by the institution or region\n              type: object\n              properties: *ref_4\n              required: *ref_5\n              additionalProperties: false\n              example: *ref_11\n            otherCodes:\n              type: array\n              description: An array of additional human readable codes/identifiers for the entity being described.\n              items:\n                type: object\n                properties: *ref_4\n                required: *ref_5\n                additionalProperties: false\n                example: *ref_11\n              example:\n                - codeType: crohoCreboCode\n                  code: '1234123'\n            educationSpecificationType:\n              type: string\n              description: |\n                The type of education specification\n                  - program: HOOPLEIDING\n                  - privateProgram: PARTICULIEREOPLEIDING\n                  - programCluster: HOONDERWIJSEENHEDENCLUSTER\n                  - course: HOONDERWIJSEENHEID\n              enum: *ref_20\n              example: program\n            name:\n              type: array\n              items:\n                type: object\n                description: A String with an associated language code.\n                properties: *ref_2\n                example: *ref_3\n              description: The name of this education specification\n              example:\n                - language: en-GB\n                  value: Bachelor Chemical technology\n            abbreviation:\n              type: string\n              description: The abbreviation of this program\n              maxLength: 256\n              example: B Scheikundige Technologie\n            description:\n              type: array\n              items:\n                type: object\n                description: A String with an associated language code.\n                properties: *ref_2\n                example: *ref_3\n              description: The description of this program. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.\n              example:\n                - language: en-GB\n                  value: program that is a place holder for all courses that are made available for student mobility\n            formalDocument:\n              type: string\n              description: |\n                The type of formal document obtained after completion of this education\n                  - diploma: DIPLOMA\n                  - certificate: CERTIFICAAT\n                  - no official document: GEEN OFFICIEEL DOCUMENT\n                  - testimonial: GETUIGSCHRIFT\n                  - school advice: SCHOOLADVIES\n              enum: *ref_21\n              example: diploma\n            level:\n              type: string\n              description: |\n                The level of this course (ECTS-year of study if applicable)\n                - secondary vocational education: mbo\n                - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1\n                - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2\n                - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3\n                - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4\n                - associate degree: associate degree, corresponds to levelOfQualification 5\n                - bachelor: bachelor, corresponds to levelOfQualification 6\n                - master: master, corresponds to levelOfQualification 7\n                - doctoral: doctoraal, corresponds to levelOfQualification 8\n                - undefined: onbepaald\n                - undivided: ongedeeld\n                - nt2-1: NT2 niveau 1\n                - nt2-2: NT2 niveau 2\n              enum: *ref_22\n              example: master\n            sector:\n              type: string\n              description: |\n                The sector for this program\n                - secondary vocational education: middelbaar beroepsonderwijs\n                - higher professional education: hoger beroepsonderwijs\n                - university education: universitair onderwijs\n              enum: *ref_23\n              example: university education\n            levelOfQualification:\n              type: string\n              description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.\n              enum: *ref_24\n              example: '6'\n            fieldsOfStudy:\n              type: string\n              description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.\n              maxLength: 4\n              example: '0732'\n            studyLoad:\n              type: object\n              description: The amount of effort to complete this education in the specified unit.\n              properties: *ref_25\n              example: *ref_26\n            learningOutcomes:\n              type: array\n              description: Statements that describe the knowledge or skills students should acquire by the end of a particular course or program (ECTS-learningoutcome).\n              items:\n                type: array\n                minItems: 1\n                items:\n                  type: object\n                  description: A String with an associated language code.\n                  properties: *ref_2\n                  example: *ref_3\n                example:\n                  - language: en-GB\n                    value: 'Executable knowledge of Chemical technology, including: Acquire knowledge of research paradigms.'\n            link:\n              type: string\n              description: URL of the program's website\n              format: uri\n              maxLength: 2048\n              example: https://bijvak.nl\n            parent:\n              description: The educationSpecification that is the parent of this educationSpecification if it exists. [`expandable`](#tag/education_specification_model)\n              oneOf:\n                - title: educationSpecificationId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: EducationSpecification\n                  allOf: *ref_27\n            children:\n              type: array\n              description: The EducationSpecifications that have this EducationSpecification as their parent. [`expandable`](#tag/education_specification_model)\n              items:\n                oneOf:\n                  - title: educationSpecificationId\n                    type: string\n                    description: An identifier of another resource.\n                    format: uuid\n                  - title: EducationSpecification\n                    allOf: *ref_27\n            organization:\n              description: |\n                The organization that manages this group. [`expandable`](#tag/organization_model)\n                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n              oneOf:\n                - title: organizationId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Organization object\n                  type: object\n                  description: A description of a group of people working together to achieve a goal\n                  required: \u0026ref_28\n                    - organizationId\n                    - organizationType\n                    - name\n                    - shortName\n                    - primaryCode\n                  properties: \u0026ref_29\n                    organizationId:\n                      type: string\n                      description: Unique id of this organization\n                      format: uuid\n                      example: 123e4567-e89b-12d3-a456-123514174000\n                      readOnly: true\n                    primaryCode:\n                      description: The primary human readable identifier for the organization. This is often the source identifier as defined by the institution.\n                      example:\n                        codeType: orgId\n                        code: Org01-Root\n                      readOnly: true\n                      type: object\n                      properties: *ref_4\n                      required: *ref_5\n                      additionalProperties: false\n                    organizationType:\n                      type: string\n                      description: |\n                        The type of this organization. Each OOAPI endpoint should have a single organization with type `root`, describing the root organization.\n                        - root: the root of this organization, representing the Educational Institution itself\n                        - institute: instituut\n                        - department: departement\n                        - faculty: faculteit\n                        - branch: vestiging\n                        - academy: academie\n                        - school: school\n                      enum: \u0026ref_31\n                        - root\n                        - institute\n                        - department\n                        - faculty\n                        - branch\n                        - academy\n                        - school\n                      example: root\n                    name:\n                      type: array\n                      description: The name of the organization\n                      minItems: 1\n                      items:\n                        type: object\n                        description: A String with an associated language code.\n                        properties: *ref_2\n                        example: *ref_3\n                      example:\n                        - language: nl-NL\n                          value: Coöperatie SURF U.A.\n                    shortName:\n                      type: string\n                      description: Short name of the organization\n                      maxLength: 256\n                      example: SURF\n                    description:\n                      type: array\n                      description: Any general description of the organization should clearly mention the type of higher education organization, especially in the case of a binary system. In Dutch; universiteit (university) or hogeschool (university of applied sciences).\n                      minItems: 1\n                      items:\n                        type: object\n                        description: A String with an associated language code.\n                        properties: *ref_2\n                        example: *ref_3\n                      example:\n                        - language: nl-NL\n                          value: SURF is een coöperatieve vereniging van Nederlandse onderwijs- en onderzoeksinstellingen waarin de leden hun krachten bundelen. De leden zijn eigenaar van SURF.\n                    addresses:\n                      type: array\n                      description: Addresses of this organization\n                      items:\n                        type: object\n                        description: The full street address\n                        required: *ref_8\n                        properties: *ref_9\n                    link:\n                      type: string\n                      description: URL of the organization's website\n                      format: uri\n                      maxLength: 2048\n                      example: https://surf.nl\n                    logo:\n                      type: string\n                      description: Logo of this organization\n                      format: uri\n                      maxLength: 2048\n                      example: https://www.surf.nl/themes/surf/logo.svg\n                    otherCodes:\n                      type: array\n                      description: An array of additional human readable codes/identifiers for the entity being described.\n                      minItems: 1\n                      items:\n                        type: object\n                        properties: *ref_4\n                        required: *ref_5\n                        additionalProperties: false\n                        example: *ref_11\n                      example:\n                        - codeType: brin\n                          code: 00AA\n                        - codeType: kvk\n                          code: '12345678'\n                    parent:\n                      description: |\n                        The organizational unit which is the parent of this organization. [`expandable`](#tag/organization_model)\n                        By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n                      oneOf:\n                        - title: organizationId\n                          type: string\n                          description: An identifier of another resource.\n                          format: uuid\n                        - title: Organization object\n                          type: object\n                          description: A description of a group of people working together to achieve a goal\n                          required: *ref_28\n                          properties: *ref_29\n                    children:\n                      type: array\n                      description: |\n                        All the organizational units for which this organization is the parent. [`expandable`](#tag/organization_model)\n                        By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n                      items:\n                        oneOf:\n                          - title: organizationId\n                            type: string\n                            description: An identifier of another resource.\n                            format: uuid\n                          - title: Organization object\n                            type: object\n                            description: A description of a group of people working together to achieve a goal\n                            required: *ref_28\n                            properties: *ref_29\n                    consumers:\n                      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n                      type: array\n                      items:\n                        type: object\n                        description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n                        required: *ref_12\n                        properties: *ref_13\n                        additionalProperties: true\n                      example: *ref_30\n                    ext:\n                      type: object\n                      description: Object for additional non-standard attributes\n            consumers:\n              description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n              type: array\n              items:\n                type: object\n                description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n                required: *ref_12\n                properties: *ref_13\n                additionalProperties: true\n              example:\n                - consumerKey: rio\n                  educationSpecificationSubType: variant\n                  category:\n                    - business_and_project_support\n                    - economy\n            ext:\n              type: object\n              description: Object for additional non-standard attributes\n        - properties:\n            validFrom:\n              description: The first day this EducationSpecification is valid (inclusive).\n              type: string\n              format: date\n            validTo:\n              description: The day this EducationSpecification ceases to be valid (e.g. exclusive).\n              type: string\n              format: date\n    organizationType:\n      type: string\n      description: |\n        The type of this organization. Each OOAPI endpoint should have a single organization with type `root`, describing the root organization.\n        - root: the root of this organization, representing the Educational Institution itself\n        - institute: instituut\n        - department: departement\n        - faculty: faculteit\n        - branch: vestiging\n        - academy: academie\n        - school: school\n      enum: *ref_31\n      example: root\n    Organization:\n      type: object\n      description: A description of a group of people working together to achieve a goal\n      required: *ref_28\n      properties: *ref_29\n    EducationSpecificationProperties:\n      type: object\n      description: |\n        The specification of an education object. This specification allows for other education objects to be derived from it.\n        It is used to aggregate education objects from a supplying institution.\n        It clusters programs to a main educationSpecification that is used in registries such as RIO. \n      required: *ref_32\n      properties: *ref_33\n    ProgramId:\n      type: object\n      description: A collection of courses that lead to a certifiable learning outcome\n      required: \u0026ref_34\n        - programId\n      properties: \u0026ref_35\n        programId:\n          type: string\n          description: Unique id for this program\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n          readOnly: true\n    programType:\n      type: string\n      description: |\n        The type of this program\n        - program: opleiding\n        - minor: minor\n        - honours: honours\n        - specialization: specialisatie\n        - track: track\n      enum: \u0026ref_36\n        - program\n        - minor\n        - honours\n        - specialization\n        - track\n      example: program\n    qualificationAwarded:\n      type: string\n      description: Type of qualificaton that can be obtained on finishing the program\n      enum: \u0026ref_37\n        - AD\n        - BA\n        - BSc\n        - LLB\n        - MA\n        - MSc\n        - LLM\n        - Phd\n        - None\n      example: None\n    modeOfStudy:\n      type: string\n      description: |\n        Indicates whether the education is full-time, part-time, dual or self-paced.\n          - full-time: fulltime\n          - part-time: parttime\n          - dual training: duaal\n          - self-paced: eigen tempo\n      enum: \u0026ref_38\n        - full-time\n        - part-time\n        - dual training\n        - self-paced\n    Program:\n      allOf: \u0026ref_40\n        - type: object\n          description: A collection of courses that lead to a certifiable learning outcome\n          required: *ref_34\n          properties: *ref_35\n        - type: object\n          description: A collection of courses that lead to a certifiable learning outcome\n          required: \u0026ref_42\n            - programType\n            - name\n            - abbreviation\n            - description\n            - primaryCode\n            - teachingLanguage\n          properties: \u0026ref_43\n            primaryCode:\n              description: The primary human readable identifier for the program. This is often the source identifier as defined by the institution.\n              example:\n                codeType: programCode\n                code: BIO\n              readOnly: true\n              type: object\n              properties: *ref_4\n              required: *ref_5\n              additionalProperties: false\n            programType:\n              type: string\n              description: |\n                The type of this program\n                - program: opleiding\n                - minor: minor\n                - honours: honours\n                - specialization: specialisatie\n                - track: track\n              enum: *ref_36\n              example: program\n            name:\n              description: The name of this program\n              type: array\n              minItems: 1\n              items:\n                type: object\n                description: A String with an associated language code.\n                properties: *ref_2\n                example: *ref_3\n              example:\n                - language: en-GB\n                  value: Biology\n            abbreviation:\n              type: string\n              description: The abbreviation of this program\n              maxLength: 256\n              example: BIO\n            description:\n              type: array\n              description: The description of this program\n              minItems: 1\n              items:\n                type: object\n                description: A String with an associated language code.\n                properties: *ref_2\n                example: *ref_3\n              example:\n                - language: en-GB\n                  value: The study of life\n            teachingLanguage:\n              type: string\n              description: The (primary) teaching language in which this program is given, should be a three-letter language code as specified by ISO 639-2.\n              minLength: 3\n              maxLength: 3\n              pattern: ^[a-z]{3}$\n              example: nld\n            studyLoad:\n              type: object\n              description: The amount of effort to complete this education in the specified unit.\n              properties: *ref_25\n              example: *ref_26\n            qualificationAwarded:\n              type: string\n              description: Type of qualificaton that can be obtained on finishing the program\n              enum: *ref_37\n              example: None\n            modeOfStudy:\n              type: string\n              description: |\n                Indicates whether the education is full-time, part-time, dual or self-paced.\n                  - full-time: fulltime\n                  - part-time: parttime\n                  - dual training: duaal\n                  - self-paced: eigen tempo\n              enum: *ref_38\n            modeOfDelivery:\n              type: array\n              description: |\n                The mode of delivery of the component (ECTS-mode of delivery)\n                - distance-learning: afstandsleren\n                - on campus: op de campus\n                - online: online\n                - hybrid: hybride\n                - situated: op locatie\n              items: *ref_39\n            duration:\n              type: string\n              description: The duration of this program. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.\n              pattern: ^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$\n              example: P1DT30H4S\n            firstStartDate:\n              type: string\n              description: The date when participants can follow this program for the first time.\n              format: date\n            levelOfQualification:\n              type: string\n              description: Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.\n              enum: *ref_24\n              example: '6'\n            level:\n              type: string\n              description: |\n                The level of this course (ECTS-year of study if applicable)\n                - secondary vocational education: mbo\n                - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1\n                - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2\n                - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3\n                - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4\n                - associate degree: associate degree, corresponds to levelOfQualification 5\n                - bachelor: bachelor, corresponds to levelOfQualification 6\n                - master: master, corresponds to levelOfQualification 7\n                - doctoral: doctoraal, corresponds to levelOfQualification 8\n                - undefined: onbepaald\n                - undivided: ongedeeld\n                - nt2-1: NT2 niveau 1\n                - nt2-2: NT2 niveau 2\n              enum: *ref_22\n              example: master\n            sector:\n              type: string\n              description: |\n                The sector for this program\n                - secondary vocational education: middelbaar beroepsonderwijs\n                - higher professional education: hoger beroepsonderwijs\n                - university education: universitair onderwijs\n              enum: *ref_23\n              example: university education\n            fieldsOfStudy:\n              type: string\n              description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.\n              maxLength: 4\n              example: '0732'\n            enrollment:\n              type: array\n              items:\n                type: object\n                description: A String with an associated language code.\n                properties: *ref_2\n                example: *ref_3\n              description: The extra information that is provided for enrollment\n              example:\n                - language: en-GB\n                  value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.\n            resources:\n              type: array\n              description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)\n              items:\n                type: string\n              example:\n                - book to be announced\n                - on-line resource x\n            learningOutcomes:\n              type: array\n              description: List of learning outcomes at program level. It is advisable to limit the number of learning outcomes to approximately 20. It is also advisable to make sure that the program learning outcomes in the course catalogue correspond with those on the Diploma Supplement.\n              items:\n                type: array\n                minItems: 1\n                items:\n                  type: object\n                  description: A String with an associated language code.\n                  properties: *ref_2\n                  example: *ref_3\n                example:\n                  - language: en-GB\n                    value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'\n            assessment:\n              type: array\n              description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).\n              minItems: 1\n              items:\n                type: object\n                description: A String with an associated language code.\n                properties: *ref_2\n                example: *ref_3\n              example:\n                - language: en-GB\n                  value: Exam on campus\n            admissionRequirements:\n              type: array\n              description: This information may be given at an institutional level and/or at the level of individual programmes. Make sure that it is clear whether the information applies to fee-paying students (national and/or international) or to exchange students.\n              example:\n                - language: en-GB\n                  value: Students need to be enrolled at qualifying institutions of higher education that participate in this alliance\n              minItems: 1\n              items:\n                type: object\n                description: A String with an associated language code.\n                properties: *ref_2\n                example: *ref_3\n            qualificationRequirements:\n              type: array\n              description: Normally, students will receive a diploma when they have completed the (official) study program and have obtained the required number of credits. If there are any other specific requirements that students need to have fulfilled, mention them here.\n              minItems: 1\n              items:\n                type: object\n                description: A String with an associated language code.\n                properties: *ref_2\n                example: *ref_3\n            link:\n              type: string\n              description: URL of the program's website\n              format: uri\n              maxLength: 2048\n              example: https://bijvak.nl\n            educationSpecification:\n              description: The educationSpecification of which this program is a more concrete implementation. [`expandable`](#tag/education_specification_model)\n              oneOf:\n                - title: educationSpecificationId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: EducationSpecification\n                  allOf: *ref_27\n            otherCodes:\n              type: array\n              description: An array of additional human readable codes/identifiers for the entity being described.\n              items:\n                type: object\n                properties: *ref_4\n                required: *ref_5\n                additionalProperties: false\n                example: *ref_11\n              example:\n                - codeType: crohoCreboCode\n                  code: '59312'\n            addresses:\n              type: array\n              description: Addresses for this program\n              items:\n                type: object\n                description: The full street address\n                required: *ref_8\n                properties: *ref_9\n            parent:\n              description: Parent program of which the current program is a child. This object is [`expandable`](#tag/program_model)\n              oneOf:\n                - title: programId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Expanded Program\n                  allOf: *ref_40\n            children:\n              type: array\n              description: Programs which are a part of this program (e.g specializations). This object is [`expandable`](#tag/program_model)\n              items:\n                oneOf:\n                  - title: programId\n                    type: string\n                    description: An identifier of another resource.\n                    format: uuid\n                  - title: Expanded Program\n                    allOf: *ref_40\n            coordinators:\n              description: The person(s) responsible for this program. This object is [`expandable`](#tag/person_model)\n              type: array\n              items:\n                oneOf:\n                  - title: personId\n                    type: string\n                    description: An identifier of another resource.\n                    format: uuid\n                  - title: Person object\n                    allOf: *ref_41\n            organization:\n              description: |\n                The organization providing this program. [`expandable`](#tag/organization_model)\n                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n              oneOf:\n                - title: organizationId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Organization object\n                  type: object\n                  description: A description of a group of people working together to achieve a goal\n                  required: *ref_28\n                  properties: *ref_29\n            consumers:\n              description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n              type: array\n              items:\n                type: object\n                description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n                required: *ref_12\n                properties: *ref_13\n                additionalProperties: true\n              example:\n                - consumerKey: rio\n                  educationOffererCode: 122A112\n                  educationLocationCode: 123X122\n                  consentParticipationSTAP: permission_granted\n                  jointPartnerCodes:\n                    - 122A113\n                  foreignPartners:\n                    - Harvard University\n                  deficiency: deficiencies\n                  requirementsActivities: requirements\n                  propaedeuticPhase: no_propaedeutic_phase\n                  studyChoiceCheck: no_study_choice_check\n                  acceleratedRoute: accelerated_route\n            ext:\n              type: object\n              description: Object for additional non-standard attributes\n        - properties:\n            validFrom:\n              description: The first day this program is valid (inclusive).\n              type: string\n              format: date\n            validTo:\n              description: The day this program ceases to be valid (e.g. exclusive).\n              type: string\n              format: date\n    ProgramProperties:\n      type: object\n      description: A collection of courses that lead to a certifiable learning outcome\n      required: *ref_42\n      properties: *ref_43\n    CourseProperties:\n      type: object\n      description: An object describing the metadata of a course\n      required: \u0026ref_46\n        - name\n        - abbreviation\n        - description\n        - teachingLanguage\n        - level\n        - primaryCode\n      properties: \u0026ref_47\n        primaryCode:\n          description: The primary human readable identifier for this course. This is often the source identifier as defined by the institution.\n          readOnly: true\n          type: object\n          properties: *ref_4\n          required: *ref_5\n          additionalProperties: false\n          example: *ref_11\n        name:\n          type: array\n          description: The name of this course (ECTS-title)\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Academic and Professional Writing\n        abbreviation:\n          type: string\n          description: The abbreviation or internal code used to identify this course (ECTS-code)\n          maxLength: 256\n          example: INFOMQNM\n        studyLoad:\n          type: object\n          description: The amount of effort to complete this education in the specified unit.\n          properties: *ref_25\n          example: *ref_26\n        modeOfDelivery:\n          type: array\n          description: |\n            The mode of delivery of the component (ECTS-mode of delivery)\n            - distance-learning: afstandsleren\n            - on campus: op de campus\n            - online: online\n            - hybrid: hybride\n            - situated: op locatie\n          items: *ref_39\n        duration:\n          type: string\n          description: The duration of this course. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.\n          pattern: ^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$\n          example: P1DT30H4S\n        firstStartDate:\n          type: string\n          description: The date when participants can follow this course for the first time.\n          format: date\n        description:\n          type: array\n          description: The description of this course (ECTS-description).\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: As with all empirical sciences, to assure valid outcomes, HCI studies heavily rely on research methods and statistics. This holds for the design of user interfaces, personalized recommender systems, and interaction paradigms for the internet of things. This course prepares you to do so by learning you to collect data, design experiments, and analyze the results. By the end of the course, you will have a detailed understanding of how to select and apply quantitative research methods and analysis to address virtually all HCI challenges. Quantitative research and data analysis will be taught in the context of state-of-the-art HCI challenges. Lectures will be alternated with hands-on learning, including work with predefined datasets (e.g., addressing facial features, cognitive load, and emotion). Additionally, students will set up their own research (e.g., using eye tracking). Data processing and analysis will be executed using R.\n        teachingLanguage:\n          type: string\n          description: The (primary) teaching language in which this course is given, should be a three-letter language code as specified by ISO 639-2.\n          minLength: 3\n          maxLength: 3\n          pattern: ^[a-z]{3}$\n          example: nld\n        fieldsOfStudy:\n          type: string\n          description: Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.\n          maxLength: 4\n          example: '0732'\n        learningOutcomes:\n          type: array\n          description: Statements that describe the knowledge or skills students should acquire by the end of a particular course (ECTS-learningoutcome).\n          items:\n            type: array\n            minItems: 1\n            items:\n              type: object\n              description: A String with an associated language code.\n              properties: *ref_2\n              example: *ref_3\n            example:\n              - language: en-GB\n                value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'\n        admissionRequirements:\n          type: array\n          description: This information may be given at an institutional level and/or at the level of individual programmes. Make sure that it is clear whether the information applies to fee-paying students (national and/or international) or to exchange students.\n          example:\n            - language: en-GB\n              value: Students need to be enrolled at qualifying institutions of higher education that participate in this alliance\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n        qualificationRequirements:\n          type: array\n          description: Normally, students will receive a diploma when they have completed the (official) study program and have obtained the required number of credits. If there are any other specific requirements that students need to have fulfilled, mention them here.\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n        level:\n          type: string\n          description: |\n            The level of this course (ECTS-year of study if applicable)\n            - secondary vocational education: mbo\n            - secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1\n            - secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2\n            - secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3\n            - secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4\n            - associate degree: associate degree, corresponds to levelOfQualification 5\n            - bachelor: bachelor, corresponds to levelOfQualification 6\n            - master: master, corresponds to levelOfQualification 7\n            - doctoral: doctoraal, corresponds to levelOfQualification 8\n            - undefined: onbepaald\n            - undivided: ongedeeld\n            - nt2-1: NT2 niveau 1\n            - nt2-2: NT2 niveau 2\n          enum: *ref_22\n          example: master\n        enrollment:\n          type: array\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          description: The extra information that is provided for enrollment\n          example:\n            - language: en-GB\n              value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.\n        resources:\n          type: array\n          description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)\n          items:\n            type: string\n          example:\n            - book to be announced\n            - on-line resource x\n        assessment:\n          type: array\n          description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Exam on campus\n        link:\n          type: string\n          description: URL of the course's website\n          format: uri\n          maxLength: 2048\n          example: https://osiris.uu.nl/osiris_student_uuprd/OnderwijsCatalogusZoekCursus.do#submitForm?cursuscode=INFOMQNM\n        educationSpecification:\n          description: The educationSpecification of which this course is a more concrete implementation. [`expandable`](#tag/education_specification_model)\n          oneOf:\n            - title: educationSpecificationId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: EducationSpecification\n              allOf: *ref_27\n        addresses:\n          type: array\n          description: Addresses for this course\n          items:\n            type: object\n            description: The full street address\n            required: *ref_8\n            properties: *ref_9\n        otherCodes:\n          type: array\n          description: An array of additional human readable codes/identifiers for the entity being described.\n          items:\n            type: object\n            properties: *ref_4\n            required: *ref_5\n            additionalProperties: false\n            example: *ref_11\n        consumers:\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          type: array\n          items:\n            type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          example:\n            - consumerKey: rio\n              educationOffererCode: 123A321\n              educationLocationCode: 334X123\n              consentParticipationSTAP: permission_granted\n              jointPartnerCodes:\n                - 123A123\n              foreignPartners:\n                - Harvard University\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n        programs:\n          description: The program of which this course is a part of. This object is [`expandable`](#tag/program_model)\n          type: array\n          items:\n            oneOf:\n              - title: programId\n                type: string\n                description: An identifier of another resource.\n                format: uuid\n              - title: Program object\n                allOf: *ref_40\n        coordinators:\n          description: The person(s) responsible for this course. This object is [`expandable`](#tag/person_model)\n          type: array\n          items:\n            oneOf:\n              - title: personId\n                type: string\n                description: An identifier of another resource.\n                format: uuid\n              - title: Person object\n                allOf: *ref_41\n        organization:\n          description: |\n            The organization that manages this group. [`expandable`](#tag/organization_model)\n            By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n          oneOf:\n            - title: organizationId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: Organization object\n              type: object\n              description: A description of a group of people working together to achieve a goal\n              required: *ref_28\n              properties: *ref_29\n    Course:\n      allOf: \u0026ref_49\n        - type: object\n          description: An object describing the metadata of a course\n          required: *ref_44\n          properties: *ref_45\n        - type: object\n          description: An object describing the metadata of a course\n          required: *ref_46\n          properties: *ref_47\n        - properties:\n            validFrom:\n              description: The first day this course is valid (inclusive).\n              type: string\n              format: date\n            validTo:\n              description: The day this course ceases to be valid (e.g. exclusive).\n              type: string\n              format: date\n    Component:\n      type: object\n      description: A component is a part of a course\n      required: \u0026ref_74\n        - componentId\n        - componentType\n        - name\n        - teachingLanguage\n        - abbreviation\n        - primaryCode\n      properties: \u0026ref_75\n        componentId:\n          type: string\n          description: Unique id of this component\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n          readOnly: true\n        primaryCode:\n          description: The primary human readable identifier for this component. This is often the source identifier as defined by the institution.\n          example:\n            codeType: componentCode\n            code: INFOMQNM-WRKCLG-1\n          readOnly: true\n          type: object\n          properties: *ref_4\n          required: *ref_5\n          additionalProperties: false\n        componentType:\n          type: string\n          description: |\n            The component type\n            - test: tentamen\n            - lecture: college\n            - practical: practicum\n            - tutorial: werkcollege\n            - consultation: consultatie\n            - project: project\n            - workshop: workshop\n            - excursion: excursie\n            - independent study: zelfstudie\n            - external: extern\n            - skills training: vaardighedentraining\n          enum: *ref_48\n          example: test\n        name:\n          type: array\n          description: The name of this component\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Written test for INFOMQNM\n        abbreviation:\n          type: string\n          description: The abbreviation of this component\n          maxLength: 256\n          example: Test-INFOMQNM\n        modeOfDelivery:\n          type: array\n          description: |\n            The mode of delivery of the component (ECTS-mode of delivery)\n            - distance-learning: afstandsleren\n            - on campus: op de campus\n            - online: online\n            - hybrid: hybride\n            - situated: op locatie\n          items: *ref_39\n        duration:\n          type: string\n          description: The duration of this component. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.\n          pattern: ^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$\n          example: P1DT30H4S\n        description:\n          type: array\n          description: The description of this component.\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: |\n                'Prove executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms Able to design suitable research studies (e.g., choose between within and between subject designs) Define/apply/design metrics and scales Define/produce materials (e.g., stimuli and questionnaires) Define protocols for research studies Understands and take in account concepts of reliability and validity Analyze and improve methods and analysis of published scientific articles Able to deliver scientific reports\n                Prove executable knowledge of ­­­statistics, including: Handle hypothesis testing with complex designs (e.g., including , dependent, independent, and co variates) Data preparation (e.g., coding and feature selection) Reason towards adequate techniques to ensure valid outcomes (e.g., be aware of type I, type II errors) Select an appropriate sampling method (e.g., stratified) Perform parametric tests (e.g., repeated measures (M)ANOVA) Perform non-parametric tests (e.g., Chi-square, Mann-Whitney, and Kruskal-Wallis)'\n        teachingLanguage:\n          type: string\n          description: The (primary) teaching language in which this component is given, should be a three-letter language code as specified by ISO 639-2.\n          minLength: 3\n          maxLength: 3\n          pattern: ^[a-z]{3}$\n          example: nld\n        learningOutcomes:\n          type: array\n          description: Statements that describe the knowledge or skills students should acquire by the end of a particular course (ECTS-learningoutcome).\n          items:\n            type: array\n            minItems: 1\n            items:\n              type: object\n              description: A String with an associated language code.\n              properties: *ref_2\n              example: *ref_3\n            example:\n              - language: en-GB\n                value: 'Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms.'\n        enrollment:\n          type: array\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          description: The extra information that is provided for enrollment\n          example:\n            - language: en-GB\n              value: enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.\n        resources:\n          type: array\n          description: An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)\n          items:\n            type: string\n          example:\n            - book to be announced\n            - on-line resource x\n        assessment:\n          type: array\n          description: A description of the way exams for this course are taken (ECTS-assessment method and criteria).\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Exam on campus\n        addresses:\n          type: array\n          description: Addresses for this component\n          items:\n            type: object\n            description: The full street address\n            required: *ref_8\n            properties: *ref_9\n        otherCodes:\n          type: array\n          description: An array of additional human readable codes/identifiers for the entity being described.\n          items:\n            type: object\n            properties: *ref_4\n            required: *ref_5\n            additionalProperties: false\n            example: *ref_11\n        course:\n          description: |\n            The course of which this component is a part. [`expandable`](#tag/course_model)\n            By default only the `courseId` (a string) is returned. If the client requested an expansion of `course` the full course object should be returned.\n          oneOf:\n            - title: courseId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: Course object\n              allOf: *ref_49\n        organization:\n          description: |\n            The organization which provides this component. [`expandable`](#tag/organization_model)\n            By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n          oneOf:\n            - title: organizationId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: Organization object\n              type: object\n              description: A description of a group of people working together to achieve a goal\n              required: *ref_28\n              properties: *ref_29\n        consumers:\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          type: array\n          items:\n            type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          example: *ref_30\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    Pagination:\n      type: object\n      required: \u0026ref_118\n        - pageSize\n        - pageNumber\n        - hasPreviousPage\n        - hasNextPage\n        - items\n      properties: \u0026ref_119\n        pageSize:\n          type: integer\n          format: int32\n          description: The number of items per page\n          example: 10\n        pageNumber:\n          type: integer\n          format: int32\n          description: The current page number\n          example: 1\n          minimum: 1\n        hasPreviousPage:\n          type: boolean\n          description: Whether there is a previous page\n          example: false\n        hasNextPage:\n          type: boolean\n          description: Whether there is a previous page\n          example: true\n        totalPages:\n          type: integer\n          format: int32\n          description: Total number of pages\n          example: 8\n    OfferingId:\n      type: object\n      description: ID of Either a program, course or component offering which descrbes the program, course or offering in time\n      required: \u0026ref_60\n        - offeringId\n      properties: \u0026ref_61\n        offeringId:\n          type: string\n          description: Unique id of this offering\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-134564174000\n    academicSessionType:\n      type: string\n      description: |\n        The type of this Academic Session This is an *extensible enumeration*.\n        - academic year: academic year\n        - semester: semester, typically there are two semesters per academic year\n        - trimester: trimester, typically there are three semesters per academic year\n        - quarter: quarter, typically there are four quarters per academic year\n        - testing period: a period in which tests take place\n        - period: any other period in an academic year\n\n        Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.\n      example: semester\n      x-ooapi-extensible-enum: \u0026ref_50\n        - academic year\n        - semester\n        - trimester\n        - quarter\n        - testing period\n        - period\n    AcademicSession:\n      type: object\n      description: |\n        A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\n        Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n      required: \u0026ref_51\n        - academicSessionId\n        - name\n        - startDate\n        - endDate\n      properties: \u0026ref_52\n        academicSessionId:\n          type: string\n          description: Unique id for this academic session\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n          readOnly: true\n        academicSessionType:\n          type: string\n          description: |\n            The type of this Academic Session This is an *extensible enumeration*.\n            - academic year: academic year\n            - semester: semester, typically there are two semesters per academic year\n            - trimester: trimester, typically there are three semesters per academic year\n            - quarter: quarter, typically there are four quarters per academic year\n            - testing period: a period in which tests take place\n            - period: any other period in an academic year\n\n            Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.\n          example: semester\n          x-ooapi-extensible-enum: *ref_50\n        primaryCode:\n          description: The primary human readable identifier for this academic session. This is often the source identifier as defined by the institution.\n          example:\n            codeType: identifier\n            code: 2012-Q1\n          type: object\n          properties: *ref_4\n          required: *ref_5\n          additionalProperties: false\n        name:\n          type: array\n          description: The name of this academic session\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Fall semester 2020\n        startDate:\n          type: string\n          description: The day on which this academic session starts, RFC3339 (full-date)\n          format: date\n          example: '2020-08-17'\n        endDate:\n          type: string\n          description: The day on which this academic session ends, RFC3339 (full-date)\n          format: date\n          example: '2020-12-18'\n        parent:\n          description: The parent Academicsession of this session (e.g. fall semester 20xx where the current session is a week 40). This object is [`expandable`](#tag/academic_sessions_model)\n          oneOf:\n            - title: academicSessionId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: Expanded AcademicSession\n              type: object\n              description: |\n                A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\n                Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n              required: *ref_51\n              properties: *ref_52\n        children:\n          type: array\n          description: The list of Academicsession children of this Session (e.g. all academic sessions in fall semester 20xx). This object is [`expandable`](#tag/academic_sessions_model)\n          items:\n            oneOf:\n              - title: academicSessionId\n                type: string\n                description: An identifier of another resource.\n                format: uuid\n              - title: Expanded AcademicSession\n                type: object\n                description: |\n                  A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\n                  Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n                required: *ref_51\n                properties: *ref_52\n        year:\n          description: The top level year of this session (e.g. 20xx where the current session is a week 40 of a semester). This object is [`expandable`](#tag/academic_sessions_model)\n          oneOf:\n            - title: academicSessionId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: Expanded AcademicSession\n              type: object\n              description: |\n                A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\n                Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n              required: *ref_51\n              properties: *ref_52\n        otherCodes:\n          type: array\n          description: An array of additional human readable codes/identifiers for the entity being described.\n          items:\n            type: object\n            properties: *ref_4\n            required: *ref_5\n            additionalProperties: false\n            example: *ref_11\n        consumers:\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          type: array\n          items:\n            type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          example: *ref_30\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    resultValueType:\n      type: string\n      description: The result value type for this offering\n      enum: \u0026ref_57\n        - pass-or-fail\n        - US letter\n        - UK letter\n        - 0-100\n        - 1-10\n      example: 1-10\n    RIO-Offering:\n      type: object\n      description: RIO add-on attributes to the offerings of either a collection of courses or courses that lead to a certifiable learning outcome\n      required: \u0026ref_53\n        - registrationStatus\n        - requiredPermissionRegistration\n        - consumerKey\n      properties: \u0026ref_54\n        consumerKey:\n          type: string\n        explanationRequiredPermission:\n          type: string\n          description: |\n            toelichtingVereisteToestemming\n            Is een tekstuele toelichting op de voor aanmelding vereiste toestemming van de onderwijsaanbieder\n        requiredPermissionRegistration:\n          type: string\n          description: |\n            toestemmingVereistVoorAanmelding\n            Geeft aan of een aspirant-student voor een bepaald cohort van een aangeboden opleiding toestemming van de onderwijsaanbieder nodig heeft om zich aan te mogen melden.\n            - yes: JA\n            - no: NEE\n          enum:\n            - 'yes'\n            - 'no'\n        registrationStatus:\n          type: string\n          description: |\n            cohortStatus\n            De toegestane waarden voor de status van een cohort van een aangeboden opleiding. Hiermee kan bijvoorbeeld worden aangegeven of een bepaald cohort open staat voor aanmelding, of dat het gesloten is.\n          enum:\n            - open\n            - closed\n    MBO-Offering:\n      type: object\n      description: MBO-toetsafname add-on attributes to the offerings\n      required: \u0026ref_55\n        - offeringState\n        - consumerKey\n      properties: \u0026ref_56\n        consumerKey:\n          type: string\n        duration:\n          type: string\n          description: |\n            To be documented see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/4\n            The duration of this component. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.\n            For easy info https://en.wikipedia.org/wiki/ISO_8601#Durations\n          pattern: ^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$\n          example: P1DT30H4S\n        lastPossibleStartDateTime:\n          type: string\n          description: The moment on which this offering starts, RFC3339 (date-time)\n          format: date-time\n          example: '2020-12-15T08:50:00+01:00'\n        startOptions:\n          type: string\n          description: |\n            type of start that is allowed\n          enum:\n            - individualStart\n            - triggeredSart\n        durationFrom:\n          type: string\n          description: |\n            determine how to determine the start moment for the component\n          enum:\n            - startDateTime\n            - individualStartDateTime\n            - triggeredStartDateTime\n        durationUntil:\n          type: string\n          description: |\n            determine how the length of the component should be determined (fixed endpoint or based on the duration)\n          enum:\n            - testDuration\n            - endDateTime\n        safety:\n          type: array\n          description: |\n            safety\n            See https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/5.\n            TODO : make list\n          items:\n            type: string\n            enum:\n              - SecuredComputer\n              - Fixed Location\n              - Surveillance\n        offeringState:\n          type: string\n          description: |\n            offeringState\n            enum to indicate the state of the offering\n          enum:\n            - active\n            - cancelled\n        locationCode:\n          type: string\n          example: A-12a\n          description: |\n            locationCode\n            string to indicate test room/space (for recognition, we will not use the location structure from OOAPI)\n        irregularities:\n          type: string\n          example: There was a lot of noise from the construction site nearby\n          description: |\n            irregularities\n            string with information about irragularies that effected all students in this offering\n        documents:\n          type: array\n          items:\n            type: string\n          minItems: 0\n          description: |\n            documents\n            documents to be added to this offering\n            TODO : Make a real object : see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/blob/main/doc/flow4.md\n    ConsumerOnOffering:\n      type: array\n      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n      items: \u0026ref_58\n        anyOf:\n          - type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          - type: object\n            description: RIO add-on attributes to the offerings of either a collection of courses or courses that lead to a certifiable learning outcome\n            required: *ref_53\n            properties: *ref_54\n          - type: object\n            description: MBO-toetsafname add-on attributes to the offerings\n            required: *ref_55\n            properties: *ref_56\n      example: \u0026ref_59\n        - consumerKey: MBO-toetsafname\n          duration: P1DT30H4S\n          lastPossibleStartDateTime: '2020-12-15T08:50:00'\n          startOptions: individualStart\n          durationFrom: individualStartDateTime\n          durationUntil: testDuration\n          safety:\n            - SecuredComputer\n            - Fixed Location\n          offeringState: active\n          locationCode: A-12a\n          irregularities: There was a lot of noise from the construction site nearby\n          documents:\n            - documentId: 454566464665355500\n              documentType: sessionReport\n              documentName: Session report on Session tbd.pdf\n    OfferingProperties:\n      type: object\n      description: Either a program, course or component offering which descrbes the program, course or offering in time\n      required: \u0026ref_62\n        - primaryCode\n        - offeringType\n        - name\n        - description\n        - teachingLanguage\n        - resultExpected\n      properties: \u0026ref_63\n        primaryCode:\n          description: The primary human readable identifier for this offering. This is often the source identifier as defined by the institution.\n          example:\n            codeType: offeringCode\n            code: INFOMQNM-20FS\n          readOnly: true\n          type: object\n          properties: *ref_4\n          required: *ref_5\n          additionalProperties: false\n        offeringType:\n          type: string\n          description: The type of this offering\n          enum:\n            - program\n            - course\n            - component\n          example: component\n        academicSession:\n          type: object\n          description: |\n            A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\n            Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n          required: *ref_51\n          properties: *ref_52\n        name:\n          type: array\n          description: The name of this offering\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Final written test for INFOMQNM for fall semseter 2020\n            - language: nl-NL\n              values: Eindtoets vor het vak\n        abbreviation:\n          type: string\n          description: The abbreviation or internal code used to identify this offering\n          maxLength: 256\n          example: Test-INFOMQNM-20FS\n        description:\n          type: array\n          description: The description of this offering.\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: |\n                'Prove in writing knowledge of research methods, including:\n                Acquire knowledge of HCI research paradigms\n                Able to design suitable research studies (e.g., choose between within and between subject designs)\n                Define/apply/design metrics and scales\n                Define/produce materials (e.g., stimuli and questionnaires)\n                Define protocols for research studies\n                Understands and take in account concepts of reliability and validity\n                Analyze and improve methods and analysis of published scientific articles\n                Able to deliver scientific reports\n                Prove in writing knowledge of ­­­statistics, including:\n                Handle hypothesis testing with complex designs (e.g., including , dependent, independent, and co variates)\n                Data preparation (e.g., coding and feature selection)\n                Reason towards adequate techniques to ensure valid outcomes (e.g., be aware of type I, type II errors)\n                Select an appropriate sampling method (e.g., stratified)\n                Perform parametric tests (e.g., repeated measures (M)ANOVA)\n                Perform non-parametric tests (e.g., Chi-square, Mann-Whitney, and Kruskal-Wallis)'\n        teachingLanguage:\n          type: string\n          description: The (primary) teaching language in which this offering is given, should be a three-letter language code as specified by ISO 639-2.\n          minLength: 3\n          maxLength: 3\n          pattern: ^[a-z]{3}$\n          example: nld\n        modeOfDelivery:\n          type: array\n          description: |\n            The mode of delivery of the component (ECTS-mode of delivery)\n            - distance-learning: afstandsleren\n            - on campus: op de campus\n            - online: online\n            - hybrid: hybride\n            - situated: op locatie\n          items: *ref_39\n        maxNumberStudents:\n          type: number\n          description: The maximum number of students allowed to enroll for this offering\n          format: int32\n          minimum: 0\n          example: 200\n        enrolledNumberStudents:\n          type: number\n          description: The number of students that have already enrolled for this offering\n          format: int32\n          minimum: 0\n          example: 150\n        pendingNumberStudents:\n          type: number\n          description: The number of students that have a pending enrollment request for this offering\n          format: int32\n          minimum: 0\n          example: 50\n        minNumberStudents:\n          type: number\n          description: The minimum number of students needed for this offering to proceed\n          format: int32\n          minimum: 0\n          example: 15\n        resultExpected:\n          type: boolean\n          description: |\n            resultExpected, previously knwon as isLineItem is used so the specific instance of the object is identified as being an element that CAN contain “grade” information.\n            Offerings do not always have to result in a grade or an other type of result. \n            If there is a result expected from a programOffering/courseOffering/componentOffering the is resultExpected field should parse true\n          example: true\n        resultValueType:\n          type: string\n          description: The result value type for this offering\n          enum: *ref_57\n          example: 1-10\n        link:\n          type: string\n          description: URL of this offering's webpage.\n          format: uri\n          maxLength: 2048\n          example: https://osiris.uu.nl/osiris_student_uuprd/OnderwijsCatalogusZoekCursus.do#submitForm?cursuscode=INFOMQNM\n        otherCodes:\n          type: array\n          description: An array of additional human readable codes/identifiers for the entity being described.\n          items:\n            type: object\n            properties: *ref_4\n            required: *ref_5\n            additionalProperties: false\n            example: *ref_11\n        consumers:\n          type: array\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          items: *ref_58\n          example: *ref_59\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    Offering:\n      allOf: \u0026ref_68\n        - type: object\n          description: ID of Either a program, course or component offering which descrbes the program, course or offering in time\n          required: *ref_60\n          properties: *ref_61\n        - type: object\n          description: Either a program, course or component offering which descrbes the program, course or offering in time\n          required: *ref_62\n          properties: *ref_63\n    costType:\n      type: string\n      description: |\n        The type of the cost. This is an *extensible enumeration*.\n\n        The following values have been defined in the specification:\n          - `STAP eligible`: the costs that a student can get STAP subsidy for\n          - `total costs`: the total costs that a student is to pay to follow this offering\n\n        Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.\n      example: total costs\n      x-ooapi-extensible-enum: \u0026ref_64\n        - STAP eligible\n        - total costs\n    Cost:\n      type: object\n      required: \u0026ref_69\n        - costType\n      properties: \u0026ref_70\n        costType:\n          type: string\n          description: |\n            The type of the cost. This is an *extensible enumeration*.\n\n            The following values have been defined in the specification:\n              - `STAP eligible`: the costs that a student can get STAP subsidy for\n              - `total costs`: the total costs that a student is to pay to follow this offering\n\n            Implementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.\n          example: total costs\n          x-ooapi-extensible-enum: *ref_64\n        amount:\n          type: string\n          pattern: ^\\d+(?:\\.\\d+)?$\n          description: The total amount of the cost as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.\n          example: '340.84'\n        vatAmount:\n          type: string\n          pattern: ^\\d+(?:\\.\\d+)?$\n          description: The part of the cost that is VAT, as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.\n          example: '40'\n        amountWithoutVat:\n          type: string\n          pattern: ^\\d+(?:\\.\\d+)?$\n          description: The part of the cost that is non-VAT. as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.\n          example: '300.84'\n        currency:\n          type: string\n          description: The currency this cost is in. Should correspond to one of the currency codes from ISO 4217.\n          example: EUR\n        displayAmount:\n          type: array\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          description: An array of optional pre-formatted strings in different locales. Clients can choose to use this string instead of rendering their own based on the current locale of the user.\n          example:\n            - language: nl-NL\n              value: €380,84\n            - language: en-US\n              value: $401.17\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n      additionalProperties: false\n    roomType:\n      type: string\n      description: |\n        The type of this room\n        - general purpose: algemeen\n        - lecture room: collegezaal\n        - computer room: computerruimte\n        - laboratory: laboratorium\n        - office: kantoor\n        - workspace: werkruimte\n        - exam location: tentamenruimte\n        - study room: studieruimte\n        - examination room: onderzoekskamer\n        - conference room: vergaderkamer\n      enum: \u0026ref_65\n        - general purpose\n        - lecture room\n        - computer room\n        - laboratory\n        - office\n        - workspace\n        - exam location\n        - study room\n        - examination room\n        - conference room\n      example: exam location\n    Building:\n      type: object\n      description: An object describing a building and the properties of a building.\n      required: \u0026ref_66\n        - buildingId\n        - name\n        - address\n        - primaryCode\n      properties: \u0026ref_67\n        buildingId:\n          type: string\n          description: Unique id of this building\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-331214174000\n        primaryCode:\n          description: The primary human readable identifier for this building. This is often the source identifier as defined by the institution.\n          example:\n            codeType: buildingId\n            code: '45'\n          type: object\n          properties: *ref_4\n          required: *ref_5\n          additionalProperties: false\n        abbreviation:\n          type: string\n          description: The abbreviation of the name of this building\n          maxLength: 256\n          example: Bb\n        name:\n          type: array\n          description: The name of this building\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Beatrix building\n        description:\n          type: array\n          description: The description of this building.\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: external rooms location for exams\n        address:\n          type: object\n          description: The full street address\n          required: *ref_8\n          properties: *ref_9\n        otherCodes:\n          type: array\n          description: An array of additional human readable codes/identifiers for the entity being described.\n          items:\n            type: object\n            properties: *ref_4\n            required: *ref_5\n            additionalProperties: false\n            example: *ref_11\n          example:\n            - codeType: bagId\n              code: '0344100000139910'\n        consumers:\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          type: array\n          items:\n            type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          example: *ref_30\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    Room:\n      type: object\n      description: An area within a building where education can take place\n      required: \u0026ref_72\n        - roomId\n        - roomType\n        - name\n        - primaryCode\n      properties: \u0026ref_73\n        roomId:\n          type: string\n          description: Unique id for this room\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-332114174000\n        primaryCode:\n          description: The primary human readable identifier for the room. This is often the source identifier as defined by the institution.\n          example:\n            codeType: roomCode\n            code: Bb4.54\n          type: object\n          properties: *ref_4\n          required: *ref_5\n          additionalProperties: false\n        roomType:\n          type: string\n          description: |\n            The type of this room\n            - general purpose: algemeen\n            - lecture room: collegezaal\n            - computer room: computerruimte\n            - laboratory: laboratorium\n            - office: kantoor\n            - workspace: werkruimte\n            - exam location: tentamenruimte\n            - study room: studieruimte\n            - examination room: onderzoekskamer\n            - conference room: vergaderkamer\n          enum: *ref_65\n          example: exam location\n        abbreviation:\n          type: string\n          description: The abbreviation of the name of this room\n          maxLength: 256\n          example: Bb4.54\n        name:\n          type: array\n          description: The name of this room\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Beatrix building room 4.54\n        description:\n          type: array\n          description: The description of this room. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: External education and exam room 4.54\n        totalSeats:\n          type: integer\n          format: int32\n          description: The total number of seats located in the room\n          example: 300\n        availableSeats:\n          type: integer\n          format: int32\n          description: The total number of available (=non-reserved) seats in the room\n          example: 200\n        floor:\n          type: string\n          description: The floor on which this room is located\n          example: '4'\n        wing:\n          type: string\n          description: The wing in which this room is located\n          example: None\n        geolocation:\n          type: object\n          description: Geolocation of the entrance of this room (WGS84 coordinate reference system)\n          required:\n            - latitude\n            - longitude\n          properties:\n            latitude:\n              type: number\n              format: double\n              example: 52.088255\n            longitude:\n              type: number\n              format: double\n              example: 5.106669\n        otherCodes:\n          type: array\n          description: An array of additional human readable codes/identifiers for the entity being described.\n          items:\n            type: object\n            properties: *ref_4\n            required: *ref_5\n            additionalProperties: false\n            example: *ref_11\n        building:\n          description: |\n            The building in which the room is located. [`expandable`](#tag/building_model)\n            By default only the `buildingId` (a string) is returned. If the client requested an expansion of `building` the full building object should be returned.\n          oneOf:\n            - title: buildingId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: Building object\n              type: object\n              description: An object describing a building and the properties of a building.\n              required: *ref_66\n              properties: *ref_67\n        consumers:\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          type: array\n          items:\n            type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          example: *ref_30\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    ProgramOffering:\n      allOf: \u0026ref_71\n        - allOf: *ref_68\n        - type: object\n          required:\n            - modeOfStudy\n            - startDate\n            - endDate\n          properties:\n            startDate:\n              type: string\n              description: The moment on which this offering starts, RFC3339 (full-date)\n              format: date\n              example: '2019-08-21'\n            endDate:\n              type: string\n              description: The moment on which this offering ends, RFC3339 (full-date)\n              format: date\n              example: '2023-06-15'\n            enrollStartDate:\n              type: string\n              description: The first day on which a student can enroll for this program.\n              format: date\n              example: '2019-05-01'\n            enrollEndDate:\n              type: string\n              description: The last day on which a student can enroll for this program.\n              format: date\n              example: '2019-08-01'\n            flexibleEntryPeriodStart:\n              type: string\n              description: If this is a program wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodEnd`.\n              format: date\n            flexibleEntryPeriodEnd:\n              type: string\n              description: If this is a program wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodStart`.\n              format: date\n            addresses:\n              type: array\n              description: Addresses for this offering\n              items:\n                type: object\n                description: The full street address\n                required: *ref_8\n                properties: *ref_9\n            priceInformation:\n              type: array\n              description: Price information for this offering.\n              items:\n                type: object\n                required: *ref_69\n                properties: *ref_70\n                additionalProperties: false\n              minItems: 1\n            program:\n              description: |\n                The Program that is offered in this programoffering. [`expandable`](#tag/program_model)\n                By default only the `programId` (a string) is returned. If the client requested an expansion of `program` the full program object should be returned.\n              oneOf:\n                - title: programId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Program object\n                  allOf: *ref_40\n            organization:\n              description: |\n                The organization that manages this programeoffering. [`expandable`](#tag/organization_model)\n                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n              oneOf:\n                - title: organizationId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Organization object\n                  type: object\n                  description: A description of a group of people working together to achieve a goal\n                  required: *ref_28\n                  properties: *ref_29\n            academicSession:\n              description: |\n                The academicsession during which this programoffering takes place. [`expandable`](#tag/academic_session_model)\n                By default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.\n              oneOf:\n                - title: academicSessionId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: AcademicSession object\n                  type: object\n                  description: |\n                    A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\n                    Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n                  required: *ref_51\n                  properties: *ref_52\n    CourseOffering:\n      allOf: \u0026ref_76\n        - allOf: *ref_68\n        - type: object\n          required:\n            - modeOfStudy\n            - startDate\n            - endDate\n          properties:\n            startDate:\n              type: string\n              description: The moment on which this offering starts, RFC3339 (full-date)\n              format: date\n              example: '2019-08-21'\n            endDate:\n              type: string\n              description: The moment on which this offering ends, RFC3339 (full-date)\n              format: date\n              example: '2019-10-23'\n            enrollStartDate:\n              type: string\n              description: The first day on which a student can enroll for this course.\n              format: date\n              example: '2019-05-01'\n            enrollEndDate:\n              type: string\n              description: The last day on which a student can enroll for this course.\n              format: date\n              example: '2019-08-01'\n            flexibleEntryPeriodStart:\n              type: string\n              description: If this is a course wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodEnd`.\n              format: date\n            flexibleEntryPeriodEnd:\n              type: string\n              description: If this is a course wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodStart`.\n              format: date\n            addresses:\n              type: array\n              description: Addresses for this offering\n              items:\n                type: object\n                description: The full street address\n                required: *ref_8\n                properties: *ref_9\n            priceInformation:\n              type: array\n              description: Price information for this offering.\n              items:\n                type: object\n                required: *ref_69\n                properties: *ref_70\n                additionalProperties: false\n            course:\n              description: |\n                The course that is offered in this courseoffering. [`expandable`](#tag/course_model)\n                By default only the `courseId` (a string) is returned. If the client requested an expansion of `course` the full course object should be returned.\n              oneOf:\n                - title: courseId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Course object\n                  allOf: *ref_49\n            programOffering:\n              description: |\n                The programoffering where this courseoffering is related to. [`expandable`](#tag/program_offering_model)\n                By default only the `programOfferingId` (a string) is returned. If the client requested an expansion of `programOffering` the full programOffering object should be returned.\n              oneOf:\n                - title: programOfferingId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: ProgramOffering object\n                  allOf: *ref_71\n            organization:\n              description: |\n                The organization that manages this courseoffering. [`expandable`](#tag/organization_model)\n                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n              oneOf:\n                - title: organizationId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Organization object\n                  type: object\n                  description: A description of a group of people working together to achieve a goal\n                  required: *ref_28\n                  properties: *ref_29\n            academicSession:\n              description: |\n                The academicsession during which this courseoffering takes place. [`expandable`](#tag/academic_session_model)\n                By default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.\n              oneOf:\n                - title: academicSessionId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: AcademicSession object\n                  type: object\n                  description: |\n                    A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\n                    Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n                  required: *ref_51\n                  properties: *ref_52\n    ComponentOffering:\n      allOf: \u0026ref_101\n        - allOf: *ref_68\n        - type: object\n          required:\n            - startDateTime\n            - endDateTime\n          properties:\n            startDateTime:\n              type: string\n              description: The moment on which this offering starts, RFC3339 (date-time)\n              format: date-time\n              example: '2020-12-15T20:00:00+01:00'\n            endDateTime:\n              type: string\n              description: The moment on which this offering ends, RFC3339 (date-time)\n              format: date-time\n              example: '2020-12-16T20:00:00+01:00'\n            enrollStartDate:\n              type: string\n              description: The first day on which a student can enroll for this course.\n              format: date\n            enrollEndDate:\n              type: string\n              description: The last day on which a student can enroll for this course.\n              format: date\n            resultWeight:\n              type: integer\n              description: The result weight of this offering\n              minimum: 0\n              maximum: 100\n              example: 100\n            addresses:\n              type: array\n              description: Addresses for this offering\n              items:\n                type: object\n                description: The full street address\n                required: *ref_8\n                properties: *ref_9\n            priceInformation:\n              type: array\n              description: Price information for this offering.\n              items:\n                type: object\n                required: *ref_69\n                properties: *ref_70\n                additionalProperties: false\n            room:\n              type: object\n              description: An area within a building where education can take place\n              required: *ref_72\n              properties: *ref_73\n            component:\n              description: |\n                The component that is offered in this componentoffering. [`expandable`](#tag/component_model)\n                By default only the `componentId` (a string) is returned. If the client requested an expansion of `component` the full component object should be returned.\n              oneOf:\n                - title: componentId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Component object\n                  type: object\n                  description: A component is a part of a course\n                  required: *ref_74\n                  properties: *ref_75\n            courseOffering:\n              description: |\n                The courseoffering where this componentoffering is related to. [`expandable`](#tag/course_offering_model)\n                By default only the `courseOfferingId` (a string) is returned. If the client requested an expansion of `courseOffering` the full courseOffering object should be returned.\n              oneOf:\n                - title: courseOfferingId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: CourseOffering object\n                  allOf: *ref_76\n            organization:\n              description: |\n                The organization that manages this componentoffering. [`expandable`](#tag/organization_model)\n                By default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n              oneOf:\n                - title: organizationId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: Organization object\n                  type: object\n                  description: A description of a group of people working together to achieve a goal\n                  required: *ref_28\n                  properties: *ref_29\n            academicSession:\n              description: |\n                The academicsession during which this componentoffering takes place. [`expandable`](#tag/academic_session_model)\n                By default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.\n              oneOf:\n                - title: academicSessionId\n                  type: string\n                  description: An identifier of another resource.\n                  format: uuid\n                - title: AcademicSession object\n                  type: object\n                  description: |\n                    A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\n                    Offerings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n                  required: *ref_51\n                  properties: *ref_52\n    associationRole:\n      type: string\n      description: |\n        The role of this person associated with the offering\n          - student: student\n          - lecturer: docent\n          - teaching assistant: studentassistent\n          - coordinator: coördinator\n          - guest: gast\n      enum: \u0026ref_79\n        - student\n        - lecturer\n        - teaching assistant\n        - coordinator\n        - guest\n      example: student\n    associationState:\n      type: string\n      description: The state of this association\n      enum: \u0026ref_80\n        - pending\n        - canceled\n        - denied\n        - associated\n        - queued\n      example: associated\n    resultState:\n      type: string\n      description: The state of this result\n      enum: \u0026ref_90\n        - in progress\n        - postponed\n        - completed\n        - queued\n      example: completed\n    AssociationId:\n      type: object\n      properties: \u0026ref_84\n        associationId:\n          type: string\n          description: Unique id of this association\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n          readOnly: true\n      required: \u0026ref_85\n        - associationId\n    remoteAssociationState:\n      type: string\n      description: The state of this association for the institution performing the request.\n      enum: \u0026ref_81\n        - pending\n        - canceled\n        - denied\n        - associated\n        - queued\n      example: associated\n    MBO-Association:\n      type: object\n      description: MBO-toetsafname add-on attributes to the Association\n      required: \u0026ref_77\n        - consumerKey\n      properties: \u0026ref_78\n        consumerKey:\n          type: string\n        startUpURL:\n          type: string\n          description: |\n            URL to be used to start this assocation by the user\n          format: uri\n          maxLength: 2048\n          example: https://surf.nl\n        additionalTimeInMin:\n          type: integer\n          format: int32\n          example: 30\n          description: |\n            If you need additional time, specify how much max\n            To be documented see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/issues/4\n        personalNeeds:\n          type: array\n          items:\n            type: string\n          minItems: 0\n          description: |\n            personalNeed\n            personalNeed to be added for this student\n            TODO : make enum: see https://www.imsglobal.org/sites/default/files/spec/afa/3p0/information_model/imsafa3p0pnp_v1p0_InfoModel.html\n            examples : \"extraTime\", \"spoken\", \"spell-checker-on-screen\"\n    ConsumerOnAssociation:\n      type: array\n      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n      items: \u0026ref_82\n        anyOf:\n          - type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          - type: object\n            description: MBO-toetsafname add-on attributes to the Association\n            required: *ref_77\n            properties: *ref_78\n      example: \u0026ref_83\n        - consumerKey: MBO-toetsafname\n          additionalTimeInMin: 30\n          personalNeeds:\n            - extraTime\n            - spoken\n            - spell-checker-on-screen\n    AssociationProperties:\n      type: object\n      description: A relationship between a person object and an offering\n      required: \u0026ref_86\n        - associationType\n        - role\n        - state\n      properties: \u0026ref_87\n        associationType:\n          type: string\n          description: The type of this association\n          enum:\n            - programOfferingAssociation\n            - courseOfferingAssociation\n            - componentOfferingAssociation\n          example: componentOfferingAssociation\n          readOnly: true\n        role:\n          type: string\n          description: |\n            The role of this person associated with the offering\n              - student: student\n              - lecturer: docent\n              - teaching assistant: studentassistent\n              - coordinator: coördinator\n              - guest: gast\n          enum: *ref_79\n          example: student\n        state:\n          readOnly: true\n          type: string\n          description: The state of this association\n          enum: *ref_80\n          example: associated\n        remoteState:\n          writeOnly: true\n          type: string\n          description: The state of this association for the institution performing the request.\n          enum: *ref_81\n          example: associated\n        consumers:\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          type: array\n          items: *ref_82\n          example: *ref_83\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    Association:\n      allOf: \u0026ref_96\n        - type: object\n          properties: *ref_84\n          required: *ref_85\n        - type: object\n          description: A relationship between a person object and an offering\n          required: *ref_86\n          properties: *ref_87\n    passState:\n      type: string\n      description: The state of this result\n      enum: \u0026ref_91\n        - unknown\n        - passed\n        - failed\n      example: passed\n    MBO-Result:\n      type: object\n      description: MBO-toetsafname add-on attributes to the result\n      required: \u0026ref_88\n        - attendance\n        - consumerKey\n      properties: \u0026ref_89\n        consumerKey:\n          type: string\n        attendance:\n          type: string\n          description: |\n            attendance\n            indication of presence during the test (mandatory). \n            Possible values are notPresent (niet aanwezig),\n            notStarted (aanwezig maar niet gestart),\n            notFinished (aanwezig en gestart maar niet afgerond/ingeleverd)\n            en present (aanwezig en afgerond/ingeleverd)\"\n          enum:\n            - notPresent\n            - notStarted\n            - notFinished\n            - present\n        assessorId:\n          type: string\n          description: |\n            assessorId\n            the identity of the assessor. \n        assessorCode:\n          type: string\n          description: |\n            assessorCode\n            the identity code of the assessor. \n        irregularities:\n          type: string\n          description: |\n            irregularities: textual information about the student test, such as irregularities\n          example: student cheated and 15 min late\n        final:\n          type: boolean\n          description: |\n            final: indicates that the result has been finalised by the exam committee. \n            Can be done in Toetsplanning (or even DR), so most Toetsafname applications will send false. (optional, default false) \n        documents:\n          type: array\n          items:\n            type: string\n          minItems: 0\n          description: |\n            documents\n            documents to be added to this offering\n            TODO : Make a real object : see https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/blob/main/doc/flow4.md\n    ConsumerOnResult:\n      type: array\n      description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n      items: \u0026ref_92\n        anyOf:\n          - type: object\n            description: Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.\n            required: *ref_12\n            properties: *ref_13\n            additionalProperties: true\n          - type: object\n            description: MBO-toetsafname add-on attributes to the result\n            required: *ref_88\n            properties: *ref_89\n      example: \u0026ref_93\n        - consumerKey: MBO-toetsafname\n          attendance: present\n          assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d\n          assessorCode: JAJE\n          irregularities: student cheated and 15 min late\n          final: true\n          documents:\n            - documentId: 123454\n              documentType: assessmentForm\n              documentName: Assessment form for Jake Doe.pd\n    Result:\n      type: object\n      description: A result as part of an association\n      required: \u0026ref_94\n        - state\n        - resultDate\n      properties: \u0026ref_95\n        state:\n          type: string\n          description: The state of this result\n          enum: *ref_90\n          example: completed\n        pass:\n          type: string\n          description: The state of this result\n          enum: *ref_91\n          example: passed\n        comment:\n          type: string\n          description: The comment on this result\n        score:\n          type: string\n          description: The score of this program/course/component association (based on resultValueType in offering)\n          example: '9'\n        resultDate:\n          type: string\n          description: The date this result has been published, RFC3339 (full-date)\n          format: date\n          example: '2020-09-28'\n        consumers:\n          type: array\n          description: The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          items: *ref_92\n          example: *ref_93\n        ext:\n          type: object\n          description: Object for additional non-standard attributes\n    ProgramResult:\n      allOf: \u0026ref_97\n        - type: object\n          description: A result as part of an association\n          required: *ref_94\n          properties: *ref_95\n        - type: object\n          required:\n            - studyLoad\n          properties:\n            studyLoad:\n              type: object\n              description: The amount of effort to complete this education in the specified unit.\n              properties: *ref_25\n              example: *ref_26\n    ProgramOfferingAssociationExpandable:\n      allOf: \u0026ref_120\n        - allOf: *ref_96\n        - type: object\n          properties:\n            result:\n              allOf: *ref_97\n            person:\n              type: object\n              properties: *ref_14\n              required: *ref_15\n    CourseResult:\n      allOf: \u0026ref_98\n        - type: object\n          description: A result as part of an association\n          required: *ref_94\n          properties: *ref_95\n        - type: object\n          required:\n            - studyLoad\n          properties:\n            studyLoad:\n              type: object\n              description: The amount of effort to complete this education in the specified unit.\n              properties: *ref_25\n              example: *ref_26\n    CourseOfferingAssociationExpandable:\n      allOf: \u0026ref_121\n        - allOf: *ref_96\n        - type: object\n          properties:\n            result:\n              allOf: *ref_98\n            person:\n              type: object\n              properties: *ref_14\n              required: *ref_15\n    ComponentResult:\n      allOf: \u0026ref_99\n        - type: object\n          description: A result as part of an association\n          required: *ref_94\n          properties: *ref_95\n        - type: object\n          required:\n            - weight\n          properties:\n            weight:\n              type: integer\n              description: The weight to 100 as total for this offering in the course\n              format: int32\n              minimum: 0\n              maximum: 100\n              example: 100\n    ComponentOfferingAssociationExpandable:\n      allOf: \u0026ref_122\n        - allOf: *ref_96\n        - type: object\n          properties:\n            result:\n              allOf: *ref_99\n            person:\n              type: object\n              properties: *ref_14\n              required: *ref_15\n    ComponentOfferingAssociation:\n      allOf: \u0026ref_100\n        - allOf: *ref_96\n        - type: object\n          properties:\n            result:\n              allOf: *ref_99\n    ComponentOfferingAssociationExpandedWrite:\n      allOf: \u0026ref_123\n        - allOf: *ref_100\n      properties: \u0026ref_124\n        person:\n          oneOf:\n            - title: personId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: Person\n              allOf: *ref_41\n        offering:\n          oneOf:\n            - title: offeringId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: ComponentOffering\n              allOf: *ref_101\n    ProgramOfferingAssociation:\n      allOf: \u0026ref_102\n        - allOf: *ref_96\n        - type: object\n          properties:\n            result:\n              allOf: *ref_97\n    CourseOfferingAssociation:\n      allOf: \u0026ref_103\n        - allOf: *ref_96\n        - type: object\n          properties:\n            result:\n              allOf: *ref_98\n    AssociationFull:\n      oneOf: \u0026ref_125\n        - allOf: *ref_102\n        - allOf: *ref_103\n        - allOf: *ref_100\n      properties: \u0026ref_126\n        person:\n          readOnly: true\n          oneOf:\n            - title: personId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: Person\n              allOf: *ref_41\n        offering:\n          oneOf:\n            - title: offeringId\n              type: string\n              description: An identifier of another resource.\n              format: uuid\n            - title: ComponentOffering\n              allOf: *ref_101\n            - title: CourseOffering\n              allOf: *ref_76\n            - title: ProgramOffering\n              allOf: *ref_71\n    PostResponse:\n      type: object\n      description: A system message as a response to a POST message\n      required: \u0026ref_127\n        - message\n      properties: \u0026ref_128\n        message:\n          description: information displayed to user\n          type: array\n          minItems: 1\n          items:\n            type: object\n            description: A String with an associated language code.\n            properties: *ref_2\n            example: *ref_3\n          example:\n            - language: en-GB\n              value: Your enrollment was partly succesful, you have been placed on the waitinglist\n        redirect:\n          description: URL where additional information can be found e.g. by use of deeplink\n          type: string\n          format: uri\n  responses:\n    ErrorBadRequest:\n      description: Bad request\n      content: \u0026ref_106\n        application/problem+json:\n          schema:\n            type: object\n            description: A system message including the error code and an explanation\n            required: *ref_104\n            properties: *ref_105\n    ErrorUnauthorized:\n      description: Unauthorized\n      content: \u0026ref_107\n        application/problem+json:\n          schema:\n            type: object\n            description: A system message including the error code and an explanation\n            required: *ref_104\n            properties: *ref_105\n    ErrorForbidden:\n      description: Forbidden\n      content: \u0026ref_108\n        application/problem+json:\n          schema:\n            type: object\n            description: A system message including the error code and an explanation\n            required: *ref_104\n            properties: *ref_105\n    ErrorNotFound:\n      description: Not Found\n      content: \u0026ref_109\n        application/problem+json:\n          schema:\n            type: object\n            description: A system message including the error code and an explanation\n            required: *ref_104\n            properties: *ref_105\n    ErrorMethodNotAllowed:\n      description: Method not allowed\n      content: \u0026ref_110\n        application/problem+json:\n          schema:\n            type: object\n            description: A system message including the error code and an explanation\n            required: *ref_104\n            properties: *ref_105\n    ErrorTooManyRequests:\n      description: Too many requests\n      content: \u0026ref_111\n        application/problem+json:\n          schema:\n            type: object\n            description: A system message including the error code and an explanation\n            required: *ref_104\n            properties: *ref_105\n    ErrorInternalServerError:\n      description: Internal Server Error\n      content: \u0026ref_112\n        application/problem+json:\n          schema:\n            type: object\n            description: A system message including the error code and an explanation\n            required: *ref_104\n            properties: *ref_105\n  parameters:\n    pageSize:\n      name: pageSize\n      in: query\n      description: The number of items per page\n      required: false\n      schema: \u0026ref_113\n        type: integer\n        format: int32\n        default: 10\n        enum:\n          - 10\n          - 20\n          - 50\n          - 100\n          - 250\n    pageNumber:\n      name: pageNumber\n      in: query\n      description: The page number to get. Page numbers start at 1.\n      required: false\n      schema: \u0026ref_114\n        type: integer\n        format: int32\n        example: 1\n        minimum: 1\n    consumer:\n      name: consumer\n      in: query\n      description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n      required: false\n      schema: \u0026ref_115\n        type: string\n    search:\n      name: q\n      in: query\n      description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)\n      required: false\n      schema: \u0026ref_116\n        type: string\n    teachingLanguage:\n      name: teachingLanguage\n      in: query\n      description: Filter by teachingLanguage, which is a string describing the main teaching language, should be a three-letter language code as specified by ISO 639-2.\n      required: false\n      schema: \u0026ref_117\n        type: string\n        pattern: ^[a-z]{3}$\n        minLength: 3\n        maxLength: 3\n      example: nld\npaths:\n  /persons/{personId}:\n    get:\n      summary: GET /persons/{personId}\n      description: Get a single person.\n      security:\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - persons\n      parameters:\n        - name: personId\n          in: path\n          description: User ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf: *ref_41\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n  /components/{componentId}:\n    get:\n      summary: GET /components/{componentId}\n      description: Get a single component.\n      security:\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - components\n      parameters:\n        - name: componentId\n          in: path\n          description: component ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: expand\n          in: query\n          explode: false\n          description: Optional properties to expand, separated by a comma\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - course\n                - organization\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                description: A component is a part of a course\n                required: *ref_74\n                properties: *ref_75\n              examples:\n                Request details of one test (Flow 0.2):\n                  value:\n                    componentId: c5fca27e-ccc1-430d-9888-90e005ad6a86\n                    primaryCode:\n                      codeType: testID\n                      code: '5'\n                    componentType: test\n                    name:\n                      - language: nl-NL\n                        value: Rekenen 2F voor technische opleidingen\n                    abbreviation: REK2F-TECH\n                    modeOfDelivery:\n                      - situated\n                    duration: PT60M\n                    description:\n                      - language: nl-NL\n                        value: Rekentest MBO op niveau 2F toegespitst op technische opleidingen zoals procestechniek/machinebouw\n                    teachingLanguage: nld\n                    assessment:\n                      - language: nl-NL\n                        value: Digitale toetsing\n                    organization: 452c1a86-a0af-475b-b03f-724878b0f387\n                    consumers:\n                      - consumerKey: MBO-toetsafname\n                        extraTime: P60M\n                        availablePersonalNeeds:\n                          - extraTime\n                          - spoken\n                          - spell-checker-on-screen\n                        exam: true\n                        resultValueType: 1.0-10.0\n                        passFrom: '5.5'\n                        retries: 2\n                        status: active\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n  /components/{componentId}/offerings:\n    get:\n      summary: GET /components/{componentId}/offerings\n      description: Get a list of all offerings for this component, ordered chronologically.\n      security:\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - offerings\n      parameters:\n        - name: componentId\n          in: path\n          description: Component ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: pageSize\n          in: query\n          description: The number of items per page\n          required: false\n          schema: *ref_113\n        - name: pageNumber\n          in: query\n          description: The page number to get. Page numbers start at 1.\n          required: false\n          schema: *ref_114\n        - name: consumer\n          in: query\n          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          required: false\n          schema: *ref_115\n        - name: q\n          in: query\n          description: Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)\n          required: false\n          schema: *ref_116\n        - name: teachingLanguage\n          in: query\n          description: Filter by teachingLanguage, which is a string describing the main teaching language, should be a three-letter language code as specified by ISO 639-2.\n          required: false\n          schema: *ref_117\n          example: nld\n        - name: resultExpected\n          in: query\n          description: Filter by resultExpected\n          required: false\n          schema:\n            type: boolean\n        - name: since\n          in: query\n          description: Filter all offerings by providing a minimum start date for the corresponding academic session, RFC3339 (full-date). By default only future offerings are shown (equal to `?since=\u003ctoday\u003e`).\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: until\n          in: query\n          description: Filter all offerings by providing a maximum end date for the corresponding academic session, RFC3339 (full-date).\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: sort\n          in: query\n          explode: false\n          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - offeringId\n                - name\n                - startDateTime\n                - endDateTime\n                - '-offeringId'\n                - '-name'\n                - '-startDateTime'\n                - '-endDateTime'\n            default:\n              - startDateTime\n            example:\n              - offeringId\n              - '-startDateTime'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    required: *ref_118\n                    properties: *ref_119\n                  - type: object\n                    required:\n                      - items\n                    properties:\n                      items:\n                        type: array\n                        items:\n                          allOf: *ref_101\n                      ext:\n                        type: object\n                        description: Object for additional non-standard attributes\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n  /offerings/{offeringId}:\n    get:\n      summary: GET /offerings/{offeringId}\n      description: Get a single offering.\n      security:\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - offerings\n      parameters:\n        - name: offeringId\n          in: path\n          description: Offering ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: expand\n          in: query\n          explode: false\n          description: Optional properties to expand, separated by a comma\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - program\n                - programOffering\n                - course\n                - courseOffering\n                - component\n                - organization\n                - academicSession\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - title: componentOffering\n                    allOf: *ref_101\n              examples:\n                Read current state of offering (flow 2.6):\n                  value:\n                    primaryCode:\n                      codeType: offeringCode\n                      code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13\n                    offeringType: component\n                    academicSession: 937983ad-cc0f-45a6-95ca-a8f60b7cf125\n                    name:\n                      - language: nl-NL\n                        value: 20220621-12:45-Remindo rekenen MBO-3\n                    description:\n                      - language: nl-NL\n                        value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3\n                    teachingLanguage: nld\n                    modeOfDelivery:\n                      - situated\n                    resultExpected: true\n                    consumers:\n                      - consumerKey: MBO-toetsafname\n                        duration: P60M\n                        lastPossibleStartDateTime: '2020-12-15T08:50:00+01:00'\n                        startOptions: individualStart\n                        durationFrom: individualStartDateTime\n                        durationUntil: testDuration\n                        safety:\n                          - Fixed Location\n                          - Surveillance\n                        offeringState: active\n                        locationCode: A-22\n                    startDateTime: '2022-06-21T12:45:00+01:00'\n                    endDateTime: '2022-06-21T13:45:00+01:00'\n                    component: c5fca27e-ccc1-430d-9888-90e005ad6a86\n                Read current state of offering (flow 2.6 minimal):\n                  value:\n                    primaryCode:\n                      codeType: offeringCode\n                      code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13\n                    offeringType: component\n                    name:\n                      - language: nl-NL\n                        value: 20220621-12:45-Remindo rekenen MBO-3\n                    description:\n                      - language: nl-NL\n                        value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3\n                    teachingLanguage: nld\n                    resultExpected: true\n                    startDateTime: '2022-06-21T12:45:00+01:00'\n                    endDateTime: '2022-06-21T13:45:00+01:00'\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n    patch:\n      summary: PATCH /offerings/{offeringId}\n      description: |\n        PATCH update a single offering based on the offeringID provided. \n      security:\n        - openId:\n            - offerings.write\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - offerings\n      parameters:\n        - name: offeringId\n          in: path\n          description: Offering ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: componentOffering\n              allOf: *ref_101\n            examples:\n              Delete offering (Flow 2.5):\n                value:\n                  state: canceled\n              Send attendance and offering report directly (Flow 4.1):\n                value:\n                  consumers:\n                    - consumerKey: MBO-toetsafname\n                      irregularities: There was a lot of noise from the construction site nearby.\n                      documents:\n                        - documentId: '454566464665355545'\n                          documentType: sessionReport\n                          documentName: Session report on Session tbd.pdf\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n    put:\n      summary: PUT /offerings/{offeringId}\n      description: |\n        PUT / create an offering  or update a single offering based on the offeringID provided. \n        You want to PUT a resource to the same URI you intend to GET it from. also check RFC 72314.3.4 PUT.\n      security:\n        - openId:\n            - offerings.write\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - offerings\n      parameters:\n        - name: offeringId\n          in: path\n          description: Offering ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: componentOffering\n              allOf: *ref_101\n            examples:\n              Create offering (zitting) without students (flow 2.1):\n                value:\n                  primaryCode:\n                    codeType: offeringCode\n                    code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13\n                  offeringType: component\n                  academicSession: 937983ad-cc0f-45a6-95ca-a8f60b7cf125\n                  name:\n                    - language: nl-NL\n                      value: 20220621-12:45-Remindo rekenen MBO-3\n                  description:\n                    - language: nl-NL\n                      value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3\n                  teachingLanguage: nld\n                  modeOfDelivery:\n                    - situated\n                  resultExpected: true\n                  consumers:\n                    - consumerKey: MBO-toetsafname\n                      duration: P60M\n                      lastPossibleStartDateTime: '2020-12-15T08:50:00+01:00'\n                      startOptions: individualStart\n                      durationFrom: individualStartDateTime\n                      durationUntil: testDuration\n                      safety:\n                        - Fixed Location\n                        - Surveillance\n                      offeringState: active\n                      locationCode: A-22\n                  startDateTime: '2022-06-21T12:45:00+01:00'\n                  endDateTime: '2022-06-21T13:45:00+01:00'\n                  component: c5fca27e-ccc1-430d-9888-90e005ad6a86\n              Create offering (zitting) without students (flow 2.1 minimal):\n                value:\n                  primaryCode:\n                    codeType: offeringCode\n                    code: Remindo_rekenen_MBO-3_op_woendag_middag_21-jun-22_om_13:00_in_lokaal_13\n                  offeringType: component\n                  name:\n                    - language: nl-NL\n                      value: 20220621-12:45-Remindo rekenen MBO-3\n                  description:\n                    - language: nl-NL\n                      value: Beschrijving van 20220621-12:45-Remindo rekenen MBO-3\n                  teachingLanguage: nld\n                  resultExpected: true\n                  startDateTime: '2022-06-21T12:45:00+01:00'\n                  endDateTime: '2022-06-21T13:45:00+01:00'\n      responses:\n        '200':\n          description: OK\n        '201':\n          description: Created\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n  /offerings/{offeringId}/associations:\n    get:\n      summary: GET /offerings/{offeringId}/associations\n      description: Get a list of all offering associations.\n      security:\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - associations\n      parameters:\n        - name: offeringId\n          in: path\n          description: Offering ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: pageSize\n          in: query\n          description: The number of items per page\n          required: false\n          schema: *ref_113\n        - name: pageNumber\n          in: query\n          description: The page number to get. Page numbers start at 1.\n          required: false\n          schema: *ref_114\n        - name: consumer\n          in: query\n          description: Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.\n          required: false\n          schema: *ref_115\n        - name: associationType\n          in: query\n          description: Filter by association type\n          required: false\n          schema:\n            type: string\n            enum:\n              - programOffering\n              - courseOffering\n              - componentOffering\n        - name: role\n          in: query\n          description: Filter by role\n          required: false\n          schema:\n            type: string\n            description: |\n              The role of this person associated with the offering\n                - student: student\n                - lecturer: docent\n                - teaching assistant: studentassistent\n                - coordinator: coördinator\n                - guest: gast\n            enum: *ref_79\n            example: student\n        - name: state\n          in: query\n          description: Filter by state\n          required: false\n          schema:\n            type: string\n            description: The state of this association\n            enum: *ref_80\n            example: associated\n        - name: result-state\n          in: query\n          description: Filter by result state\n          required: false\n          schema:\n            type: string\n            description: The state of this result\n            enum: *ref_90\n            example: completed\n        - name: sort\n          in: query\n          explode: false\n          description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - associationId\n                - '-associationId'\n            default:\n              - associationId\n            example:\n              - associationId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    required: *ref_118\n                    properties: *ref_119\n                  - type: object\n                    required:\n                      - items\n                    properties:\n                      items:\n                        type: array\n                        items:\n                          oneOf:\n                            - allOf: *ref_120\n                            - allOf: *ref_121\n                            - allOf: *ref_122\n                      ext:\n                        type: object\n                        description: Object for additional non-standard attributes\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n  /offerings/{offeringId}/associations{associationId}:\n    put:\n      summary: PUT /offerings/{offeringId}/associations/{associationId}\n      operationId: replace-association\n      description: |\n        PUT a single association to enroll a person on s specific association that can later be retreived. The offeringId is provided in the path. \n      security:\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - associations\n      parameters:\n        - name: offeringId\n          in: path\n          description: Offering ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: associationId\n          in: path\n          description: Association ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf: *ref_123\n              properties: *ref_124\n            examples:\n              Add student to created offering (zitting) (flow 2.2.B and 2.3):\n                value:\n                  associationType: componentOfferingAssociation\n                  role: student\n                  state: associated\n                  consumers:\n                    - consumerKey: MBO-toetsafname\n                      startUpURL: https://myComponent.nl?test\n                      extraTimeInMin: 30\n                      personalNeeds:\n                        - extraTime\n                        - spoken\n                        - spell-checker-on-screen\n                  person:\n                    personId: 111-2222-33-4444-222\n                    primaryCode:\n                      codeType: studentNumber\n                      code: '1234567'\n                    givenName: Maartje\n                    surnamePrefix: van\n                    surname: Damme\n                    displayName: Maartje van Damme\n                    activeEnrollment: true\n                    affiliations:\n                      - student\n                    mail: vandamme.mcw@student.roc.nl\n                    languageOfChoice:\n                      - nl-NL\n                    otherCodes:\n                      - codeType: accountId\n                        code: s1234567@student.roc.nl\n                      - codeType: eckid\n                        code: https://roc.nl/8078d3...28bc85\n                  offering: 123e4567-e89b-12d3-a456-134564174000\n              Change student enrollment to offering (zitting) (flow 2.x):\n                value:\n                  associationType: componentOfferingAssociation\n                  role: student\n                  state: associated\n                  consumers:\n                    - consumerKey: MBO-toetsafname\n                      startUpURL: https://myComponent.nl?test\n                      extraTimeInMin: 30\n                      personalNeeds:\n                        - extraTime\n                        - spoken\n                        - spell-checker-on-screen\n                  person: 111-2222-33-4444-222\n                  offering: 123e4567-e89b-12d3-a456-134564174000\n      responses:\n        '200':\n          description: OK\n        '201':\n          description: Created\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n  /associations/{associationId}:\n    get:\n      summary: GET /associations/{associationId}\n      description: |\n        Get a single association.\n      security:\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - associations\n      parameters:\n        - name: associationId\n          in: path\n          description: Association ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: expand\n          in: query\n          explode: false\n          description: Optional properties to expand, separated by a comma\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - person\n                - offering\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf: *ref_125\n                properties: *ref_126\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n    patch:\n      summary: PATCH /associations/{associationId}\n      description: |\n        Update the status or result of an enrollment. Other elements of the association object COULD \n        also be PATCHED. But are not likely and have therefor not been included in this endpoint.\n        Implementation of the PATCH activity is based on use PATCH with JSON Merge Patch standard, \n        a specialized media type `application/merge-patch+json` for partial resource representation \n        to update parts of resource objects.\n      security:\n        - openId:\n            - associations.write\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - associations\n      parameters:\n        - name: associationId\n          in: path\n          description: The id of the association to update\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/merge-patch+json:\n            schema:\n              properties:\n                remoteState:\n                  type: string\n                  description: The state of this association for the institution performing the request.\n                  enum: *ref_81\n                  example: associated\n                result:\n                  oneOf:\n                    - allOf: *ref_99\n            examples:\n              Delete student from offering (flow 2.4):\n                value:\n                  state: canceled\n              Send attendance and result directly (flow 3.1):\n                value:\n                  result:\n                    state: completed\n                    pass: unknown\n                    comment: string\n                    score: '9'\n                    resultDate: '2022-09-28'\n                    weight: 100\n                    consumers:\n                      - consumerKey: MBO-toetsafname\n                        attendance: present\n                        assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d\n                        assessorCode: JAJE\n                        irregularities: Jantje heeft gespiekt\n                        final: true\n                        documents:\n                          - documentId: 123454\n                            documentType: assessmentForm\n                            documentName: Assessment form for Jake Doe.pdf\n              Send attendance for student directly (flow 3.2.A):\n                value:\n                  result:\n                    state: in progress\n                    resultDate: '2022-09-27'\n                    weight: 100\n                    consumers:\n                      - consumerKey: MBO-toetsafname\n                        attendance: present\n              Send result for student (flow 3.2.B):\n                value:\n                  result:\n                    state: completed\n                    pass: unknown\n                    comment: string\n                    score: '9'\n                    resultDate: '2022-11-18'\n                    weight: 100\n                    consumers:\n                      - consumerKey: MBO-toetsafname\n                        attendance: present\n                        assessorId: 05035972-0619-4d0b-8a09-7bdb6eee5e6d\n                        assessorCode: JAJE\n                        irregularities: Jantje heeft gespiekt\n                        final: true\n                        documents:\n                          - documentId: 123454\n                            documentType: assessmentForm\n                            documentName: Assessment form for Jake Doe.pdf\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties: *ref_84\n                    required: *ref_85\n                  - type: object\n                    description: A system message as a response to a POST message\n                    required: *ref_127\n                    properties: *ref_128\n                  - properties:\n                      state:\n                        type: string\n                        description: The state of this association\n                        enum: *ref_80\n                        example: associated\n        '400':\n          description: Bad request\n          content: *ref_106\n    put:\n      summary: PUT /associations/{associationId}\n      description: |\n        PUT a single association to enroll a person on s specific association that can later be retreived. The offeringId is provided in the path. \n      security:\n        - oAuthFlows:\n            - test-admin-flow\n      tags:\n        - associations\n      parameters:\n        - name: associationId\n          in: path\n          description: Association ID\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf: *ref_123\n              properties: *ref_124\n      responses:\n        '200':\n          description: OK\n        '201':\n          description: Created\n        '400':\n          description: Bad request\n          content: *ref_106\n        '401':\n          description: Unauthorized\n          content: *ref_107\n        '403':\n          description: Forbidden\n          content: *ref_108\n        '404':\n          description: Not Found\n          content: *ref_109\n        '405':\n          description: Method not allowed\n          content: *ref_110\n        '429':\n          description: Too many requests\n          content: *ref_111\n        '500':\n          description: Internal Server Error\n          content: *ref_112\n",
			"canonicalURL": "/github.com/NetwerkExamineringDigitalisering/NED-OOAPI@491ebe4f1ab31b34782e7572826daedc49eac026/-/blob/specification/ooapiv5_MBO.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NetwerkExamineringDigitalisering/NED-OOAPI/blob/491ebe4f1ab31b34782e7572826daedc49eac026/specification/ooapiv5_MBO.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 920: anchor \"ref_27\" value contains itself"
}