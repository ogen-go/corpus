{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/BinaryStudioAcademy/bsa-2021-hypecrafter"
		},
		"file": {
			"name": "openApiDocumentation.yaml",
			"size": 0,
			"path": "gateway/openApiDocumentation.yaml",
			"byteSize": 6462,
			"content": "openapi: 3.0.0\ninfo:\n  title: API\n  description: API documentation for BSA-Project [Hypecrafter](https://github.com/BinaryStudioAcademy/bsa-2021-hypecrafter)\n  version: 0.1.9\nservers:\n  - url: http://localhost:3001/\n    description: Main server\n  - url: http://hypecrafter2-env.eba-n3gbu5mb.us-west-2.elasticbeanstalk.com/api\n    description: Staging server\npaths:\n  /users:\n    get:\n      tags:\n        - User\n      summary: Returns a list of users.\n      responses:\n        '200':\n          description: A JSON array of user names\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/User'\n              example:\n                - id: 1\n                  name: \"Carmela Sykes\"\n                - id: 2\n                  name: \"Esther Leach\"\n                - id: 3\n                  name: \"Stuart Powers\"\n        '408':\n          description: Something go wrong\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: \"Timed out\"\n  /users/{userId}:\n    get:\n      tags:\n        - User\n      summary: Returns a user by ID.\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          description: The ID of the user to return.\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        '200':\n          description: A user object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '408':\n          description: Something go wrong\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: \"Timed out\"\n  /projects:\n    post:\n      tags:\n        - Project\n      summary: Create a project.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n      responses:\n        '200':\n          description: A project object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        '408':\n          description: Something go wrong\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: \"Timed out\"\n  /categories:\n    get:\n      tags:\n        - Category\n      summary: Returns a list of categories.\n      responses:\n        '200':\n          description: A JSON array of user names\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Category'\n              example:\n                - id: 1\n                  name: \"Sport\"\n                - id: 2\n                  name: \"Music\"\n        '408':\n          description: Something go wrong\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    error:\n                      type: string\n                      example: \"Timed out\"\n  /payment/{userId}/{page}:\n    get:\n      tags:\n        - Payment\n      summary: Returns page of transaction history by page number and userId.\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          description: The userId.\n          schema:\n            type: string\n            format: uuid\n            example: \"ac7a5b8f-7fc4-4d1e-81c9-1a9c49c9b529\"\n        - name: page\n          in: path\n          required: true\n          description: Number of page.\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            example: 2\n      responses:\n        '200':\n          description: Receive page object was success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HistoryTransactionsPage'\n        '408':\n          description: Something go wrong.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: \"Timed out\"\ncomponents:\n  securitySchemes:\n    bearerAuth:           \n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    User:\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      required:  \n        - id\n        - name\n      example:\n        id: 3\n        name: \"Stuart Powers\"\n    Category:\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      required:  \n        - id\n        - name\n      example:\n        id: 3\n        name: \"Music\"\n    Project:\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      # Both properties are required\n      required:  \n        - id\n        - name\n      example:\n        id: 3\n        name: \"New project\"\ntags:\n  - name: User\n  - name: Project\n    HistoryTransaction:\n      properties:\n        id:\n          type: string\n          format: uuid\n        item:\n          type: string\n        type:\n          type: string\n        userId:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        balance:\n          type: string\n        total:\n          type: string\n      required:  \n        - id\n        - item\n        - type\n        - userId\n        - createdAt\n        - balance\n        - total\n      example:\n        id: \"1bd48742-fb12-11eb-9a03-0242ac130003\"\n        createdAt: \"2021-08-12T17:13:20.727Z\"\n        userId: \"ac7a5b8f-7fc4-4d1e-81c9-1a9c49c9b529\"\n        item: \"Custom Fund\"\n        balance: \"$466.35\"\n        type: \"Balance replenishment\"\n        total: \"$400.00\"\n    HistoryTransactionsPage:\n      properties:\n        isLast: \n          type: boolean\n        page:\n          type: array\n          items:\n            $ref: '#/components/schemas/HistoryTransaction'\n        \nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/BinaryStudioAcademy/bsa-2021-hypecrafter@8d800fb38086cc325761823caccf34c23a02737e/-/blob/gateway/openApiDocumentation.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/BinaryStudioAcademy/bsa-2021-hypecrafter/blob/8d800fb38086cc325761823caccf34c23a02737e/gateway/openApiDocumentation.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 122: mapping values are not allowed in this context"
}