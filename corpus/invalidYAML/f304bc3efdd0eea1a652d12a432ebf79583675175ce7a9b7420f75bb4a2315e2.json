{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kumahq/kuma"
		},
		"file": {
			"name": "endpoints.yaml",
			"size": 0,
			"path": "tools/policy-gen/templates/endpoints.yaml",
			"byteSize": 3202,
			"content": "openapi: 3.0.1\ninfo:\n  version: {{ .PolicyVersion }}\n  title: Kuma API\n  description: Kuma API\n\npaths:\n  /meshes/{mesh}/{{ .Path }}/{name}:\n    get:\n      summary: Returns {{ .Name }} entity\n      tags: [ \"{{ .Name }}\" ]\n      parameters:\n        - in: path\n          name: mesh\n          schema:\n            type: string\n          required: true\n          description: name of the mesh\n        - in: path\n          name: name\n          schema:\n            type: string\n          required: true\n          description: name of the {{ .Name }}\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: 'schema.yaml'\n\n    put:\n      summary: Creates or Updates {{ .Name }} entity\n      tags: [ \"{{ .Name }}\" ]\n      parameters:\n        - in: path\n          name: mesh\n          schema:\n            type: string\n          required: true\n          description: name of the mesh\n        - in: path\n          name: name\n          schema:\n            type: string\n          required: true\n          description: name of the {{ .Name }}\n      requestBody:\n        description: {{ .Name }} entity\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'schema.yaml'\n      responses:\n        '200':\n          description: Updated\n        '201':\n          description: Created\n\n    delete:\n      summary: Deletes {{ .Name }} entity\n      tags: [ \"{{ .Name }}\" ]\n      parameters:\n        - in: path\n          name: mesh\n          schema:\n            type: string\n          required: true\n          description: name of the mesh\n        - in: path\n          name: name\n          schema:\n            type: string\n          required: true\n          description: name of the {{ .Name }}\n      responses:\n        '200':\n          description: Successful response\n\n\n  /meshes/{mesh}/{{ .Path }}:\n    get:\n      summary: Returns a list of {{ .Name }} in the mesh.\n      tags: [ \"{{ .Name }}\" ]\n      parameters:\n        - in: path\n          name: mesh\n          schema:\n            type: string\n          required: true\n          description: name of the mesh\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: 'schema.yaml'\n                  next:\n                    type: string\n                    description: URL to the next page\n\n\n  /{{ .Path }}:\n    get:\n      summary: Returns a list of {{ .Name }} from all meshes\n      tags: [ \"{{ .Name }}\" ]\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: 'schema.yaml'\n                  next:\n                    type: string\n                    description: URL to the next page\n",
			"canonicalURL": "/github.com/kumahq/kuma@be34e99eb42e781c4dbdd58d97cfc5c586701839/-/blob/tools/policy-gen/templates/endpoints.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kumahq/kuma/blob/be34e99eb42e781c4dbdd58d97cfc5c586701839/tools/policy-gen/templates/endpoints.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 49: did not find expected key"
}