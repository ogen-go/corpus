{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kyma-project/rafter"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "cmd/extension/asyncapi/openapi.yaml",
			"byteSize": 4245,
			"content": "openapi: 3.0.0\ninfo:\n  description: The purpose of this application is to provide an API to process the AsyncAPI specification.\n  title: CMS AsyncAPI Service API\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  version: 0.0.1\npaths:\n  /validate:\n    post:\n      description: Validates files sent in the `multipart/form-data` form against the AsyncAPI schema in version 2.0.0-rc1.\n      tags:\n        - validate\n      summary: Validates the AsyncAPI specification against the AsyncAPI schema in version 2.0.0-rc1.\n      operationId: validateReq\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                parameters:\n                  description: Additional parameters for the service\n                  type: string\n                content:\n                  description: File to validate\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/successResponse\"\n        \"400\":\n          $ref: \"#/components/responses/badRequestResponse\"\n        \"405\":\n          $ref: \"#/components/responses/methodNotAllowedResponse\"\n        \"422\":\n          $ref: \"#/components/responses/unprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerErrorResponse\"\n  /convert:\n    post:\n      description: Converts files sent in the `multipart/form-data` form from the old AsyncAPI version to 2.0.0-rc1.\n      tags:\n        - convert\n      summary: Converts the AsyncAPI specification to version 2.0.0-rc1.\n      operationId: convertReq\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                parameters:\n                  description: Additional parameters for the service\n                  type: string\n                content:\n                  description: File to convert\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/successConversionResponse\"\n        \"304\":\n          $ref: \"#/components/responses/notModified\"\n        \"400\":\n          $ref: \"#/components/responses/badRequestResponse\"\n        \"405\":\n          $ref: \"#/components/responses/methodNotAllowedResponse\"\n        \"422\":\n          $ref: \"#/components/responses/unprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerErrorResponse\"\nservers:\n  - url: http://localhost:3000/v1\ncomponents:\n  responses:\n    badRequestResponse:\n      description: Bad request\n      content:\n        text/plain:\n          schema:\n            type: string\n            example: Invalid format\n    methodNotAllowedResponse:\n      description: Bad request\n      content:\n        text/plain:\n          schema:\n            type: string\n            example: Invalid request method\n    unprocessableEntity:\n      description: Unprocessable entities. File validation failed.\n      content:\n        text/plain:\n          schema:\n            type: string\n            example: Invalid property\n    internalServerErrorResponse:\n      description: Internal server error response\n      content:\n        text/plain:\n          schema:\n            type: string\n            example: Internal server error\n    successResponse:\n      description: Success response\n    notModified:\n      description: File content not modified\n    successConversionResponse:\n      description: Success response with the new file content\n      content:\n        text/plain:\n          schema:\n            type: string\n            example: \"{\\\"info\\\":{\\\"version\\\":\\\"1.0.0\\\",\\\"title\\\":\\\"AnyOf example\\\"},\\\"topics\\\":{\\\"test\\\":{\\\"publish\\\":{\\\"$ref\\\":\\\"#\\/components\\/messages\\/testMessages\\\"}}},\\\"asyncapi\\\":\\\"1.1.0\\\",\\\"components\\\":{\\\"messages\\\":{\\\"testMessages\\\":{\\\"payload\\\":{\\\"anyOf\\\":[{\\\"$ref\\\":\\\"#\\/components\\/schemas\\/objectWithKey\\\"},{\\\"$ref\\\":\\\"#\\/components\\/schemas\\/objectWithKey2\\\"}]}}},\\\"schemas\\\":{\\\"objectWithKey2\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"key2\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"objectWithKey\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"key\\\":{\\\"type\\\":\\\"string\\\"}}}}}}\"\n",
			"canonicalURL": "/github.com/kyma-project/rafter@eb6ac3212d87bca0328757c3be44af577244378a/-/blob/cmd/extension/asyncapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kyma-project/rafter/blob/eb6ac3212d87bca0328757c3be44af577244378a/cmd/extension/asyncapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 116: found unknown escape character"
}