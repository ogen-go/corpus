{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "marketing.v2.yml",
			"size": 0,
			"path": "reference/marketing.v2.yml",
			"byteSize": 54917,
			"content": "openapi: 3.0.1\ninfo:\n  title: Marketing\n  description: |-\n    Manage coupons, banners, and gift certificates.\n\n    ## Authentication\n\n    Authenticate requests by including an [OAuth](/api-docs/getting-started/authentication/rest-api-authentication) `access_token` in the request header.\n\n    ```http\n    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/{{ENDPOINT}}\n    Content-Type: application/json\n    X-Auth-Token: {{ACCESS_TOKEN}}\n    ```\n\n    ### OAuth Scopes\n    |  **UI Name** | **Permission** | **Parameter** |\n    | --- | --- | --- |\n    |  Marketing | modify | `store_v2_marketing` |\n    |  Marketing | read-only | `store_v2_marketing_read_only` |\n\n    ## Subresources\n\n    ### Coupons\n    Category or product discounts that can be applied to orders for customers who enter a given code.\n\n    ### Banners\n    Banners available to display on a store.\n\n    ### Gift Certificates\n    Gift certificates available to offer to a store’s customers.\n  version: \"\"\nservers:\n- url: https://api.bigcommerce.com\nsecurity:\n- X-Auth-Token: []\ntags:\n- name: Banners\n- name: Coupons\n- name: Gift Certificates\npaths:\n  /stores/{store_hash}/v2/coupons:\n    get:\n      tags:\n      - Coupons\n      summary: Get All Coupons\n      description: |-\n        Returns a list of *Coupons*. Default sorting is by coupon/discount id, from lowest to highest. Optional filter parameters can be passed in.\n\n        ## Usage Notes\n\n        Available types for `type` and `exclude_type` filters:\n\n        |Type|\n        |-|\n        |`per_item_discount`|\n        |`percentage_discount`|\n        |`per_total_discount`|\n        |`shipping_discount`|\n        |`free_shipping`|\n        |`promotion`|\n\n        Coupons with `type=promotion` will not populate usable data for the following fields but instead be set to the following default values:\n\n        ```json\n        ...\n        amount : 0.0000\n        min_purchase: 0.0000\n        applies_to\n        restricted_to: []\n        shipping_methods : null\n        ...\n        ```\n      operationId: getAllCoupons\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: id\n        in: query\n        description: Optional filter param. `/api/v2/coupons?id={value}`\n        schema:\n          type: string\n      - name: code\n        in: query\n        description: Optional filter param `/api/v2/coupons?code={value}`\n        schema:\n          type: string\n      - name: name\n        in: query\n        description: Optional filter param `/api/v2/coupons?name={value}`\n        schema:\n          type: string\n      - name: type\n        in: query\n        description: |-\n          |Type|\n          |-|\n          |`per_item_discount`|\n          |`percentage_discount`|\n          |`per_total_discount`|\n          |`shipping_discount`|\n          |`free_shipping`|\n          |`promotion`|\n        schema:\n          type: string\n      - name: min_id\n        in: query\n        description: Optional filter param `/api/v2/coupons?min_id={value}`\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: integer\n      - name: max_id\n        in: query\n        description: Optional filter param`/api/v2/coupons?max_id={value}`\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: integer\n      - name: page\n        in: query\n        description: Number of pages `/api/v2/coupons?page={number}`\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: number\n      - name: limit\n        in: query\n        description: Count per page `/api/v2/coupons?limit={count}`\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: number\n      - name: exclude_type\n        in: query\n        description: |-\n          |Type|\n          |-|\n          |`per_item_discount`|\n          |`percentage_discount`|\n          |`per_total_discount`|\n          |`shipping_discount`|\n          |`free_shipping`|\n          |`promotion`|\n        schema:\n          type: string\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/coupon_Full'\n              example:\n              - id: 1\n                name: $5 off\n                type: per_total_discount\n                amount: \"5.0000\"\n                min_purchase: \"0.0000\"\n                expires: \"\"\n                enabled: true\n                code: S2549JM0Y\n                applies_to:\n                  entity: categories\n                  ids:\n                  - 0\n                num_uses: 2\n                max_uses: 0\n                max_uses_per_customer: 0\n                restricted_to: {}\n                shipping_methods: []\n                date_created: Tue, 13 Mar 2018 16:18:59 +0000\n              - id: 2\n                name: Limit by Location\n                type: per_total_discount\n                amount: \"5.0000\"\n                min_purchase: \"25.0000\"\n                expires: \"\"\n                enabled: true\n                code: E3JC79S0I\n                applies_to:\n                  entity: categories\n                  ids:\n                  - 0\n                num_uses: 0\n                max_uses: 25\n                max_uses_per_customer: 0\n                restricted_to:\n                  countries: 'AU'\n                shipping_methods:\n                - shipping_endicia\n                date_created: Tue, 12 Jun 2018 20:22:19 +0000\n    post:\n      tags:\n      - Coupons\n      summary: Create a New Coupon\n      description: |-\n        Creates a *Coupon*.\n\n        **Required Fields**\n        *   `name`\n        *   `code`\n        *   `type`\n        *   `amount`\n        *   `applies_to`\n\n        **Read Only Fields**\n        *   `id`\n        *   `num_uses`\n\n        **Notes**\n\n        The coupon type can be one of the following:\n\n        *   `per_item_discount`\n        *   `per_total_discount`\n        *   `shipping_discount`\n        *   `free_shipping`\n        *   `percentage_discount`\n\n        Legacy coupon codes only work with the store's default currency. Applying a coupon with any other currency other than the store's default will result in the error: \"Coupons only apply to default currency.\"\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/coupon_Base'\n        required: true\n      responses:\n        '201':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon_Full'\n              example:\n                id: 1\n                name: $5 off\n                type: per_total_discount\n                amount: \"5.0000\"\n                min_purchase: \"0.0000\"\n                expires: \"\"\n                enabled: true\n                code: S2549JM0Y\n                applies_to:\n                  entity: categories\n                  ids:\n                  - 0\n                num_uses: 2\n                max_uses: 0\n                max_uses_per_customer: 0\n                restricted_to: {}\n                shipping_methods: []\n                date_created: Tue, 13 Mar 2018 16:18:59 +0000\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Coupons\n      summary: Delete All Coupons\n      description: |\n        ## Usage Notes\n        * Deleting a coupon via this endpoint will delete the coupon but not the promotion it is attached to\n      operationId: deleteAllCoupons\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: id:in\n        in: query\n        description: Optional param to identify a comma separated list of ids for\n          coupons to delete in a batch. `/api/v2/coupons?id:in=1,2,3`\n        schema:\n          type: string\n      responses:\n        '204':\n          description: \"\"\n          content: {}\n  /stores/{store_hash}/v2/coupons/count:\n    get:\n      tags:\n      - Coupons\n      summary: Get a Count of Coupons\n      description: Returns a count of all *Coupons* in the store.\n      operationId: getACountOfCoupons\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    minimum: 0\n                    type: integer\n              example:\n                count: 27\n  /stores/{store_hash}/v2/coupons/{id}:\n    put:\n      tags:\n      - Coupons\n      summary: Update a Coupon\n      description: |-\n        Updates a *Coupon*.\n\n\n        **Read Only Fields**\n\n        * `id`\n        * `num_uses`\n        * `date_created`\n\n        **Notes**\n\n        If the `applies_to` value is cleared, you can restore it to the coupon by reapplying the `applies_to` value in a new `PUT` request.\n      operationId: updateACoupon\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: Id of the coupon.\n        required: true\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: number\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/coupon_Base'\n        required: true\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon_Full'\n              example:\n                id: 1\n                name: $5 off\n                type: per_total_discount\n                amount: \"5.0000\"\n                min_purchase: \"0.0000\"\n                expires: \"\"\n                enabled: true\n                code: S2549JM0Y\n                applies_to:\n                  entity: categories\n                  ids:\n                  - 0\n                num_uses: 2\n                max_uses: 0\n                max_uses_per_customer: 0\n                restricted_to: {}\n                shipping_methods: []\n                date_created: Tue, 13 Mar 2018 16:18:59 +0000\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Coupons\n      summary: Delete a Coupon\n      description: Deletes a *Coupon*.\n      operationId: deleteACoupon\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: \"\"\n          content: {}\n  /stores/{store_hash}/v2/banners:\n    get:\n      tags:\n      - Banners\n      summary: Get All Banners\n      description: Returns a list of *Banners*. Default sorting is by banner id, from\n        lowest to highest.\n      operationId: getAllBanners\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: min_id\n        in: query\n        description: Optional filter param `/api/v2/banners?min_id={value}`\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: integer\n      - name: max_id\n        in: query\n        description: Optional filter param `/api/v2/banners?max_id={value}`\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: integer\n      - name: page\n        in: query\n        description: Optional filter param `/api/v2/banners?page={number}`\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: number\n      - name: limit\n        in: query\n        description: Optional filter param `/api/v2/banners?limit={count}`\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: number\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/banner_Full'\n              example:\n              - id: 1\n                name: This is a banner\n                content: \u003cp\u003eThis is a banner\u003c/p\u003e\n                page: home_page\n                item_id: \"0\"\n                location: top\n                date_created: \"1522169082\"\n                date_type: always\n                date_from: \"0\"\n                date_to: \"0\"\n                visible: \"1\"\n              - id: 2\n                name: 'Banner #2'\n                content: '\u003cp\u003eBanner # 2\u003c/p\u003e'\n                page: category_page\n                item_id: \"23\"\n                location: top\n                date_created: \"1522169169\"\n                date_type: always\n                date_from: \"0\"\n                date_to: \"0\"\n                visible: \"1\"\n    post:\n      tags:\n      - Banners\n      summary: Create a Banner\n      description: |-\n        Creates a *Banner*.\n\n        **Required Fields**\n        * name\n        * content\n        * page\n        * location\n        * date_type\n\n        **Read Only Fields**\n        * date_created\n        * id\n      operationId: createABanner\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/banner_Base'\n        required: true\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/banner_Full'\n              example:\n                id: 1\n                name: Sale Banner\n                content: \u003cp\u003e Sale! Tuesday at 9am! \u003c/p\u003e\n                page: home_page\n                item_id: \"0\"\n                location: top\n                date_created: \"1522169082\"\n                date_type: always\n                date_from: \"0\"\n                date_to: \"0\"\n                visible: \"1\"\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Banners\n      summary: Delete All Banners\n      description: By default, it deletes all *Banners*.\n      operationId: deleteAllBanners\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      responses:\n        '204':\n          description: \"\"\n          content: {}\n  /stores/{store_hash}/v2/banners/{id}:\n    get:\n      tags:\n      - Banners\n      summary: Get a Banner\n      description: Returns a single *Banner*\n      operationId: getABanner\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: Id of the banner.\n        required: true\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: integer\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/banner_Full'\n              example:\n                id: 1\n                name: Sale Banner\n                content: \u003cp\u003e Sale! Tuesday at 9am! \u003c/p\u003e\n                page: home_page\n                item_id: \"0\"\n                location: top\n                date_created: \"1522169082\"\n                date_type: always\n                date_from: \"0\"\n                date_to: \"0\"\n                visible: \"1\"\n    put:\n      tags:\n      - Banners\n      summary: Update a Banner\n      description: |-\n        Updates a *Banner*.\n\n        **Read Only Fields**\n        * date_created\n        * id\n      operationId: updateABanner\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: Id of the banner.\n        required: true\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: integer\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/banner_Put'\n        required: true\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/banner_Full'\n              example:\n                id: 1\n                name: Sale Banner\n                content: \u003cp\u003e Sale! Tuesday at 9am! \u003c/p\u003e\n                page: home_page\n                item_id: \"0\"\n                location: top\n                date_created: Tue, 13 Mar 2018 16:18:59 +0000\n                date_type: always\n                date_from: \"0\"\n                date_to: \"0\"\n                visible: \"1\"\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Banners\n      summary: Delete a Banner\n      description: Deletes a *Banner*.\n      operationId: deleteABanner\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: \"\"\n          content: {}\n  /stores/{store_hash}/v2/banners/count:\n    get:\n      tags:\n      - Banners\n      summary: Get a Count of Store Banners\n      description: Returns a count of *Banners*.\n      operationId: getACountOfBanners\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    minimum: 0\n                    type: integer\n              example:\n                count: 27\n  /stores/{store_hash}/v2/gift_certificates/{id}:\n    get:\n      tags:\n      - Gift Certificates\n      summary: Get a Gift Certificate\n      description: Returns a single *Gift Certificate*.\n      operationId: getAGiftCertificate\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: Id of the gift certificate.\n        required: true\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: integer\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/giftCertificate_Full'\n              example:\n                id: 1\n                customer_id: 5\n                order_id: 116\n                code: FFZ-5N4-C7M-S78\n                to_name: John Doe\n                to_email: johndoe@example.com\n                from_name: Jane Doe\n                from_email: janedoe@example.com\n                amount: \"10\"\n                balance: \"0\"\n                status: active\n                template: \"Birthday\"\n                message: Happy Birthday!\n                purchase_date: \"1520957992\"\n                expiry_date: \"0\"\n    put:\n      tags:\n      - Gift Certificates\n      summary: Update a Gift Certificate\n      description: |-\n        Updates a *Gift Certificate*.\n\n        **Read Only Fields**\n        * id\n        * order_id\n      operationId: updateAGiftCertificate\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/giftCertificate_Put'\n        required: false\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/giftCertificate_Full'\n              example:\n                id: 1\n                customer_id: 5\n                order_id: 116\n                code: FFZ-5N4-C7M-S78\n                to_name: John Doe\n                to_email: johndoe@example.com\n                from_name: Jane Doe\n                from_email: janedoe@example.com\n                amount: \"10\"\n                balance: \"0\"\n                status: active\n                template: \"Birthday\"\n                message: Happy Birthday!\n                purchase_date: \"1520957992\"\n                expiry_date: \"0\"\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Gift Certificates\n      summary: Delete a Gift Certificate\n      description: Deletes a *Gift Certificate*.\n      operationId: deleteAGiftCertificate\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: Id of the gift certificate.\n        required: true\n        schema:\n          exclusiveMaximum: false\n          exclusiveMinimum: false\n          type: integer\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      responses:\n        '204':\n          description: \"\"\n          content: {}\n  /stores/{store_hash}/v2/gift_certificates:\n    get:\n      tags:\n      - Gift Certificates\n      summary: Get All Gift Certificates\n      description: |-\n        Returns a list of *Gift Certificates*. Optional filter parameters can be passed in.\n\n        Default sorting is by gift-certificate id, from lowest to highest.\n\n        The maximum limit is 250. If a limit isn’t provided, up to 50 gift_certificates are returned by default.\n      operationId: getAllGiftCertificates\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: min_id\n        in: query\n        schema:\n          type: integer\n      - name: max_id\n        in: query\n        schema:\n          type: integer\n      - name: code\n        in: query\n        schema:\n          type: string\n      - name: order_id\n        in: query\n        schema:\n          type: integer\n      - name: to_name\n        in: query\n        schema:\n          type: string\n      - name: to_email\n        in: query\n        schema:\n          type: string\n      - name: from_name\n        in: query\n        schema:\n          type: string\n      - name: from_email\n        in: query\n        schema:\n          type: string\n      - name: page\n        in: query\n        schema:\n          type: number\n      - name: limit\n        in: query\n        schema:\n          type: number\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/giftCertificate_Full'\n              example:\n              - id: 24\n                code: 10R-5E2-BO4-RWT\n                amount: \"1000.0000\"\n                status: active\n                balance: \"500.0000\"\n                to_name: Alyss\n                order_id: 1281\n                template: \"Celebration\"\n                to_email: test@test.com\n                from_name: Noland\n                from_email: test1@test.com\n                customer_id: 0\n                expiry_date: \"0\"\n                purchase_date: \"1454432829\"\n              - id: 25\n                code: 10R-6E3-AO4-RST\n                amount: \"700.0000\"\n                status: active\n                balance: \"700.0000\"\n                to_name: Alyss\n                order_id: 0\n                template: \"General\"\n                to_email: test@test.com\n                from_name: Noland\n                from_email: test1@test.com\n                customer_id: 0\n                expiry_date: \"0\"\n                purchase_date: \"1454433240\"\n              - id: 27\n                code: 15R-6E3-AO4-RST\n                amount: \"50.0000\"\n                status: active\n                balance: \"50.0000\"\n                to_name: Lyss\n                order_id: 0\n                template: \"Celebration\"\n                to_email: test5@test.com\n                from_name: Somethingelse\n                from_email: test15@test.com\n                customer_id: 0\n                expiry_date: \"0\"\n                purchase_date: \"1454433621\"\n    post:\n      tags:\n      - Gift Certificates\n      summary: Create a Gift Certificate\n      description: |-\n        Creates a *Gift Certificate*.\n\n\n        **Required Fields**\n        * to_name\n        * to_email\n        * from_name\n        * from_email\n        * amount\n\n        **Read Only Fields**\n        * id\n        * order_id\n\n        **Notes**\n\n        When a gift certificate is created through the API, no email notification is triggered to the specified recipient.\n      operationId: createAGiftCertificate\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n          default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/giftCertificate_Post'\n        required: false\n      responses:\n        '200':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/giftCertificate_Full'\n              example:\n                id: 1\n                customer_id: 5\n                order_id: 116\n                code: FFZ-5N4-C7M-S78\n                to_name: John Doe\n                to_email: johndoe@example.com\n                from_name: Jane Doe\n                from_email: janedoe@example.com\n                amount: \"10\"\n                balance: \"0\"\n                status: active\n                template: \"Birthday\"\n                message: Happy Birthday!\n                purchase_date: \"1520957992\"\n                expiry_date: \"0\"\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Gift Certificates\n      summary: Delete All Gift Certificates\n      description: By default, it deletes all *Gift Certificates*.\n      operationId: deleteAllGiftCertificates\n      parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        schema:\n          type: string\n          default: application/json\n      - name: Content-Type\n        in: header\n        schema:\n          type: string\n          default: application/json\n      responses:\n        '204':\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\ncomponents:\n  schemas:\n    CouponsResource:\n      title: Coupon Resource\n      type: object\n      properties:\n        url:\n          type: string\n          description: URL of the coupons for api requests\n          example: https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons\n        resource:\n          type: string\n          description: resource of the coupons\n          example: /orders/129/coupons\n      x-internal: false\n    coupon_Full:\n      title: coupon_Full\n      allOf:\n      - required:\n        - id\n        type: object\n        properties:\n          id:\n            type: integer\n            description: The coupon's ID. This is a read-only field; do not set or\n              modify its value in a POST or PUT request.\n            example: 2\n          date_created:\n            type: string\n            description: Date Created\n            example: Tue, 13 Mar 2018 16:18:59 +0000\n          num_uses:\n            type: integer\n            description: Number of times this coupon has been used. This is a read-only\n              field; do not set or modify its value in a POST or PUT request.\n            example: 0\n      - $ref: '#/components/schemas/coupon_Base'\n      x-internal: false\n    coupon_Base:\n      title: coupon_Base\n      required:\n      - amount\n      - applies_to\n      - code\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the coupon.\n          example: Australia Customers Discount\n        type:\n          type: string\n          enum:\n          - per_item_discount\n          - per_total_discount\n          - shipping_discount\n          - free_shipping\n          - percentage_discount\n          - promotion\n        amount:\n          type: string\n          description: The discount to apply to an order, as either an amount or a\n            percentage. This field’s usage is determined by the coupon `type`. For\n            example, a `type` of + `percentage_discount` would determine a percentage\n            here.\n          example: \"5\"\n        min_purchase:\n          type: string\n          description: Specifies a minimum value that an order must have before the\n            coupon can be applied to it.\n          example: \"25\"\n        expires:\n          type: string\n          description: Specifies when a coupon expires. Coupons need not have an expiry\n            date – you can also control expiry via + `max_uses` or `max_uses_per_customer`.\n            If you do use this date field, the value must be in \u003ca href=\"http://tools.ietf.org/html/rfc2822#section-3.3\"\n            target=\"_blank\"\u003eRFC 2822\u003c/a\u003e format.\n        enabled:\n          type: boolean\n          description: If the coupon is enabled, this field’s value is `true`; otherwise,\n            `false`.\n          example: true\n        code:\n          pattern: '[a-zA-Z0-9_\\ -]'\n          type: string\n          description: The coupon code that customers will use to receive their discounts.\n            Value must be unique. Only letters, numbers, white space, underscores,\n            and hyphens are allowed.\n          example: S2549JM0Y\n        applies_to:\n          type: object\n          properties:\n            ids:\n              type: array\n              description: ID of either the products or categories\n              items:\n                type: integer\n            entity:\n              type: string\n              description: What the discount applies to. Can be products or categories.\n          description: If it is not included in the PUT request, its existing value\n            on the coupon will be cleared. Also required to be set on the POST request\n        max_uses:\n          type: integer\n          description: Maximum number of times this coupon can be used.\n          example: 25\n        max_uses_per_customer:\n          type: integer\n          description: Maximum number of times each customer can use this coupon.\n          example: 0\n        restricted_to:\n          type: object\n          properties:\n            countries:\n              type: string\n            ?\n            : type: string\n        shipping_methods:\n          type: array\n          description: This is a list of shipping-method names. A shipping method\n            must be enabled on the store to use it with a coupon. To check which shipping\n            methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods)\n            endpoint.\n          items:\n            type: string\n      example:\n        id: 2\n        name: Australia Customers Discount\n        type: per_item_discount\n        amount: \"5\"\n        min_purchase: \"25\"\n        expires: \"\"\n        enabled: true\n        code: S2549JM0Y\n        applies_to:\n          entity: categories\n          ids: [0,3]\n        num_uses: 0\n        max_uses: 25\n        max_uses_per_customer: 0\n        restricted_to:\n          countries: \"AU\"\n        shipping_methods:\n        - shipping_endicia\n        date_created: Tue, 13 Mar 2018 16:18:59 +0000\n      x-internal: false\n    banner_Base:\n      title: banner_Base\n      required:\n      - content\n      - date_type\n      - location\n      - name\n      - page\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the banner.\n          example: Sale Banner\n        content:\n          type: string\n          description: Contains the banner content. Returned as a string and includes\n            HTML formatting.\n          example: \u003cp\u003e Sale! Tuesday at 9am! \u003c/p\u003e\n        page:\n          type: string\n          description: Page the Banner is located on.\n          enum:\n          - home_page\n          - category_page\n          - brand_page\n          - search_page\n        location:\n          type: string\n          description: Location on the page.\n          example: top\n          enum:\n          - top\n          - bottom\n        date_type:\n          type: string\n          description: This specifies whether the banner should be visible during\n            a specific date range.\n          enum:\n          - always\n          - custom\n        date_from:\n          type: string\n          description: If the datetype is set as 'custom’, this field specifies the\n            date when the banner should become visible on the storefront.\n          example: \"0\"\n        date_to:\n          type: string\n          description: If the datetype is set as 'custom’, this field specifies the\n            date when the banner should stop being visible on the storefront.\n          example: \"0\"\n        visible:\n          type: string\n          description: 'Integer value denoting whether or not the banner is visible\n            on the storefront: 1 = visible; 0 = not visible'\n          example: \"1\"\n      x-internal: false\n    banner_Full:\n      title: banner_Full\n      allOf:\n      - type: object\n        properties:\n          id:\n            type: integer\n            description: |\n              Id of the banner.\n              This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n            example: 1\n          date_created:\n            type: string\n            description: Date the banner is created.\n          item_id:\n            type: string\n            description: If the banner is on a specific category or brand page then\n              the `item_id` will correspond the category or brand id.\n            example: \"0\"\n      - $ref: '#/components/schemas/banner_Base'\n      x-internal: false\n    banner_Put:\n      title: banner_Put\n      allOf:\n      - type: object\n        properties:\n          item_id:\n            type: string\n            description: If the banner is on a specific category or brand page then\n              the `item_id` will correspond the category or brand id.\n            example: \"0\"\n      - $ref: '#/components/schemas/banner_Base'\n      x-internal: false\n    giftCertificate_Base:\n      title: giftCertificate_Base\n      required:\n      - amount\n      - from_email\n      - from_name\n      - to_email\n      - to_name\n      type: object\n      properties:\n        to_name:\n          type: string\n          description: Name of the recipient.\n          example: John Doe\n        to_email:\n          type: string\n          description: Email of the recipient.\n          example: johndoe@example.com\n        from_name:\n          type: string\n          description: Name of the customer who purchased the gift certificate.\n          example: Jane Doe\n        from_email:\n          type: string\n          description: Email of the customer who purchased the gift certificate.\n          example: janedoe@example.com\n        amount:\n          type: string\n          description: Value of the gift certificate.\n          example: \"10\"\n      x-internal: false\n    giftCertificate_Full:\n      title: giftCertificate_Full\n      description: \"\"\n      allOf:\n      - $ref: '#/components/schemas/giftCertificate_Base'\n      - type: object\n        properties:\n          id:\n            type: integer\n            description: The ID of the gift certificate.This is a READ-ONLY field;\n              do not set or modify its value in a POST or PUT request.\n            example: 1\n          customer_id:\n            type: integer\n            description: The ID of the customer placing the order.\n            example: 5\n          order_id:\n            type: integer\n            description: The ID of the order.\n            example: 116\n          balance:\n            type: string\n            description: Remaining value of the gift certificate. If not set, will\n              default to the amount.\n            example: \"0\"\n          purchase_date:\n            type: string\n            description: Date the gift certificate was purchased. If not assigned,\n              this will be set to today’s date. Date displays in Unix timestamp format.\n            example: \"1454432829\"\n          expiry_date:\n            type: string\n            description: Date on which the gift certificate is set to expire.\n          template:\n            type: string\n            description: The email theme to use in the message sent to the recipient.\n            example: Celebration\n            enum:\n            - Birthday\n            - Girl\n            - Boy\n            - Celebration\n            - Christmas\n            - General\n          message:\n            type: string\n            description: Text that will be sent to the recipient, such as “Congratulations.”\n            example: Congratulations!\n          code:\n            maxLength: 255\n            type: string\n            description: |-\n              A unique string that a customer can input to redeem a gift certificate. Values greater than 20 characters will be trimmed down to the first 20 characters and returned in the response.\n              If this field is not set, a value will be autogenerated.\n            example: FFZ-5N4-C7M-S78\n          status:\n            type: string\n            example: active\n            enum:\n            - active\n            - pending\n            - disabled\n            - expired\n      x-internal: false\n    giftCertificate_Put:\n      title: giftCertificate_Put\n      allOf:\n      - $ref: '#/components/schemas/giftCertificate_Base'\n      - type: object\n        properties:\n          balance:\n            type: string\n            description: Remaining value of the gift certificate. If not set, will\n              default to the amount.\n            example: \"0\"\n          purchase_date:\n            type: string\n            description: Date the gift certificate was purchased. If not assigned,\n              this will be set to today’s date. Enter date in RFC-2822 format.\n            example: Mon, 19 Jan 1970 07:21:46 CST\n          expiry_date:\n            type: string\n            description: Date on which the gift certificate is set to expire.\n            example: \"1622583106\"\n          customer_id:\n            type: integer\n            description: The ID of the customer placing the order.\n            example: 5\n          template:\n            type: string\n            description: The email theme to use in the message sent to the recipient.\n            example: Celebration\n            enum:\n            - Birthday\n            - Boy\n            - Girl\n            - Celebration\n            - Christmas\n            - General\n          message:\n            type: string\n            description: Text that will be sent to the recipient, such as “Congratulations.”\n            example: Congratulations!\n          code:\n            maxLength: 255\n            type: string\n            description: |-\n              A unique string that a customer can input to redeem a gift certificate. Values greater than 20 characters will be trimmed down to the first 20 characters and returned in the response.\n              If this field is not set, a value will be autogenerated.\n            example: FFZ-5N4-C7M-S78\n          status:\n            type: string\n            example: active\n            enum:\n            - active\n            - pending\n            - expired\n            - disabled\n      x-internal: false\n    giftCertificate_Post:\n      title: giftCertificate_Post\n      description: \"\"\n      allOf:\n      - $ref: '#/components/schemas/giftCertificate_Base'\n      - type: object\n        properties:\n          balance:\n            type: string\n            description: Remaining value of the gift certificate. If not set, will\n              default to the amount.\n            example: \"0\"\n          purchase_date:\n            type: string\n            description: Date the gift certificate was purchased. If not assigned,\n              this will be set to today’s date. Enter date in RFC-2822 format.\n            example: Mon, 19 Jan 1970 07:21:46 CST\n          expiry_date:\n            type: string\n            description: Date on which the gift certificate is set to expire.\n            example: \"1622583106\"\n          customer_id:\n            type: integer\n            description: The ID of the customer placing the order.\n            example: 5\n          template:\n            type: string\n            description: The email theme to use in the message sent to the recipient.\n            example: Celebration\n            enum:\n            - Birthday\n            - Boy\n            - Girl\n            - Celebration\n            - Christmas\n            - General\n          message:\n            maxLength: 250\n            type: string\n            description: Text that will be sent to the recipient, such as “Congratulations.”\n            example: Congratulations!\n          code:\n            maxLength: 255\n            type: string\n            description: |-\n              A unique string that a customer can input to redeem a gift certificate. Values greater than 20 characters will be trimmed down to the first 20 characters and returned in the response.\n              If this field is not set, a value will be autogenerated.\n            example: FFZ-5N4-C7M-S78\n          status:\n            type: string\n            example: active\n            enum:\n            - active\n            - pending\n            - expired\n            - disabled\n          currency_code:\n            type: string\n            description: |-\n              A currency code, following the ISO 4217 standard. The currency has to exists in the store first.\n\n              Gift Certificates can only be used if the transactional currency of the cart is the same to the one defined in the gift certificate. If this value is not provided, the gift certificate is created using the store's default transactional currency\n            example: USD\n      x-internal: false\n  responses:\n    bannerCollection_Resp:\n      description: \"\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/banner_Full'\n          example:\n          - id: 1\n            name: This is a banner\n            content: \u003cp\u003eThis is a banner\u003c/p\u003e\n            page: home_page\n            item_id: \"0\"\n            location: top\n            date_created: \"1522169082\"\n            date_type: always\n            date_from: \"0\"\n            date_to: \"0\"\n            visible: \"1\"\n          - id: 2\n            name: 'Banner #2'\n            content: '\u003cp\u003eBanner # 2\u003c/p\u003e'\n            page: category_page\n            item_id: \"23\"\n            location: top\n            date_created: \"1522169169\"\n            date_type: always\n            date_from: \"0\"\n            date_to: \"0\"\n            visible: \"1\"\n    banner_Resp:\n      description: \"\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/banner_Full'\n          example:\n            id: 1\n            name: Sale Banner\n            content: \u003cp\u003e Sale! Tuesday at 9am! \u003c/p\u003e\n            page: home_page\n            item_id: \"0\"\n            location: top\n            date_created: '1522169082'\n            date_type: always\n            date_from: \"0\"\n            date_to: \"0\"\n            visible: \"1\"\n    count_Resp:\n      description: \"\"\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              count:\n                minimum: 0\n                type: integer\n          example:\n            count: 27\n    coupon_Resp:\n      description: \"\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/coupon_Full'\n          example:\n            id: 1\n            name: $5 off\n            type: per_total_discount\n            amount: \"5.0000\"\n            min_purchase: \"0.0000\"\n            expires: \"\"\n            enabled: true\n            code: S2549JM0Y\n            applies_to:\n              entity: categories\n              ids:\n              - 0\n            num_uses: 2\n            max_uses: 0\n            max_uses_per_customer: 0\n            restricted_to: {}\n            shipping_methods: []\n            date_created: Tue, 13 Mar 2018 16:18:59 +0000\n    coupon_Resp_Collection:\n      description: \"\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/coupon_Full'\n          example:\n          - id: 1\n            name: $5 off\n            type: per_total_discount\n            amount: \"5.0000\"\n            min_purchase: \"0.0000\"\n            expires: \"\"\n            enabled: true\n            code: S2549JM0Y\n            applies_to:\n              entity: categories\n              ids:\n              - 0\n            num_uses: 2\n            max_uses: 0\n            max_uses_per_customer: 0\n            restricted_to: {}\n            shipping_methods: []\n            date_created: Tue, 13 Mar 2018 16:18:59 +0000\n          - id: 2\n            name: Limit by Location\n            type: per_total_discount\n            amount: \"5.0000\"\n            min_purchase: \"25.0000\"\n            expires: \"\"\n            enabled: true\n            code: E3JC79S0I\n            applies_to:\n              entity: categories\n              ids:\n              - 0\n            num_uses: 0\n            max_uses: 25\n            max_uses_per_customer: 0\n            restricted_to:\n              countries: AU\n            shipping_methods:\n            - shipping_endicia\n            date_created: Tue, 12 Jun 2018 20:22:19 +0000\n    giftCertificateCollection_Resp:\n      description: \"\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/giftCertificate_Full'\n          example:\n          - id: 24\n            code: 10R-5E2-BO4-RWT\n            amount: \"1000.0000\"\n            status: active\n            balance: \"500.0000\"\n            to_name: Alyss\n            order_id:  1281\n            template: \"Girl\"\n            to_email: test@test.com\n            from_name: Noland\n            from_email: test1@test.com\n            customer_id: 5\n            expiry_date: \"0\"\n            purchase_date: \"1454432829\"\n          - id: 25\n            code: 10R-6E3-AO4-RST\n            amount: \"700.0000\"\n            status: active\n            balance: \"700.0000\"\n            to_name: Alyss\n            order_id: 0\n            template: \"Boy\"\n            to_email: test@test.com\n            from_name: Noland\n            from_email: test1@test.com\n            customer_id: 0\n            expiry_date: \"0\"\n            purchase_date: \"1454433240\"\n          - id: 27\n            code: 15R-6E3-AO4-RST\n            amount: \"50.0000\"\n            status: active\n            balance: \"50.0000\"\n            to_name: Lyss\n            order_id: 0\n            template: \"Christmas\"\n            to_email: test5@test.com\n            from_name: Somethingelse\n            from_email: test15@test.com\n            customer_id: 0\n            expiry_date: \"0\"\n            purchase_date: \"1454433621\"\n    giftCertificate_Resp:\n      description: \"\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/giftCertificate_Full'\n          example:\n            id: 1\n            customer_id: 5\n            order_id: 116\n            code: FFZ-5N4-C7M-S78\n            to_name: John Doe\n            to_email: johndoe@example.com\n            from_name: Jane Doe\n            from_email: janedoe@example.com\n            amount: \"10\"\n            balance: \"0\"\n            status: active\n            template: \"Birthday\"\n            message: Happy Birthday!\n            purchase_date: \"1520957992\"\n            expiry_date: \"0\"\n  securitySchemes:\n    X-Auth-Token:\n      type: apiKey\n      description: |-\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        |  Marketing | modify | `store_v2_marketing` |\n        |  Marketing | read-only | `store_v2_marketing_read_only` |\n\n        ### Headers\n\n        |Header|Parameter|Description|\n        |-|-|-|\n        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n        ### Example\n\n        ```http\n        GET /stores/{store_hash}/v3/catalog/summary\n        host: api.bigcommerce.com\n        Content-Type: application/json\n        X-Auth-Token: {access_token}\n        ```\n\n        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\n      name: X-Auth-Token\n      in: header\nx-stoplight:\n  docs:\n    includeDownloadLink: true\n    showModels: false\n",
			"canonicalURL": "/github.com/bigcommerce/api-specs@38c996d02c24d9d7b2e53b1d29c0c4607969c46a/-/blob/reference/marketing.v2.yml",
			"externalURLs": [
				{
					"url": "https://github.com/bigcommerce/api-specs/blob/38c996d02c24d9d7b2e53b1d29c0c4607969c46a/reference/marketing.v2.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: Unsupported map key of type: %!s(\u003cnil\u003e), key: \u003cnil\u003e, value: map[interface {}]interface {}{\"type\":\"string\"}"
}