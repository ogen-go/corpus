{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/omgnetwork/optimism-v2"
		},
		"file": {
			"name": "openapi.yml",
			"path": "packages/data-transport-layer/openapi.yml",
			"content": "openapi: 3.0.0\ninfo:\n  title: Ethereum Optimism Data Transport Later\n  description: |\n    Make sequencer or contract data available behind a common API\n  version: 0.1.0\ncomponents:\n  schemas:\n    EthereumContext:\n      type: object\n      properties:\n        blockNumber:\n          type: uint64\n        timestamp:\n          type: uint64\n        blockHash:\n          type: string\n    EnqueueEntry:\n      type: object\n      properties:\n        index:\n          type: number\n        target:\n          type: string\n        data:\n          type: string\n        gasLimit:\n          type: number\n        origin:\n          type: string\n        blockNumber:\n          type: number\n        timestamp:\n          type: number\n        ctcIndex:\n          type: number\n    BatchEntry:\n      type: object\n      properties:\n        index:\n          type: number\n        blockNumber:\n          type: number\n        timestamp:\n          type: number\n        submitter:\n          type: string\n        size:\n          type: number\n        root:\n          type: string\n        prevTotalElements:\n          type: number\n        extraData:\n          type: string\n        l1TransactionHash:\n          type: string\n    TransactionEntry:\n      type: object\n      properties:\n        index:\n          type: number\n        batchIndex:\n          type: number\n        data:\n          type: string\n        blockNumber:\n          type: number\n        timestamp:\n          type: number\n        gasLimit:\n          type: number\n        target:\n          type: string\n        origin:\n          type: string\n        queueOrigin:\n          type: string\n        queueIndex: number\n          type: string\n        decoded:\n          type: object\n          $ref: '#/components/schemas/DecodedSequencerBatchTransaction'\n    TransactionResponse:\n      type: object\n      properties:\n        batch:\n          type: object\n          $ref: '#/components/schemas/BatchEntry'\n        transaction:\n          type: object\n          $ref: '#/components/schemas/TransactionEntry'\n\n    TransactionBatchResponse:\n      type: object\n      properties:\n        batch:\n          type: object\n          $ref: '#/components/schemas/BatchEntry'\n        transactions:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/TransactionEntry'\n\n    DecodedSequencerBatchTransaction:\n      type: object\n      properties:\n        sig:\n          type: object\n          $ref: '#/components/schemas/ECDSASignature'\n        gasLimit:\n          type: number\n        gasPrice:\n          type: number\n        nonce:\n          type: number\n        target:\n          type: string\n        data:\n          type: string\n    ECDSASignature:\n      type: object\n      properties:\n        r:\n          type: string\n        s:\n          type: string\n        v:\n          type: number\n    StateRootEntry:\n      type: object\n      properties:\n      index:\n        type: number\n      batchIndex:\n        type: number\n      value:\n        type: string\n\n    StateRootResponse:\n      type: object\n      properties:\n      batch:\n        type: object\n        $ref: '#/components/schemas/BatchEntry'\n      stateRoot:\n        type: object\n        $ref: '#/components/schemas/StateRootEntry'\n\n    StateRootBatchResponse:\n      type: object\n      properties:\n        batch:\n          type: object\n          $ref: '#/components/schemas/BatchEntry'\n        stateRoots:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/StateRootEntry'\n\npaths:\n  /eth/syncing:\n    get:\n      summary: Returns the sync status\n      description: |\n        The node may still be syncing to the tip and downstream services can learn up to what\n        point has been indexed.\n      responses:\n        '200':\n          description: An object representing the progression of the service\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  syncing:\n                    type: boolean\n                  currentTransactionIndex:\n                    type: uint64\n                  highestKnownTransactionIndex:\n                    type: uint64\n\n  /eth/context/latest:\n    get:\n      summary: Returns the latest Ethereum Layer one context\n      description: |\n        This returns the L1 blocknumber, block hash and timestamp corresponding to the most\n        recently ingested block\n      responses:\n        '200':\n          description: An object representing the Ethereum context\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EthereumContext'\n\n  /eth/context/blocknumber/{number}:\n    get:\n      summary: Returns the Ethereum Layer one context at a specific height\n      description: |\n        This returns the L1 blocknumber, block hash and timestamp corresponding to a specific\n        Ethereum context\n      responses:\n        '200':\n          description: An object representing the Ethereum context\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EthereumContext'\n\n  /enqueue/latest:\n    get:\n      summary: Returns the latest enqueued transaction\n      description: |\n        This returns the latest transaction sent to the Canonical Transaction Chain `enqueue()`\n      responses:\n        '200':\n          description: An object representing the latest enqueued transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnqueueEntry'\n\n  /enqueue/index/{index}:\n    get:\n      summary: Returns the enqueued transaction by index\n      description: |\n        This returns the Canonical Transaction Chain `enqueue()` by index\n      responses:\n        '200':\n          description: An object representing the enqueued transaction by index\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnqueueEntry'\n\n  /transaction/latest:\n    get:\n      summary: Returns the latest Canonical Transaction Chain transaction\n      description: |\n        This returns the latest transaction to be appended to the Canonical Transaction\n        Chain via a `sequencerBatchAppend()` or `queueBatchAppend()`\n      responses:\n        '200':\n          description: An object representing the latest transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnqueueEntry'\n\n  /transaction/index/{index}:\n    get:\n      summary: Returns a Canonical Transaction Chain transaction by index\n      description: |\n        This returns a transaction that has been appended to the Canonical Transaction\n        Chain via a `sequencerBatchAppend()` or `queueBatchAppend()` by index\n      responses:\n        '200':\n          description: An object representing a Transaction by index\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionResponse'\n\n  /batch/transaction/latest:\n    get:\n      summary: Returns the latest Batch to be appended to the Canonical Transaction Chain\n      description: |\n        This returns the latest batch that has been appended to the Canonical Transaction\n        Chain via a `sequencerBatchAppend()`\n      responses:\n        '200':\n          description: An object representing the latest batch\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionBatchResponse'\n\n  /batch/transaction/index/{index}:\n    get:\n      summary: Returns the Batch to be appended to the Canonical Transaction Chain by index\n      description: |\n        This returns a batch that has been appended to the Canonical Transaction\n        Chain via a `sequencerBatchAppend()` by index\n      responses:\n        '200':\n          description: An object representing the latest batch\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionBatchResponse'\n\n  /stateroot/latest:\n    get:\n      summary: Returns the latest state root\n      description: |\n        This returns the latest state root appended to the State Commitment Chain\n      responses:\n        '200':\n          description: An object representing the latest state root\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StateRootResponse'\n\n  /stateroot/index/{index}:\n    get:\n      summary: Returns the state root by index\n      description: |\n        This returns a state root appended to the State Commitment Chain by index\n      responses:\n        '200':\n          description: An object representing the a state root\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StateRootResponse'\n\n  /batch/stateroot/latest:\n    get:\n      summary: Returns the latest state root batch\n      description: |\n        This returns the latest batch of state roots appended to the State Commitment Chain\n      responses:\n        '200':\n          description: An object representing the latest state root batch\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StateRootBatchResponse'\n\n  /batch/stateroot/index/{index}:\n    get:\n      summary: Returns the state root batch by index\n      description: |\n        This returns a state root batch appended to the State Commitment Chain by index\n      responses:\n        '200':\n          description: An object representing the state root batch by index\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StateRootBatchResponse'\n"
		}
	},
	"Error": "yaml: line 80: mapping values are not allowed in this context"
}