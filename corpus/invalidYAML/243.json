{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sat-utils/sat-api"
		},
		"file": {
			"name": "api-spec.yaml",
			"path": "packages/api-lib/api-spec.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  title: The SAT-API\n  version: 0.2.0\n  description: \u003e-\n    Sat-api is a STAC compliant web API for searching and serving metadata for\n    geospatial data (including but not limited to satellite imagery).\n    Development Seed runs an instance of sat-api for the Landsat-8\n    and Sentinel-2 imagery that is hosted on AWS.\n  contact:\n    name: Development Seed\n    email: info@developmentseed.org\n    url: 'https://developmentseed.org/contacts/'\n  license:\n    name: MIT License\n    url: 'https://github.com/sat-utils/sat-api/blob/master/LICENSE'\nservers:\n  - url: 'https://sat-api.developmentseed.org/'\n    description: Production server\n  - url: 'https://sat-api-dev.developmentseed.org/'\n    description: Development server\npaths:\n  /stac:\n    get:\n      summary: Return the root catalog or collection.\n      description: \u003e-\n        Returns the root STAC Catalog or STAC Collection that is the entry point\n        for users to browse with STAC Browser or for search engines to crawl.\n        This can either return a single STAC Collection or more commonly a STAC\n        catalog that usually lists sub-catalogs of STAC Collections, i.e. a\n        simple catalog that lists all collections available through the API.\n      tags:\n        - STAC\n      responses:\n        '200':\n          description: A catalog json definition. Used as an entry point for a crawler.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/catalogDefinition'\n\n  /stac/search:\n    get:\n      summary: Search STAC items by simple filtering.\n      description: \u003e-\n        Retrieve Items matching filters. Intended as a shorthand API for simple\n        queries.\n      operationId: getSearchSTAC\n      tags:\n        - STAC\n      parameters:\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/time'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/query'\n        - $ref: '#/components/parameters/sort'\n        - $ref: '#/components/parameters/fields'\n      responses:\n        '200':\n          description: A feature collection.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/itemCollection'\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n\n    post:\n      summary: Search STAC items by full-featured filtering.\n      description: \u003e-\n        retrieve items matching filters. Intended as the standard, full-featured\n        query API. This method is mandatory.\n      operationId: postSearchSTAC\n      tags:\n        - STAC\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/searchBody'\n      responses:\n        '200':\n          description: A feature collection.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/itemCollection'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\n  /:\n    get:\n      summary: landing page of this API\n      description: \u003e-\n        The landing page provides links to the API definition, the Conformance\n        statements and the metadata about the feature data in this dataset.\n      operationId: getLandingPage\n      tags:\n        - Capabilities\n      responses:\n        '200':\n          description: links to the API capabilities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/root'\n            text/html:\n              schema:\n                type: string\n\n  /collections:\n    get:\n      summary: describe the feature collections in the dataset\n      operationId: describeCollections\n      tags:\n        - Capabilities\n      responses:\n        '200':\n          description: Metdata about the feature collections shared by this API.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/content'\n\n\t'/collections/{collectionId}':\n    get:\n      summary: 'describe the {collectionId} feature collection'\n      operationId: describeCollection\n      tags:\n        - Capabilities\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n      responses:\n        '200':\n          description: 'Metadata about the {collectionId} collection shared by this API.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/collectionInfo'\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n\n\t'/collections/{collectionId}/items':\n    get:\n      summary: 'retrieve features of feature collection {collectionId}'\n      description: \u003e-\n        Every feature in a dataset belongs to a collection. A dataset may\n        consist of multiple feature collections. A feature collection is often a\n        collection of features of a similar type, based on a common schema.\\\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeatures\n      tags:\n        - Features\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/time'\n        - $ref: '#/components/parameters/query'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: \u003e-\n            Information about the feature collection plus the first features\n            matching the selection parameters.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/itemCollection'\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n\n\t'/collections/{collectionId}/items/{featureId}':\n    get:\n      summary: retrieve a feature; use content negotiation to request HTML or GeoJSON\n      operationId: getFeature\n      tags:\n        - Features\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: '#/components/parameters/featureId'\n      responses:\n        '200':\n          description: A feature.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/item'\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n\ncomponents:\n  parameters:\n    limit:\n      name: limit\n      in: query\n      description: |\n        The optional limit parameter limits the number of items that are\n        presented in the response document.\n\n        Only items are counted that are on the first level of the collection in\n        the response document. Nested objects contained within the explicitly\n        requested items shall not be counted.\n\n        * Minimum = 1\n        * Maximum = 10000\n        * Default = 10\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 10000\n        default: 10\n      style: form\n      explode: false\n    bbox:\n      name: bbox\n      in: query\n      description: |\n        Only features that have a geometry that intersects the bounding box are\n        selected. The bounding box is provided as four or six numbers,\n        depending on whether the coordinate reference system includes a\n        vertical axis (elevation or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Lower left corner, coordinate axis 3 (optional)\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n        * Upper right corner, coordinate axis 3 (optional)\n\n        The coordinate reference system of the values is WGS84\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless\n        a different coordinate reference system is specified in the parameter\n        `bbox-crs`.\n\n        For WGS84 longitude/latitude the values are in most cases the sequence\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n        latitude. However, in cases where the box spans the antimeridian the\n        first value (west-most box edge) is larger than the third value\n        (east-most box edge).\n\n\n        If a feature has multiple spatial geometry properties, it is the\n        decision of the server whether only a single spatial geometry property\n        is used to determine the extent or all relevant geometries.\n      required: false\n      schema:\n        type: array\n        minItems: 4\n        maxItems: 6\n        items:\n          type: number\n      style: form\n      explode: false\n    time:\n      name: time\n      in: query\n      description: \u003e\n        Either a date-time or a period string that adheres to RFC3339. Examples:\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n        * A period: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\" or \"2018-02-12T00:00:00Z/P1M6DT12H31M12S\"\n\n        Only features that have a temporal property that intersects the value\n        of `time` are selected. If a feature has multiple temporal properties, it\n        is the decision of the server whether only a single temporal property is\n        used to determine the extent or all relevant temporal properties.\n      required: false\n      schema:\n        type: string\n      style: form\n      explode: false\n    collectionId:\n      name: collectionId\n      in: path\n      required: true\n      description: Identifier (name) of a specific collection\n      schema:\n        type: string\n    featureId:\n      name: featureId\n      in: path\n      description: Local identifier of a specific feature\n      required: true\n      schema:\n        type: string\n    query:\n      name: query\n      in: query\n      description: \u003e-\n        query for properties in items. Use the JSON form of the queryFilter used\n        in POST.\n      required: false\n      schema:\n        type: string\n    sort:\n      name: sort\n      in: query\n      description: Allows sorting results by the specified properties\n      required: false\n      schema:\n        $ref: '#/components/schemas/sort'\n    fields:\n      name: fields\n      in: query\n      description: Determines the shape of the features in the response\n      required: false\n      schema:\n        $ref: '#/components/schemas/fields'\n      style: form\n      explode: false\n  schemas:\n    exception:\n      type: object\n      required:\n        - code\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n    links:\n      type: array\n      items:\n        $ref: '#/components/schemas/link'\n    link:\n      type: object\n      required:\n        - href\n        - rel\n      additionalProperties: true\n      properties:\n        href:\n          type: string\n          format: url\n          example: 'http://www.geoserver.example/stac/naip/child/catalog.json'\n        rel:\n          type: string\n          example: child\n        type:\n          type: string\n          example: application/json\n        title:\n          type: string\n          example: NAIP Child Catalog\n    searchBody:\n      description: The search criteria\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/bboxFilter'\n        - $ref: '#/components/schemas/timeFilter'\n        - $ref: '#/components/schemas/intersectsFilter'\n        - $ref: '#/components/schemas/queryFilter'\n        - $ref: '#/components/schemas/sortFilter'\n    bbox:\n      description: |\n        Only features that have a geometry that intersects the bounding box are\n        selected. The bounding box is provided as four or six numbers,\n        depending on whether the coordinate reference system includes a\n        vertical axis (elevation or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Lower left corner, coordinate axis 3 (optional)\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n        * Upper right corner, coordinate axis 3 (optional)\n\n        The coordinate reference system of the values is WGS84\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless\n        a different coordinate reference system is specified in the parameter\n        `bbox-crs`.\n\n        For WGS84 longitude/latitude the values are in most cases the sequence\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n        latitude. However, in cases where the box spans the antimeridian the\n        first value (west-most box edge) is larger than the third value\n        (east-most box edge).\n\n\n        If a feature has multiple spatial geometry properties, it is the\n        decision of the server whether only a single spatial geometry property\n        is used to determine the extent or all relevant geometries.\n      type: array\n      minItems: 4\n      maxItems: 6\n      items:\n        type: number\n      example:\n        - -110\n        - 39.5\n        - -105\n        - 40.5\n    bboxFilter:\n      type: object\n      description: Only return items that intersect the provided bounding box.\n      properties:\n        bbox:\n          $ref: '#/components/schemas/bbox'\n    timeFilter:\n      description: An object representing a time based filter.\n      type: object\n      properties:\n        time:\n          $ref: '#/components/schemas/time'\n    intersectsFilter:\n      type: object\n      description: Only returns items that intersect with the provided polygon.\n      properties:\n        intersects:\n          $ref: 'http://geojson.org/schema/Geometry.json'\n    time:\n      type: string\n      description: \u003e\n        Either a date-time or a period string that adheres to RFC 3339.\n        Examples:\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n        * A period: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\" or \"2018-02-12T00:00:00Z/P1M6DT12H31M12S\"\n\n        Only features that have a temporal property that intersects the value of\n        `time` are selected.\n\n        If a feature has multiple temporal properties, it is the decision of the\n        server whether only a single temporal property is used to determine the\n        extent or all relevant temporal properties.\n      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n    catalogDefinition:\n      type: object\n      required:\n        - stac_version\n        - id\n        - description\n        - links\n      additionalProperties: true\n      properties:\n        stac_version:\n          type: string\n          example: 0.6.0\n        id:\n          type: string\n          example: naip\n        title:\n          type: string\n          example: NAIP Imagery\n        description:\n          type: string\n          example: Catalog of NAIP Imagery.\n        links:\n          $ref: '#/components/schemas/links'\n    itemCollection:\n      type: object\n      required:\n        - features\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/item'\n        links:\n          $ref: '#/components/schemas/itemCollectionLinks'\n    item:\n      type: object\n      required:\n        - id\n        - type\n        - geometry\n        - bbox\n        - links\n        - properties\n        - assets\n      properties:\n        id:\n          $ref: '#/components/schemas/itemId'\n        bbox:\n          $ref: '#/components/schemas/bbox'\n        geometry:\n          $ref: 'http://geojson.org/schema/Geometry.json'\n        type:\n          $ref: '#/components/schemas/itemType'\n        properties:\n          $ref: '#/components/schemas/itemProperties'\n        links:\n          $ref: '#/components/schemas/links'\n        assets:\n          $ref: '#/components/schemas/itemAssets'\n      example:\n        type: Feature\n        id: CS3-20160503_132130_04\n        bbox:\n          - -122.59750209\n          - 37.48803556\n          - -122.2880486\n          - 37.613537207\n        geometry:\n          type: Polygon\n          coordinates:\n            - - - -122.308150179\n                - 37.488035566\n              - - -122.597502109\n                - 37.538869539\n              - - -122.576687533\n                - 37.613537207\n              - - -122.2880486\n                - 37.562818007\n              - - -122.308150179\n                - 37.488035566\n        properties:\n          datetime: '2016-05-03T13:21:30.040Z'\n        links:\n          - rel: self\n            href: \u003e-\n              http://https://sat-api.developmentseed.org/collections/landsat-8-l1/items/LC80100102015050LGN00.json\n        assets:\n          analytic:\n            title: 4-Band Analytic\n            href: \u003e-\n              http://cool-sat.com/LC80100102015050LGN00/band4.tiff\n            type: image/tiff\n          thumbnail:\n            title: Thumbnail\n            href: \u003e-\n              http://cool-sat.com/LC80100102015050LGN00/thumb.png\n            type: image/png\n    itemId:\n      type: string\n      example: path/to/example.tif\n      description: 'Provider identifier, a unique ID, potentially a link to a file.'\n    itemType:\n      type: string\n      description: The GeoJSON type\n      enum:\n        - Feature\n    itemAssets:\n      type: object\n      additionalProperties:\n        type: object\n        required:\n          - href\n        properties:\n          href:\n            type: string\n            format: url\n            description: Link to the asset object\n            example: \u003e-\n              http://cool-sat.com/LC80100102015050LGN00/thumb.png\n          title:\n            type: string\n            description: Displayed title\n            example: Thumbnail\n          type:\n            type: string\n            description: Media type of the asset\n            example: image/png\n    itemProperties:\n      type: object\n      required:\n        - datetime\n      description: provides the core metatdata fields plus extensions\n      properties:\n        datetime:\n          $ref: '#/components/schemas/time'\n      additionalProperties:\n        description: Any additional properties added in via extensions.\n    itemCollectionLinks:\n      type: array\n      description: \u003e-\n        An array of links. Can be used for pagination, e.g. by providing a link\n        with the `next` relation type.\n      items:\n        $ref: '#/components/schemas/link'\n      example:\n        - rel: next\n          href: \u003e-\n            http://sat-api.developmentseed.org/collections/landsat-8-l1/items/gasd312fsaeg\n    root:\n      type: object\n      required:\n        - links\n      properties:\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n          example:\n            - href: 'http://sat-api.developmentseed.org'\n              rel: self\n              type: application/json\n              title: this document\n            - href: 'http://sat-api.developmentseed.org/api'\n              rel: service\n              type: application/json\n              title: this document\n            - href: 'http://sat-api.developmentseed.org/collections'\n              rel: data\n              type: application/json\n              title: Metadata about the feature collections\n    req-classes:\n      type: object\n      required:\n        - conformsTo\n      properties:\n        conformsTo:\n          type: array\n          items:\n            type: string\n          example:\n            - 'http://www.opengis.net/spec/wfs-1/3.0/req/core'\n            - 'http://www.opengis.net/spec/wfs-1/3.0/req/oas30'\n            - 'http://www.opengis.net/spec/wfs-1/3.0/req/html'\n            - 'http://www.opengis.net/spec/wfs-1/3.0/req/geojson'\n    content:\n      type: object\n      required:\n        - links\n        - collections\n      properties:\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n          example:\n            - href: 'http://data.example.org/collections.json'\n              rel: self\n              type: application/json\n              title: this document\n            - href: 'http://data.example.org/collections.html'\n              rel: alternate\n              type: text/html\n              title: this document as HTML\n            - href: 'http://schemas.example.org/1.0/foobar.xsd'\n              rel: describedBy\n              type: application/xml\n              title: XML schema for Acme Corporation data\n        collections:\n          type: array\n          items:\n            $ref: '#/components/schemas/collectionInfo'\n    collectionInfo:\n      type: object\n      required:\n        - name\n        - links\n        - stac_version\n        - id\n        - description\n        - license\n        - extent\n      properties:\n        name:\n          description: 'identifier of the collection used, for example, in URIs'\n          type: string\n          example: buildings\n        title:\n          description: human readable title of the collection\n          type: string\n          example: Buildings\n        description:\n          description: a description of the features in the collection\n          type: string\n          example: Buildings in the city of Bonn.\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n          example:\n            - href: 'http://data.example.org/collections/buildings/items'\n              rel: item\n              type: application/geo+json\n              title: Buildings\n            - href: 'http://example.org/concepts/building.html'\n              rel: describedBy\n              type: text/html\n              title: Feature catalogue for buildings\n        extent:\n          $ref: '#/components/schemas/extent'\n        crs:\n          description: \u003e-\n            The coordinate reference systems in which geometries may be\n            retrieved. Coordinate reference systems are identified by a URI. The\n            first coordinate reference system is the coordinate reference system\n            that is used by default. This is always\n            \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\", i.e. WGS84\n            longitude/latitude.\n          type: array\n          items:\n            type: string\n          default:\n            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n        stac_version:\n          type: string\n          example: 0.6.0\n        id:\n          description: 'identifier of the collection used, for example, in URIs'\n          type: string\n          example: buildings\n        keywords:\n          title: Keywords\n          type: array\n          items:\n            type: string\n            example:\n              - buildings\n              - properties\n              - constructions\n        version:\n          title: Collection Version\n          type: string\n          example: 1\n        license:\n          title: Collection License Name\n          type: string\n          example: Apache-2.0\n        providers:\n          type: array\n          items:\n            properties:\n              name:\n                title: Organization name\n                type: string\n                example: Big Building Corp\n              description:\n                title: Provider description\n                type: string\n                example: No further processing applied.\n              roles:\n                title: Organization roles\n                type: array\n                items:\n                  type: string\n                  enum:\n                    - producer\n                    - licensor\n                    - processor\n                    - host\n                example:\n                  - producer\n                  - licensor\n              url:\n                title: Homepage\n                description: \u003e-\n                  Homepage on which the provider describes the dataset and\n                  publishes contact information.\n                type: string\n                format: url\n                example: 'http://www.big-building.com'\n    queryFilter:\n      type: object\n      description: Allows users to query properties for specific values\n      properties:\n        query:\n          $ref: '#/components/schemas/query'\n    query:\n      type: object\n      description: Define which properties to query and the operatations to apply\n      additionalProperties:\n        $ref: '#/components/schemas/queryProp'\n      example:\n        'eo:cloud_cover':\n          lt: 50\n    queryProp:\n      description: Apply query operations to a specific property\n      anyOf:\n        - description: \u003e-\n            if the object doesn't contain any of the operators, it is equivalent\n            to using the equals operator\n        - type: object\n          description: Match using an operator\n          properties:\n            eq:\n              description: \u003e-\n                Find items with a property that is equal to the specified value.\n                For strings, a case-insensitive comparison must be performed.\n            gt:\n              type: number\n              description: \u003e-\n                Find items with a property value greater than the specified\n                value.\n            lt:\n              type: number\n              description: Find items with a property value less than the specified value.\n            gte:\n              type: number\n              description: \u003e-\n                Find items with a property value greater than or equal the\n                specified value.\n            lte:\n              type: number\n              description: \u003e-\n                Find items with a property value greater than or equal the\n                specified value.\n    sortFilter:\n      type: object\n      description: Sort the results\n      properties:\n        sort:\n          $ref: '#/components/schemas/sort'\n    sort:\n      type: array\n      description: |\n        An array of objects containing a property name and sort direction.\n      minItems: 1\n      items:\n        type: object\n        required:\n          - field\n        properties:\n          field:\n            type: string\n          direction:\n            type: string\n            default: asc\n            enum:\n              - asc\n              - desc\n      example:\n        - field: 'eo:cloud_cover'\n          direction: desc\n    extent:\n      type: object\n      properties:\n        crs:\n          description: \u003e-\n            Coordinate reference system of the coordinates in the spatial extent\n            (property `spatial`). In the Core, only WGS84 longitude/latitude is\n            supported. Extensions may support additional coordinate reference\n            systems.\n          type: string\n          enum:\n            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n          default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n        spatial:\n          description: \u003e-\n            West, south, east, north edges of the spatial extent. The minimum\n            and maximum values apply to the coordinate reference system WGS84\n            longitude/latitude that is supported in the Core. If, for example, a\n            projected coordinate reference system is used, the minimum and\n            maximum values need to be adjusted.\n          type: array\n          minItems: 4\n          maxItems: 6\n          items:\n            type: number\n          example:\n            - -180\n            - -90\n            - 180\n            - 90\n        trs:\n          description: \u003e-\n            Temporal reference system of the coordinates in the temporal extent\n            (property `temporal`). In the Core, only the Gregorian calendar is\n            supported. Extensions may support additional temporal reference\n            systems.\n          type: string\n          enum:\n            - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'\n          default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'\n        temporal:\n          description: Begin and end times of the temporal extent.\n          type: array\n          minItems: 2\n          maxItems: 2\n          items:\n            type: string\n            format: dateTime\n          example:\n            - '2011-11-11T12:22:11Z'\n            - '2012-11-24T12:32:43Z'\n    fieldsFilter:\n      type: object\n      description: Determines the shape of the features in the response\n      properties:\n        fields:\n          $ref: '#/components/schemas/fields'\n    fields:\n      description: \u003e\n        The geometry member determines whether the geometry is populated or is\n        null. The\n\n        include and exclude members specify an array of property names that are\n        either \n\n        included or excluded from the result, respectively. If both include and\n        exclude \n\n        are specified, include takes precedence.\n\n        id and links are required feature properties and cannot be excluded.\n      type: object\n      properties:\n        geometry:\n          type: boolean\n        include:\n          type: array\n          items:\n            type: string\n            example:\n              - 'eo:cloud_cover'\n        exclude:\n          type: array\n          items:\n            type: string\n            example:\n              - 'eo:sun_azimuth'\ntags:\n  - name: STAC\n    description: Extension to WFS3 Core to support STAC metadata model and search API\n"
		}
	},
	"Error": "yaml: line 138: found character that cannot start any token"
}