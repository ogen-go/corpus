{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/go-spatial/geocatalogo"
		},
		"file": {
			"name": "stac-0.8.0.yml",
			"size": 0,
			"path": "stac-0.8.0.yml",
			"byteSize": 17136,
			"content": "openapi: 3.0.1\ninfo:\n  title: {{ .config.Metadata.Identification.Title }}\n  version: 0.8.0\n  description: \u003e-\n    {{ .config.Metadata.Identification.Abstract }}\n  contact:\n    name: {{ .config.Metadata.Provider.Name }}\n    url: \"{{ .config.Metadata.Provider.URL }}\"\n  license:\n    name: {{ .config.Metadata.License.Name }}\n    url: \"{{ .config.Metadata.License.URL }}\"\nservers:\n  - url: \"{{ .config.Server.URL }}\"\npaths:\n  /stac:\n    get:\n      summary: Return the root catalog or collection.\n      description: \u003e-\n        Returns the root STAC Catalog or STAC Collection that is the entry point\n        for users to browse with STAC Browser or for search engines to crawl.\n        This can either return a single STAC Collection or more commonly a STAC\n        catalog that usually lists sub-catalogs of STAC Collections, i.e. a\n        simple catalog that lists all collections available through the API.\n      tags:\n        - STAC\n      responses:\n        '200':\n          description: A catalog JSON definition. Used as an entry point for a crawler.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/catalogDefinition'\n  /stac/search:\n    get:\n      summary: Search STAC items with simple filtering.\n      description: \u003e-\n        Retrieve Items matching filters. Intended as a shorthand API for simple\n        queries.\n        \n\n        This method is optional, but you MUST implement `POST /stac/search` if you want to implement this method.\n      operationId: getSearchSTAC\n      tags:\n        - STAC\n      parameters:\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/datetime'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/ids'\n        - $ref: '#/components/parameters/collections'\n      responses:\n        '200':\n          description: A feature collection.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/itemCollection'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\n    post:\n      summary: Search STAC items with full-featured filtering.\n      description: \u003e-\n        retrieve items matching filters. Intended as the standard, full-featured\n        query API.\n        \n        \n        This method is mandatory to implement if `GET /stac/search` is implemented. If this endpoint is implemented on a server, it is required to add a link with `rel` set to `search` to the `links` array in `GET /stac` that refers to this endpoint.\n      operationId: postSearchSTAC\n      tags:\n        - STAC\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/searchBody'\n      responses:\n        '200':\n          description: A feature collection.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/itemCollection'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\ncomponents:\n  parameters:\n    limit:\n      name: limit\n      in: query\n      description: |-\n        The optional limit parameter limits the number of items that are presented in the response document.\n\n        Only items are counted that are on the first level of the collection in the response document.\n        Nested objects contained within the explicitly requested items shall not be counted.\n\n        Minimum = 1. Maximum = 10000. Default = 10.\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 10000\n        default: 10\n      style: form\n      explode: false\n    page:\n      name: page\n      in: query\n      description: |\n        The optional page parameter returns the specified page of results\n        (with each page having size=limit).\n\n        * Minimum = 1\n        * Default = 1\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        default: 1\n      style: form\n      explode: false\n    ids:\n      name: ids\n      in: query\n      description: |\n        The optional ids parameter returns a FeatureCollection of all matching ids.\n        If provided all other parameters that further restrict the number of search results (except `page` and `limit`) will be ignored.\n      required: false\n      schema:\n        type: array\n        minItems: 1\n        items:\n          type: string\n      explode: false\n    collections:\n      name: collections\n      in: query\n      description: |\n        The collections search parameter is a list of of collection IDs for Items to match.\n        Only items that are included in one of these collections will be returned, otherwise\n        all collections will be searched.\n      required: false\n      schema:\n        type: array\n        minItems: 1\n        items:\n          type: string\n      explode: false\n    bbox:\n      name: bbox\n      in: query\n      description: |-\n        Only features that have a geometry that intersects the bounding box are selected.\n        The bounding box is provided as four or six numbers, depending on whether the\n        coordinate reference system includes a vertical axis (elevation or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Lower left corner, coordinate axis 3 (optional)\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n        * Upper right corner, coordinate axis 3 (optional)\n\n        The coordinate reference system of the values is WGS 84 longitude/latitude\n        (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate\n        reference system is specified in the parameter `bbox-crs`.\n\n        For WGS 84 longitude/latitude the values are in most cases the sequence of\n        minimum longitude, minimum latitude, maximum longitude and maximum latitude.\n        However, in cases where the box spans the antimeridian the first value\n        (west-most box edge) is larger than the third value (east-most box edge).\n\n        If a feature has multiple spatial geometry properties, it is the decision of the\n        server whether only a single spatial geometry property is used to determine\n        the extent or all relevant geometries.\n      required: false\n      schema:\n        type: array\n        minItems: 4\n        maxItems: 6\n        items:\n          type: number\n      style: form\n      explode: false\n  schemas:\n    exception:\n      type: object\n      required:\n        - code\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n    link:\n      title: Link\n      description: A generic link.\n      type: object\n      required:\n        - href\n        - rel\n      properties:\n        href:\n          type: string\n          format: url\n          example: 'http://www.geoserver.example/stac/naip/child/catalog.json'\n        rel:\n          type: string\n          example: child\n        type:\n          type: string\n          example: application/json\n        title:\n          type: string\n          example: NAIP Child Catalog\n    searchBody:\n      description: The search criteria\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/bboxFilter'\n        - $ref: '#/components/schemas/datetimeFilter'\n        - $ref: '#/components/schemas/intersectsFilter'\n        - type: object\n          properties:\n            limit:\n              type: integer\n              example: 10\n    bbox:\n      description: |\n        Only features that have a geometry that intersects the bounding box are\n        selected. The bounding box is provided as four or six numbers,\n        depending on whether the coordinate reference system includes a\n        vertical axis (elevation or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2  \n        * Lower left corner, coordinate axis 3 (optional) \n        * Upper right corner, coordinate axis 1 \n        * Upper right corner, coordinate axis 2 \n        * Upper right corner, coordinate axis 3 (optional)\n\n        The coordinate reference system of the values is WGS84\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless\n        a different coordinate reference system is specified in the parameter\n        `bbox-crs`.\n\n        For WGS84 longitude/latitude the values are in most cases the sequence\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n        latitude. However, in cases where the box spans the antimeridian the\n        first value (west-most box edge) is larger than the third value\n        (east-most box edge).\n\n\n        If a feature has multiple spatial geometry properties, it is the\n        decision of the server whether only a single spatial geometry property\n        is used to determine the extent or all relevant geometries.\n      type: array\n      minItems: 4\n      maxItems: 6\n      items:\n        type: number\n      example:\n        - -110\n        - 39.5\n        - -105\n        - 40.5\n    bboxFilter:\n      type: object\n      description: Only return items that intersect the provided bounding box.\n      properties:\n        bbox:\n          $ref: '#/components/schemas/bbox'\n    datetimeFilter:\n      description: An object representing a date+time based filter.\n      type: object\n      properties:\n        datetime:\n          $ref: '#/components/schemas/datetime'\n    intersectsFilter:\n      type: object\n      description: Only returns items that intersect with the provided polygon.\n      properties:\n        intersects:\n          $ref: 'https://geojson.org/schema/Geometry.json'\n    datetime:\n      type: string\n      description: |-\n        Either a date-time or an interval, open or closed. Date and time expressions\n        adhere to RFC 3339. Open intervals are expressed using double-dots.\n\n        Examples:\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n        * A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n        * Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\n        Only features that have a temporal property that intersects the value of\n        `datetime` are selected.\n\n        If a feature has multiple temporal properties, it is the decision of the\n        server whether only a single temporal property is used to determine\n        the extent or all relevant temporal properties.\n      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n    stac_version:\n      title: STAC version\n      type: string\n      example: 0.8.0\n    stac_extensions:\n      title: STAC extensions\n      type: array\n      uniqueItems: true\n      items:\n        anyOf:\n          - title: Reference to a JSON Schema\n            type: string\n            format: uri\n          - title: Reference to a core extension\n            type: string\n    catalogDefinition:\n      type: object\n      required:\n        - stac_version\n        - id\n        - description\n        - links\n      properties:\n        stac_version:\n          $ref: '#/components/schemas/stac_version'\n        stac_extensions:\n          $ref: '#/components/schemas/stac_extensions'\n        id:\n          type: string\n          example: naip\n        title:\n          type: string\n          example: NAIP Imagery\n        description:\n          type: string\n          example: Catalog of NAIP Imagery.\n        links:\n          type: array\n          items:\n            anyOf:\n            - $ref: '#/components/schemas/link'\n            - title: Link to search endpoint\n              description: Link the search endpoint, which is **required** to be specified if the API implements `/stac/search`.\n              type: object\n              required:\n                - href\n                - rel\n              properties:\n                href:\n                  type: string\n                  format: url\n                  example: 'http://www.cool-sat.com/stac/search'\n                rel:\n                  type: string\n                  enum:\n                    - search\n                type:\n                  type: string\n                title:\n                  type: string\n    itemCollection:\n      description: A GeoJSON FeatureCollection augmented with foreign members that contain values relevant to a STAC entity\n      type: object\n      required:\n        - features\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/item'\n        links:\n          $ref: '#/components/schemas/itemCollectionLinks'\n    item:\n      description:  A GeoJSON Feature augmented with foreign members that contain values relevant to a STAC entity\n      type: object\n      required:\n        - stac_version\n        - id\n        - type\n        - geometry\n        - bbox\n        - links\n        - properties\n        - assets\n      properties:\n        stac_version:\n          $ref: '#/components/schemas/stac_version'\n        stac_extensions:\n          $ref: '#/components/schemas/stac_extensions'\n        id:\n          $ref: '#/components/schemas/itemId'\n        bbox:\n          $ref: '#/components/schemas/bbox'\n        geometry:\n          $ref: 'https://geojson.org/schema/Geometry.json'\n        type:\n          $ref: '#/components/schemas/itemType'\n        properties:\n          $ref: '#/components/schemas/itemProperties'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n        assets:\n          $ref: '#/components/schemas/itemAssets'\n      example:\n        stac_version: '0.8.0'\n        type: Feature\n        id: CS3-20160503_132130_04\n        bbox:\n          - -122.59750209\n          - 37.48803556\n          - -122.2880486\n          - 37.613537207\n        geometry:\n          type: Polygon\n          coordinates:\n            - - - -122.308150179\n                - 37.488035566\n              - - -122.597502109\n                - 37.538869539\n              - - -122.576687533\n                - 37.613537207\n              - - -122.2880486\n                - 37.562818007\n              - - -122.308150179\n                - 37.488035566\n        properties:\n          datetime: '2016-05-03T13:21:30.040Z'\n        links:\n          - rel: self\n            href: \u003e-\n              http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04.json\n        assets:\n          analytic:\n            title: 4-Band Analytic\n            href: \u003e-\n              http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04/analytic.tif\n          thumbnail:\n            title: Thumbnail\n            href: \u003e-\n              http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04/thumb.png\n            type: image/png\n    itemId:\n      type: string\n      example: path/to/example.tif\n      description: 'Provider identifier, a unique ID, potentially a link to a file.'\n    itemType:\n      type: string\n      description: The GeoJSON type\n      enum:\n        - Feature\n    itemAssets:\n      type: object\n      additionalProperties:\n        type: object\n        required:\n          - href\n        properties:\n          href:\n            type: string\n            format: url\n            description: Link to the asset object\n            example: \u003e-\n              http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04/thumb.png\n          title:\n            type: string\n            description: Displayed title\n            example: Thumbnail\n          type:\n            type: string\n            description: Media type of the asset\n            example: image/png\n    itemProperties:\n      type: object\n      required:\n        - datetime\n      description: provides the core metatdata fields plus extensions\n      properties:\n        datetime:\n          $ref: '#/components/schemas/datetime'\n      additionalProperties:\n        description: Any additional properties added in via Item specification or extensions.\n    itemCollectionLinks:\n      type: array\n      description: \u003e-\n        An array of links. Can be used for pagination, e.g. by providing a link\n        with the `next` relation type.\n      items:\n        $ref: '#/components/schemas/link'\n      example:\n        - rel: next\n          href: \u003e-\n            http://api.cool-sat.com/stac/search?next=ANsXtp9mrqN0yrKWhf-y2PUpHRLQb1GT-mtxNcXou8TwkXhi1Jbk\ntags:\n  - name: STAC\n    description: Extension to WFS3 Core to support STAC metadata model and search API\n"
		}
	},
	"Error": "invalidYAML: yaml: invalid map key: map[interface {}]interface {}{\".config.Metadata.Identification.Title\":interface {}(nil)}"
}