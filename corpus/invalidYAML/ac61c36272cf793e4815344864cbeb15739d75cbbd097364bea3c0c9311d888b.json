{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/userver-framework/uservice-dynconf"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "docs/api/api.yaml",
			"byteSize": 6003,
			"content": "openapi: 3.0.0\ninfo:\n    description: Open source service dynamic configs by userver\n    title: uservice-dynconf 1.0\n    version: '1.0'\n\nservers:\n  - url: localhost:1083\n    description: local\n\npaths:\n    /configs/values:\n        post:\n            description: |\n                A handle for getting config values.\n            requestBody:\n                description: |\n                    Parameters for config values\n                content:\n                    application/json:\n                        schema:\n                            additionalProperties: false\n                            type: object\n                            properties:\n                                ids:\n                                    type: array\n                                   description: list of config ids\n                                    items:\n                                        type: string\n                                        description: config id\n                                update_since:\n                                    type: string\n                                    description: the date from which to watch config updates\n                                service:\n                                    type: string\n                                    description: The name of the service to search for configs for\n                                    default: __default__\n            responses:\n                  200:\n                      description: OK\n                      content:\n                          application/json:\n                              schema:\n                                  type: object\n                                  additionalProperties: false\n                                  required:\n                                    - configs\n                                  properties:\n                                      configs:\n                                          type: object\n                                          additionalProperties: true\n                                          description: Map of received configs\n                                      updated_at:\n                                          type: string\n                                          description: Time of last update\n                                      not_found:\n                                          description: list of configs not found\n                                          type: array\n                                          items:\n                                              type: string\n                                              description: id конфига\n\n    /admin/v1/configs:\n        post:\n            description: |\n                Handle for adding (editing) configs\n            requestBody:\n                description: |\n                    Config parameters (you can add bulk)\n                content:\n                    application/json:\n                        schema:\n                            additionalProperties: false\n                            type: object\n                            required:\n                              - configs\n                            properties:\n                                configs:\n                                    type: object\n                                    additionalProperties: true\n                                    description: |\n                                        Map key-values, config name and its value,\n                                        you can have multiple configs at the same time\n                                service:\n                                    type: string\n                                    description: The name of the service to create/update for configs for\n                                    default: __default__\n            responses:\n                204:\n                    description: OK\n                400:\n                    description: Wrong answer\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n    \n    /admin/v1/configs/delete:\n        post:\n            description: |\n                Handle for deleting configs\n            requestBody:\n                description: |\n                    Config parameters (you can delete bulk)\n                content:\n                    application/json:\n                        schema:\n                            additionalProperties: false\n                            type: object\n                            required:\n                              - ids\n                              - service\n                            properties:\n                                ids:\n                                    type: array\n                                    description: |\n                                        list of config ids to delete\n                                    items:\n                                        type: string\n                                        description: id конфига\n                                service:\n                                    type: string\n                                    description: The name of the service to delete for configs for\n                                    default: __default__\n            responses:\n                204:\n                    description: OK\n                400:\n                    description: Wrong answer\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Error'\ncomponents:\n    schemas:\n        Error:\n            description: Error\n            type: object\n            additionalProperties: false\n            properties:\n               code:\n                  type: string\n                  description: code error\n               message:\n                  type: string\n                  description: message error\n \n"
		}
	},
	"Error": "invalidYAML: yaml: line 26: did not find expected key"
}