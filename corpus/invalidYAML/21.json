{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/italia/api-oas-checker"
		},
		"file": {
			"name": "cache-control-test.yml",
			"path": "rules/tests/cache-control-test.yml",
			"content": "openapi: 3.0.1\ncomponents:\n  headers:\n    Cache-Control-Ok: \u0026CacheControlOk\n      example: \u003e-\n        max-age=3000\n      description: |-\n        This rule should find a way to ensure that the API provider\n        analysed and documented all the issues of caching and\n        decided to use (eg. max-age, private, ...) because...\n      schema:\n        $ref: \"#/components/schemas/CacheControl\"\n\n  schemas:\n    CacheControl:\n      description: \"max-age public\"\n      type: string\n      pattern: \u003e-\n        [a-z \\-]+(=([a-z \\-]+|\"\\w+\"))?(,\\s+[a-z \\-]+(=([a-z \\-]+|\"\\w+\")))?\npaths:\n  /ok-cache-control:\n    get:\n      parameters:\n      - name: Cache-Control\n        in: header\n        example: \u003e-\n          max-age=3000\n        description: |-\n          This rule should find a way to ensure that the API provider\n          analysed and documented all the issues of caching and\n          decided to use (eg. max-age, private, ...) because...\n        schema:\n          $ref: \"#/components/schemas/CacheControl\"\n      responses:\n        \"201\":\n          description: Cache-Control must contain a placeholder\n          headers:\n            Cache-Control:\n              $ref: '#/components/headers/Cache-Control-Ok'\n  /ok-no-headers:\n    put:\n      responses:\n        \"201\":\n          description: ignore cache checks because no headers\n  /ko-empty-headers:\n    put:\n      responses:\n        \"201\":\n          description: error as no cache in headers\n          headers: {}\n  /ok-cache-control-responses:\n    get:\n      responses:\n        \"201\":\n          description: Cache-Control must contain a placeholder\n          headers:\n            Cache-Control:\n              $ref: '#/components/headers/Cache-Control-Ok'\n\n  /ko-cache-control-request-nodescription:\n    get:\n      parameters:\n      - name: Cache-Control\n        in: header\n        schema:\n          $ref: \"#/components/schemas/CacheControl\"\n      responses:\n        \"201\":\n          description: |-\n            Should detail cache usage. As `headers` is missing\n            other checks won't run on responses.\n  /ko-cache-control-request-short-description:\n    get:\n      parameters:\n      - name: Cache-Control\n        in: header\n        description: |-\n          Should detail cache usage\n        schema:\n          $ref: \"#/components/schemas/CacheControl\"\n      responses:\n        \"201\":\n          description: Should have a meaningful cache usage.\n\n  /ko-cache-control-and-expires:\n    get:\n      responses:\n        \"201\":\n          description: Cache-Control overrides Expires.\n          headers:\n            Cache-Control:\n              $ref: \"#/components/schemas/CacheControl\"\n            Expires:\n              description: |-\n                max-age private no-store\n\n  /ko-cache-control-and-expires-lower:\n    get:\n      responses:\n        \"201\":\n          description: Cache-Control overrides Expires.\n          headers:\n            cache-control:\n              \u003c\u003c: CacheControlOk\n            expires:\n                description: |-\n                  max-age private no-store\n  /ko-no-cache-control-nor-expires:\n    get:\n      responses:\n        \"201\":\n          description: Cache-Control overrides Expires.\n  /ko-expires-nodescription:\n    get:\n      responses:\n        \"201\":\n          description: Cache-Control overrides Expires.\n          headers:\n            Expires:\n              description: \"\"\n  /ko-cache-control-response-nodescription:\n    get:\n      responses:\n        \"201\":\n          description: Cache-Control overrides Expires.\n          headers:\n            Cache-Control:\n              \u003c\u003c: *CacheControlOk\n              description: \"\"\n  /ko-expires-short-description:\n    get:\n      responses:\n        \"201\":\n          description: Cache-Control overrides Expires.\n          headers:\n            Expires:\n              description: \"short description\"\n  /ko-cache-control-response-short-description:\n    get:\n      responses:\n        \"201\":\n          description: Cache-Control overrides Expires.\n          headers:\n            Cache-Control:\n              \u003c\u003c: *CacheControlOk\n              description: \"this is very short\"\n              \n"
		}
	},
	"Error": "yaml: map merge requires map or sequence of maps as the value"
}