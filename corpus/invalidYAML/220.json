{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ioggstream/python-course"
		},
		"file": {
			"name": "ex-04-01-headers-ok.yaml",
			"path": "connexion-101/notebooks/oas3/ex-04-01-headers-ok.yaml",
			"content": "# Complete this file with the required informations\n#  using your swagger-editor. You should\n# - fix all the eventual error\n# - add the missing parameters\n# so that the file become a valid OAS3 spec.\nopenapi: 3.0.0\ninfo:\n  title: foo\n  version: \"0.1\"\n\n# One or more server\n#   You can add production, staging and test environments.\n#   We are using the custom `x-sandbox` to identify\n#   sandbox instances\nservers:\n  - description: Development server\n    url: https://localhost:8443/datetime/v1\n  - description: Test server\n    url: https://api.example.com/datetime/v1\n    x-sandbox: true\n    # The following custom parameter can be used\n    # to declare how to check the API.\n    x-healthCheck:\n      url: https://api.example.com/datetime/v1/status\n      interval: 300\n      timeout: 15\n\n#\n# Complete the /status path\n#\npaths:\n  /status:\n    get:\n      summary: Ritorna lo stato dell'applicazione.\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: api.get_status\n      responses:\n        '200':\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                title: OK\n                status: 200\n                detail: The app is running smoothly.\n         '503':\n           $ref: '#/components/responses/503'\n\n\ncomponents:\n  responses:\n    '503':\n      description: |\n        The service is temporarily unavailable.\n        In this case no implementation informations\n        should be disclosed.\n      headers:\n        Retry-After:\n          $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/headers/Retry-After'\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n          example:\n            title: Service Unavailable\n            status: 503\n            detail: The app is temporarily down.\n\n  schemas:\n    Problem:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/schemas/Problem'\n"
		}
	},
	"Error": "yaml: line 52: did not find expected key"
}