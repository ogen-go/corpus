{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/scale"
		},
		"file": {
			"name": "error.yml",
			"size": 0,
			"path": "scale/docs/rest/v6/error.yml",
			"byteSize": 5410,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Error Services\n  version: v6\npaths:\n  /errors/:\n    get:\n      operationId: _rest_v6_error_list\n      summary: Error List\n      description: Returns a list of all errors\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n        - in: query\n          name: started\n          schema:\n            type: string\n            format: date-time\n          description: The start of the time range to query\n        - in: query\n          name: ended\n          schema:\n            type: string\n            format: date-time\n          description: End of the time range to query, defaults to the current time\n        - in: query\n          name: is_builtin\n          schema:\n            type: boolean\n          description: if provided, only return errors matching is_builtin\n        - in: query\n          name: job_type_name\n          schema:\n            type: string\n          description: if provided, only return errors for job types with the given name (any version)\n        - in: query\n          name: name\n          schema:\n            type: string\n          description: if provided, only return errors with the given name\n        - in: query\n          name: category\n          schema:\n            type: string\n          description: if provided, only return errors matching the given category\n        - in: query\n          name: order\n          schema:\n            type: string\n          description: \"One or more fields to use when ordering the results. |\n                        Duplicate it to multi-sort, (ex: order=host_name\u0026order=created) |\n                        Nested objects require a delimiter (ex: order=source_file__created) |\n                        Prefix fields with a dash to reverse the sort, (ex: order=-created)\"\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/error_list'\n\n  /ingests/errors/{id}/:\n    get:\n      operationId: _rest_v6_error_details\n      summary: Error Details\n      description: Returns detailed information about the error with the specified id\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing error\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/error_details'\n\ncomponents:\n  schemas:\n    error_list:\n      title: Error List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters \n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/error_details'\n          description: List of Error objects\n    error_base:\n      title: Error Base\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        name:\n          type: string\n          example: my-error\n        title:\n          type: string\n          example: My Error\n        description:\n          type: string\n          example: My Error Description \n        job_type_name:\n          type: string\n          description: The name of the job type that relates to this error.\n          example: job-type\n        category:\n          type: string\n          example: SYSTEM \n        is_builtin:\n          type: boolean\n          description: Whether the error was loaded during the installation process.\n          example: true\n        should_be_retried:\n          type: boolean\n          description: Whether jobs with this error should be retried automatically. |\n            The following builtin errors are retried automatically: Unknown, |\n            Database, Database Operation, Filesystem I/O, Ingest Timeout, Task Launch,|\n            Docker Launch, Docker Terminated, Node Lost, Resource Starvation, |\n            Launch Timeout, Pull-task Timeout, Pre-task Timeout, Post-task Timeout, |\n            Timeout (System), Docker Pull Failed, Scheduler Restarted\n          example: true\n    error_details:\n      allOf:\n        - ref: '#/components/schemas/error_base'\n        - title: Error Details\n        - type: object\n          properties:\n            created:\n              type: string\n              format: date-time\n              description: When the associated database model was initially created.\n              example: 2015-09-10T15:24:53.503Z\n            last_modified:\n              type: string\n              format: date-time\n              description: When the associated database model was last saved.\n              example: 2015-09-10T15:24:53.987Z",
			"canonicalURL": "/github.com/ngageoint/scale@1b6a3b879ffe83e10d3b9d9074835a4c3bf476ee/-/blob/scale/docs/rest/v6/error.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ngageoint/scale/blob/1b6a3b879ffe83e10d3b9d9074835a4c3bf476ee/scale/docs/rest/v6/error.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 145:66: mapping values are not allowed in this context"
}