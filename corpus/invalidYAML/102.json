{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedHatInsights/vulnerability-engine"
		},
		"file": {
			"name": "manager.admin.spec.yaml",
			"path": "manager.admin.spec.yaml",
			"content": "openapi: \"3.0.0\"\n\ninfo:\n  title: Vulnerability Engine Manager Admin\n  version: {{ app_version }}\n\npaths:\n  /version:\n    get:\n      summary: Application version\n      description: Get application version.\n      operationId: manager.version_handler.GetVersion.get\n      x-methodName: getVersion\n      responses:\n        200:\n          description: Application version.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/VersionOut'\n\n  /systems/missing_in_inventory:\n    get:\n      summary: Get count of systems in system_platform table but missing in inventory.\n      description: Get count of systems in system_platform table but missing in inventory. Admin interface, available only to admin users.\n      operationId: manager.admin_handler.GetMissingInInventory.get\n      x-methodName: getMissingInInventory\n      security:\n        - ApiKeyAuthAdmin: []\n      responses:\n        200:\n          description: Count of systems missing in inventory.\n    delete:\n      summary: Delete systems from system_platform table missing in inventory.\n      description: Delete systems from system_platform table missing in inventory. Admin interface, available only to admin users.\n      operationId: manager.admin_handler.DeleteMissingInInventory.delete\n      x-methodName: deleteMissingInInventory\n      security:\n        - ApiKeyAuthAdmin: []\n      responses:\n        200:\n          description: Systems deleted.\n        503:\n          description: Service is running in read-only mode.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  \n  /taskomatic/run/{job_name}:\n    put:\n      summary: Trigger immediate run of taskomatic job with given name.\n      description: Trigger immediate run of taskomatic job with given name. Admin interface, available only to admin users.\n      operationId: manager.admin_handler.TaskomaticRun.put\n      x-methodName: taskomaticRun\n      security:\n        - ApiKeyAuthAdmin: []\n      parameters:\n        - in: path\n          name: job_name\n          description: Job name.\n          required: true\n          schema:\n            type: string\n          example: stale_systems\n      responses:\n        200:\n          description: Job run triggered.\n        404:\n          description: Job with given name not found.\n\n  /vmaas/sync:\n    put:\n      summary: Trigger immediate run of sync in vmaas_sync.\n      description: Trigger immediate run of sync in vmaas_sync. Admin interface, available only to admin users.\n      operationId: manager.admin_handler.VmaasSync.put\n      x-methodName: vmaasSync\n      security:\n        - ApiKeyAuthAdmin: []\n      responses:\n        200:\n          description: Run triggered.\n\n  /vmaas/re-evaluate:\n    put:\n      summary: Trigger immediate run of re-evaluation in vmaas_sync.\n      description: Trigger immediate run of re-evaluation in vmaas_sync. Admin interface, available only to admin users.\n      operationId: manager.admin_handler.VmaasReEvaluate.put\n      x-methodName: vmaasReEvaluate\n      security:\n        - ApiKeyAuthAdmin: []\n      responses:\n        200:\n          description: Run triggered.\n\n  /cves/{cve_id}:\n    delete:\n      summary: Delete CVE with given name.\n      description: Delete CVE with given name. Deletes this CVE from all associated systems. Admin interface, available only to admin users.\n      operationId: manager.admin_handler.DeleteCve.delete\n      x-methodName: deleteCve\n      security:\n        - ApiKeyAuthAdmin: []\n      parameters:\n        - in: path\n          name: cve_id\n          description: CVE name.\n          required: true\n          schema:\n            type: string\n          example: CVE-2020-1111\n      responses:\n        200:\n          description: CVE deleted.\n\n  /content_version:\n    get:\n      summary: Get content revisions.\n      description: Get revisions of content imported to Vulnerability application.\n      operationId: manager.admin_handler.GetContentVersion.get\n      x-methodName: getContentVersion\n      security:\n        - ApiKeyAuthAdmin: []\n      responses:\n        200:\n          description: Content revisions.\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                properties:\n                  insights_content_vulnerability:\n                    type: string\n                    example: 5ec1896cefc6d3de960a80742fe513091e065cfd\n                    description: SHA of latest commit imported for content repository.\n                  insights_content_vulnerability_repo:\n                    type: string\n                    example: https://github.com/RedHatInsights/insights-content-vulnerability.git\n                    description: URL of content repository.\n                  insights_playbooks:\n                    type: string\n                    example: c702f6358a8e49590308ee005a175e7378852c7b\n                    description: SHA of latest commit imported for playbooks repository.\n                  insights_playbooks_repo:\n                    type: string\n                    example: https://github.com/RedHatInsights/insights-playbooks.git\n                    description: URL of playbooks repository.\n\n  /database/queries:\n    get:\n      summary: Get list of running queries.\n      description: Get statistics about active running queries, defined by threshold.\n      operationId: manager.admin_handler.GetQueries.get\n      x-methodName: getQueries\n      security:\n        - ApiKeyAuthAdmin: []\n      parameters:\n        - in: query\n          name: ms_threshold\n          schema:\n            type: number\n          description: Threshold in ms for the minimum running query.\n        - in: query\n          name: username\n          schema:\n            type: string\n          description: Search for queries by author\n        - in: query\n          name: wait_event_type\n          schema:\n            type: string\n          description: Filter queries by event wait event type\n          example: Lock\n      responses:\n        200:\n          description: Queries result.\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                properties:\n                  queries:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        pid:\n                          type: integer\n                          example: 40277\n                          description: PID of the DB server process\n                        db_name:\n                          type: string\n                          example: vulnerability\n                          description: Name of the database where process is connected\n                        username:\n                          type: string\n                          example: ve_db_user_listener\n                          description: Author of the query\n                        app_name:\n                          type: string\n                          example: psql\n                          description: Name of the application that is connected\n                        query_start:\n                          type: string\n                          example: 2021-06-10 11:03:18.824233+00\n                          description: Timestamp when query execution started\n                        running_time:\n                          type: string\n                          example: 0:00:02.644451\n                          description: Duration of query execution\n                        wait_event_type:\n                          type: string\n                          example: LWLock\n                          description: Signifies the type of waiting event\n                        wait_event:\n                          type: string\n                          example: ControlFileLock\n                          description: Wait event name in backend\n                        query:\n                          type: string\n                          example: select system_profile-\u003e'operating_system' from inventory.host where system_profile-\u003e'operating_system' is not null;\n                          description: Actual running query\n\n  /database/query/{pid}:\n    delete:\n      summary: Kill a query execution by PID.\n      description: Kill query by provided PID.\n      operationId: manager.admin_handler.KillQuery.delete\n      x-methodName: killQuery\n      security:\n        - ApiKeyAuthAdmin: []\n      parameters:\n        - in: path\n          name: pid\n          schema:\n            type: integer\n          description: PID running the query\n          required: true\n      responses:\n        200:\n          description: Query killed\n\n  /database/vacuum/table/{table_name}:\n    get:\n      summary: Start vacuum on table.\n      description: Starts a pg_repack process to vacuum a table.\n      operationId: manager.admin_handler.VacuumTable.get\n      x-methodName: vacuumTable\n      security:\n        - ApiKeyAuthAdmin: []\n      parameters:\n        - in: path\n          name: table_name\n          schema:\n            type: string\n          description: Name of the table NEEDS to be with schema name.\n          example: public.system_platform\n          required: True\n        - in: query\n          name: only_indexes\n          schema:\n            type: boolean\n          description: If true, vacuums only indexes of table.\n      responses:\n        200:\n          description: Vacuuming started.\n\n  /database/vacuum/user/{rh_account_id}:\n    get:\n      summary: Vacuum system_vulnerabilities table occupied by user.\n      description: Starts a pg_repack process to partitioned sv tables vacuum which has data by given user id.\n      operationId: manager.admin_handler.VacuumUser.get\n      x-methodName: vacuumUser\n      security:\n        - ApiKeyAuthAdmin: []\n      parameters:\n        - in: path\n          name: rh_account_id\n          schema:\n            type: integer\n          description: ID of the user.\n          required: True\n      responses:\n        200:\n          description: Vacuuming started.\n\n  /database/bloat/table/{table_name}:\n    get:\n      summary: Get bloat statistics for given database table.\n      description: Gets the bloat statistics for the database table.\n      operationId: manager.admin_handler.GetBloat.get\n      x-methodName: getTableBloat\n      security:\n        - ApiKeyAuthAdmin: []\n      parameters:\n        - in: path\n          name: table_name\n          schema:\n            type: string\n          description: Name of the table in schema.\n          required: True\n      responses:\n        200:\n          description: Bloat result.\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                properties:\n                  table_len:\n                    type: integer\n                    description: Physical relation length in bytes\n                    example: 8192\n                  tuple_count:\n                    type: integer\n                    description: Number of live tuples\n                    example: 19\n                  tuple_len:\n                    type: integer\n                    description: Total length of live tuples in bytes\n                    example: 3956\n                  tuple_percent:\n                    type: number\n                    description: Percentage of live tuples\n                    example: 48.29\n                  dead_tuple_count:\n                    type: integer\n                    description: Number of dead tuples\n                    example: 0\n                  dead_tuple_len:\n                    type: integer\n                    description: Total length of dead tuples in bytes\n                    example: 0\n                  dead_tuple_percent:\n                    type: number\n                    description: Percentage of dead tuples\n                    example: 0\n                  free_space:\n                    type: integer\n                    description: Total free space in bytes\n                    example: 4024\n                  free_percent:\n                    type: number\n                    description: Percentage of free space\n                    example: 49.12\n\n  /database/bloat/user/{rh_account_id}:\n    get:\n      summary: Get table statistics for user.\n      description: Get system_vulnerabilities table statistics for given user id.\n      operationId: manager.admin_handler.GetUserBloat.get\n      x-methodName: GetUserBloat\n      security:\n        - ApiKeyAuthAdmin: []\n      parameters:\n        - in: path\n          name: rh_account_id\n          schema:\n            type: integer\n          description: ID of the user.\n          required: True\n      responses:\n        200:\n          description: Bloat results.\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                properties:\n                  tables:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        table_name:\n                          type: string\n                          description: Name of the table with user info.\n                          example: system_vulnerabilities_active_101\n                        table_len:\n                          type: integer\n                          description: Physical relation length in bytes\n                          example: 8192\n                        tuple_count:\n                          type: integer\n                          description: Number of live tuples\n                          example: 19\n                        tuple_len:\n                          type: integer\n                          description: Total length of live tuples in bytes\n                          example: 3956\n                        tuple_percent:\n                          type: number\n                          description: Percentage of live tuples\n                          example: 48.29\n                        dead_tuple_count:\n                          type: integer\n                          description: Number of dead tuples\n                          example: 0\n                        dead_tuple_len:\n                          type: integer\n                          description: Total length of dead tuples in bytes\n                          example: 0\n                        dead_tuple_percent:\n                          type: number\n                          description: Percentage of dead tuples\n                          example: 0\n                        free_space:\n                          type: integer\n                          description: Total free space in bytes\n                          example: 4024\n                        free_percent:\n                          type: number\n                          description: Percentage of free space\n                          example: 49.12\n\n  /database/systems/{inventory_id}:\n    delete:\n      summary: Delete system.\n      description: Deletes system from database.\n      operationId: manager.admin_handler.DeleteSystem.delete\n      x-methodName: deleteSystem\n      security:\n        - ApiKeyAuthAdmin: []\n      responses:\n        200:\n          description: System has been deleted.\n        404:\n          description: System has not been found in the database.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      parameters:\n        - $ref: '#/components/parameters/inventory_id'\n\n\ncomponents:\n  parameters:\n    inventory_id:\n      in: path\n      name: inventory_id\n      description: Inventory ID.\n      required: true\n      schema:\n        type: string\n      example: INV-ID-0000-1234\n\n    cve_id:\n      in: path\n      name: cve_id\n      description: CVE id.\n      required: true\n      schema:\n        type: string\n      example: CVE-2016-0800\n\n    account_id:\n      in: path\n      name: account_id\n      description: Account ID of user.\n      required: true\n      schema:\n        type: string\n      example: '123456'\n\n  securitySchemes:\n    ApiKeyAuthAdmin:\n      type: apiKey\n      in: header\n      name: x-rh-identity\n      description: Identity header provided by Turnpike (for non-prod testing only).\n      x-apikeyInfoFunc: manager.base.auth_admin\n\n  schemas:\n    Errors:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            type: object\n            properties:\n              detail:\n                type: string\n                description: Error detail.\n                example: Record not found.\n              status:\n                type: string\n                description: String representation of HTTP status code.\n                example: 404\n            required:\n              - detail\n              - status\n          minItems: 1\n      required:\n        - errors\n\n    VersionOut:\n      type: object\n      properties:\n        application_version:\n          type: string\n          description: Version of application.\n          example: 0.1.2\n        database_version:\n          oneOf:\n            - type: string\n            - type: number\n          description: Version of database schema.\n          example: 1\n      required:\n        - application_version\n        - database_version\n"
		}
	},
	"Error": "yaml: invalid map key: map[interface {}]interface {}{\"app_version\":interface {}(nil)}"
}