{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ULCA-IN/ulca"
		},
		"file": {
			"name": "ulca-api-contract.yaml",
			"size": 0,
			"path": "backend/api/docs/ulca-api-contract.yaml",
			"byteSize": 94219,
			"content": "openapi: 3.0.1\ninfo:\n  title: Unified Language Contribution API (ULCA) documentation\n  description: 'The ULCA API documentation defines a core set of interfaces that enables users and communities to contribute AI/ML datasets to build a large, open Indic languages resource ecosystem. The dataset contributions are primarily geared toward the area of NLP, ASR/TTS and OCR. The documentation proposes core set of interfaces where various AI based models can be hosted, referenced and benchmarked. The interfaces enables entire community to participate, collaborate and track key benchmark parameters.'\n  contact:\n    name: Ministry of Electronics and Information Technology\n    url: https://bhashini.gov.in/ulca\n  version: 0.7.0\nservers:\n- url: https://meity-auth.ulcacontrib.org \n  description: Production server (uses live data)\npaths:\n  /ulca/apis/v0/dataset/corpus/submit:\n    post:\n      tags:\n        - dataset\n      operationId: datasetSubmit\n      summary: Api to training dataset\n      description: Api to upload training dataset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetSubmitRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetSubmitResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/corpus/search:\n    post:\n      tags:\n      - dataset\n      operationId: corpusSearch\n      summary: Api to search training dataset\n      description: Api to search training dataset based on different criteria\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetCorpusSearchRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetCorpusSearchResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/listByUserId:\n    get:\n      tags:\n        - dataset\n      operationId: listByUserId\n      summary: Api to dataset submitted by user\n      description: Api to dataset submitted by user\n      parameters:\n        - name: userId\n          in: query\n          required: true\n          schema:\n            type: string\n          example: 164972ebd9a54f39a97a67bae55162ea\n        - name: startPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 1\n        - name: endPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 2\n        - name: pageSize\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 10\n        - name: name\n          in: query\n          required: false\n          schema:\n            type: string\n          example: Indic Trans English-Hindi\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetListByUserIdResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/getByServiceRequestNumber:\n    get:\n      tags:\n      - dataset\n      operationId: datasetByServiceRequestNumber\n      summary: Api to fetch dataset serviceRequestNumber\n      description: Api to fetch dataset serviceRequestNumber\n      parameters:\n      - name: serviceRequestNumber\n        in: query\n        required: true\n        schema:\n          type: string\n        example: 1144238572\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetByServiceReqNrResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/getByDatasetId:\n    get:\n      tags:\n      - dataset\n      operationId: datasetById\n      summary: Api to fetch dataset by datasetId\n      description: Api to fetch dataset datasetId\n      parameters:\n      - name: datasetId\n        in: query\n        required: true\n        schema:\n          type: string\n        example: 62019355394b3a48f83f814e\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetByIdResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/corpus/search/status:\n    get:\n      tags:\n      - dataset\n      operationId: searchStatus\n      summary: Api to fetch status of search corpus dataset\n      description: fetch status of search corpus dataset\n      parameters:\n      - name: serviceRequestNumber\n        in: query\n        required: true\n        schema:\n          type: string\n        example: 2244238572\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetSearchStatusResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/corpus/search/listByUserId:\n    get:\n      tags:\n      - dataset\n      operationId: searchListByUserId\n      summary: Api to fetch all of search corpus dataset by userId\n      description: fetch all of search corpus dataset by userId\n      parameters:\n        - name: userId\n          in: query\n          required: true\n          schema:\n            type: string\n          example: 164972ebd9a54f39a97a67bae55162ea\n        - name: startPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 1\n        - name: endPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 2\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SearchListByUserIdResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/model/upload:\n    post:\n      tags:\n      - model\n      operationId: uploadModel\n      summary: Api to upload model json file\n      description: upload the model file in json format\n      parameters:\n      - name: userId\n        in: query\n        required: true\n        schema:\n          type: string\n        example:\n          userId: 164972ebd9a54f39a97a67bae55162ea\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n              example:\n                type: /Users/XYZ/Desktop/VakyanshASR-English.json\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UploadModelResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/model/tryMe:\n    post:\n      tags:\n        - model\n      operationId: tryMeOcrImageContent\n      summary: Api to detect the text in image file\n      description: upload the image file to detect the text\n      parameters:\n        - name: modelId\n          in: query\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - file\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelComputeResponse'\n\n  /ulca/apis/v0/model/status/change:\n    post:\n      tags:\n        - model\n      operationId: changeStatus\n      summary: Api to publish/unpublish a model\n      description: changes the status of model to publish and unpublish and also accepts reason of unpublish\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelStatusChangeRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelStatusChangeResponse'\n\n  /ulca/apis/v0/model/search:\n    post:\n      tags:\n      - model\n      operationId: searchModel\n      summary: Api to search model\n      description: searches the model\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelSearchRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelSearchResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/model/feedback/submit:\n    post:\n      tags:\n        - model\n      operationId: modelFeedbackSubmit\n      summary: Api to provide feedback for model\n      description: users can provide feedback for model after try\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelFeedbackSubmitRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelFeedbackSubmitResponse'\n\n  /ulca/apis/v0/model/compute:\n    post:\n      tags:\n      - model\n      operationId: computeModel\n      summary: Api to compute the model inference end point result\n      description: model inference end point is fetched\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelComputeRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelComputeResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n                \n\n  /ulca/apis/v0/model/listByUserId:\n    get:\n      tags:\n        - model\n      operationId: modelListByUserId\n      summary: Api to get model by userId or search model of that user by model name\n      description: list of model of logged-in user and/or search models of logged-in user by model name\n      parameters:\n        - name: userId\n          in: query\n          required: true\n          schema:\n            type: string\n          example: 6a73afa4fc774dcdb28d5fff944511f6\n           \n        - name: startPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 1\n          \n        - name: endPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 2\n        - name: pageSize\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 10\n        - name: name\n          in: query\n          required: false\n          schema:\n            type: string\n          example: IndicTrans\n        \n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelListByUserIdResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n                \n  /ulca/apis/v0/model/getModel:\n    get:\n      tags:\n        - model\n      operationId: getModel\n      summary: Api to fetch model on modelId\n      description: fetch the model details by passing modelId\n      parameters:\n        - name: modelId\n          in: query\n          required: true\n          schema:\n            type: string\n          example: 61c14e928112f94aa569c688\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelListResponseDto'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n                \n  /ulca/apis/v0/model/getModelHealthStatus:\n    get:\n      tags:\n        - model\n      operationId: getHealthStatus\n      summary: Api to fetch list of available models\n      description: fetch list of available models\n      parameters:\n        - name: taskType\n          in: query\n          required: false\n          schema:\n            type: string\n          example: translation\n        - name: startPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 1\n        - name: endPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 2\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelHealthStatusResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/model/feedback/getByTaskType:\n    get:\n      tags:\n        - model\n      operationId: getModelFeedbackByTaskType\n      summary: Api to fetch model feedback by taskType\n      description: fetch model feedback by taskType\n      parameters:\n        - name: taskType\n          in: query\n          required: true\n          schema:\n            type: string\n          example: translation\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetModelFeedbackListResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n      \n  /ulca/apis/v0/model/feedback/getByModelId:\n    get:\n      tags:\n        - model\n      operationId: getModelFeedbackByModelId\n      summary: Api to fetch model feedback by modelId\n      description: fetch model feedback by modelId\n      parameters:\n        - name: modelId\n          in: query\n          required: true\n          schema:\n            type: string\n          example: 61c380072e74fa406e7618ba\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ModelFeedback'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n\n  /ulca/apis/v0/benchmark/submit:\n    post:\n      tags:\n        - benchmark\n      operationId: submitBenchmark\n      summary: Api to submit the benchmark dataset\n      description: Api to submit the benchmark dataset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BenchmarkSubmitRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BenchmarkSubmitResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/benchmark/search:\n    post:\n      tags:\n        - benchmark\n      operationId: searchBenchmark\n      summary: Api to search the benchmark dataset\n      description: Api to search the benchmark dataset\n      parameters:\n        - name: startPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 1\n        - name: endPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 2\n           \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BenchmarkSearchRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BenchmarkSearchResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/benchmark/getByTask:\n    post:\n      tags:\n        - benchmark\n      operationId: listBytask\n      summary: Api to fetch the benchmark dataset on taskType\n      description: Api to search the benchmark dataset based on taskType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BenchmarkListByModelRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BenchmarkListByModelResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/benchmark/execute:\n    post:\n      tags:\n        - benchmark\n      operationId: executeBenchmark\n      summary: Api to run benchmark process against a benchmark dataset\n      description: Api to run benchmark process against a benchmark dataset for one metric\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExecuteBenchmarkRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ExecuteBenchmarkResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/benchmark/execute/allMetric:\n    post:\n      tags:\n        - benchmark\n      operationId: executeBenchmarkAllMetric\n      summary: Api to run benchmark process against a benchmark dataset for all metric available\n      description: Api to run benchmark process against a benchmark dataset for all metric available\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExecuteBenchmarkAllMetricRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ExecuteBenchmarkResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/benchmark/process/status:\n    get:\n      tags:\n        - benchmark\n      operationId: processStatus\n      summary: Api to fetch status of benchmark process\n      description: fetch status of benchmark process by benchmarkProcessId\n      parameters:\n        - name: benchmarkProcessId\n          in: query\n          required: true\n          schema:\n            type: string\n          example: 3338807029\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BmProcessListByProcessIdResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/benchmark/listByUserId:\n    get:\n      tags:\n        - benchmark\n      operationId: listByUserId_1\n      summary: Api to fetch benchamrk dataset list by userId\n      description: fetch benchamrk dataset list by userId or search the benchmark dataset by name\n      parameters:\n        - name: userId\n          in: query\n          required: true\n          schema:\n            type: string\n          example: 61c380072e74fa406e7618ba\n        - name: startPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 1\n        - name: endPage\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 2\n        - name: pageSize\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 10\n        - name: name\n          in: query\n          required: false\n          schema:\n            type: string\n          example: Indic benchmark dataset\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BenchmarkListByUserIdResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n\n  /ulca/apis/v0/benchmark/getBenchmark:\n    get:\n      tags:\n        - benchmark\n      operationId: getBenchmarkById\n      summary: Api to fetch benchamrk dataset list by benchmarkId\n      description: fetch benchamrk dataset list by benchmarkId\n      parameters:\n        - name: benchmarkId\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/GetBenchmarkByIdResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  \n  \n  \n  \n  \n  /v1/users/signup:\n    post:\n      tags:\n        - 'Create Users'\n      summary: 'REST API to register/create new user'\n      description: 'register/create new user'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserSignupRequest'\n        required: true\n      responses:\n        '200':\n          description: New user is created successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Status'\n        '400':\n          description: On input errors causing failure in user account creation.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in user account creation.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n      \n  /v1/users/verify-user:\n    post:\n      tags:\n        - 'Verify Users'\n      summary: 'REST API to verify user account.'\n      description: 'Verify user account'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserVerificationRequest'\n        required: true\n      responses:\n        '200':\n          description: User has verified successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserVerificationResponse'\n        '400':\n          description: On input errors causing failure in user verification.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in user verification.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n  \n  /v1/users/api-key-search:\n    post:\n      tags:\n        - 'Api-key-search'\n      summary: 'REST API key for search'\n      description: 'search using key'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApiKeySearchRequest'\n        required: true\n      responses:\n        '200':\n          description: apiKey search is successful.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ApiKeySearchResponse'\n        '400':\n          description: On input errors causing failure in auth token search.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in auth token search.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'   \n                \n  /v1/users/login:\n    post:\n      tags:\n        - 'Login'\n      summary: 'REST API to login'\n      description: 'login to existing/new user'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserLoginRequest'\n        required: true\n      responses:\n        '200':\n          description: Logged in successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserLoginResponse'\n        '400':\n          description: On input errors causing failure in user login.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in user login.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error' \n                \n   \n  /v1/users/forgot-password:\n    post:\n      tags:\n        - 'Forgot Password'\n      summary: 'REST API for forgot password request'\n      description: 'request to change password'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ForgotPasswordRequest'\n        required: true\n      responses:\n        '200':\n          description: User has notfied successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Status'\n        '400':\n          description: On input errors causing failure in user notification.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in user notification.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'          \n  /v1/users/reset-password:\n    post:\n      tags:\n        - 'Reset Password'\n      summary: 'REST API for resetting password'\n      description: 'Reset forgotten password'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequest'\n        required: true\n      responses:\n        '200':\n          description: Password updated successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Status'\n        '400':\n          description: On input errors causing failure in password resetting.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in password resetting.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v0/error/report:\n    post:\n      tags:\n        - 'Report Errors'\n      summary: 'REST API to get a downloadable reports on errors '\n      description: 'download error reports'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorReportRequest'\n        required: true\n      responses:\n        '200':\n          description: Request successfull.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReportResponse'\n        '400':\n          description: On input errors causing failure reporting.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in reporting.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n\n                \ncomponents:\n  schemas:\n    DatasetSubmitRequest:\n      required:\n        - datasetName\n        - url\n        - userId\n      type: object\n      properties:\n        userId:\n          type: string\n          example: 6a73afa4fc774dcdb28d5fff944511f6\n        datasetName:\n          type: string\n          example: Indic trans English-Hindi\n        url:\n          type: string\n          example: https://anuvaad-raw-datasets.s3-us-west-2.amazonaws.com/ulca-asr-ds-positive-testcase-03.zip\n          \n        \n    DatasetSubmitData:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          example: 1144238572\n        datasetId:\n          type: string\n          example: 62019355394b3a48f83f814e\n        timestamp:\n          type: string\n          example: Mon Aug 29 11:08:40 IST 2022\n          \n    DatasetSubmitResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Dataset Submit success\n        data:\n          $ref: '#/components/schemas/DatasetSubmitData'\n\n    DatasetCorpusSearchRequest:\n      required:\n        - criteria\n      type: object\n      properties:\n        userId:\n          type: string\n          example: 164972ebd9a54f39a97a67bae55162ea\n        datasetType:\n          type: string\n          enum:\n            - parallel-corpus\n            - monolingual-corpus\n            - transliteration-corpus\n            - asr-corpus\n            - tts-corpus\n            - asr-unlabeled-corpus\n            - ocr-corpus\n            - document-layout-corpus\n            - glossary-corpus\n          example: parallel-corpus\n        criteria:\n          $ref: '#/components/schemas/SearchCriteria'\n\n    SearchCriteria:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          example: 1144238572\n        datasetType:\n          type: string\n          example: parallel-corpus\n        userId:\n          type: string\n          example: 6a73afa4fc774dcdb28d5fff944511f6\n        sourceLanguage:\n          type: array\n          items:\n            type: string\n          example: [\"en\"]\n           \n        targetLanguage:\n          type: array\n          items:\n            type: string\n          example: [\"hi\"]\n          \n        collectionMethod:\n          type: array\n          items:\n            type: string\n      \n        alignmentTool:\n          type: array\n          items:\n            type: string\n          example: [\"LaBSE\"]\n        editingTool:\n          type: array\n          items:\n            type: string\n          example: [\"microsoft excel\"]\n          \n        translationModel:\n          type: array\n          items:\n            type: string\n          example: [\"google translation\"]\n        license:\n          type: array\n          items:\n            type: string\n          example: [\"cc-by-4.0\"]\n        domain:\n          type: array\n          items:\n            type: string\n          example: [\"news\"]\n        datasetId:\n          type: array\n          items:\n            type: string\n          example: [\"62019355394b3a48f83f814e\"]\n        channel:\n          type: array\n          items:\n            type: string\n          example: [\"wav\"]\n        gender:\n          type: array\n          items:\n            type: string\n          example: [\"male\"]\n        format:\n          type: array\n          items:\n            type: string\n          example: [\"wav\"]\n        bitsPerSample:\n          type: array\n          items:\n            type: string\n          example: [\"sixteen\"]\n        dialect:\n          type: array\n          items:\n            type: string\n          example: [\"hi-thethi\"]\n        snrTool:\n          type: array\n          items:\n            type: string\n        collectionDescription:\n          type: array\n          items:\n            type: string\n          example: [\"auto-aligned\"]\n        ocrTool:\n          type: array\n          items:\n            type: string\n          example: [\"LaBSE version 3.0\"]\n        dpi:\n          type: array\n          items:\n            type: string\n          example: [\"300_dpi\"]\n        imageTextType:\n          type: array\n          items:\n            type: string\n          example: [\"scene-text\"]\n          \n        collectionSource:\n          type: string\n          example: [\"https://main.sci.gov.in\"]\n        submitterName:\n          type: string\n          example: Dr. Raghav\n        minScore:\n          type: number\n          format: float\n        maxScore:\n          type: number\n          format: float\n        score:\n          type: number\n          format: float\n        samplingRate:\n          type: number\n          format: float\n        countOfTranslations:\n          type: integer\n          format: int32\n        minNoOfSpeakers:\n          type: integer\n          format: int32\n        maxNoOfSpeakers:\n          type: integer\n          format: int32\n        noOfSpeakers:\n          type: integer\n          format: int32\n        minAge:\n          type: integer\n          format: int32\n          example: 22\n        maxAge:\n          type: integer\n          format: int32\n          example: 35\n        age:\n          type: integer\n          format: int32\n          example: 18\n        multipleContributors:\n          type: boolean\n          example: false\n        originalSourceSentence:\n          type: boolean\n          example: false\n        groupBy:\n          type: boolean\n          example: false\n\n    DatasetCorpusSearchResponseData:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          example: 1144238572\n        timestamp:\n          type: string\n          example: 2022-09-02T12:19:33.050+00:00\n          \n    DatasetCorpusSearchResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          $ref: '#/components/schemas/DatasetCorpusSearchResponseData'\n\n    DatasetListByUserIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Dataset List By userId\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatasetListByUserIdResponseDto'\n        count:\n          type: integer\n          format: int32\n          example: 20\n        totalCount:\n          type: integer\n          format: int32\n          example: 192\n        startPage:\n          type: integer\n          format: int32\n          example: 1\n        endPage:\n          type: integer\n          format: int32\n          example: 2\n          \n    DatasetListByUserIdResponseDto:\n      type: object\n      properties:\n        datasetId:\n          type: string\n          example: 62019355394b3a48f83f814e\n        serviceRequestNumber:\n          type: string\n          example: 1144238572\n        datasetName:\n          type: string\n          example: Indic Trans English-Hindi\n        datasetType:\n          type: string\n          example: parallel-corpus\n        submittedOn:\n          type: string\n          example: Mon Aug 29 11:08:40 IST 2022\n        status:\n          type: string\n          example: Completed\n\n  \n    DatasetByServiceReqNrResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Dataset details\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskTracker'\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Code of the error\n          example: 500\n        message:\n          type: string\n          description: Description of the error\n          example: Internal Server Error\n        cause:\n          type: object\n          description: Additional details related to the cause of the error\n        report:\n          type: string\n          description: Link to the error report file\n          example: \n      description: Task Tracker entity\n    \n    TaskTracker:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          description: Unique identifier of the service request\n          example: 1169212231\n        tool:\n          type: string\n          description: Tool updating this data\n          enum:\n          - download\n          - pseudo\n          - ingest\n          - validate\n          - publish\n          - search\n          - delete\n          example: download\n        id:\n          type: string\n          example: 62565849cddf941574b12c1a\n        status:\n          type: string\n          description: Status of the task\n          example: Completed\n        details:\n          type: string\n          description: Details of the current status of the task\n        startTime:\n          type: string\n          description: ISO timestamp of the instance of the start of process\n          example: Tue Feb 08 03:17:01 IST 2022\n        endTime:\n          type: string\n          description: ISO timestamp of the instance of the end of process\n          example: Tue Feb 08 03:17:01 IST 2022\n        lastModified:\n          type: string\n          description: ISO timestamp of the instance of the end of process\n          example: Tue Feb 08 03:17:01 IST 2022\n        error:\n          $ref: '#/components/schemas/Error'\n      description: Task Tracker entity\n\n    DatasetByIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Dataset Details\n        data:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/TaskTracker'\n          example:\n            '1124190703':\n              - serviceRequestNumber: '1124190703'\n                tool: download\n                id: 62cbc2bd72ec8a2af32f09ed\n                status: Completed\n                details:\n                startTime: Mon Jul 11 11:57:09 IST 2022\n                endTime: Mon Jul 11 11:57:13 IST 2022\n                lastModified:\n                error:\n              - serviceRequestNumber: '1124190703'\n                tool: ingest\n                id: 62cbc2c8b106cf28431ee7ab\n                status: Completed\n                details: '{\"timeStamp\":\"Mon Jul 11 11:57:20 IST 2022\",\"processedCount\":[{\"count\":4,\"type\":\"success\"},{\"count\":0,\"type\":\"failed\"}]}'\n                startTime: Mon Jul 11 11:57:20 IST 2022\n                endTime: Mon Jul 11 11:57:20 IST 2022\n                lastModified: Mon Jul 11 11:57:20 IST 2022\n                error:\n              - serviceRequestNumber: '1124190703'\n                tool: validate\n                id:\n                status: Pending\n                details:\n                startTime:\n                endTime:\n                lastModified:\n                error:\n              - serviceRequestNumber: '1124190703'\n                tool: publish\n                id:\n                status: Pending\n                details:\n                startTime:\n                endTime:\n                lastModified:\n                error:\n        \n    DatasetSearchStatusData:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          example: 2224190703\n        timestamp:\n          type: string\n          example: Mon Jul 11 11:38:15 IST 2022\n        searchCriteria:\n          $ref: '#/components/schemas/SearchCriteria'\n        status:\n          $ref: '#/components/schemas/TaskTracker'\n\n    DatasetSearchStatusResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Search status\n        data:\n          $ref: '#/components/schemas/DatasetSearchStatusData'\n    \n    SearchListByUserIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Search List\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/SearchListByUserIdResponseDto'\n        count:\n          type: integer\n          format: int32\n          example: 10\n        startPage:\n          type: integer\n          format: int32\n          example: 1\n        endPage:\n          type: integer\n          format: int32\n          example: 2\n    SearchListByUserIdResponseDto:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          example: 2243175285\n        timestamp:\n          type: string\n          example: Mon Jul 05 11:45:25 IST 2021\n        searchCriteria:\n          $ref: '#/components/schemas/SearchCriteria'\n        status:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskTracker'\n            \n    ASRConfig:\n      required:\n      - language\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: Unique identifier of model\n          example: \"103\"\n        language:\n          $ref: '#/components/schemas/LanguagePair'\n        audioFormat:\n          type: string\n          enum:\n          - wav\n          - pcm\n          - mp3\n          - flac\n        channel:\n          type: string\n          enum:\n          - mono\n          - stereo\n        samplingRate:\n          type: number\n        bitsPerSample:\n          type: string\n          enum:\n          - sixteen\n          - eight\n        transcriptionFormat:\n          $ref: '#/components/schemas/TranscriptionFormat'\n        profanityFilter:\n          type: boolean\n          example: true\n        domain:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: This attribute defines that `relevant business area`\n          items:\n            type: string\n            description: This attribute defines that `relevant business area`\n        detailed:\n          type: boolean\n          description: \"to specify whether details are required in output like SNR,\\\n            \\ sampling rate\"\n        punctuation:\n          type: boolean\n          example: true\n        model:\n          type: string\n          enum:\n          - command_and_search\n          - phone_call\n          - video\n          - default\n    ASRFile:\n      type: object\n      properties:\n        audioContent:\n          type: array\n          description: audio content with audio duration \u003c= 1min\n          items:\n            type: string\n            description: audio content with audio duration \u003c= 1min\n            format: byte\n        audioUri:\n          type: string\n          description: path on gcp/s3 bucket or https url\n          example: gs://bucket/audio.wav\n    ASRInference:\n      required:\n      - request\n      - taskType\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'\n      - type: object\n        properties:\n          taskType:\n            type: string\n          request:\n            $ref: '#/components/schemas/ASRRequest'\n          response:\n            $ref: '#/components/schemas/ASRResponse'\n    ASRRequest:\n      required:\n      - audio\n      - config\n      type: object\n      properties:\n        audio:\n          $ref: '#/components/schemas/ASRFile'\n        config:\n          $ref: '#/components/schemas/ASRConfig'\n    ASRResponse:\n      description: the response for translation.  Standard http status codes to be used.\n      required:\n        - output\n      type: object\n      properties:\n        output:\n          $ref: '#/components/schemas/Sentences'\n        config:\n          $ref: '#/components/schemas/TranslationConfig'\n\n    Contributor:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 50\n          minLength: 5\n          type: string\n          description: human name of the contributor\n        oauthId:\n          $ref: '#/components/schemas/OAuthIdentity'\n        aboutMe:\n          type: string\n          description: describing the contributor\n\n    InferenceAPIEndPoint:\n     $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-schema.yml#/components/schemas/InferenceAPIEndPoint\n\n    LanguagePair:\n      required:\n      - sourceLanguage\n      type: object\n      properties:\n        sourceLanguageName:\n          type: string\n          description: human name associated with the language code\n          example: English\n        sourceLanguage:\n          type: string\n          description: \"Indic language code, iso-639-1, iso 639-2\"\n          enum:\n          - en\n          - hi\n          - mr\n          - ta\n          - te\n          - kn\n          - gu\n          - pa\n          - bn\n          - ml\n          - as\n          - brx\n          - doi\n          - ks\n          - kok\n          - mai\n          - mni\n          - ne\n          - or\n          - sd\n          - si\n          - ur\n          - sat\n          - lus\n          - njz\n          - pnr\n          - kha\n          - grt\n          - sa\n        targetLanguageName:\n          type: string\n          description: human name associated with the language code\n          example: Hindi\n        targetLanguage:\n          type: string\n          description: \"Indic language code, iso-639-1, iso 639-2\"\n          enum:\n          - en\n          - hi\n          - mr\n          - ta\n          - te\n          - kn\n          - gu\n          - pa\n          - bn\n          - ml\n          - as\n          - brx\n          - doi\n          - ks\n          - kok\n          - mai\n          - mni\n          - ne\n          - or\n          - sd\n          - si\n          - ur\n          - sat\n          - lus\n          - njz\n          - pnr\n          - kha\n          - grt\n          - sa\n      description: \"language pair, make targetLanguage null to reuse the object to\\\n        \\ indicate single language\"\n\n    ModelExtended:\n      required:\n        - description\n        - domain\n        - inferenceEndPoint\n        - languages\n        - license\n        - name\n        - submitter\n        - task\n        - trainingDataset\n      type: object\n      properties:\n        name:\n          maxLength: 100\n          minLength: 5\n          type: string\n          description: model name that you want your users to see\n          example: vakyansh asr model\n        description:\n          maxLength: 1000\n          minLength: 25\n          type: string\n          description: \u003e-\n            brief description about model, its goal, basically something sweet\n            about it\n          example: Speech recognition model for classroom lecture\n        refUrl:\n          maxLength: 200\n          minLength: 5\n          type: string\n          description: github link or url giving further info about the model\n          example: https://github.com/Open-Speech-EkStep/vakyansh-models\n        task:\n          $ref: '#/components/schemas/ModelTask'\n        languages:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          items:\n            $ref: '#/components/schemas/LanguagePair'\n        license:\n          type: string\n          enum:\n            - cc-by-4.0\n            - cc-by-sa-4.0\n            - cc-by-nd-2.0\n            - cc-by-nd-4.0\n            - cc-by-nc-3.0\n            - cc-by-nc-4.0\n            - cc-by-nc-sa-4.0\n            - mit\n            - gpl-3.0\n            - bsd-3-clause\n            - private-commercial\n            - unknown-license\n            - custom-license\n        licenseUrl:\n          type: string\n          description: url of the custom license\n        domain:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: This attribute defines that `relevant business area`\n          items:\n            type: string\n            description: This attribute defines that `relevant business area`\n        submitter:\n          $ref: '#/components/schemas/Submitter'\n        inferenceEndPoint:\n          $ref: '#/components/schemas/InferenceAPIEndPoint'\n        trainingDataset:\n          $ref: '#/components/schemas/TrainingDataset'\n        modelId:\n          type: string\n        version:\n          type: string\n        userId:\n          type: string\n        submittedOn:\n          type: string\n        publishedOn:\n          type: string\n        status:\n          type: string\n        unpublishReason:\n          type: string\n          \n    ModelTask:\n      $ref: $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/ModelTask\n      example: \n        type: translation  \n\n    OAuthIdentity:\n      type: object\n      properties:\n        identifier:\n          type: string\n          description: system identification for the contributor\n        oauthId:\n          type: string\n          description: \"popular social network identifier, typically identifier returned\\\n            \\ after auth\"\n        provider:\n          type: string\n          description: user authentication provider\n          enum:\n          - custom\n          - github\n          - facebook\n          - instagram\n          - google\n          - yahoo\n    OCRConfig:\n      required:\n      - language\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: Unique identifier of model\n          example: \"103\"\n        language:\n          $ref: '#/components/schemas/LanguagePair'\n    OCRInference:\n      required:\n      - request\n      - taskType\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'\n      - type: object\n        properties:\n          taskType:\n            type: string\n          request:\n            $ref: '#/components/schemas/OCRRequest'\n          response:\n            $ref: '#/components/schemas/OCRResponse'\n    OCRRequest:\n      required:\n      - config\n      - imageUri\n      type: object\n      properties:\n        imageUri:\n          type: array\n          description: list of paths on gcp/s3 bucket or https url\n          example: gs://bucket/testimg.jpeg\n          items:\n            type: string\n            description: list of paths on gcp/s3 bucket or https url\n            example: gs://bucket/testimg.jpeg\n        config:\n          $ref: '#/components/schemas/OCRConfig'\n    \n    OCRResponse:\n      description: the response for translation.  Standard http status codes to be used.\n      required:\n        - output\n      type: object\n      properties:\n        output:\n          $ref: '#/components/schemas/Sentences'\n        config:\n          $ref: '#/components/schemas/OCRConfig'\n\n    OneOfInferenceAPIEndPointSchema:\n      required:\n      - taskType\n      type: object\n      properties:\n        taskType:\n          type: string\n      discriminator:\n        propertyName: taskType\n\n\n    Submitter:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 50\n          minLength: 5\n          type: string\n          description: Name of the Submitter\n          example: Dr. Raghav\n        oauthId:\n          $ref: '#/components/schemas/OAuthIdentity'\n        aboutMe:\n          type: string\n          description: Describing the Submitter\n        team:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          items:\n            $ref: '#/components/schemas/Contributor'\n      description: the schema of data file uploaded should adhere to this specified\n        structure.\n    TTSConfig:\n      required:\n      - language\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: Unique identifier of model\n          example: \"103\"\n        language:\n          $ref: '#/components/schemas/LanguagePair'\n    TTSInference:\n      required:\n      - request\n      - taskType\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'\n      - type: object\n        properties:\n          taskType:\n            type: string\n          request:\n            $ref: '#/components/schemas/TTSRequest'\n          response:\n            $ref: '#/components/schemas/TTSResponse'\n    TTSRequest:\n      required:\n      - config\n      - input\n      type: object\n      properties:\n        input:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: list of\n          items:\n            $ref: '#/components/schemas/Sentence'\n        config:\n          $ref: '#/components/schemas/TTSConfig'\n\n    TTSResponse:\n      description: the response for translation. Standard http status codes to be used.\n      required:\n        - audio\n      type: object\n      properties:\n        audio:\n          $ref: '#/components/schemas/AudioFiles'\n        config:\n          $ref: '#/components/schemas/AudioConfig'\n\n    AudioFiles:\n      type: array\n      description: list of AudioFile\n      items:\n        $ref: '#/components/schemas/AudioFile'\n\n    AudioFile:\n      required:\n        - audioContent | audioUri\n      type: object\n      properties:\n        audioContent:\n          type: string\n          description: audio content with audio duration \u003c= 1min\n          format: byte\n        audioUri:\n          type: string\n          description: path on gcp/s3 bucket or https url\n          example: gs://bucket/audio.wav\n\n    AudioConfig:\n      required:\n        - language\n        - audioFormat\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: Unique identifier of model\n          example: 103\n        language:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/LanguagePair\n        audioFormat:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/AudioFormat\n        channel:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/AudioChannel\n        samplingRate:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/AudioSampleRate\n        bitsPerSample:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/AudioBitsPerSample\n        transcriptionFormat:\n          $ref: '#/components/schemas/TranscriptionFormat'\n        postProcessors:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/AudioPostProcessors\n        domain:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/Domain\n        detailed:\n          type: boolean\n          description: to specify whether details are required in output like SNR, sampling rate\n        punctuation:\n          type: boolean\n          example: true\n        model:\n          type: string\n          enum:\n            - command_and_search\n            - phone_call\n            - video\n            - default\n        encoding:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/Encoding\n    \n\n    TrainingDataset:\n      required:\n      - description\n      type: object\n      properties:\n        datasetId:\n          type: string\n          description: \"dataset identifier that has been exported from ULCA system,\\\n            \\ passing this information makes your model enriched with further information\\\n            \\ for the community\"\n        description:\n          type: string\n          description: explain your dataset that you have used for training your model\n      description: training dataset metadata used to train the model\n    TranscriptionFormat:\n      type: object\n      properties:\n        value:\n          type: string\n          description: format of ASR output\n          enum:\n          - srt\n          - transcript\n          - alternatives\n\n    TranslationInference:\n      required:\n      - request\n      - taskType\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'\n      - type: object\n        properties:\n          taskType:\n            type: string\n          request:\n            $ref: '#/components/schemas/TranslationRequest'\n          response:\n            $ref: '#/components/schemas/TranslationResponse'\n    TranslationRequest:\n      required:\n      - config\n      - input\n      type: object\n      properties:\n        input:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: list of\n          items:\n            $ref: '#/components/schemas/Sentence'\n        config:\n          $ref: '#/components/schemas/TranslationConfig'\n\n    TranslationResponse:\n      description: the response for translation.  Standard http status codes to be used.\n      required:\n        - output\n      type: object\n      properties:\n        output:\n          $ref: '#/components/schemas/Sentences'\n        config:\n          $ref: '#/components/schemas/TranslationConfig'\n    \n\n    TranslationConfig:\n      required:\n        - language\n      type: object\n      properties:\n        modelId:\n          type: integer\n          description: Unique identifier of model\n          example: 103\n        language:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/LanguagePair\n          \n    UploadModelResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          $ref: '#/components/schemas/ModelExtended'\n    \n    ModelStatusChangeRequest:\n      type: object\n      properties:\n        userId:\n          type: string\n        modelId:\n          type: string\n        status:\n          type: string\n          enum:\n            - published\n            - unpublished\n        unpublishReason:\n          type: string\n      example:\n        userId: 164972ebd9a54f39a97a67bae55162ea\n        modelId: 61c380072e74fa406e7618ba\n        status: unpublished\n        unpublishReason: running benchmark\n    \n    ModelStatusChangeResponse:\n      type: object\n      properties:\n        message:\n          type: string\n      example:\n        message: Model unpublished successfull.\n    \n    ModelSearchRequest:\n      required:\n        - task\n      type: object\n      properties:\n        task:\n          type: string\n        sourceLanguage:\n          type: string\n        targetLanguage:\n          type: string\n      example:\n        task: translation\n        sourceLanguage: en\n        targetLanguage: hi\n\n    ModelSearchResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelExtended'\n        count:\n          type: integer\n          format: int32\n    ModelFeedbackSubmitRequest:\n      required:\n        - taskType\n      type: object\n      properties:\n        taskType:\n          type: string\n        modelId:\n          type: string\n        userId:\n          type: string\n        input:\n          type: string\n        output:\n          type: string\n        feedback:\n          type: object\n        detailedFeedback:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelFeedbackSubmitRequest'\n      example:\n        taskType: translation\n        input: how are you today ?\n        output: இன்று நீங்கள் எப்படி இருக்கிறீர்கள்?\n        feedback:\n          - feedbackQuestion: Are you satisfied with this translation?\n            feedbackQuestionResponse: 3\n          - feedbackQuestion: Add your comments\n            feedbackQuestionResponse: translation is good\n          - suggestedOutput: null\n          - feedbackQuestion: Rate Translated Text Quality\n            feedbackQuestionResponse: true\n        detailedFeedback: []\n        userId: 6a73afa4fc774dcdb28d5fff944511f6\n        \n    FeedbackData:\n      type: object\n      properties:\n        feedbackId:\n          type: string\n    ModelFeedbackSubmitResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          $ref: '#/components/schemas/FeedbackData'\n      example:\n        message: model feedback submitted successful\n        data: \n          feedbackId: 61c380072e74fa406e7618ba\n\n    Input:\n      type: object\n      properties:\n        source:\n          type: string\n\n    ModelComputeRequest:\n      required:\n        - modelId\n      type: object\n      properties:\n        modelId:\n          type: string\n        userId:\n          type: string\n        task:\n          type: string\n        source:\n          type: string\n        audioFormat:\n          type: string\n        gender:\n          type: string\n          enum:\n            - male\n            - female\n            - transgender\n            - non-specified\n            - others\n        input:\n          type: array\n          items:\n            $ref: '#/components/schemas/Input'\n        audioUri:\n          type: string\n        audioContent:\n          type: array\n          items:\n            type: string\n            format: byte\n        imageUri:\n          type: string\n      example:\n        modelId: 617798c22fbba1441081885d\n        userId: 6a73afa4fc774dcdb28d5fff944511f6\n        task: asr\n        source: ml\n        audiFormat: wav\n        audioUri: https://anuvaad-raw-datasets.s3-us-west-2.amazonaws.com/vakyansh_malayalam.wav\n        audioContent: UklGRiygCwBXQVZFZm10IBAAAAABAAIARKwAABCxAgAEABAAZGF0YQCgCwAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n  \n    ModelComputeResponse:\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/TranslationResponse'\n        - $ref: '#/components/schemas/TransliterationResponse'\n        - $ref: '#/components/schemas/ASRResponse'\n        - $ref: '#/components/schemas/TTSResponse'\n        - $ref: '#/components/schemas/OCRResponse'\n        - $ref: '#/components/schemas/TxtLangDetectionResponse'\n      \n\n    Sentences:\n      type: array\n      description: list of\n      items:\n        $ref: '#/components/schemas/Sentence'\n    \n    Sentence:\n      required:\n        - source\n      type: object\n      properties:\n        source:\n          minLength: 1\n          type: string\n          description: input sentence for the model\n        target:\n          minLength: 1\n          type: string\n          description: to be used along with translation model. expected translated sentence, for reference\n    \n    SentencesList:\n      type: array\n      description: list of\n      items:\n        $ref: '#/components/schemas/SentenceList'\n    \n    SentenceList:\n      required:\n        - source\n      type: object\n      properties:\n        source:\n          minLength: 1\n          type: string\n          description: input sentence for the model\n        target:\n          type: array\n          description: list of sentences\n          items:\n            type: string\n            minItems: 1\n\n    TransliterationResponse:\n      description: the response for translation.  Standard http status codes to be used.\n      required:\n        - output\n      type: object\n      properties:\n        output:\n          $ref: '#/components/schemas/SentencesList'\n        config:\n          $ref: '#/components/schemas/TransliterationConfig'\n    \n    TransliterationConfig:\n      required:\n        - language\n      type: object\n      properties:\n        modelId:\n          type: integer\n          description: Unique identifier of model\n          example: 103\n        numSuggestions:\n          type: integer\n          description: expected number of predictions\n          example: 4\n        isSentence:\n          type: boolean\n          description: Expects sentence or words\n          default: false\n          example: false\n        language:\n          $ref: https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/LanguagePair\n    \n    TxtLangDetectionResponse:\n      description: the response for translation.  Standard http status codes to be used.\n      required:\n        - output\n      type: object\n      properties:\n        output:\n          $ref: '#/components/schemas/TxtLanguagesList'\n        config:\n          $ref: '#/components/schemas/TxtLangDetectionConfig'\n    \n    TxtLanguagesList:\n      type: array\n      description: list of\n      items:\n        $ref: '#/components/schemas/TxtLangDetectionList'\n    \n    TxtLangDetectionList:\n      required:\n        - source\n      type: object\n      properties:\n        source:\n          minLength: 1\n          type: string\n          description: input sentence for the model\n        langPrediction:\n          type: array\n          description: list of\n          items:\n            $ref: '#/components/schemas/TxtLangDetectionPrediction'\n    \n    TxtLangDetectionPrediction:\n      type: object\n      required:\n        - langCode\n      properties:\n        langCode:\n          type: string\n          description: Indic language code, iso-639-1, iso 639-2\n        ScriptCode:\n          type: string\n          description: Script code, iso-15924\n        langScore:\n          type: number\n          description: the measure of accuracy of language prediction\n\n    TxtLangDetectionConfig:\n      type: object\n      properties:\n        modelId:\n          type: integer\n          description: Unique identifier of model\n          example: 103\n        isSentence:\n          type: boolean\n          description: Expects sentence or words\n          default: false\n          example: false\n        numSuggestions:\n          type: integer\n          description: expected number of predictions\n          example: 4\n\n    ModelListByUserIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: success\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelListResponseDto'\n        count:\n          type: integer\n          format: int32\n          example: 10\n        totalCount:\n          type: integer\n          format: int32\n          example: 172\n     \n    ModelListResponseDto:\n      required:\n        - description\n        - domain\n        - inferenceEndPoint\n        - languages\n        - license\n        - name\n        - submitter\n        - task\n        - trainingDataset\n      type: object\n      properties:\n        metric:\n          type: array\n          items:\n            type: string\n          example: [\"bleu\",\"meteor\",\"ribes\",\"gleu\",\"bert\", \"chrf\"]\n        benchmarkPerformance:\n          type: array\n          items:\n            $ref: '#/components/schemas/BenchmarkProcess'\n        name:\n          maxLength: 100\n          minLength: 5\n          type: string\n          description: model name that you want your users to see\n          example: vakyansh asr model\n        description:\n          maxLength: 1000\n          minLength: 25\n          type: string\n          description: \u003e-\n            brief description about model, its goal, basically something sweet\n            about it\n          example: Speech recognition model for classroom lecture\n        refUrl:\n          maxLength: 200\n          minLength: 5\n          type: string\n          description: github link or url giving further info about the model\n          example: https://github.com/Open-Speech-EkStep/vakyansh-models\n        task:\n          $ref: '#/components/schemas/ModelTask'\n        languages:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          items:\n            $ref: '#/components/schemas/LanguagePair'\n        license:\n          type: string\n          enum:\n            - cc-by-4.0\n            - cc-by-sa-4.0\n            - cc-by-nd-2.0\n            - cc-by-nd-4.0\n            - cc-by-nc-3.0\n            - cc-by-nc-4.0\n            - cc-by-nc-sa-4.0\n            - mit\n            - gpl-3.0\n            - bsd-3-clause\n            - private-commercial\n            - unknown-license\n            - custom-license\n        licenseUrl:\n          type: string\n          description: url of the custom license\n        domain:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: This attribute defines that `relevant business area`\n          items:\n            type: string\n            description: This attribute defines that `relevant business area`\n        submitter:\n          $ref: '#/components/schemas/Submitter'\n        inferenceEndPoint:\n          $ref: '#/components/schemas/InferenceAPIEndPoint'\n        trainingDataset:\n          $ref: '#/components/schemas/TrainingDataset'\n        modelId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        version:\n          type: string\n          example: v1.0\n        userId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        submittedOn:\n          type: string\n          example: Sun Nov 07 16:59:23 IST 2021\n        publishedOn:\n          type: string\n          example: Sun Nov 07 16:59:23 IST 2021\n        status:\n          type: string\n          example: unpublished\n        unpublishReason:\n          type: string\n          example: executing benchmark runs\n\n    BenchmarkProcess:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        modelId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        benchmarkProcessId:\n          type: string\n          example: 3338807029\n        benchmarkDatasetId:\n          type: string\n          example: 61c37ef32e74fa406e7618b6\n        benchmarkDatasetName:\n          type: string\n          example: OCR_benchmark_english\n        modelName:\n          type: string\n          example: Anuvaad-OCR-English\n        modelVersion:\n          type: string\n          example: v1.0\n        score:\n          type: number\n          format: double\n          example: 8.5\n        metric:\n          type: string\n          example: bleu\n        status:\n          type: string\n          example: Completed/In-Progress/Failed\n        createdOn:\n          type: string\n          example: Sun Nov 07 16:59:23 IST 2021\n        lastModifiedOn:\n          type: string\n          example: Sun Nov 07 16:59:23 IST 2021\n        startTime:\n          type: string\n          example: Sun Nov 07 16:59:23 IST 2021\n        endTime:\n          type: string\n          example: Sun Nov 07 16:59:23 IST 2021\n        recordCount:\n          type: integer\n          format: int32\n          example: 456098\n\n    ModelHealthStatusResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        benchmark:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelHealthStatus'\n        count:\n          type: integer\n          format: int32\n    \n    ModelHealthStatus:\n      type: object\n      properties:\n        modelId:\n          type: string\n          example: 61c14e928112f94aa569c688\n        modelName:\n          type: string\n          example: Vakyansh-ASR-Hindi\n        taskType:\n          type: string\n          example: translation\n        isSyncApi:\n          type: boolean\n          example: true\n        callbackUrl:\n          type: string\n          \n        pollingUrl:\n          type: string\n        status:\n          type: string\n          example: available\n        lastStatusUpdate:\n          type: string\n          example: Mon Nov 08 03:00:00 IST 2021\n        nextStatusUpdateTiming:\n          type: string\n          example: Mon Nov 08 04:00:00 IST 2021\n\n    GetModelFeedbackListResponse:\n      type: object\n      properties:\n        feedbackId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        stsFeedbackId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        taskType:\n          type: string\n          example: translation\n        modelId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        stsPerformanceId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        userId:\n          type: string\n          example: 164972ebd9a54f39a97a67bae55162ea\n        input:\n          type: string\n          example: how are you today ?\n        output:\n          type: string\n          example: இன்று நீங்கள் எப்படி இருக்கிறீர்கள்?\n        feedback:\n          type: object\n        createdAt:\n          type: string\n          example: Wed Jul 27 19:02:39 IST 2022\n        updatedAt:\n          type: string\n          example: Wed Jul 27 19:02:39 IST 2022\n        detailedFeedback:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelFeedback'\n    ModelFeedback:\n      type: object\n      properties:\n        feedbackId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        stsFeedbackId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        taskType:\n          type: string\n          example: translation\n        modelId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        stsPerformanceId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        userId:\n          type: string\n          example: 164972ebd9a54f39a97a67bae55162ea\n        input:\n          type: string\n          example: how are you today ?\n        output:\n          type: string\n          example: இன்று நீங்கள் எப்படி இருக்கிற\n        feedback:\n          type: object\n        createdAt:\n          type: string\n          example: Wed Jul 27 19:02:39 IST 2022\n        updatedAt:\n          type: string\n          example: Wed Jul 27 19:02:39 IST 2022\n\n    BenchmarkSubmitRequest:\n      required:\n        - datasetName\n        - url\n        - userId\n      type: object\n      properties:\n        userId:\n          type: string\n          example: 164972ebd9a54f39a97a67bae55162ea\n        datasetName:\n          type: string\n          example: Asr Indic benchmark dataset\n        url:\n          type: string\n          example: https://anuvaad-raw-datasets.s3-us-west-2.amazonaws.com/bm-flores-en-hi.zip\n    \n    BenchmarkSubmitResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Benchmark Dataset has been Submitted\n        data:\n          $ref: '#/components/schemas/BenchmarkSubmitData'\n          \n    BenchmarkSubmitData:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string    \n          example: 4432197063\n        benchmarkId:\n          type: string\n          example: 61c159f58112f94aa569c68b\n        timestamp:\n          type: string\n          example: Wed Jul 27 19:02:39 IST 2022\n\n    BenchmarkSearchRequest:\n      required:\n        - task\n      type: object\n      properties:\n        task:\n          type: string\n          example: translation\n        sourceLanguage:\n          type: string\n          example: en\n        targetLanguage:\n          type: string\n          example: hi     \n    BenchmarkSearchResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Benchmark Search Result\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Benchmark'\n        count:\n          type: integer\n          format: int32\n          example: 24\n\n    Benchmark:\n      required:\n        - dataset\n        - description\n        - domain\n        - languages\n        - license\n        - name\n        - submitter\n        - task\n      type: object\n      properties:\n        benchmarkId:\n          type: string\n          description: auto-generated unique identification of benchmark data\n          example: 6149e0f378af0820a7d2fb28\n        name:\n          type: string\n          description: name of the benchmark\n          example: FLORES-101 en-mr Evaluation Benchmark\n        version:\n          type: string\n          description: params schema version\n          example: v1.20\n        license:\n          type: string\n          enum:\n            - cc-by-4.0\n            - cc-by-sa-4.0\n            - cc-by-nd-2.0\n            - cc-by-nd-4.0\n            - cc-by-nc-3.0\n            - cc-by-nc-4.0\n            - cc-by-nc-sa-4.0\n            - mit\n            - gpl-3.0\n            - bsd-3-clause\n            - private-commercial\n            - unknown-license\n            - custom-license\n          \n        licenseUrl:\n          type: string\n          description: url of the custom license\n        description:\n          maxLength: 200\n          minLength: 50\n          type: string\n          description: description of the benchmark including how it has been curated\n          example: benchmark sentences for government press release domain\n        userId:\n          type: string\n          example: 164972ebd9a54f39a97a67bae55162ea\n        dataset:\n          maxLength: 200\n          minLength: 50\n          type: string\n          description: benchmark dataset url\n          example: benchmark dataset url\n        domain:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: This attribute defines that `relevant business area`\n          items:\n            type: string\n            description: This attribute defines that `relevant business area`\n          example: [\"news\"]\n        task:\n          $ref: '#/components/schemas/ModelTask'\n        languages:\n          $ref: '#/components/schemas/LanguagePair'\n        submitter:\n          $ref: '#/components/schemas/Submitter'\n        collectionSource:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: various sources, url from where the information is collected.\n          example:\n            - https://main.sci.gov.in\n          items:\n            type: string\n            description: various sources, url from where the information is collected.\n            example: '[\"https://main.sci.gov.in\"]'\n        paramSchema:\n          type: object\n          description: Object created from params.json\n        createdOn:\n          type: string\n          description: timestamp when benchmark is created\n          example: Wed Jul 27 19:02:39 IST 2022\n        submittedOn:\n          type: string\n          description: timestamp when benchmark is submitted/published\n          example: Wed Jul 27 19:02:39 IST 2022\n        status:\n          type: string\n          example: Completed\n      description: the benchmark dataset for model task.\n\n    BenchmarkListByModelRequest:\n      required:\n        - modelId\n      type: object\n      properties:\n        modelId:\n          type: string\n          example: 6149e0f378af0820a7d2fb28\n\n    \n    BenchmarkListByModelResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Benchmark Search Result\n        benchmark:\n          type: array\n          items:\n            $ref: '#/components/schemas/BenchmarkDto'\n        count:\n          type: integer\n          format: int32\n          example: 24\n\n    BenchmarkDto:\n      allOf:     # Combines the BasicErrorModel and the inline model\n        - $ref: '#/components/schemas/Benchmark'\n        - type: object\n          required:\n            - rootCause\n          properties:\n            metric:\n              type: array\n              items:\n                type: string\n              example: [\"bleu\",\"meteor\",\"ribes\",\"gleu\",\"bert\", \"chrf\"]\n            availableMetric:\n              type: array\n              items:\n                type: string\n              example: [\"bleu\",\"meteor\",\"ribes\",\"gleu\",\"bert\", \"chrf\"]\n\n    BenchmarkMetricRequest:\n      type: object\n      properties:\n        benchmarkId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        metric:\n          type: string\n          example: bleu\n          \n    ExecuteBenchmarkRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          example: 61c380072e74fa406e7618ba\n        benchmarks:\n          type: array\n          items:\n            $ref: '#/components/schemas/BenchmarkMetricRequest'\n    \n    ExecuteBenchmarkResponse:\n      type: object\n      properties:\n        benchmarkProcessIds:\n          type: array\n          items:\n            type: string\n          example: [\"3338807029\"]\n    \n    ExecuteBenchmarkAllMetricRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          example: 6149e0f378af0820a7d2fb28\n        benchmarkId:\n          type: string\n          example: 6149e0f378af0820a7d2fb28\n   \n    BmProcessListByProcessIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Benchmark Process list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BenchmarkProcess'\n        count:\n          type: integer\n          format: int32\n          example: 1\n\n    BenchmarkListByUserIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Benchmark list by UserId\n        benchmark:\n          type: array\n          items:\n            $ref: '#/components/schemas/Benchmark'\n        count:\n          type: integer\n          format: int32\n          example: 20\n        totalCount:\n          type: integer\n          format: int32\n          example: 192\n\n    GetBenchmarkByIdResponse:\n      allOf:     # Combines the BasicErrorModel and the inline model\n        - $ref: '#/components/schemas/Benchmark'\n        - type: object\n          required:\n            - metric\n          properties:\n            metric:\n              type: array\n              items:\n                type: string\n              example: [\"bleu\",\"meteor\",\"ribes\",\"gleu\",\"bert\", \"chrf\"]\n            benchmarkPerformance:\n              type: array\n              items:\n                $ref: '#/components/schemas/BenchmarkProcess'\n\n    HttpErrorResponse:\n      required:\n      - code\n      - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: status code as encountered in the processing life-cycle\n          \n        message:\n          type: string\n          description: human understandable format\n        timestamp:\n          type: string\n          format: datetime\n\n    UserSignupRequest:\n      type: object\n      required:\n        - firstName\n        - email\n        - password\n        - roles\n      properties:\n        firstName:\n         type: string\n         description: Firstname of the user to be registered.\n        lastName:\n          type: string\n          description: Lastname of the user to be registered.\n        email:\n          type: string\n          description: email of the user to be registered.\n        password:\n          type: string\n          description: password of the user to be registered.\n        roles:\n          type: array\n          description: Roles assigned to the user to be registered.\n          items:\n            type: string\n        phoneNo:\n          type: string\n          description: Mobile phone number of the user to be registered.\n      example:\n        firstName: Ram\n        lastName: Kumar\n        email: dummy@gmail.com\n        password: password\n        roles: user\n        phoneNo: 9090909090\n        \n        \n    \n\n    \n    UserLoginRequest:\n      type: object\n      properties:\n        authenticator:\n          $ref: '#/components/schemas/Authenticator'\n        data:\n          type: object\n          description: email and password for user Login\n          oneOf:\n            - $ref: '#/components/schemas/UlcaLoginAuthenticator'\n            - $ref: '#/components/schemas/GmailLoginAuthenticator'\n      example:\n        authenticator: ULCA\n        data:\n          email: dummy@gmail.com\n          password: password\n        \n  \n\n    ApiKeySearchRequest:\n      type: object\n      properties:\n        key:\n          type: string\n          description: Unique auth token of verified user\n      description: Request for user records.\n      example:\n        key: 81eb44672d3746b8ac251ca2425c9184\n\n\n    ForgotPasswordRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          description: Unique email of the user.\n      description: Request for user records.\n      example:\n        email: dummy@gmail.com\n    \n\n    ResetPasswordRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          description: Unique email of the user.\n        password:\n          type: string\n          description: password to be updated\n      example:\n        email: dummy@gmail.com\n        password: resetNewPassword\n\n\n    UserVerificationRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          description: unique email value.\n        userID:\n          type: string\n          description: unique userid value.\n      example:\n        email: dummy@gmail.com\n        userId: 6a73afa4fc774dcdb28d5fff944511f6\n    \n        \n\n    User:\n      type: object\n      properties:\n        userID:\n          type: string\n          description: Unique 32-bit UUID per user.\n        firstName:\n          type: string\n          description: FirstName of the user.\n        lastName:\n          type: string\n          description: LastName of the user.\n        email:\n          type: string\n          description: email id of the user.\n        oauthId:\n          type: string\n          description: oauthId of the user.\n        oauthProvider:\n          type: string\n          description: oauthProvider of the user.\n        registeredTime:\n          type: string\n          description: UTC object indicating time of user signup. \n        activatedTime:\n          type: string\n          description: UTC object indicating time of user verification.\n        isVerified:\n          type: boolean\n          description: status of user verification.\n        isActive:\n          type: boolean\n          description: status of user activation.\n        phoneNo:\n          type: string\n          description: mobile number of the user\n        roles:\n          type: array\n          items:\n            type: string\n            \n          \n  \n    Role:\n      type: object\n      properties:\n        roleId:\n          type: string\n          description: Unique code per role.\n        name:\n          type: string\n          description: role name.\n        description:\n          type: string\n          description: Description of the role.\n  \n   \n  \n          \n    AuthData:\n      type: object\n      properties:\n        email:\n          type: string\n          description: email of the logged in user.\n        publicKey:\n          type: string\n          description: random uuid key to be used as public key for the logged in user.\n        privateKey:\n          type: string\n          description: hexadecimal uuid key for the logged in user for encrypting request data.\n          \n    UserData:\n      type: object\n      properties:\n        userKeys:\n          $ref: '#/components/schemas/AuthData'\n        userDetails:\n          $ref: '#/components/schemas/User'\n          \n          \n    Status:\n      type: object\n      properties:\n        message:\n          type: string\n          description: message returned after succesful request completion.\n        data:\n          type: object\n          description: data returned by the request.\n        count:\n          type: integer\n          description: count of data items.\n    \n    UserVerificationResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: message returned after succesful request completion.\n        data:\n          $ref: '#/components/schemas/AuthData'\n        count:\n          type: integer\n          description: count of data items.\n    \n    UserLoginResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: message returned after succesful request completion.\n        data:\n          $ref: '#/components/schemas/UserData'\n        count:\n          type: integer\n          description: count of data items.\n    \n    ApiKeySearchResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: message returned after succesful request completion.\n        data:\n          $ref: '#/components/schemas/UserData'\n        count:\n          type: integer\n          description: count of data items.\n      \n   \n      \n    UlcaLoginAuthenticator:\n      type: object\n      properties:\n        email:\n          type: string\n          description: email of user\n        password:\n          type: string\n          description: password of user\n         \n    GmailLoginAuthenticator:\n      type: object\n      properties:\n        token_type:\n          type: string\n          description: token type\n        access_token:\n          type: string\n          description: token type\n        scope:\n          type: string\n          description: scope\n        login_hint:\n          type: string\n          description: login_hint\n        expires_in:\n          type: number\n          description: expires_in\n        id_token:\n          type: number\n          description: id_token \n        session_state:\n          type: object\n          description: session_state\n          properties:\n            extraQueryParams:\n              type: string\n              description: extraQueryParams\n            authuser:\n              type: number\n              description: authuser \n\n          \n    Authenticator:\n      type: string\n      enum:\n        - ULCA\n        - GMAIL\n        - GITHUB\n        - FACEBOOK\n        - LINKEDIN\n    \n    \n    ErrorReportRequest:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          description: Unique submission id.\n      description: Request for error report on a particular submission.\n      example:\n        serviceRequestNumber: 1160112134\n\n    \n    ErrorReportResponse:\n      type: object\n      properties:\n        file:\n          type: string\n          description: File path to object store.\n        internal_file:\n          type: string\n          description: Internal file path.\n        serviceRequestNumber:\n          type: string\n          description: Unique id for dataset submission\n        time_stamp:\n          type: string\n          description: Report generated date and time.\n        count:\n          type: integer\n          description: Count of errors uploaded on to object store.\n        uploaded:\n          type: boolean\n          description: status of file upload.\n\n  securitySchemes:\n      apiKey:\n        type: apiKey\n        in: header\n        name: key\n      apiSig:\n        type: apiKey\n        in: header\n        name: sig\n        description: signed request url or body   \n        \nsecurity:\n  - apiKey: []\n    apiSig: []",
			"canonicalURL": "/github.com/ULCA-IN/ulca@8cab1c6955a2e727d8d573356122edc0ea02948d/-/blob/backend/api/docs/ulca-api-contract.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ULCA-IN/ulca/blob/8cab1c6955a2e727d8d573356122edc0ea02948d/backend/api/docs/ulca-api-contract.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 1882:16: mapping values are not allowed in this context"
}