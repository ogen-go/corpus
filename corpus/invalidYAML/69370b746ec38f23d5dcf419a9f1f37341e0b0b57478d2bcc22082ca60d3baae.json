{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ioggstream/python-course"
		},
		"file": {
			"name": "ex-03-02-path.yaml",
			"size": 0,
			"path": "connexion-101/notebooks/oas3/ex-03-02-path.yaml",
			"byteSize": 1530,
			"content": "# Complete this file with the required informations\n#  using your swagger-editor. You should\n# - fix all the eventual error\n# - add the missing parameters\n# so that the file become a valid OAS3 spec.\nopenapi: 3.0.0\ninfo:\n  title: writeme\n  version: \"0.1\"\n\n# One or more server\n#   You can add production, staging and test environments.\n#   We are using the custom `x-sandbox` to identify\n#   sandbox instances\nservers:\n  - description: Development server\n    url: https://localhost:8443/datetime/v1\n  - description: Test server\n    url: https://api.example.com/datetime/v1\n    x-sandbox: true\n    # The following custom parameter can be used\n    # to declare how to check the API.\n    x-healthCheck:\n      url: https://api.example.com/datetime/v1/status\n      interval: 300\n      timeout: 15\n\n#\n# Complete the /status path\n#\npaths:\n  /status:\n    get:\n      summary: Return the application status.\n      description: |\n        Return the application status. You may want\n        to implement this so that it randomically\n        returns an error (eg. 429 or 503).\n      operationId: api.get_status\n      responses:\n        '200':\n          description: |\n            The status is OK.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Problem'  # REMOVE ME FOR EXERCISE\n         'default':  # WRITEME\n\n\ncomponents:  # REMOVEME FOR EXERCISE\n  schemas:\n    Problem:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/schemas/Problem'\n"
		}
	},
	"Error": "invalidYAML: yaml: line 47: did not find expected key"
}