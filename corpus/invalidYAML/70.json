{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/QuantConnect/AlphaStreams"
		},
		"file": {
			"name": "QuantConnect_Alpha_0.3_swagger.yaml",
			"path": "QuantConnect.API.Specification/QuantConnect_Alpha_0.3_swagger.yaml",
			"content": "#\n# QuantConnect Alpha Stream API v0.3\n#\nopenapi: 3.0.0\n\n#\n# Introduction\n#\ninfo:\n  description: 'QuantConnect Alpha Streams API accesses a database of algorithms (Alphas) designed by the QuantConnect community (Authors) for predicting market movements and volatility in the future. They are created and listed for sale by members of QuantConnect from all over the world. The API provides a system for searching, subscribing and streaming predictions (Insights) from these algorithms.'\n  version: '0.3'\n  title: QuantConnect Alpha Stream API v0.3\n  termsOfService: 'https://www.quantconnect.com/terms'\n  contact:\n    name: QuantConnect\n    email: contact@quantconnect.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n    \n#\n# Server \n#\nservers:\n  # Endpoint for searching and subscribing to the Alpha insight streams.\n  - url: 'https://www.quantconnect.com/api/v2'\n    description: 'Core endpoint for RESTful services against the community alphas database.'\n    \n  # Endpoint for streaming the insights from the alphas subscribed. \n  - url: 'wss://www.quantconnect.com/api/v2/alpha/insights'\n    description: 'Streaming endpoint for accessing resulting filtered insights.'\n\n#\n# Security Protocal\n#\nsecurity:\n  - HttpApiKeyAuthentication: []\n  \n#\n# URL Paths for API\n#\npaths:\n  # Alpha -\u003e Read Single\n  '/alpha/{id}':\n    get:\n      summary: 'Retrieve Information on an Alpha Module.' \n      description: 'Read an individual information on an Alpha from the database based on the Alpha id.'\n      parameters:\n        - name: id\n          in: path\n          description: 'Unique id of an Alpha published to the marketplace.'\n          schema:\n            type: integer\n            format: int64\n          required: true\n      tags: \n        - Alpha Search\n      responses:\n        '200':\n          $ref: '#/components/responses/Alpha'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        'default':\n          $ref: '#/components/responses/Error'\n\n\n\n  # Alpha -\u003e Subscribe\n  '/alpha/{id}/subscribe':\n    post:\n      summary: 'Subscribe to Alpha Module'\n      description: 'Subscribe to an Alpha given by id for a month and charge the subscription the funds account.'\n      tags:\n        - Subscription Management\n      parameters: \n        - name: id\n          in: path\n          description: 'Identifier of the Alpha to subscribe.'\n          schema:\n            type: integer\n            format: int64 \n          required: true\n        - name: exclusive\n          in: query\n          description: 'Try and subscribe to the Alpha with an exclusive preference.'\n          schema:\n            type: boolean\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        'default':\n          $ref: '#/components/responses/Error'\n  \n\n  \n  # Alpha -\u003e Unsubscribe\n  '/alpha/{id}/unsubscribe':\n    post:\n      summary: 'Unsubscribe from an Alpha Module.'\n      description: 'Unsubscribe to the Alpha given by the id in path. Pro-rate subscription billing for remainder of them billing cycle.'\n      tags:\n        - Subscription Management\n      parameters:\n        - name: id\n          in: path\n          description: 'Identifier of the Alpha to unsubscribe.'\n          schema:\n            type: integer\n            format: int64 \n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        'default':\n          $ref: '#/components/responses/Error'\n  \n  \n  \n  # Alpha -\u003e Search\n  '/alpha/search':\n    get:\n      summary: 'Search Alpha Modules.'\n      description: 'Search endpoint for locating Alphas matching search criteria. All input values are optional and are joined with a logical AND for the filtered results.'\n      tags:\n        - Alpha Search\n      parameters: \n        - name: accuracy\n          description: 'Search for Alphas which have a specific accuracy range.' \n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n            minimum: 0\n            maximum: 1\n        - name: assets\n          description: 'Array of asset classes to search.'\n          in: query\n          schema:\n            type: array\n            items:\n              enum: \n                - equity\n                - forex\n                - future\n                - option\n                - cfd\n                - crypto\n        - name: fee\n          description: 'Fee filter on the listed Alphas in a specific range.'\n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n            minimum: 0\n        - name: project-id\n          description: 'Search for Alphas created by a specific Project.'\n          in: query\n          schema:\n            type: integer\n        - name: author\n          description: 'Hash Author identifier to locate.'\n          in: query\n          schema:\n            type: string\n        - name: symbol\n          description: 'Search for Alphas which utilize specific symbols. QuantConnect symbol identifier code.'\n          in: query\n          schema:\n            type: array\n        - name: sharpe\n          description: 'Search for Alphas which have a specific sharpe ratio range.' \n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n        - name: uniqueness\n          description: 'Search for Alphas which fall into a specific uniqueness range relative to existing portfolio.'\n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n            minimum: 0\n            maximum: 1\n      responses:\n        '200':\n          description: 'Successfully searched for passed query parameters; returns an array of Alpha objects.'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Alpha'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        'default':\n          $ref: '#/components/responses/Error'\n\n\n          \n  '/alpha/{id}/insights':\n    get:\n      summary: 'Alpha Backtest and Live Insight History.'\n      description: 'Fetch the insight backtest results and the live insight track record since publication.'\n      parameters:\n        - name: id\n          in: path\n          description: 'Unique id of an Alpha published to the marketplace.'\n          schema:\n            type: integer\n            format: int64\n          required: true\n      tags:\n        - Alpha Analysis\n      responses:\n        '200':\n          description: 'Successfully searched for passed query parameters. Returns an array of Insight objects.'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Insight'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        'default':\n          $ref: '#/components/responses/Error'\n          \n          \n\n  # Author -\u003e Describe\n  '/alpha/author/{id}':\n    get:\n      summary: 'Specific Author Information.'\n      description: 'Fetch Author information by id to form models based around people.'\n      tags: \n        - Author Search\n      parameters:\n      - name: id\n        in: path\n        description: 'Unique id hash of an Author.'\n        schema:\n          type: string\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/Author'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        'default':\n          $ref: '#/components/responses/Error'\n          \n  \n  # Author -\u003e Search\n  '/alpha/author/search':\n    get:\n      summary: 'Search Author Database.'\n      description: 'Search Author database by query filters to locate researchers according to criteria.'\n      tags:\n        - Author Search\n      parameters: \n        - name: location\n          description: 'Best guess geographic location of the Author based on the IP address.'\n          in: query\n          schema:\n            type: string\n        - name: language\n          description: 'Preferred programming language for the primary Author.'\n          in: query\n          schema:\n            type: array\n            items:\n              enum: \n                - C#\n                - Py\n        - name: biography\n          description: 'Search the Author biography information for this text.'\n          in: query\n          schema:\n            type: string\n        - name: alphas\n          description: 'Number of Alphas the Author has listed.'\n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n        - name: signed-up\n          description: 'Unix timestamp of the Author registration on QuantConnect.'\n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n        - name: last-login\n          description: 'Unix timestamp of the Author last login on QuantConnect.'\n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n        - name: forum-discussions\n          description: 'Number of discussions started on QuantConnect.'\n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n        - name: forum-comments\n          description: 'Number of comments created on QuantConnect.'\n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n        - name: projects\n          description: 'Range of the number of projects.'\n          in: query\n          schema:\n            $ref: '#/components/responses/Range'\n            minimum: 0\n        \n      responses:\n        '200':\n          description: 'Successfully searched Authors by query parameters; returns an array of Author objects.'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Author'  \n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        'default':\n          $ref: '#/components/responses/Error'\n\n\n  # Alpha -\u003e Streaming EndPoint\n  '/alpha/stream':\n    get:\n      summary: 'Streaming Insights from Alpha Modules.'\n      description: 'Streaming endpoint for insight predictions from the community. All subscribed Insights will be piped to this web socket connection 24/7.'\n      tags:\n        - Stream\n      responses:\n        '200':\n          description: 'Streaming, long running web socket endpoint with JSON insights streaming.'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Insight'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        'default':\n          $ref: '#/components/responses/Error'\n\n      \n\n# Model Definitions\ncomponents:\n  # Common Responses -\u003e \n  responses:\n  \n    Alpha:\n      description: 'Single response of Alpha module from the API.'\n      content: \n        application/json:\n          schema:\n            $ref: '#/components/schemas/Alpha'\n            \n    Author:\n      description: 'Single response of an Author model from the API.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Author'\n            \n    Success:\n      description: 'Generic success response message from the API.'\n      content: \n        application/json:\n          schema:\n            $ref: '#/components/schemas/Success'\n            \n    Error:\n      description: 'Generic error response message from the API. '\n      content: \n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n            \n    Range:\n      description: 'Minimum maximum array format for the API.'\n      content: \n        application/json:\n          schema:\n            $ref: '#/components/schemas/Range'\n    \n    NotFoundError:\n      description: 'The requested item, index, page was not found.'\n    \n    UnauthorizedError:\n      description: 'Unauthorized response from the API. Key is missing or invalid.'\n      headers:\n        www_authenticate:\n          schema:\n            type: string\n            \n\n  # Base API Security -\u003e \n  securitySchemes:\n    HttpApiKeyAuthentication:\n      description: 'The standard QuantConnect API authentication scheme is used. This requires the current unix time and your api key to be hashed together and sent as the B64 password in a basic authentication. The user-name for the basic authentication is the UID on your QuantConnect account.'\n      type: http\n      scheme: basic\n\t\t\n  # Common API Models -\u003e\n  schemas:\n  \n    # Alpha Object Model\n    Alpha:\n      description: 'Snapshot of a Project at the time it was deployed to the marketplace, written by an Author on QuantConnect, generating Insights about Assets.'\n      properties:\n        id:\n          type: integer\n          description: 'Unique identifier for this published Alpha.'\n        authors:\n          description: 'Creators of the Alpha. Sometimes users collaborate on a Project or have one trader paired with a coder. Authors can be added and removed from projects.'\n          type: array\n          items:\n            $ref: '#/components/schemas/Author'\n        asset-classes:\n          description: 'Asset classes predicted in this stream.'\n          type: array\n          items:\n            type: string\n            enum: \n              - equity\n              - forex\n              - future\n              - option\n              - cfd\n              - crypto\n        accuracy:\n          description: 'Daily rolling accuracy of the Alpha module over the last 7 days of predictions.'\n          type: array\n          items:\n            $ref: '#/components/schemas/Point'\n        analyses-performed:\n          description: 'Number of backtests/analysis trials used to generate this Alpha model.'\n          type: number\n          format: integer\n        estimated-depth:\n          description: 'Estimated market depth available for this asset based on trading volumes at the time of Insights.'\n          type: number\n          format: double\n        exclusive-available:\n          description: 'Flag to indicate if the author is open to selling the signal exclusively.'\n          type: boolean\n        exclusive-subscription-fee:\n          description: 'Monthly fee for exclusive access to the Alpha signal.'\n          type: number\n          format: double\n        estimated-effort:\n          description: 'Estimated number of hours the user was working on this Alpha.'\n          type: number\n          format: double\n        listed-date:\n          description: 'Unix timestamp the Alpha was listed into the marketplace.'\n          type: string\n        project:\n          description: 'Project object where the work on this alpha has taken place.'\n          $ref: '#/components/schemas/Project'\n        uniqueness:\n          description: 'Indicator of uniqueness in in the QuantConnect marketplace based on the assets traded and the overlap of signal with other Alphas in the Client portfolio, where percentage of overlap with other Alphas (100% is identical).'\n          type: number\n          format: double\n        sharpe-ratio:\n          description: 'Sharpe ratio of the Alpha with QuantConnect default cumulative equity backtest applied.'\n          type: number\n        subscription-fee:\n          description: 'Monthly fee levied by the author on the Alpha signal.'\n          type: number\n          format: double\n        version:\n          description: 'Version of the Alpha. Number of times this Project has been listed into the marketplace.'\n          type: integer\n          \n    \n    # Author Meta Data\n    Author:\n      description: 'Author user of QuantConnect responsible for creation of an Alpha.'\n      properties:\n        id:\n          type: string\n          description: 'Unique string hash id for Author.'\n        alphas:\n          description: 'Integer array of Alpha-ids the Author has created.'\n          type: array\n          items:\n            type: integer\n        alphas-listed:\n          type: integer\n          description: 'Number of Alphas Author has listed in the marketplace.'\n        analysis-average-length:\n          type: integer\n          description: 'Number of days of the average analysis(backtest) length for the Author.'\n        backtests:\n          type: integer\n          description: 'Lifetime number of analysis(backtests) conducted by the Author.'\n        biography:\n          type: string\n          description: 'Profile auto-biography (100-500 words).'\n        forum-discussions:\n          type: integer\n          description: 'Number of forum discussions started by the Author.'\n        forum-comments:\n          type: integer\n          description: 'Number of forum comments made by the Author.'\n        language:\n          description: 'Researcher preferred programming language.'\n          type: string\n        last-online-time:\n          type: integer\n          description: 'Unix timestamp of the last time the Author was online.'\n        location:\n          type: string\n          description: 'Best known estimate of the Author geographic location.'\n        projects:\n          type: integer\n          description: 'Total count of the number of projects the Author has in account.'\n        signup-time:\n          type: integer\n          description: 'Unix timestamp of the user sign up.'\n        social-media:\n          type: array\n          description: 'Array of social media profile links.'\n          items:\n            type: string\n        \n    \n    # Asset Object\n    Asset:\n      description: 'Individual Asset mentioned in an Insight prediction.'\n      properties:\n        price:\n          type: number\n          format: double\n        symbol: \n          type: string\n        volume:\n          description: 'Average daily volume for asset in USD.'\n          type: number\n          format: double\n\n\n    # Insight Object returned from the stream\n    Insight:\n      description: 'Individual prediction from an Alpha.'\n      properties:\n        asset:\n          type: string\n          enum: \n            - equity\n            - forex\n            - future\n            - option\n            - cfd\n            - crypto\n        confidence:\n          description: 'Confidence of the prediction as a percentage.'\n          type: number\n          format: double\n        created:\n          description: 'Unix timestamp for the Alpha prediction.'\n          type: number\n          format: double\n        direction:\n          description: 'Direction of the prediction, up or down.'\n          type: string\n          enum:\n            - up\n            - down\n        insight-style:\n          description: 'Predictions are discrete (binary up-down) or a specific value prediction.'\n          type: string\n          enum:\n            - continuous\n            - discrete\n        insight-type:\n          description: 'Insight prediction type category, volatility.'\n          type: string\n          enum:\n            - price\n            - volatility\n        live:\n          description: 'Flag the insight was generated live (created == now).'\n          type: boolean\n        timeframe:\n          description: 'Timespan of the prediction in seconds.'\n          type: number\n          format: double\n    \n    \n    # Alpha Project Object\n    Project:\n      description: 'Project object where the Alpha source resides. One Project can have multiple generated Alphas.'\n      properties:\n        author:\n          description: 'Primary account holder of this project.'\n          $ref: '#/components/schemas/Author'\n        id:\n          description: 'Unique id for the Alpha Project.'\n          type: integer\n          format: Int64\n        name:\n          type: string\n          description: 'Author assigned Project name.'\n        created: \n          type: integer\n          description: 'Unix timestamp when the project was created.'\n        last-modified:\n          type: integer\n          description: 'Unix timestamp last time the project was opened/modified.'\n        parent-id:\n          description: 'Id of the parent Project this was cloned from to start.'\n          type: integer\n            \n    # Generic success response from the API.\n    Success:\n      description: 'Generic success response message from the API.'\n      properties:\n        success:\n          type: boolean\n      \n      \n    # Generic error response from the API.\n    Error:\n      properties:\n        success:\n          description: 'Boolean indicating true-false; for error models this is always false.'\n          type: boolean\n        messages:\n          description: 'Array of error messages from the API.'\n          type: array\n          items:\n            type: string\n\n    # Time Value Point\n    Point:\n      properties:\n        time:\n          description: 'Time value of a time-value pair.'\n          type: number\n          format: integer\n        value:\n          description: 'Value of the point.'\n          type: number\n          format: double\n            \n    # Helper model for returning a bracket range of a property \n    Range:\n      properties:\n        minimum: \n          type: number\n          description: 'Lower bound of the search criteria.'\n        maximum:\n          type: number\n          description: 'Upper bound of the search criteria.'"
		}
	},
	"Error": "yaml: line 417: found a tab character that violates indentation"
}