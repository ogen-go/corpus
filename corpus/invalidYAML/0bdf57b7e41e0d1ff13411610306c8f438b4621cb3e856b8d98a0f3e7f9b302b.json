{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Green-Software-Foundation/carbon-aware-sdk"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/CarbonAware.WebApi/src/api.yaml",
			"byteSize": 8832,
			"content": "openapi: 3.0.0\ninfo:\n  description: 'Carbon Aware REST API'\n  version: 0.1.0\n  title: Carbon Aware REST API\n\npaths:\n  '/emissions/forecasts/current':\n    get:\n      summary: Get the current forecasted marginal carbon intensity for a given set of locations.\n      description: Gets the most recent marginal carbon intensity forecast and returns the optimal start time for a window of a given duration.\n      operationId: getCurrentMarginalCarbonIntensityForecast\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  '$ref': '#/components/schemas/EmissionsForecast'\n              examples: \n                carbon-intensity-forecast-response:\n                  '$ref': '#/components/examples/marginal-carbon-intensity-forecast-example'\n        '501':\n          description: Not Implemented\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/CarbonAwareError'\n    parameters:\n    - name: locations\n      in: query\n      description: 'Array of names of the locations to be forecasted'\n      required: true\n      schema:\n        type: array\n      example: eastus\n    - name: windowSize\n      in: query\n      description: 'The size/granularity (in minutes) of the rolling average window to report the forecasted average carbon intensity.'\n      required: false\n      schema:\n        type: integer\n      example: 60\n    - name: startTime\n      in: query\n      description: 'Start the rolling window average at the specified start time or first datapoint thereafter.'\n      required: false\n      schema:\n        type: string\n        format: date-time\n      example: '2022-05-23T00:00:00Z'\n    - name: endTime\n      in: query\n      description: 'Stop the rolling window average when it reaches the specified end time or the last datapoint before that.'\n      required: false\n      schema:\n        type: string\n        format: date-time\n      example: '2022-05-23T02:30:00Z'\n  '/sci-scores':\n    post:\n      summary: Calculate the SCI score using the configured data sources\n      description: ''\n      operationId: calculateSciScore\n      requestBody:\n        '$ref': '#/components/requestBodies/MarginalCarbonIntensityCalculation'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/SciScore'\n              examples: \n                sci-score-response:\n                  '$ref': '#/components/examples/sci-score-response-example'\n        '400':\n          description: bad request\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/CarbonAwareError'\n  '/sci-scores/marginal-carbon-intensity':\n    post:\n      summary: Calculate the average marginal carbon intensity for a given location and time duration.\n      description: ''\n      operationId: calculateMarginalCarbonIntensity\n      requestBody:\n        '$ref': '#/components/requestBodies/MarginalCarbonIntensityCalculation'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/SciScore'\n              examples: \n                carbon-intensity-score-response:\n                  '$ref': '#/components/examples/marginal-carbon-intensity-response-example'\n        '400':\n          description: bad request\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/CarbonAwareError'\ncomponents:\n  requestBodies:\n    SciScoreCalculation:\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/MarginalCarbonIntensityCalculation'\n      description: Sci Score calculation component payload for configured data sources\n      required: true\n    MarginalCarbonIntensityCalculation:\n      content:\n        application/json:\n          schema:\n            '$ref': '#/components/schemas/MarginalCarbonIntensityCalculation'\n      description: Marginal Carbon Intensity Calculation\n      required: true\n  schemas:\n    EmissionsForecast:\n      type: object\n      properties:\n        generatedAt:\n          type: string\n          format: date-time\n        location:\n          type: string\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        windowSize:\n          type: integer\n        optimalDataPoint:\n          '$ref': '#/components/schemas/EmissionsData'\n        forecastData:\n          type: array\n          items:\n            '$ref': '#/components/schemas/EmissionsData'\n\n    EmissionsData:\n      type: object\n      properties:\n        location:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        duration:\n          type: integer\n        value:\n          type: number\n          format: float\n\n    SciScore:\n      type: object\n      properties:\n        sciScore:\n          type: number\n          format: float\n        energyValue:\n          type: number\n          format: float\n        marginalCarbonIntensityValue:\n          type: number\n          format: float\n        embodiedEmissions:\n          type: number\n          format: float\n        functionalUnit:\n          type: integer\n          format: int64\n\n    MarginalCarbonIntensityCalculation:\n      type: object\n      properties:\n        location:\n          type: object\n          description: JSON object that contains a locationType (\"Geoposition\" or \"CloudProvider\") and either latitude and longitude or the cloud provider and region\n          properties:\n            locationType:\n              type: string\n              enum:\n                - Geoposition\n                - CloudProvider\n            latitude:\n              type: number\n              format: float\n              example: 34.123\n            longitude:\n              type: number\n              format: float\n              example: 122.123\n            providerName:\n              type: string\n              example: Azure\n            regionName:\n              type: string\n              example: eastus\n        timeInterval:\n          type: string\n          description: ISO8601 formatted [time interval](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals).  This value should be supplied in the UTC (Z) timezone.\n          example: 2007-03-01T13:00:00Z/2007-03-01T15:30:00Z\n\n    CarbonAwareError:\n      type: object\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        status:\n          type: integer\n        traceId:\n          type: string\n        errors:\n          type: object\n    \n  examples:\n    sci-score-response-example:\n      summary: An example response from an SCI score calculation request\n      value: {\n        \"sciScore\": 750.0,\n        \"energyValue\": 1.0,\n        \"marginalCarbonIntensityValue\": 750.0,\n        \"embodiedEmissionsValue\": 0.0,\n        \"functionalUnitValue\": 1 \n      }\n\n    marginal-carbon-intensity-response-example:\n      summary: An example response from Marginal Carbon Intensity calculation request.\n      value: {\n        \"sciScore\": null,\n        \"energyValue\": null,\n        \"marginalCarbonIntensityValue\": 750.0,\n        \"embodiedEmissionsValue\": null,\n        \"functionalUnitValue\": null \n      }\n    \n    marginal-carbon-intensity-forecast-example:\n      summary: An example response from an emissions forecast request.\n      value: [\n        {\n          \"generatedAt\": \"2022-05-23T00:00:00Z\",\n          \"optimalDataPoint\": {\n            \"location\": \"eastus\",\n            \"timestamp\": \"2022-05-23T00:10:00Z\",\n            \"duration\": 5,\n            \"value\": 173.3\n          },\n          \"location\": \"eastus\",\n          \"startTime\": \"2022-05-23T00:00:00Z\",\n          \"endTime\": \"2022-05-23T00:21:00Z\",\n          \"forecastData\": [\n            {\n              \"location\": \"eastus\",\n              \"timestamp\": \"2022-05-23T00:05:00Z\",\n              \"duration\": 5,\n              \"value\": 195.2\n            },\n            {\n              \"location\": \"eastus\",\n              \"timestamp\": \"2022-05-23T00:10:00Z\",\n              \"duration\": 5,\n              \"value\": 173.3\n            },\n            {\n              \"location\": \"eastus\",\n              \"timestamp\": \"2022-05-23T00:15:00Z\",\n              \"duration\": 5,\n              \"value\" 222.4\n            },\n            {\n              \"location\": \"eastus\",\n              \"timestamp\": \"2022-05-23T00:20:00Z\",\n              \"duration\": 5,\n              \"value\" 200.1\n            },\n          ]\n        }\n      ]",
			"canonicalURL": "/github.com/Green-Software-Foundation/carbon-aware-sdk@3eac8964a950ef809d06354527460bffecb3e54a/-/blob/src/CarbonAware.WebApi/src/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Green-Software-Foundation/carbon-aware-sdk/blob/3eac8964a950ef809d06354527460bffecb3e54a/src/CarbonAware.WebApi/src/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 277: did not find expected ',' or '}'"
}