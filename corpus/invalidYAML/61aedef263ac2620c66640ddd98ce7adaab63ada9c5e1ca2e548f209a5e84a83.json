{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mattermost/mattermost-plugin-playbooks"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "server/api/api.yaml",
			"byteSize": 73929,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 0.6.0\n  title: Playbooks API\n  contact:\n    name: Mattermost\n    url: https://mattermost.com/\n    email: support@mattermost.com\nservers:\n  - url: http://localhost:8065/plugins/playbooks/api/v0\npaths:\n  /runs:\n    get:\n      summary: List all playbook runs\n      description: Retrieve a paged list of playbook runs, filtered by team, status, owner, name and/or members, and sorted by ID, name, status, creation date, end date, team or owner ID.\n      operationId: listPlaybookRuns\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: team_id\n          in: query\n          description: ID of the team to filter by.\n          required: true\n          example: el3d3t9p55pevvxs2qkdwz334k\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Zero-based index of the page to request.\n          required: false\n          example: 3\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: per_page\n          in: query\n          description: Number of playbook runs to return per page.\n          required: false\n          example: 50\n          schema:\n            type: integer\n            format: int32\n            default: 1000\n        - name: sort\n          in: query\n          description: Field to sort the returned playbook runs by.\n          required: false\n          example: end_at\n          schema:\n            type: string\n            default: create_at\n            enum:\n              - id\n              - name\n              - is_active\n              - create_at\n              - end_at\n              - team_id\n              - owner_user_id\n        - name: direction\n          in: query\n          description: Direction (ascending or descending) followed by the sorting of the playbook runs.\n          required: false\n          example: asc\n          schema:\n            type: string\n            default: desc\n            enum:\n              - desc\n              - asc\n        - name: statuses\n          in: query\n          description: The returned list will contain only the playbook runs with the specified statuses.\n          required: false\n          example: InProgress\n          schema:\n            type: array\n            default: [\"InProgress\"]\n            items:\n              type: string\n              enum:\n                - InProgress\n                - Finished\n          style: form\n          explode: true\n        - name: owner_user_id\n          in: query\n          description: The returned list will contain only the playbook runs commanded by this user. Specify \"me\" for current user.\n          required: false\n          example: lpn2ogt9qzkc59lfvvad9t15v4\n          schema:\n            type: string\n        - name: participant_id\n          in: query\n          description: The returned list will contain only the playbook runs for which the given user is a participant. Specify \"me\" for current user.\n          required: false\n          example: bruhg1cs65retdbea798hrml4v\n          schema:\n            type: string\n        - name: search_term\n          in: query\n          description: The returned list will contain only the playbook runs whose name contains the search term.\n          required: false\n          example: \"server down\"\n          schema:\n            type: string\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/runs' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: A paged list of playbook runs.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaybookRunList\"\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n    post:\n      summary: Create a new playbook run\n      description: Create a new playbook run in a team, using a playbook as template, with a specific name and a specific owner.\n      operationId: createPlaybookRunFromPost\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      requestBody:\n        description: Playbook run payload.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - owner_user_id\n                - team_id\n                - playbook_id\n              properties:\n                name:\n                  type: string\n                  description: The name of the playbook run.\n                  example: Server down in EU cluster\n                description:\n                  type: string\n                  description: The description of the playbook run.\n                  example: There is one server in the EU cluster that is not responding since April 12.\n                owner_user_id:\n                  type: string\n                  description: The identifier of the user who is commanding the playbook run.\n                  example: bqnbdf8uc0a8yz4i39qrpgkvtg\n                team_id:\n                  type: string\n                  description: The identifier of the team where the playbook run's channel is in.\n                  example: 61ji2mpflefup3cnuif80r5rde\n                post_id:\n                  type: string\n                  description: If the playbook run was created from a post, this field contains the identifier of such post. If not, this field is empty.\n                  example: b2ntfcrl4ujivl456ab4b3aago\n                playbook_id:\n                  type: string\n                  description: The identifier of the playbook with from which this playbook run was created.\n                  example: 0y4a0ntte97cxvfont8y84wa7x\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X POST 'http://localhost:8065/plugins/playbooks/api/v0/runs' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\\\n            -H 'Content-Type: application/json'\\\n            -d '{\"name\": \"Server down in EU cluster\", \"description\": \"There is one server in the EU cluster that is not responding since April 12.\", \"owner_user_id\": \"bqnbdf8uc0a8yz4i39qrpgkvtg\", \"team_id\": \"61ji2mpflefup3cnuif80r5rde\", \"playbook_id\": \"0y4a0ntte97cxvfont8y84wa7x\"}'\n      responses:\n        201:\n          description: Created playbook run.\n          headers:\n            Location:\n              description: Location of the created playbook run.\n              schema:\n                type: string\n                example: /api/v0/runs/nhkx1nbivu45lr84vtxxukp2vr\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaybookRun\"\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/dialog:\n    post:\n      summary: Create a new playbook run from dialog\n      description: This is an internal endpoint to create a playbook run from the submission of an interactive dialog, filled by a user in the webapp. See [Interactive Dialogs](https://docs.mattermost.com/developer/interactive-dialogs.html) for more information.\n      operationId: createPlaybookRunFromDialog\n      security:\n        - BearerAuth: []\n      tags:\n        - Internal\n      requestBody:\n        description: Dialog submission payload.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                type:\n                  type: string\n                  example: dialog_submission\n                url:\n                  type: string\n                callback_id:\n                  type: string\n                  description: Callback ID provided by the integration.\n                state:\n                  type: string\n                  description: Stringified JSON with the post_id and the client_id.\n                user_id:\n                  type: string\n                  description: ID of the user who submitted the dialog.\n                channel_id:\n                  type: string\n                  description: ID of the channel the user was in when submitting the dialog.\n                team_id:\n                  type: string\n                  description: ID of the team the user was on when submitting the dialog.\n                submission:\n                  type: object\n                  description: Map of the dialog fields to their values\n                  required:\n                    - playbookID\n                    - playbookRunName\n                  properties:\n                    playbookID:\n                      type: string\n                      description: ID of the playbook to create the playbook run from.\n                      example: ahz0s61gh275i7z2ag4g1ntvjm\n                    playbookRunName:\n                      type: string\n                      description: The name of the playbook run to be created.\n                      example: Server down in EU cluster.\n                    playbookRunDescription:\n                      type: string\n                      description: An optional description of the playbook run.\n                      example: There is one server in the EU cluster that is not responding since April 12.\n                cancelled:\n                  type: boolean\n                  description: If the dialog was cancelled.\n      responses:\n        201:\n          description: Created playbook run.\n          headers:\n            Location:\n              description: Location of the created playbook run.\n              schema:\n                type: string\n                example: /api/v0/runs/nhkx1nbivu45lr84vtxxukp2vr\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaybookRun\"\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/owners:\n    get:\n      summary: Get all owners\n      description: Get the owners of all playbook runs, filtered by team.\n      operationId: getOwners\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: team_id\n          in: query\n          description: ID of the team to filter by.\n          required: true\n          example: el3d3t9p55pevvxs2qkdwz334k\n          schema:\n            type: string\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/runs/owners?team_id=ni8duypfe7bamprxqeffd563gy' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: A list of owners.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/OwnerInfo\"\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/channels:\n    get:\n      summary: Get playbook run channels\n      description: Get all channels associated with a playbook run, filtered by team, status, owner, name and/or members, and sorted by ID, name, status, creation date, end date, team, or owner ID.\n      operationId: getChannels\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: team_id\n          in: query\n          description: ID of the team to filter by.\n          required: true\n          example: el3d3t9p55pevvxs2qkdwz334k\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: Field to sort the returned channels by, according to their playbook run.\n          required: false\n          example: end_at\n          schema:\n            type: string\n            default: create_at\n            enum:\n              - id\n              - name\n              - create_at\n              - end_at\n              - team_id\n              - owner_user_id\n        - name: direction\n          in: query\n          description: Direction (ascending or descending) followed by the sorting of the playbook runs associated to the channels.\n          required: false\n          example: asc\n          schema:\n            type: string\n            default: desc\n            enum:\n              - desc\n              - asc\n        - name: status\n          in: query\n          description: The returned list will contain only the channels whose playbook run has this status.\n          required: false\n          example: active\n          schema:\n            type: string\n            default: all\n            enum:\n              - all\n              - InProgress\n              - Finished\n        - name: owner_user_id\n          in: query\n          description: The returned list will contain only the channels whose playbook run is commanded by this user.\n          required: false\n          example: lpn2ogt9qzkc59lfvvad9t15v4\n          schema:\n            type: string\n        - name: search_term\n          in: query\n          description: The returned list will contain only the channels associated to a playbook run whose name contains the search term.\n          required: false\n          example: \"server down\"\n          schema:\n            type: string\n        - name: participant_id\n          in: query\n          description: The returned list will contain only the channels associated to a playbook run for which the given user is a participant.\n          required: false\n          example: bruhg1cs65retdbea798hrml4v\n          schema:\n            type: string\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/runs/channels?team_id=ni8duypfe7bamprxqeffd563gy' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Channel IDs.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  description: ID of the channel.\n                  example: v8zdc1893plelmf54vb7f0ramn\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/checklist-autocomplete:\n    get:\n      summary: Get autocomplete data for /playbook check\n      description: This is an internal endpoint used by the autocomplete system to retrieve the data needed to show the list of items that the user can check.\n      operationId: getChecklistAutocomplete\n      security:\n        - BearerAuth: []\n      tags:\n        - Internal\n      parameters:\n        - name: channel_ID\n          in: query\n          description: ID of the channel the user is in.\n          required: true\n          example: r3vk8jdys4rlya46xhdthatoyx\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of autocomplete items for this channel.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - item\n                    - hint\n                    - helptext\n                  properties:\n                    item:\n                      type: string\n                      description: A string containing a pair of integers separated by a space. The first integer is the index of the checklist; the second is the index of the item within the checklist.\n                      example: 1 2\n                    hint:\n                      type: string\n                      description: The title of the corresponding item.\n                      example: Gather information from customer.\n                    helptext:\n                      type: string\n                      description: Always the value \"Check/uncheck this item\".\n                      example: Check/uncheck this item\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/channel/{channel_id}:\n    get:\n      summary: Find playbook run by channel ID\n      operationId: getPlaybookRunByChannelId\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: channel_id\n          in: path\n          required: true\n          description: ID of the channel associated to the playbook run to retrieve.\n          schema:\n            type: string\n            example: hwrmiyzj3kadcilh3ukfcnsbt6\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/runs/channel/hwrmiyzj3kadcilh3ukfcnsbt6' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Playbook run associated to the channel.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaybookRun\"\n        404:\n          $ref: \"#/components/schemas/404\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}:\n    get:\n      summary: Get a playbook run\n      operationId: getPlaybookRun\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run to retrieve.\n          schema:\n            type: string\n            example: mx3xyzdojfgyfdx8sc8of1gdme\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/runs/mx3xyzdojfgyfdx8sc8of1gdme' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Playbook run\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaybookRun\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n    patch:\n      summary: Update a playbook run\n      operationId: updatePlaybookRun\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run to retrieve.\n          schema:\n            type: string\n            example: mx3xyzdojfgyfdx8sc8of1gdme\n      requestBody:\n        description: Playbook run update payload.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                active_stage:\n                  type: integer\n                  description: Zero-based index of the stage that will be made active.\n                  example: 2\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PATCH 'http://localhost:8065/plugins/playbooks/api/v0/runs/mx3xyzdojfgyfdx8sc8of1gdme' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\\\n            -H 'Content-Type: application/json'\\\n            -d '{\"active_stage\": 2}'\n      responses:\n        200:\n          description: Playbook run successfully updated.\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/metadata:\n    get:\n      summary: Get playbook run metadata\n      operationId: getPlaybookRunMetadata\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose metadata will be retrieved.\n          schema:\n            type: string\n            example: mx3xyzdojfgyfdx8sc8of1gdme\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/runs/1igmynxs77ywmcbwbsujzktter/details' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Playbook run metadata.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaybookRunMetadata\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/end:\n    put:\n      summary: End a playbook run\n      operationId: endPlaybookRun\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run to end.\n          schema:\n            type: string\n            example: 1igmynxs77ywmcbwbsujzktter\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/1igmynxs77ywmcbwbsujzktter/end' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Playbook run ended\n        500:\n          $ref: \"#/components/schemas/500\"\n    post:\n      summary: End a playbook run from dialog\n      description: This is an internal endpoint to end a playbook run via a confirmation dialog, submitted by a user in the webapp.\n      operationId: endPlaybookRunDialog\n      security:\n        - BearerAuth: []\n      tags:\n        - Internal\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run to end.\n          schema:\n            type: string\n            example: 1igmynxs77ywmcbwbsujzktter\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X POST 'http://localhost:8065/plugins/playbooks/api/v0/runs/1igmynxs77ywmcbwbsujzktter/end' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Playbook run ended\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/restart:\n    put:\n      summary: Restart a playbook run\n      operationId: restartPlaybookRun\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run to restart.\n          schema:\n            type: string\n            example: 1igmynxs77ywmcbwbsujzktter\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/1igmynxs77ywmcbwbsujzktter/end' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Playbook run restarted.\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/status:\n    post:\n      summary: Update a playbook run's status\n      operationId: status\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run to update.\n          schema:\n            type: string\n            example: 1igmynxs77ywmcbwbsujzktter\n      requestBody:\n        description: Payload to change the playbook run's status update message.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message:\n                  type: string\n                  description: The status update message.\n                  example: Starting to investigate.\n                reminder:\n                  type: number\n                  description: The number of seconds until the system will send a reminder to the owner to update the status. No reminder will be scheduled if reminder is 0 or omitted.\n                  example: 600\n              required:\n                - description\n                - message\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/1igmynxs77ywmcbwbsujzktter/update-status' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n            -d '{\"message\": \"Finishing playbook run because the issue was solved.\"}'\n      responses:\n        200:\n          description: Playbook run updated.\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/finish:\n    put:\n      summary: Finish a playbook\n      operationId: finish\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run to finish.\n          schema:\n            type: string\n            example: 1igmynxs77ywmcbwbsujzktter\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/1igmynxs77ywmcbwbsujzktter/finish' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Playbook run finished.\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/owner:\n    post:\n      summary: Update playbook run owner\n      operationId: changeOwner\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose owner will be changed.\n          schema:\n            type: string\n            example: 1igmynxs77ywmcbwbsujzktter\n      requestBody:\n        description: Payload to change the playbook run's owner.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner_id:\n                  type: string\n                  description: The user ID of the new owner.\n                  example: hx7fqtqxp7nn8129t7e505ls6s\n              required:\n                - owner_id\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X POST 'http://localhost:8065/plugins/playbooks/api/v0/runs/1igmynxs77ywmcbwbsujzktter/owner' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\\\n            -d '{\"owner_id\": \"hx7fqtqxp7nn8129t7e505ls6s\"}'\n      responses:\n        200:\n          description: Owner successfully changed.\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/next-stage-dialog:\n    post:\n      summary: Go to next stage from dialog\n      description: This is an internal endpoint to go to the next stage via a confirmation dialog, submitted by a user in the webapp.\n      operationId: nextStageDialog\n      security:\n        - BearerAuth: []\n      tags:\n        - Internal\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: The PlaybookRun ID\n      requestBody:\n        description: Dialog submission payload.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                state:\n                  type: string\n                  description: String representation of the zero-based index of the stage to go to.\n                  example: \"3\"\n      responses:\n        200:\n          description: Playbook run stage update.\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/checklists/{checklist}/add:\n    put:\n      summary: Add an item to a playbook run's checklist\n      description: The most common pattern to add a new item is to only send its title as the request payload. By default, it is an open item, with no assignee and no slash command.\n      operationId: addChecklistItem\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose checklist will be modified.\n          example: twcqg0a2m37ydi6ebge3j9ev5z\n          schema:\n            type: string\n        - name: checklist\n          in: path\n          required: true\n          description: Zero-based index of the checklist to modify.\n          example: 1\n          schema:\n            type: integer\n      requestBody:\n        description: Checklist item payload.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - title\n              properties:\n                title:\n                  type: string\n                  description: The title of the checklist item.\n                  example: Gather information from customer.\n                state:\n                  type: string\n                  enum:\n                    - \"\"\n                    - in_progress\n                    - closed\n                  description: The state of the checklist item. An empty string means that the item is not done.\n                  example: closed\n                state_modified:\n                  type: integer\n                  format: int64\n                  description: The timestamp for the latest modification of the item's state, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the item was never modified.\n                  example: 1607774621321\n                assignee_id:\n                  type: string\n                  description: The identifier of the user that has been assigned to complete this item. If the item has no assignee, this is an empty string.\n                  example: pisdatkjtdlkdhht2v4inxuzx1\n                assignee_modified:\n                  type: integer\n                  format: int64\n                  description: The timestamp for the latest modification of the item's assignee, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the item never got an assignee.\n                  example: 1608897821125\n                command:\n                  type: string\n                  description: The slash command associated with this item. If the item has no slash command associated, this is an empty string\n                  example: /opsgenie on-call\n                command_last_run:\n                  type: integer\n                  format: int64\n                  description: The timestamp for the latest execution of the item's command, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the command was never executed.\n                  example: 1608552221019\n                description:\n                  type: string\n                  description: A detailed description of the checklist item, formatted with Markdown.\n                  example: Ask the customer for more information in [Zendesk](https://www.zendesk.com/).\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/twcqg0a2m37ydi6ebge3j9ev5z/checklists/1/add' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\\\n            -d '{\"title\": \"Gather information from customer.\"}'\n      responses:\n        200:\n          description: Item successfully added.\n        default:\n          description: Error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /runs/{id}/checklists/{checklist}/reorder:\n    put:\n      summary: Reorder an item in a playbook run's checklist\n      operationId: reoderChecklistItem\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose checklist will be modified.\n          example: yj74zsk7dvtsv6ndsynsps3g5s\n          schema:\n            type: string\n        - name: checklist\n          in: path\n          required: true\n          description: Zero-based index of the checklist to modify.\n          example: 1\n          schema:\n            type: integer\n      requestBody:\n        description: Reorder checklist item payload.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                item_num:\n                  type: integer\n                  description: Zero-based index of the item to reorder.\n                  example: 2\n                new_location:\n                  type: integer\n                  description: Zero-based index of the new place to move the item to.\n                  example: 2\n              required:\n                - item_num\n                - new_location\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/yj74zsk7dvtsv6ndsynsps3g5s/checklists/1/reorder' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\\\n            -d '{\"item_num\": 0, \"new_location\": 2}'\n      responses:\n        200:\n          description: Item successfully reordered.\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/checklists/{checklist}/item/{item}:\n    put:\n      summary: Update an item of a playbook run's checklist\n      description: Update the title and the slash command of an item in one of the playbook run's checklists.\n      operationId: itemRename\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose checklist will be modified.\n          example: 6t7jdgyqr7b5sk24zkauhmrb06\n          schema:\n            type: string\n        - name: checklist\n          in: path\n          required: true\n          description: Zero-based index of the checklist to modify.\n          example: 1\n          schema:\n            type: integer\n        - name: item\n          in: path\n          required: true\n          description: Zero-based index of the item to modify.\n          example: 2\n          schema:\n            type: integer\n      requestBody:\n        description: Update checklist item payload.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The new title of the item.\n                  example: Gather information from server's logs.\n                command:\n                  type: string\n                  description: The new slash command of the item.\n                  example: /jira update ticket\n              required:\n                - title\n                - command\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/6t7jdgyqr7b5sk24zkauhmrb06/checklists/1/item/0' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\\\n            -d '{\"title\": \"Gather information from server's logs.\", \"command\": \"/jira update ticket\"}'\n      responses:\n        200:\n          description: Item updated.\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n    delete:\n      summary: Delete an item of a playbook run's checklist\n      operationId: itemDelete\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose checklist will be modified.\n          example: zjy2q2iy2jafl0lo2oddos5xn7\n          schema:\n            type: string\n        - name: checklist\n          in: path\n          required: true\n          description: Zero-based index of the checklist to modify.\n          example: 1\n          schema:\n            type: integer\n        - name: item\n          in: path\n          required: true\n          description: Zero-based index of the item to modify.\n          example: 2\n          schema:\n            type: integer\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X DELETE 'http://localhost:8065/plugins/playbooks/api/v0/runs/zjy2q2iy2jafl0lo2oddos5xn7/checklists/1/item/2' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        204:\n          description: Item successfully deleted.\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/checklists/{checklist}/item/{item}/state:\n    put:\n      summary: Update the state of an item\n      operationId: itemSetState\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose checklist will be modified.\n          example: 7l37isroz4e63giev62hs318bn\n          schema:\n            type: string\n        - name: checklist\n          in: path\n          required: true\n          description: Zero-based index of the checklist to modify.\n          example: 1\n          schema:\n            type: integer\n        - name: item\n          in: path\n          required: true\n          description: Zero-based index of the item to modify.\n          example: 2\n          schema:\n            type: integer\n      requestBody:\n        description: Update checklist item's state payload.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_state:\n                  type: string\n                  description: The new state of the item.\n                  enum:\n                    - \"\"\n                    - in_progress\n                    - closed\n                  example: closed\n                  default: \"\"\n              required:\n                - new_state\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/7l37isroz4e63giev62hs318bn/checklists/1/item/2/state' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n            -d '{\"new_state\": \"closed\"}'\n      responses:\n        200:\n          description: Item's state successfully updated.\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/checklists/{checklist}/item/{item}/assignee:\n    put:\n      summary: Update the assignee of an item\n      operationId: itemSetAssignee\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose item will get a new assignee.\n          example: 7l37isroz4e63giev62hs318bn\n          schema:\n            type: string\n        - name: checklist\n          in: path\n          required: true\n          description: Zero-based index of the checklist whose item will get a new assignee.\n          example: 1\n          schema:\n            type: integer\n        - name: item\n          in: path\n          required: true\n          description: Zero-based index of the item that will get a new assignee.\n          example: 2\n          schema:\n            type: integer\n      requestBody:\n        description: User ID of the new assignee.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                assignee_id:\n                  type: string\n                  description: The user ID of the new assignee of the item.\n                  example: ruu86intseidqdxjojia41u7l1\n              required:\n                - assignee_id\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/runs/7l37isroz4e63giev62hs318bn/checklists/1/item/2/assignee' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n            -d '{\"asignee_id\": \"ruu86intseidqdxjojia41u7l1\"}'\n      responses:\n        200:\n          description: Item's assignee successfully updated.\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/checklists/{checklist}/item/{item}/run:\n    put:\n      summary: Run an item's slash command\n      operationId: itemRun\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookRuns\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose item will be executed.\n          example: 7l37isroz4e63giev62hs318bn\n          schema:\n            type: string\n        - name: checklist\n          in: path\n          required: true\n          description: Zero-based index of the checklist whose item will be executed.\n          example: 1\n          schema:\n            type: integer\n        - name: item\n          in: path\n          required: true\n          description: Zero-based index of the item whose slash command will be executed.\n          example: 2\n          schema:\n            type: integer\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X POST 'http://localhost:8065/plugins/playbooks/api/v0/runs/7l37isroz4e63giev62hs318bn/checklists/1/item/2/run' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Item's slash command successfully executed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TriggerIdReturn\"\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /runs/{id}/timeline/{event-id}/:\n    delete:\n      summary: Remove a timeline event from the playbook run\n      operationId: removeTimelineEvent\n      security:\n        - BearerAuth: []\n      tags:\n        - Timeline\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook run whose timeline event will be modified.\n          example: zjy2q2iy2jafl0lo2oddos5xn7\n          schema:\n            type: string\n        - name: event-id\n          in: path\n          required: true\n          description: ID of the timeline event to be deleted\n          example: craxgf4r4trgzrtues3a1t74ac\n          schema:\n            type: string\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X DELETE 'http://localhost:8065/plugins/playbooks/api/v0/runs/zjy2q2iy2jafl0lo2oddos5xn7/timeline/craxgf4r4trgzrtues3a1t74ac' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        204:\n          description: Item successfully deleted.\n        400:\n          $ref: \"#/components/schemas/400\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /playbooks:\n    get:\n      summary: List all playbooks\n      description: Retrieve a paged list of playbooks, filtered by team, and sorted by title, number of stages or number of steps.\n      operationId: getPlaybooks\n      security:\n        - BearerAuth: []\n      tags:\n        - Playbooks\n      parameters:\n        - name: team_id\n          in: query\n          description: ID of the team to filter by.\n          required: true\n          example: 08fmfasq5wit3qyfmq4mjk0rto\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Zero-based index of the page to request.\n          required: false\n          example: 3\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: per_page\n          in: query\n          description: Number of playbooks to return per page.\n          required: false\n          example: 50\n          schema:\n            type: integer\n            format: int32\n            default: 1000\n        - name: sort\n          in: query\n          description: Field to sort the returned playbooks by title, number of stages or total number of steps.\n          required: false\n          example: stages\n          schema:\n            type: string\n            default: title\n            enum:\n              - title\n              - stages\n              - steps\n        - name: direction\n          in: query\n          description: Direction (ascending or descending) followed by the sorting of the playbooks.\n          required: false\n          example: asc\n          schema:\n            type: string\n            default: asc\n            enum:\n              - desc\n              - asc\n        - name: with_archived\n          in: query\n          description: Includes archived playbooks in the result.\n          required: false\n          example: true\n          schema:\n            type: boolean\n            default: false\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/playbooks?team_id=08fmfasq5wit3qyfmq4mjk0rto\u0026sort=title\u0026direction=asc' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: A paged list of playbooks.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaybookList\"\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n    post:\n      summary: Create a playbook\n      operationId: createPlaybook\n      security:\n        - BearerAuth: []\n      tags:\n        - Playbooks\n      requestBody:\n        description: Playbook\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - title\n                - team_id\n                - create_public_playbook_run\n                - checklists\n                - member_ids\n              properties:\n                title:\n                  type: string\n                  description: The title of the playbook.\n                  example: Cloud PlaybookRuns\n                description:\n                  type: string\n                  description: The description of the playbook.\n                  example: A playbook to follow when there is a playbook run regarding the availability of the cloud service.\n                team_id:\n                  type: string\n                  description: The identifier of the team where the playbook is in.\n                  example: p03rbi6viyztysbqnkvcqyel2i\n                create_public_playbook_run:\n                  type: boolean\n                  description: A boolean indicating whether the playbook runs created from this playbook should be public or private.\n                  example: true\n                checklists:\n                  type: array\n                  description: The stages defined by this playbook.\n                  items:\n                    type: object\n                    required:\n                      - title\n                      - items\n                    properties:\n                      title:\n                        type: string\n                        description: The title of the checklist.\n                        example: Triage issue\n                      items:\n                        type: array\n                        description: The list of tasks to do.\n                        items:\n                          type: object\n                          required:\n                            - title\n                          properties:\n                            title:\n                              type: string\n                              description: The title of the checklist item.\n                              example: Gather information from customer.\n                            command:\n                              type: string\n                              description: The slash command associated with this item. If the item has no slash command associated, this is an empty string\n                              example: /opsgenie on-call\n                            description:\n                              type: string\n                              description: A detailed description of the checklist item, formatted with Markdown.\n                              example: Ask the customer for more information in [Zendesk](https://www.zendesk.com/).\n                member_ids:\n                  description: The identifiers of all the users that are members of this playbook.\n                  type: array\n                  items:\n                    type: string\n                    description: User ID of the playbook member.\n                    example: ilh6s1j4yefbdhxhtlzt179i6m\n                broadcast_channel_ids:\n                  description: The IDs of the channels where all the status updates will be broadcasted. The team of the broadcast channel must be the same as the playbook's team.\n                  type: array\n                  items:\n                    type: string\n                    description: ID of the broadcast channel.\n                    example: 2zh7rpashwfwapwaqyslmhwbax\n                invited_user_ids:\n                  description: A list with the IDs of the members to be automatically invited to the playbook run's channel as soon as the playbook run is created.\n                  type: array\n                  items:\n                    type: string\n                    description: User ID of the member to be invited.\n                    example: 01kidjn9iozv7bist427w4gkjo\n                invite_users_enabled:\n                  description: Boolean that indicates whether the members declared in invited_user_ids will be automatically invited.\n                  type: boolean\n                  example: true\n                default_owner_id:\n                  description: User ID of the member that will be automatically assigned as owner as soon as the playbook run is created. If the member is not part of the playbook run's channel or is not included in the invited_user_ids list, they will be automatically invited to the channel.\n                  type: string\n                  example: 9dtruav6d9ce3oqnc5pwhtqtfq\n                default_owner_enabled:\n                  description: Boolean that indicates whether the member declared in default_owner_id will be automatically assigned as owner.\n                  type: string\n                  example: true\n                announcement_channel_id:\n                  description: ID of the channel where the playbook run will be automatically announced as soon as the playbook run is created.\n                  type: string\n                  example: 8iofau5swv32l6qtk3vlxgobta\n                announcement_channel_enabled:\n                  description: Boolean that indicates whether the playbook run creation will be announced in the channel declared in announcement_channel_id.\n                  type: boolean\n                  example: true\n                webhook_on_creation_url:\n                  description: An absolute URL where a POST request will be sent as soon as the playbook run is created. The allowed protocols are HTTP and HTTPS.\n                  type: string\n                  example: https://httpbin.org/post\n                webhook_on_creation_enabled:\n                  description: Boolean that indicates whether the webhook declared in webhook_on_creation_url will be automatically sent.\n                  type: boolean\n                  example: true\n                webhook_on_status_update_url:\n                  description: An absolute URL where a POST request will be sent as soon as the playbook run's status is updated. The allowed protocols are HTTP and HTTPS.\n                  type: string\n                  example: https://httpbin.org/post\n                webhook_on_status_update_enabled:\n                  description: Boolean that indicates whether the webhook declared in webhook_on_status_update_url will be automatically sent.\n                  type: boolean\n                  example: true\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X POST 'http://localhost:8065/plugins/playbooks/api/v0/playbooks' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\\\n            -d '{\"title\": \"Cloud PlaybookRuns\", \"description\": \"A playbook to follow when there is a playbook run regarding the availability of the cloud service.\", \"team_id\": \"p03rbi6viyztysbqnkvcqyel2i\",\"create_public_playbook_run\": true,\"checklists\": [{\"title\": \"Triage issue\",\"items\": [{\"title\": \"Gather information from customer.\"}]}]}'\n      callbacks:\n        playbookRunCreation:\n          \"{$request.body#/webhook_on_creation_url}\":\n            post:\n              summary: PlaybookRun's creation outgoing webhook.\n              description: When a playbook run is created with this playbook, a POST request is sent to the URL configured in webhook_on_creation_url. The webhook is considered successful if your server returns a response code within the 200-299 range. Otherwise, the webhook is considered failed, and a warning message is posted in the playbook run's channel. No retries are made.\n              operationId: webhookOncreation\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: \"#/components/schemas/WebhookOnCreationPayload\"\n              responses:\n                \"2XX\":\n                  description: Your server returns a 2XX code if it successfully received the request.\n        playbookRunStatusUpdate:\n          \"{$request.body#/webhook_on_status_update_url}\":\n            post:\n              summary: PlaybookRun's status update outgoing webhook.\n              description: When a playbook run's status is updated, a POST request is sent to the URL configured in webhook_on_status_update_url. The webhook is considered successful if your server returns a response code within the 200-299 range. Otherwise, the webhook is considered failed, and a warning message is posted in the playbook run's channel. No retries are made.\n              operationId: webhookOnStatusUpdate\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: \"#/components/schemas/WebhookOnStatusUpdatePayload\"\n              responses:\n                \"2XX\":\n                  description: Your server returns a 2XX code if it successfully received the request.\n      responses:\n        201:\n          description: ID of the created playbook.\n          headers:\n            Location:\n              description: Location of the created playbook.\n              schema:\n                type: string\n                example: /api/v0/playbook/cdl5o0tjcp5rqlpjidhobj64nd\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    example: iz0g457ikesz55dhxcfa0fk9yy\n                required:\n                  - id\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /playbooks/{id}:\n    get:\n      summary: Get a playbook\n      operationId: getPlaybook\n      security:\n        - BearerAuth: []\n      tags:\n        - Playbooks\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook to retrieve.\n          schema:\n            type: string\n            example: iz0g457ikesz55dhxcfa0fk9yy\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/playbooks/iz0g457ikesz55dhxcfa0fk9yy' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: Playbook.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Playbook\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n    put:\n      summary: Update a playbook\n      operationId: updatePlaybook\n      security:\n        - BearerAuth: []\n      tags:\n        - Playbooks\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook to update.\n          schema:\n            type: string\n            example: iz0g457ikesz55dhxcfa0fk9yy\n      requestBody:\n        description: Playbook payload\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Playbook\"\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X PUT 'http://localhost:8065/plugins/playbooks/api/v0/playbooks/iz0g457ikesz55dhxcfa0fk9yy' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\\\n            -d '{\"title\": \"Playbook\",\"team_id\": \"ni8duypfe7bamprxqeffd563gy\",\"create_public_playbook_run\": true,\"checklists\": [{\"title\": \"Title\",\"items\": [{\"title\": \"Title\"}]}]}'\n      responses:\n        200:\n          description: Playbook succesfully updated.\n        400:\n          $ref: \"#/components/schemas/400\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n    delete:\n      summary: Delete a playbook\n      operationId: deletePlaybook\n      security:\n        - BearerAuth: []\n      tags:\n        - Playbooks\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook to delete.\n          schema:\n            type: string\n            example: iz0g457ikesz55dhxcfa0fk9yy\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X DELETE 'http://localhost:8065/plugins/playbooks/api/v0/playbooks/iz0g457ikesz55dhxcfa0fk9yy' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        204:\n          description: Playbook successfully deleted.\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\n  /playbooks/{id}/autofollows:\n    get:\n      summary: Get the list of followers' user IDs of a playbook\n      operationId: getAutoFollows\n      security:\n        - BearerAuth: []\n      tags:\n        - PlaybookAutofollows\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: ID of the playbook to retrieve followers from.\n          schema:\n            type: string\n            example: iz0g457ikesz55dhxcfa0fk9yy\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl -X GET 'http://localhost:8065/plugins/playbooks/api/v0/playbooks/iz0g457ikesz55dhxcfa0fk9yy/autofollows' \\\n            -H 'Authorization: Bearer 9g64ig7q9pds8yjz8rsgd6e36e'\n      responses:\n        200:\n          description: List of the user IDs who follow the playbook.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaybookAutofollows\"\n        403:\n          $ref: \"#/components/schemas/403\"\n        500:\n          $ref: \"#/components/schemas/500\"\n\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    400:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: The request is malformed.\n    403:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Access to the resource is forbidden for this user.\n    404:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Resource requested not found.\n    500:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: There was an internal error in the server.\n    PlaybookRun:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique, 26 characters long, alphanumeric identifier for the playbook run.\n          example: mx3xyzdojfgyfdx8sc8of1gdme\n        name:\n          type: string\n          description: The name of the playbook run.\n          example: Server down in EU cluster\n        description:\n          type: string\n          description: The description of the playbook run.\n          example: There is one server in the EU cluster that is not responding since April 12.\n        is_active:\n          type: boolean\n          description: True if the playbook run is ongoing; false if the playbook run is ended.\n          example: false\n        owner_user_id:\n          type: string\n          description: The identifier of the user that is commanding the playbook run.\n          example: bqnbdf8uc0a8yz4i39qrpgkvtg\n        team_id:\n          type: string\n          description: The identifier of the team where the playbook run's channel is in.\n          example: 61ji2mpflefup3cnuif80r5rde\n        channel_id:\n          type: string\n          description: The identifier of the playbook run's channel.\n          example: hwrmiyzj3kadcilh3ukfcnsbt6\n        create_at:\n          type: integer\n          format: int64\n          description: The playbook run creation timestamp, formatted as the number of milliseconds since the Unix epoch.\n          example: 1606807976289\n        end_at:\n          type: integer\n          format: int64\n          description: The playbook run finish timestamp, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the playbook run is not finished.\n          example: 0\n        delete_at:\n          type: integer\n          format: int64\n          description: The playbook run deletion timestamp, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the playbook run is not deleted.\n          example: 0\n        active_stage:\n          type: integer\n          format: int32\n          description: Zero-based index of the currently active stage.\n          example: 1\n        active_stage_title:\n          type: string\n          description: The title of the currently active stage.\n          example: Triage issue\n        post_id:\n          type: string\n          description: If the playbook run was created from a post, this field contains the identifier of such post. If not, this field is empty.\n          example: b2ntfcrl4ujivl456ab4b3aago\n        playbook_id:\n          type: string\n          description: The identifier of the playbook with from which this playbook run was created.\n          example: 0y4a0ntte97cxvfont8y84wa7x\n        checklists:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Checklist\"\n    PlaybookRunMetadata:\n      type: object\n      properties:\n        channel_name:\n          type: string\n          description: Name of the channel associated to the playbook run.\n          example: server-down-in-eu-cluster\n        channel_display_name:\n          type: string\n          description: Display name of the channel associated to the playbook run.\n          example: Server down in EU cluster\n        team_name:\n          type: string\n          description: Name of the team the playbook run is in.\n          example: sre-staff\n        num_members:\n          type: integer\n          format: int64\n          description: Number of users that have been members of the playbook run at any point.\n          example: 25\n        total_posts:\n          type: integer\n          format: int64\n          description: Number of posts in the channel associated to the playbook run.\n          example: 202\n    PlaybookRunList:\n      type: object\n      properties:\n        total_count:\n          type: integer\n          description: The total number of playbook runs in the list, regardless of the paging.\n          format: int32\n          example: 305\n        page_count:\n          type: integer\n          description: The total number of pages. This depends on the total number of playbook runs in the database and the per_page parameter sent with the request.\n          format: int32\n          example: 2\n        has_more:\n          type: boolean\n          description: A boolean describing whether there are more pages after the currently returned.\n          example: true\n        items:\n          type: array\n          description: The playbook runs in this page.\n          items:\n            $ref: \"#/components/schemas/PlaybookRun\"\n    PlaybookAutofollows:\n      type: object\n      properties:\n        total_count:\n          type: integer\n          description: The total number of users who marked this playbook to auto-follow runs.\n          format: int32\n          example: 12\n        items:\n          type: array\n          description: The user IDs of who marked this playbook to auto-follow.\n            type: string\n    OwnerInfo:\n      type: object\n      required:\n        - user_id\n        - username\n      properties:\n        user_id:\n          type: string\n          description: A unique, 26 characters long, alphanumeric identifier for the owner.\n          example: ahz0s61gh275i7z2ag4g1ntvjm\n        username:\n          type: string\n          description: Owner's username.\n          example: aaron.medina\n    TriggerIdReturn:\n      type: object\n      required:\n        - trigger_id\n      properties:\n        trigger_id:\n          type: string\n          description: The trigger_id returned by the slash command.\n          example: ceenjwsg6tgdzjpofxqemy1aio\n    Playbook:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique, 26 characters long, alphanumeric identifier for the playbook.\n          example: iz0g457ikesz55dhxcfa0fk9yy\n        title:\n          type: string\n          description: The title of the playbook.\n          example: Cloud PlaybookRuns\n        description:\n          type: string\n          description: The description of the playbook.\n          example: A playbook to follow when there is a playbook run regarding the availability of the cloud service.\n        team_id:\n          type: string\n          description: The identifier of the team where the playbook is in.\n          example: p03rbi6viyztysbqnkvcqyel2i\n        create_public_playbook_run:\n          type: boolean\n          description: A boolean indicating whether the playbook runs created from this playbook should be public or private.\n          example: true\n        create_at:\n          type: integer\n          format: int64\n          description: The playbook creation timestamp, formatted as the number of milliseconds since the Unix epoch.\n          example: 1602235338837\n        delete_at:\n          type: integer\n          format: int64\n          description: The playbook deletion timestamp, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the playbook is not deleted.\n          example: 0\n        num_stages:\n          type: integer\n          format: int64\n          description: The number of stages defined in this playbook.\n          example: 3\n        num_steps:\n          type: integer\n          format: int64\n          description: The total number of steps from all the stages defined in this playbook.\n          example: 18\n        checklists:\n          type: array\n          description: The stages defined in this playbook.\n          items:\n            $ref: \"#/components/schemas/Checklist\"\n        member_ids:\n          description: The identifiers of all the users that are members of this playbook.\n          type: array\n          items:\n            type: string\n            description: User ID of the playbook member.\n            example: ilh6s1j4yefbdhxhtlzt179i6m\n    PlaybookList:\n      type: object\n      properties:\n        total_count:\n          type: integer\n          description: The total number of playbooks in the list, regardless of the paging.\n          format: int32\n          example: 305\n        page_count:\n          type: integer\n          description: The total number of pages. This depends on the total number of playbooks in the database and the per_page parameter sent with the request.\n          format: int32\n          example: 2\n        has_more:\n          type: boolean\n          description: A boolean describing whether there are more pages after the currently returned.\n          example: true\n        items:\n          type: array\n          description: The playbooks in this page.\n          items:\n            $ref: \"#/components/schemas/Playbook\"\n    Checklist:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique, 26 characters long, alphanumeric identifier for the checklist.\n          example: 6f6nsgxzoq84fqh1dnlyivgafd\n        title:\n          type: string\n          description: The title of the checklist.\n          example: Triage issue\n        items:\n          type: array\n          description: The list of tasks to do.\n          items:\n            $ref: \"#/components/schemas/ChecklistItem\"\n    ChecklistItem:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique, 26 characters long, alphanumeric identifier for the checklist item.\n          example: 6f6nsgxzoq84fqh1dnlyivgafd\n        title:\n          type: string\n          description: The title of the checklist item.\n          example: Gather information from customer.\n        state:\n          type: string\n          enum:\n            - \"\"\n            - in_progress\n            - closed\n          description: The state of the checklist item. An empty string means that the item is not done.\n          example: closed\n        state_modified:\n          type: integer\n          format: int64\n          description: The timestamp for the latest modification of the item's state, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the item was never modified.\n          example: 1607774621321\n        assignee_id:\n          type: string\n          description: The identifier of the user that has been assigned to complete this item. If the item has no assignee, this is an empty string.\n          example: pisdatkjtdlkdhht2v4inxuzx1\n        assignee_modified:\n          type: integer\n          format: int64\n          description: The timestamp for the latest modification of the item's assignee, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the item never got an assignee.\n          example: 1608897821125\n        command:\n          type: string\n          description: The slash command associated with this item. If the item has no slash command associated, this is an empty string\n          example: /opsgenie on-call\n        command_last_run:\n          type: integer\n          format: int64\n          description: The timestamp for the latest execution of the item's command, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the command was never executed.\n          example: 1608552221019\n        description:\n          type: string\n          description: A detailed description of the checklist item, formatted with Markdown.\n          example: Ask the customer for more information in [Zendesk](https://www.zendesk.com/).\n    Error:\n      type: object\n      required:\n        - error\n        - details\n      properties:\n        error:\n          type: string\n          description: A message with the error description.\n          example: Error retrieving the resource.\n        details:\n          type: string\n          description: Further details on where and why this error happened.\n          example: Specific details about the error, depending on the case.\n    WebhookOnCreationPayload:\n      allOf:\n        - $ref: \"#/components/schemas/PlaybookRun\"\n        - type: object\n          properties:\n            channel_url:\n              type: string\n              description: Absolute URL to the playbook run's channel.\n              example: http://example.com/ad-1/channels/channel-name\n            details_url:\n              type: string\n              description: Absolute URL to the playbook run's details.\n              example: http://example.com/ad-1/playbooks/runs/playbookRunID\n    WebhookOnStatusUpdatePayload:\n      allOf:\n        - $ref: \"#/components/schemas/PlaybookRun\"\n        - type: object\n          properties:\n            channel_url:\n              type: string\n              description: Absolute URL to the playbook run's channel.\n              example: http://example.com/ad-1/channels/channel-name\n            details_url:\n              type: string\n              description: Absolute URL to the playbook run's details.\n              example: http://example.com/ad-1/playbooks/runs/playbookRunID\n",
			"canonicalURL": "/github.com/mattermost/mattermost-plugin-playbooks@ceea3072a94e5e37c51598580a9fda61453cdeb4/-/blob/server/api/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mattermost/mattermost-plugin-playbooks/blob/ceea3072a94e5e37c51598580a9fda61453cdeb4/server/api/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 1843: mapping values are not allowed in this context"
}