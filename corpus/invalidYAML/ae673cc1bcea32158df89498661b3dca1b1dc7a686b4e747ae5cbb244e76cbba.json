{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/teamdigitale/api-openapi-samples"
		},
		"file": {
			"name": "marketplace-catalog.yml",
			"size": 0,
			"path": "openapi-v3/marketplace-catalog.yml",
			"byteSize": 10551,
			"content": "openapi: 3.0.0\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: \u003e-\n      https://virtserver.swaggerhub.com/ioggstream_italia/marketplace-italia/0.0.1\ninfo:\n  description: Test\n  version: 0.0.1\n  title: Interfaccia Standard Marketplace API\n  contact:\n    email: roberto@teamdigitale.governo.it\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: catalogo\n    description: Qualsiasi cosa circa il catalogo API\n  - name: stats\n    description: Circa le statistiche di utilizzo\n  - name: security\n    description: Per richiedere un'API Key\npaths:\n  /catalogo:\n    post:\n      tags:\n        - catalogo\n      summary: Aggiungi un nuovo end-point API al catalogo\n      description: \u003e-\n        Con questa operazione è possibile aggiungere al catalogo esposto al\n        marketplace una nuova API di dominio\n      operationId: addCatalogo\n      responses:\n        '405':\n          description: Invalid input\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIs'\n        description: oggetto API che si vuole aggiungere al catalogo\n        required: true\n    get:\n      tags:\n        - catalogo\n      summary: Lista di tutte le API pubblicate dal medesimo servizio\n      description: \u003e-\n        Con questa operazione è possibile listare tutte le API messe a\n        disposizione dallo specifico erogatore\n      operationId: showCatalogo\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n      responses:\n        '200':\n          headers: \u0026common_headers\n            X-RateLimit-Limit:\n              $ref: \"#/components/headers/X-RateLimit-Limit\"\n            X-RateLimit-Remaining:\n              $ref: \"#/components/headers/X-RateLimit-Remaining\"\n            X-RateLimit-Reset:\n              $ref: \"#/components/headers/X-RateLimit-Reset\"\n\n          description: Lista API\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIs'\n        '404':\n          $ref: '#/components/responses/APIsDoesNotExistResponse'\n        '500':\n          $ref: '#/components/responses/Standard500ErrorResponse'\n  '/catalogo/{id}':\n    get:\n      tags:\n        - catalogo\n      summary: Lettura dei metadati caratteristici di ogni API esposta\n      description: \u003e-\n        Con questa operazione è possibile leggere tutti i meta dati di una\n        singola API esposta dall'erogatore\n      operationId: showSingolaAPI\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '200':\n          \u003c\u003c: *common_headers\n          description: Meta data API\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIs'\n        '404':\n          $ref: '#/components/responses/APIsDoesNotExistResponse'\n        '500':\n          $ref: '#/components/responses/Standard500ErrorResponse'\n  /stats:\n    get:\n      tags:\n        - stats\n      summary: \u003e-\n        Recupera per tutte le API registrate dall'erogatore le statistiche di\n        base\n      description: \u003e-\n        Statistiche esposte per singola API: Numero di accessi totali, media\n        giornaliera, numero errori totali, media giornaliera\n      operationId: statsAPI\n      responses:\n        '200':\n          description: Stats API\n          \u003c\u003c: *common_headers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Stats'\n        '404':\n          $ref: '#/components/responses/StatsDoesNotExistsResponse'\n        '500':\n          $ref: '#/components/responses/Standard500ErrorResponse'\n  /getKey:\n    post:\n      tags:\n        - security\n      summary: Richiedi un'API Key per accedere alle API  della PA erogatotrice\n      description: \u003e-\n        E' possibile chiedere la generazione di un API Key da utilizzare poi per\n        autenticare le chiamate alle API erogate dalla PA che gestisce questa\n        serie di API\n      operationId: apikey\n      responses:\n        '200':\n          description: API key generata con successo\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiKey'\n        '404':\n          $ref: '#/components/responses/APIsDoesNotExistResponse'\n        '500':\n          $ref: '#/components/responses/Standard500ErrorResponse'\n        '501':\n          $ref: '#/components/responses/UsernameAlreadyExists'\n        default:\n          description: API key generata con successo\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetKey'\n        description: Creazione di una API Key\n        required: true\ncomponents:\n  schemas:\n    API:\n      type: object\n      required:\n        - api_endpoint\n        - id\n        - openapi_url\n      properties:\n        api_endpoint:\n          description: URI dell'endpoint della singola API\n          type: string\n          format: url\n          example: 'https://api.server.it/path/api-handler'\n        id:\n          description: Id univoco interno della singola API\n          type: string\n          format: uuid\n          example: 15\n        openapi_url:\n          type: string\n          format: url\n          description: Link al documento swagger/OpenAPI di specifica\n          example: 'https://api.server.it/swagger/api-handler'\n        Description:\n          type: string\n          description: Overview dello scopo della singola API\n          example: Questo handler API permetter la creazione di un utente...\n        Parameters:\n          type: array\n          items:\n            properties:\n              name:\n                type: string\n            type: object\n        httpVerb:\n          type: string\n          example: GET\n          enum:\n            - GET\n            - POST\n            - PUT\n            - DELETE\n          description: Quale HTTP verb è associato alla singola API\n        responses:\n          type: string\n          properties:\n            parameters:\n              enum:\n                - '200'\n                - '404'\n                - '500'\n                - '501'\n    APIs:\n      type: array\n      items:\n        $ref: '#/components/schemas/API'\n    SingleAPIStats:\n      type: array\n      items:\n        properties:\n          id:\n            type: string\n            format: uuid\n            description: API uuid from #/info/x-api-id\n          api_endpoint:\n            type: string\n            format: uri\n            description: API endpoint\n          request_count:\n            type: integer\n            format: int64\n            description: cumulative number of requests since the service startup.\n          http_request_size_bytes_max:\n            type: integer\n            format: int64\n            description: Max request size allowed\n          availability_per_30d:\n            type: number\n            format: float\n            description: % of time when the service was available during the last 30 days.\n          http_response_success_rate_1d:\n            type: number\n            format: float\n            description: % of successful call during the last 24 hours.\n          expected_response_time_seconds_85pp:\n            type: number\n            format: float\n            description: Expected response time at 85pp\n          responsiveness_per_30d:\n            type: number\n            format: float\n            description: |-\n              % of time when 85% of the requests was served before the deadline expiration.\n        type: object\n    Stats:\n      type: array\n      items:\n        $ref: '#/components/schemas/SingleAPIStats'\n    GetKey:\n      type: object\n      properties:\n        username:\n          type: string\n          description: username a cui associare la nuova appkey\n          example: grossi\n        name:\n          type: string\n          description: Nome del richiedente\n          example: Guido\n        surname:\n          type: string\n          description: Cognome del richiedente\n          example: Rossi\n        email:\n          type: string\n          description: eMail del richidente\n          example: g.rossi@emailente.it\n        phone:\n          type: string\n          description: Telefono del richiedente\n          example: '0611111111'\n      xml:\n        name: GetKey\n    ApiKey:\n      type: object\n      properties:\n        apikey:\n          type: string\n          example: AIzaSyDHeXm6n1hyGIEO_wgscTYUBDJcMmqgOtA\n    Problem:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/schemas/Problem\"\n\n  responses:\n    Standard500ErrorResponse:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/responses/default\"\n    APIsDoesNotExistResponse:\n      description: API non esistenti per questo erogatore.\n    StatsDoesNotExistsResponse:\n      description: Stats non esisteti per queste API dell'erogatore.\n    UsernameAlreadyExists:\n      description: Username already existing\n    429TooManyRequests:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/responses/429TooManyRequests\"\n    503ServiceUnavailable:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/responses/503ServiceUnavailable\"\n\n  headers:\n    X-RateLimit-Limit:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/headers/X-RateLimit-Limit\"\n    X-RateLimit-Remaining:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/headers/X-RateLimit-Remaining\"\n    X-RateLimit-Reset:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/headers/X-RateLimit-Reset\"\n  parameters:\n    id:\n      name: id\n      in: path\n      description: l'ID dell'API che si vuole analizzare\n      required: true\n      schema:\n        type: integer\n    limit:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/parameters/limit\"\n    offset:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/parameters/offset\"\n    sort:\n      $ref: \"https://raw.githubusercontent.com/teamdigitale/openapi/0.0.3/docs/definitions.yaml#/parameters/sort\"\n\n",
			"canonicalURL": "/github.com/teamdigitale/api-openapi-samples@e4aa25ab76f46b78fcf93268cddbbd44c4df1711/-/blob/openapi-v3/marketplace-catalog.yml",
			"externalURLs": [
				{
					"url": "https://github.com/teamdigitale/api-openapi-samples/blob/e4aa25ab76f46b78fcf93268cddbbd44c4df1711/openapi-v3/marketplace-catalog.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 234:25: found character that cannot start any token"
}