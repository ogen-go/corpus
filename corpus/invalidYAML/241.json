{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ddsky/spoonacular-api-clients"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "go/api/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: mail@spoonacular.com\n    name: David Urbansky\n    url: https://spoonacular.com/contact\n  description: |-\n    The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.\n\n    Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.\n  license:\n    name: spoonacular API Terms\n    url: https://spoonacular.com/food-api/terms\n  termsOfService: https://spoonacular.com/food-api/terms\n  title: spoonacular API\n  version: \"1.0\"\n  x-codegen-settings:\n    Nullify404: false\n    GenerateAsyncCode: true\n    UseMethodPrefix: true\n    UseModelPostfix: false\n    UseControllerPrefix: true\n    UseEnumPostfix: true\n    CollectParameters: false\n    UseConstructorsForConfig: true\n    UseCommonSDKLibrary: false\n    iOSUseAppInfoPlist: true\n    AndroidUseAppManifest: true\n    BodySerialization: 0\n    EnableAdditionalModelProperties: false\n    PreserveParameterOrder: false\n    AppendContentHeaders: true\n    iOSGenerateCoreData: false\n    GenerateInterfaces: false\n    NodeHttpClient: NODE_REQUEST\n    ValidateRequiredParameters: false\n    JavaUsePropertiesConfig: false\n    Timeout: 0\n    StoreTimezoneInformation: false\n    EnablePHPComposerVersionString: false\n    EnableLogging: false\n    ArraySerialization: Indexed\n    ModelSerializationScheme: Json\n    UseExceptionPrefix: true\n    RunscopeEnabled: false\n    JavaHttpClient: JAVA_OK\n    ParameterArrayFormat: ParamArrayWithIndex\n    SecurityProtocols:\n    - Ssl3\n    - Tls\n    GenerateTravisConfig: false\n    GenerateCircleConfig: false\n    GenerateAppveyorConfig: false\n    GenerateJenkinsConfig: false\n    EnableHttpCache: false\n    Retries: 0\n    RetryInterval: 1\n    GenerateAdvancedDocs: false\n    UnderscoreNumbers: true\n    UseSingletonPattern: true\n    DisableLinting: false\n    ApplyCustomizations: []\n    SortResources: false\n    AllowSkippingSSLCertVerification: false\n    DoNotSplitWords: []\n    EnableGlobalUserAgent: true\n    ReturnCompleteHttpResponse: false\n    GenerateModels: true\n    GenerateExceptions: true\n    IgnoreIfNullJson: false\n    DisableDocs: false\n    LiftParameterDescriptionFromCustomType: false\n    ThrowForHttpErrorStatusCodes: true\n    ResponseMapping:\n      Type: Simple\n    ForceKeywordArgsInRuby: false\n    SymbolizeHashKeysInRuby: false\n  x-server-configuration:\n    default-environment: production\n    default-server: default\n    environments:\n    - name: production\n      servers:\n      - name: default\n        url: https://api.spoonacular.com\n    parameters: []\nexternalDocs:\n  description: The official documentation.\n  url: https://spoonacular.com/food-api/docs\nservers:\n- url: https://api.spoonacular.com\nsecurity:\n- apiKeyScheme: []\ntags:\n- name: ingredients\n- name: meal planning\n- name: menu items\n- name: misc\n- name: products\n- name: recipes\n- name: wine\npaths:\n  /recipes/complexSearch:\n    get:\n      deprecated: false\n      description: 'Search through hundreds of thousands of recipes using advanced\n        filtering and ranking. NOTE: This method combines searching by query, by ingredients,\n        and by nutrients into one endpoint.'\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Recipes\n      operationId: searchRecipes\n      parameters:\n      - description: The (natural language) search query.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          example: burger\n          type: string\n        style: form\n      - description: The cuisine(s) of the recipes. One or more, comma separated (will\n          be interpreted as 'OR'). See a full list of supported cuisines.\n        explode: false\n        in: query\n        name: cuisine\n        required: false\n        schema:\n          example: italian\n          type: string\n        style: form\n      - description: The cuisine(s) the recipes must not match. One or more, comma\n          separated (will be interpreted as 'AND'). See a full list of supported cuisines.\n        explode: false\n        in: query\n        name: excludeCuisine\n        required: false\n        schema:\n          example: greek\n          type: string\n        style: form\n      - description: The diet for which the recipes must be suitable. See a full list\n          of supported diets.\n        explode: false\n        in: query\n        name: diet\n        required: false\n        schema:\n          example: vegetarian\n          type: string\n        style: form\n      - description: A comma-separated list of intolerances. All recipes returned\n          must not contain ingredients that are not suitable for people with the intolerances\n          entered. See a full list of supported intolerances.\n        explode: false\n        in: query\n        name: intolerances\n        required: false\n        schema:\n          example: gluten\n          type: string\n        style: form\n      - description: The equipment required. Multiple values will be interpreted as\n          'or'. For example, value could be \"blender, frying pan, bowl\".\n        explode: false\n        in: query\n        name: equipment\n        required: false\n        schema:\n          example: pan\n          type: string\n        style: form\n      - description: A comma-separated list of ingredients that should/must be used\n          in the recipes.\n        explode: false\n        in: query\n        name: includeIngredients\n        required: false\n        schema:\n          example: tomato,cheese\n          type: string\n        style: form\n      - description: A comma-separated list of ingredients or ingredient types that\n          the recipes must not contain.\n        explode: false\n        in: query\n        name: excludeIngredients\n        required: false\n        schema:\n          example: eggs\n          type: string\n        style: form\n      - description: The type of recipe. See a full list of supported meal types.\n        explode: false\n        in: query\n        name: type\n        required: false\n        schema:\n          example: main course\n          type: string\n        style: form\n      - description: Whether the recipes must have instructions.\n        explode: false\n        in: query\n        name: instructionsRequired\n        required: false\n        schema:\n          example: true\n          type: boolean\n        style: form\n      - description: Add information about the ingredients and whether they are used\n          or missing in relation to the query.\n        explode: false\n        in: query\n        name: fillIngredients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: If set to true, you get more information about the recipes returned.\n        explode: false\n        in: query\n        name: addRecipeInformation\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: If set to true, you get nutritional information about each recipes\n          returned.\n        explode: false\n        in: query\n        name: addRecipeNutrition\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: The username of the recipe author.\n        explode: false\n        in: query\n        name: author\n        required: false\n        schema:\n          example: coffeebean\n          type: string\n        style: form\n      - description: The tags (can be diets, meal types, cuisines, or intolerances)\n          that the recipe must have.\n        explode: true\n        in: query\n        name: tags\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The id of the recipe box to which the search should be limited\n          to.\n        explode: false\n        in: query\n        name: recipeBoxId\n        required: false\n        schema:\n          example: 2468\n          type: number\n        style: form\n      - description: Enter text that must be found in the title of the recipes.\n        explode: false\n        in: query\n        name: titleMatch\n        required: false\n        schema:\n          example: Crock Pot\n          type: string\n        style: form\n      - description: The maximum time in minutes it should take to prepare and cook\n          the recipe.\n        explode: false\n        in: query\n        name: maxReadyTime\n        required: false\n        schema:\n          example: 20\n          type: number\n        style: form\n      - description: Whether to ignore typical pantry items, such as water, salt,\n          flour, etc.\n        explode: true\n        in: query\n        name: ignorePantry\n        required: false\n        schema:\n          default: false\n          example: false\n          type: boolean\n        style: form\n      - description: The strategy to sort recipes by. See a full list of supported\n          sorting options.\n        explode: false\n        in: query\n        name: sort\n        required: false\n        schema:\n          example: calories\n          type: string\n        style: form\n      - description: The direction in which to sort. Must be either 'asc' (ascending)\n          or 'desc' (descending).\n        explode: false\n        in: query\n        name: sortDirection\n        required: false\n        schema:\n          example: asc\n          type: string\n        style: form\n      - description: The minimum amount of carbohydrates in grams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minCarbs\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum amount of carbohydrates in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxCarbs\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of protein in grams the recipe must have.\n        explode: false\n        in: query\n        name: minProtein\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum amount of protein in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxProtein\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of calories the recipe must have.\n        explode: false\n        in: query\n        name: minCalories\n        required: false\n        schema:\n          example: 50\n          type: number\n        style: form\n      - description: The maximum amount of calories the recipe can have.\n        explode: false\n        in: query\n        name: maxCalories\n        required: false\n        schema:\n          example: 800\n          type: number\n        style: form\n      - description: The minimum amount of fat in grams the recipe must have.\n        explode: false\n        in: query\n        name: minFat\n        required: false\n        schema:\n          example: 1\n          type: number\n        style: form\n      - description: The maximum amount of fat in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxFat\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of alcohol in grams the recipe must have.\n        explode: false\n        in: query\n        name: minAlcohol\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of alcohol in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxAlcohol\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of caffeine in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minCaffeine\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of caffeine in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxCaffeine\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of copper in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minCopper\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of copper in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxCopper\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of calcium in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minCalcium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of calcium in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxCalcium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of choline in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minCholine\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of choline in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxCholine\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of cholesterol in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minCholesterol\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of cholesterol in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxCholesterol\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of fluoride in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minFluoride\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of fluoride in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxFluoride\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of saturated fat in grams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minSaturatedFat\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of saturated fat in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxSaturatedFat\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin A in IU the recipe must have.\n        explode: false\n        in: query\n        name: minVitaminA\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin A in IU the recipe can have.\n        explode: false\n        in: query\n        name: maxVitaminA\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin C milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minVitaminC\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin C in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminC\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin D in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminD\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin D in micrograms the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminD\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin E in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminE\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin E in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminE\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin K in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminK\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin K in micrograms the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminK\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B1 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB1\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B1 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB1\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B2 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB2\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B2 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB2\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B5 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB5\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B5 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB5\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B3 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB3\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B3 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB3\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B6 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB6\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B6 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB6\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B12 in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB12\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B12 in micrograms the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB12\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of fiber in grams the recipe must have.\n        explode: false\n        in: query\n        name: minFiber\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of fiber in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxFiber\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of folate in micrograms the recipe must have.\n        explode: false\n        in: query\n        name: minFolate\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of folate in micrograms the recipe can have.\n        explode: false\n        in: query\n        name: maxFolate\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of folic acid in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minFolicAcid\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of folic acid in micrograms the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxFolicAcid\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of iodine in micrograms the recipe must have.\n        explode: false\n        in: query\n        name: minIodine\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of iodine in micrograms the recipe can have.\n        explode: false\n        in: query\n        name: maxIodine\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of iron in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minIron\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of iron in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxIron\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of magnesium in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minMagnesium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of magnesium in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxMagnesium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of manganese in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minManganese\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of manganese in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxManganese\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of phosphorus in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minPhosphorus\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of phosphorus in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxPhosphorus\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of potassium in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minPotassium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of potassium in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxPotassium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of selenium in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minSelenium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of selenium in micrograms the recipe can have.\n        explode: false\n        in: query\n        name: maxSelenium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of sodium in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minSodium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of sodium in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxSodium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of sugar in grams the recipe must have.\n        explode: false\n        in: query\n        name: minSugar\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of sugar in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxSugar\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of zinc in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minZinc\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of zinc in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxZinc\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The number of results to skip (between 0 and 900).\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          maximum: 900\n          minimum: 0\n          type: integer\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      - description: Whether the recipes should have an open license that allows display\n          with proper attribution.\n        explode: true\n        in: query\n        name: limitLicense\n        required: false\n        schema:\n          default: true\n          example: true\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    offset: 0\n                    number: 2\n                    results:\n                    - id: 716429\n                      title: Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                      calories: 584\n                      carbs: 84g\n                      fat: 20g\n                      image: https://spoonacular.com/recipeImages/716429-312x231.jpg\n                      imageType: jpg\n                      protein: 19g\n                    - id: 715538\n                      title: What to make for dinner tonight?? Bruschetta Style Pork\n                        \u0026 Pasta\n                      calories: 521\n                      carbs: 69g\n                      fat: 10g\n                      image: https://spoonacular.com/recipeImages/715538-312x231.jpg\n                      imageType: jpg\n                      protein: 35g\n                    totalResults: 86\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Recipes\n      tags:\n      - recipes\n  /recipes/findByIngredients:\n    get:\n      deprecated: false\n      description: \"\\nEver wondered what recipes you can cook with the ingredients\\\n        \\ you have in your fridge or pantry? This endpoint lets you find recipes that\\\n        \\ either maximize the usage of ingredients you have at hand (pre shopping)\\\n        \\ or minimize the ingredients that you don't currently have (post shopping).\\n\\\n        \\        \"\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Recipes-by-Ingredients\n      operationId: searchRecipesByIngredients\n      parameters:\n      - description: A comma-separated list of ingredients that the recipes should\n          contain.\n        explode: true\n        in: query\n        name: ingredients\n        required: false\n        schema:\n          example: carrots,tomatoes\n          type: string\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      - description: Whether the recipes should have an open license that allows display\n          with proper attribution.\n        explode: true\n        in: query\n        name: limitLicense\n        required: false\n        schema:\n          default: true\n          example: true\n          type: boolean\n        style: form\n      - description: Whether to maximize used ingredients (1) or minimize missing\n          ingredients (2) first.\n        explode: false\n        in: query\n        name: ranking\n        required: false\n        schema:\n          example: 1\n          type: number\n        style: form\n      - description: Whether to ignore typical pantry items, such as water, salt,\n          flour, etc.\n        explode: true\n        in: query\n        name: ignorePantry\n        required: false\n        schema:\n          default: false\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - id: 73420\n                    image: https://spoonacular.com/recipeImages/73420-312x231.jpg\n                    imageType: jpg\n                    likes: 0\n                    missedIngredientCount: 3\n                    missedIngredients:\n                    - aisle: Baking\n                      amount: 1\n                      id: 18371\n                      image: https://spoonacular.com/cdn/ingredients_100x100/white-powder.jpg\n                      meta: []\n                      name: baking powder\n                      original: 1 tsp baking powder\n                      originalName: baking powder\n                      unit: tsp\n                      unitLong: teaspoon\n                      unitShort: tsp\n                    - aisle: Spices and Seasonings\n                      amount: 1\n                      id: 2010\n                      image: https://spoonacular.com/cdn/ingredients_100x100/cinnamon.jpg\n                      meta: []\n                      name: cinnamon\n                      original: 1 tsp cinnamon\n                      originalName: cinnamon\n                      unit: tsp\n                      unitLong: teaspoon\n                      unitShort: tsp\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1\n                      id: 1123\n                      image: https://spoonacular.com/cdn/ingredients_100x100/egg.png\n                      meta: []\n                      name: egg\n                      original: 1 egg\n                      originalName: egg\n                      unit: \"\"\n                      unitLong: \"\"\n                      unitShort: \"\"\n                    title: Apple Or Peach Strudel\n                    unusedIngredients: []\n                    usedIngredientCount: 1\n                    usedIngredients:\n                    - aisle: Produce\n                      amount: 6\n                      id: 9003\n                      image: https://spoonacular.com/cdn/ingredients_100x100/apple.jpg\n                      meta: []\n                      name: apples\n                      original: 6 large baking apples\n                      originalName: baking apples\n                      unit: large\n                      unitLong: larges\n                      unitShort: large\n                  - id: 632660\n                    image: https://spoonacular.com/recipeImages/632660-312x231.jpg\n                    imageType: jpg\n                    likes: 3\n                    missedIngredientCount: 4\n                    missedIngredients:\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1.5\n                      extendedName: unsalted butter\n                      id: 1001\n                      image: https://spoonacular.com/cdn/ingredients_100x100/butter-sliced.jpg\n                      meta:\n                      - unsalted\n                      - cold\n                      name: butter\n                      original: 1 1/2 sticks cold unsalted butter cold unsalted butter\u003c\n                      originalName: cold unsalted butter cold unsalted butter\u003c\n                      unit: sticks\n                      unitLong: sticks\n                      unitShort: sticks\n                    - aisle: Produce\n                      amount: 4\n                      id: 1079003\n                      image: https://spoonacular.com/cdn/ingredients_100x100/red-delicious-apples.png\n                      meta:\n                      - red\n                      - ' such as golden delicious, peeled, cored and cut into 1/4-inch-thick\n                        slices '\n                      name: red apples\n                      original: 4 larges red apples, such as Golden Delicious, peeled,\n                        cored and cut into 1/4-inch-thick slices\n                      originalName: s red apples, such as Golden Delicious, peeled,\n                        cored and cut into 1/4-inch-thick slices\n                      unit: large\n                      unitLong: larges\n                      unitShort: large\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      id: 2010\n                      image: https://spoonacular.com/cdn/ingredients_100x100/cinnamon.jpg\n                      meta: []\n                      name: cinnamon\n                      original: 2 teaspoons cinnamon\n                      originalName: cinnamon\n                      unit: teaspoons\n                      unitLong: teaspoons\n                      unitShort: tsp\n                    - aisle: Nut butters, Jams, and Honey\n                      amount: 2\n                      id: 19719\n                      image: https://spoonacular.com/cdn/ingredients_100x100/apricot-jam.jpg\n                      meta:\n                      - melted\n                      name: apricot preserves\n                      original: 2 tablespoons apricot preserves, melted and strained\n                      originalName: apricot preserves, melted and strained\n                      unit: tablespoons\n                      unitLong: tablespoons\n                      unitShort: Tbsp\n                    title: Apricot Glazed Apple Tart\n                    unusedIngredients:\n                    - aisle: Produce\n                      amount: 1\n                      id: 9003\n                      image: https://spoonacular.com/cdn/ingredients_100x100/apple.jpg\n                      meta: []\n                      name: apples\n                      original: apples\n                      originalName: apples\n                      unit: serving\n                      unitLong: serving\n                      unitShort: serving\n                    usedIngredientCount: 0\n                    usedIngredients: []\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_1'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - id: 73420\n                    image: https://spoonacular.com/recipeImages/73420-312x231.jpg\n                    imageType: jpg\n                    likes: 0\n                    missedIngredientCount: 3\n                    missedIngredients:\n                    - aisle: Baking\n                      amount: 1\n                      id: 18371\n                      image: https://spoonacular.com/cdn/ingredients_100x100/white-powder.jpg\n                      meta: []\n                      name: baking powder\n                      original: 1 tsp baking powder\n                      originalName: baking powder\n                      unit: tsp\n                      unitLong: teaspoon\n                      unitShort: tsp\n                    - aisle: Spices and Seasonings\n                      amount: 1\n                      id: 2010\n                      image: https://spoonacular.com/cdn/ingredients_100x100/cinnamon.jpg\n                      meta: []\n                      name: cinnamon\n                      original: 1 tsp cinnamon\n                      originalName: cinnamon\n                      unit: tsp\n                      unitLong: teaspoon\n                      unitShort: tsp\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1\n                      id: 1123\n                      image: https://spoonacular.com/cdn/ingredients_100x100/egg.png\n                      meta: []\n                      name: egg\n                      original: 1 egg\n                      originalName: egg\n                      unit: \"\"\n                      unitLong: \"\"\n                      unitShort: \"\"\n                    title: Apple Or Peach Strudel\n                    unusedIngredients: []\n                    usedIngredientCount: 1\n                    usedIngredients:\n                    - aisle: Produce\n                      amount: 6\n                      id: 9003\n                      image: https://spoonacular.com/cdn/ingredients_100x100/apple.jpg\n                      meta: []\n                      name: apples\n                      original: 6 large baking apples\n                      originalName: baking apples\n                      unit: large\n                      unitLong: larges\n                      unitShort: large\n                  - id: 632660\n                    image: https://spoonacular.com/recipeImages/632660-312x231.jpg\n                    imageType: jpg\n                    likes: 3\n                    missedIngredientCount: 4\n                    missedIngredients:\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1.5\n                      extendedName: unsalted butter\n                      id: 1001\n                      image: https://spoonacular.com/cdn/ingredients_100x100/butter-sliced.jpg\n                      meta:\n                      - unsalted\n                      - cold\n                      name: butter\n                      original: 1 1/2 sticks cold unsalted butter cold unsalted butter\u003c\n                      originalName: cold unsalted butter cold unsalted butter\u003c\n                      unit: sticks\n                      unitLong: sticks\n                      unitShort: sticks\n                    - aisle: Produce\n                      amount: 4\n                      id: 1079003\n                      image: https://spoonacular.com/cdn/ingredients_100x100/red-delicious-apples.png\n                      meta:\n                      - red\n                      - ' such as golden delicious, peeled, cored and cut into 1/4-inch-thick\n                        slices '\n                      name: red apples\n                      original: 4 larges red apples, such as Golden Delicious, peeled,\n                        cored and cut into 1/4-inch-thick slices\n                      originalName: s red apples, such as Golden Delicious, peeled,\n                        cored and cut into 1/4-inch-thick slices\n                      unit: large\n                      unitLong: larges\n                      unitShort: large\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      id: 2010\n                      image: https://spoonacular.com/cdn/ingredients_100x100/cinnamon.jpg\n                      meta: []\n                      name: cinnamon\n                      original: 2 teaspoons cinnamon\n                      originalName: cinnamon\n                      unit: teaspoons\n                      unitLong: teaspoons\n                      unitShort: tsp\n                    - aisle: Nut butters, Jams, and Honey\n                      amount: 2\n                      id: 19719\n                      image: https://spoonacular.com/cdn/ingredients_100x100/apricot-jam.jpg\n                      meta:\n                      - melted\n                      name: apricot preserves\n                      original: 2 tablespoons apricot preserves, melted and strained\n                      originalName: apricot preserves, melted and strained\n                      unit: tablespoons\n                      unitLong: tablespoons\n                      unitShort: Tbsp\n                    title: Apricot Glazed Apple Tart\n                    unusedIngredients:\n                    - aisle: Produce\n                      amount: 1\n                      id: 9003\n                      image: https://spoonacular.com/cdn/ingredients_100x100/apple.jpg\n                      meta: []\n                      name: apples\n                      original: apples\n                      originalName: apples\n                      unit: serving\n                      unitLong: serving\n                      unitShort: serving\n                    usedIngredientCount: 0\n                    usedIngredients: []\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Recipes by Ingredients\n      tags:\n      - recipes\n  /recipes/findByNutrients:\n    get:\n      deprecated: false\n      description: Find a set of recipes that adhere to the given nutritional limits.\n        You may set limits for macronutrients (calories, protein, fat, and carbohydrate)\n        and/or many micronutrients.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Recipes-by-Nutrients\n      operationId: searchRecipesByNutrients\n      parameters:\n      - description: The minimum amount of carbohydrates in grams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minCarbs\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum amount of carbohydrates in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxCarbs\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of protein in grams the recipe must have.\n        explode: false\n        in: query\n        name: minProtein\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum amount of protein in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxProtein\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of calories the recipe must have.\n        explode: false\n        in: query\n        name: minCalories\n        required: false\n        schema:\n          example: 50\n          type: number\n        style: form\n      - description: The maximum amount of calories the recipe can have.\n        explode: false\n        in: query\n        name: maxCalories\n        required: false\n        schema:\n          example: 800\n          type: number\n        style: form\n      - description: The minimum amount of fat in grams the recipe must have.\n        explode: false\n        in: query\n        name: minFat\n        required: false\n        schema:\n          example: 1\n          type: number\n        style: form\n      - description: The maximum amount of fat in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxFat\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of alcohol in grams the recipe must have.\n        explode: false\n        in: query\n        name: minAlcohol\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of alcohol in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxAlcohol\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of caffeine in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minCaffeine\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of caffeine in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxCaffeine\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of copper in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minCopper\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of copper in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxCopper\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of calcium in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minCalcium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of calcium in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxCalcium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of choline in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minCholine\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of choline in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxCholine\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of cholesterol in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minCholesterol\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of cholesterol in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxCholesterol\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of fluoride in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minFluoride\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of fluoride in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxFluoride\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of saturated fat in grams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minSaturatedFat\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of saturated fat in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxSaturatedFat\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin A in IU the recipe must have.\n        explode: false\n        in: query\n        name: minVitaminA\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin A in IU the recipe can have.\n        explode: false\n        in: query\n        name: maxVitaminA\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin C in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminC\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin C in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminC\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin D in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminD\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin D in micrograms the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminD\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin E in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminE\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin E in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminE\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin K in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminK\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin K in micrograms the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminK\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B1 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB1\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B1 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB1\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B2 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB2\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B2 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB2\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B5 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB5\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B5 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB5\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B3 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB3\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B3 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB3\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B6 in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB6\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B6 in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB6\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of Vitamin B12 in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minVitaminB12\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of Vitamin B12 in micrograms the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxVitaminB12\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of fiber in grams the recipe must have.\n        explode: false\n        in: query\n        name: minFiber\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of fiber in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxFiber\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of folate in micrograms the recipe must have.\n        explode: false\n        in: query\n        name: minFolate\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of folate in micrograms the recipe can have.\n        explode: false\n        in: query\n        name: maxFolate\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of folic acid in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minFolicAcid\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of folic acid in micrograms the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxFolicAcid\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of iodine in micrograms the recipe must have.\n        explode: false\n        in: query\n        name: minIodine\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of iodine in micrograms the recipe can have.\n        explode: false\n        in: query\n        name: maxIodine\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of iron in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minIron\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of iron in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxIron\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of magnesium in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minMagnesium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of magnesium in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxMagnesium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of manganese in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minManganese\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of manganese in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxManganese\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of phosphorus in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minPhosphorus\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of phosphorus in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxPhosphorus\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of potassium in milligrams the recipe must\n          have.\n        explode: false\n        in: query\n        name: minPotassium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of potassium in milligrams the recipe can\n          have.\n        explode: false\n        in: query\n        name: maxPotassium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of selenium in micrograms the recipe must\n          have.\n        explode: false\n        in: query\n        name: minSelenium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of selenium in micrograms the recipe can have.\n        explode: false\n        in: query\n        name: maxSelenium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of sodium in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minSodium\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of sodium in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxSodium\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of sugar in grams the recipe must have.\n        explode: false\n        in: query\n        name: minSugar\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of sugar in grams the recipe can have.\n        explode: false\n        in: query\n        name: maxSugar\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of zinc in milligrams the recipe must have.\n        explode: false\n        in: query\n        name: minZinc\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: The maximum amount of zinc in milligrams the recipe can have.\n        explode: false\n        in: query\n        name: maxZinc\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The number of results to skip (between 0 and 900).\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          maximum: 900\n          minimum: 0\n          type: integer\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      - description: If true, every request will give you a random set of recipes\n          within the requested limits.\n        explode: false\n        in: query\n        name: random\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether the recipes should have an open license that allows display\n          with proper attribution.\n        explode: true\n        in: query\n        name: limitLicense\n        required: false\n        schema:\n          default: true\n          example: true\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - calories: 210\n                    carbs: 43g\n                    fat: 3g\n                    id: 90629\n                    image: https://spoonacular.com/recipeImages/90629-312x231.jpg\n                    imageType: jpg\n                    protein: 1g\n                    title: Baked Apples in White Wine\n                  - calories: 226\n                    carbs: 33g\n                    fat: 10g\n                    id: 284420\n                    image: https://spoonacular.com/recipeImages/284420-312x231.jpg\n                    imageType: jpg\n                    protein: 2g\n                    title: Chocolate Silk Pie with Marshmallow Meringue\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_2'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - calories: 210\n                    carbs: 43g\n                    fat: 3g\n                    id: 90629\n                    image: https://spoonacular.com/recipeImages/90629-312x231.jpg\n                    imageType: jpg\n                    protein: 1g\n                    title: Baked Apples in White Wine\n                  - calories: 226\n                    carbs: 33g\n                    fat: 10g\n                    id: 284420\n                    image: https://spoonacular.com/recipeImages/284420-312x231.jpg\n                    imageType: jpg\n                    protein: 2g\n                    title: Chocolate Silk Pie with Marshmallow Meringue\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Recipes by Nutrients\n      tags:\n      - recipes\n  /recipes/{id}/information:\n    get:\n      deprecated: false\n      description: Use a recipe id to get full information about a recipe, such as\n        ingredients, nutrition, diet and allergen information, etc.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Recipe-Information\n      operationId: getRecipeInformation\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Include nutrition data in the recipe information. Nutrition data\n          is per serving. If you want the nutrition data for the entire recipe, just\n          multiply by the number of servings.\n        explode: true\n        in: query\n        name: includeNutrition\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    id: 716429\n                    title: Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                    image: https://spoonacular.com/recipeImages/716429-556x370.jpg\n                    imageType: jpg\n                    servings: 2\n                    readyInMinutes: 45\n                    license: CC BY-SA 3.0\n                    sourceName: Full Belly Sisters\n                    sourceUrl: http://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\n                    spoonacularSourceUrl: https://spoonacular.com/pasta-with-garlic-scallions-cauliflower-breadcrumbs-716429\n                    aggregateLikes: 209\n                    healthScore: 19\n                    spoonacularScore: 83\n                    pricePerServing: 163.15\n                    analyzedInstructions: []\n                    cheap: false\n                    creditsText: Full Belly Sisters\n                    cuisines: []\n                    dairyFree: false\n                    diets: []\n                    gaps: no\n                    glutenFree: false\n                    instructions: \"\"\n                    ketogenic: false\n                    lowFodmap: false\n                    occasions: []\n                    sustainable: false\n                    vegan: false\n                    vegetarian: false\n                    veryHealthy: false\n                    veryPopular: false\n                    whole30: false\n                    weightWatcherSmartPoints: 17\n                    dishTypes:\n                    - lunch\n                    - main course\n                    - main dish\n                    - dinner\n                    extendedIngredients:\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1\n                      consitency: solid\n                      id: 1001\n                      image: butter-sliced.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: butter\n                      original: 1 tbsp butter\n                      originalName: butter\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 2\n                      consitency: solid\n                      id: 10011135\n                      image: cauliflower.jpg\n                      measures:\n                        metric:\n                          amount: 473.176\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 2\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - frozen\n                      - thawed\n                      - cut into bite-sized pieces\n                      name: cauliflower florets\n                      original: about 2 cups frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      originalName: about frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      unit: cups\n                    - aisle: Cheese\n                      amount: 2\n                      consitency: solid\n                      id: 1041009\n                      image: cheddar-cheese.png\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - grated\n                      - (I used romano)\n                      name: cheese\n                      original: 2 tbsp grated cheese (I used romano)\n                      originalName: grated cheese (I used romano)\n                      unit: tbsp\n                    - aisle: Oil, Vinegar, Salad Dressing\n                      amount: 1\n                      consitency: liquid\n                      id: 1034053\n                      image: olive-oil.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: extra virgin olive oil\n                      original: 1-2 tbsp extra virgin olive oil\n                      originalName: extra virgin olive oil\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 5\n                      consitency: solid\n                      id: 11215\n                      image: garlic.jpg\n                      measures:\n                        metric:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                        us:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                      meta: []\n                      name: garlic\n                      original: 5-6 cloves garlic\n                      originalName: garlic\n                      unit: cloves\n                    - aisle: Pasta and Rice\n                      amount: 6\n                      consitency: solid\n                      id: 20420\n                      image: fusilli.jpg\n                      measures:\n                        metric:\n                          amount: 170.097\n                          unitLong: grams\n                          unitShort: g\n                        us:\n                          amount: 6\n                          unitLong: ounces\n                          unitShort: oz\n                      meta:\n                      - (I used linguine)\n                      name: pasta\n                      original: 6-8 ounces pasta (I used linguine)\n                      originalName: pasta (I used linguine)\n                      unit: ounces\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1032009\n                      image: red-pepper-flakes.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                        us:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                      meta:\n                      - red\n                      name: red pepper flakes\n                      original: couple of pinches red pepper flakes, optional\n                      originalName: couple of red pepper flakes, optional\n                      unit: pinches\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1102047\n                      image: salt-and-pepper.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                        us:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                      meta:\n                      - to taste\n                      name: salt and pepper\n                      original: salt and pepper, to taste\n                      originalName: salt and pepper, to taste\n                      unit: servings\n                    - aisle: Produce\n                      amount: 3\n                      consitency: solid\n                      id: 11291\n                      image: spring-onions.jpg\n                      measures:\n                        metric:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                        us:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                      meta:\n                      - white\n                      - green\n                      - separated\n                      - chopped\n                      name: scallions\n                      original: 3 scallions, chopped, white and green parts separated\n                      originalName: scallions, chopped, white and green parts separated\n                      unit: \"\"\n                    - aisle: Alcoholic Beverages\n                      amount: 2\n                      consitency: liquid\n                      id: 14106\n                      image: white-wine.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - white\n                      name: white wine\n                      original: 2-3 tbsp white wine\n                      originalName: white wine\n                      unit: tbsp\n                    - aisle: Pasta and Rice\n                      amount: 0.25\n                      consitency: solid\n                      id: 99025\n                      image: breadcrumbs.jpg\n                      measures:\n                        metric:\n                          amount: 59.147\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 0.25\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - whole wheat\n                      - (I used panko)\n                      name: whole wheat bread crumbs\n                      original: 1/4 cup whole wheat bread crumbs (I used panko)\n                      originalName: whole wheat bread crumbs (I used panko)\n                      unit: cup\n                    summary: 'Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                      might be a good recipe to expand your main course repertoire.\n                      One portion of this dish contains approximately \u0026lt;b\u0026gt;19g\n                      of protein \u0026lt;/b\u0026gt;,  \u0026lt;b\u0026gt;20g of fat \u0026lt;/b\u0026gt;, and\n                      a total of  \u0026lt;b\u0026gt;584 calories \u0026lt;/b\u0026gt;. For  \u0026lt;b\u0026gt;$1.63\n                      per serving \u0026lt;/b\u0026gt;, this recipe  \u0026lt;b\u0026gt;covers 23% \u0026lt;/b\u0026gt;\n                      of your daily requirements of vitamins and minerals. This recipe\n                      serves 2. It is brought to you by fullbellysisters.blogspot.com.\n                      209 people were glad they tried this recipe. A mixture of scallions,\n                      salt and pepper, white wine, and a handful of other ingredients\n                      are all it takes to make this recipe so scrumptious. From preparation\n                      to the plate, this recipe takes approximately  \u0026lt;b\u0026gt;45 minutes\n                      \u0026lt;/b\u0026gt;. All things considered, we decided this recipe  \u0026lt;b\u0026gt;deserves\n                      a spoonacular score of 83% \u0026lt;/b\u0026gt;. This score is awesome.\n                      If you like this recipe, take a look at these similar recipes:\n                      \u0026lt;a href=\"https://spoonacular.com/recipes/cauliflower-gratin-with-garlic-breadcrumbs-318375\"\u003eCauliflower\n                      Gratin with Garlic Breadcrumbs\u0026lt;/a\u0026gt;, \u0026lt; href=\"https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\"\u003ePasta\n                      With Cauliflower, Sausage, \u0026 Breadcrumbs\u0026lt;/a\u0026gt;, and \u0026lt;a\n                      href=\"https://spoonacular.com/recipes/pasta-with-roasted-cauliflower-parsley-and-breadcrumbs-30738\"\u003ePasta\n                      With Roasted Cauliflower, Parsley, And Breadcrumbs\u0026lt;/a\u0026gt;.'\n                    winePairing:\n                      pairedWines:\n                      - chardonnay\n                      - gruener veltliner\n                      - sauvignon blanc\n                      pairingText: Chardonnay, Gruener Veltliner, and Sauvignon Blanc\n                        are great choices for Pasta. Sauvignon Blanc and Gruner Veltliner\n                        both have herby notes that complement salads with enough acid\n                        to match tart vinaigrettes, while a Chardonnay can be a good\n                        pick for creamy salad dressings. The Buddha Kat Winery Chardonnay\n                        with a 4 out of 5 star rating seems like a good match. It\n                        costs about 25 dollars per bottle.\n                      productMatches:\n                      - id: 469199\n                        title: Buddha Kat Winery Chardonnay\n                        description: We barrel ferment our Chardonnay and age it in\n                          a mix of Oak and Stainless. Giving this light bodied wine\n                          modest oak character, a delicate floral aroma, and a warming\n                          finish.\n                        price: $25.0\n                        imageUrl: https://spoonacular.com/productImages/469199-312x231.jpg\n                        averageRating: 0.8\n                        ratingCount: 1\n                        score: 0.55\n                        link: https://www.amazon.com/2015-Buddha-Kat-Winery-Chardonnay/dp/B00OSAVVM4?tag=spoonacular-20\n              schema:\n                $ref: '#/components/schemas/inline_response_200_3'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Recipe Information\n      tags:\n      - recipes\n  /recipes/informationBulk:\n    get:\n      deprecated: false\n      description: Get information about multiple recipes at once. This is equivalent\n        to calling the Get Recipe Information endpoint multiple times, but faster.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Recipe-Information-Bulk\n      operationId: getRecipeInformationBulk\n      parameters:\n      - description: A comma-separated list of recipe ids.\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          example: 715538,716429\n          type: string\n        style: form\n      - description: Include nutrition data in the recipe information. Nutrition data\n          is per serving. If you want the nutrition data for the entire recipe, just\n          multiply by the number of servings.\n        explode: true\n        in: query\n        name: includeNutrition\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - id: 716429\n                    title: Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                    image: https://spoonacular.com/recipeImages/716429-556x370.jpg\n                    imageType: jpg\n                    servings: 2\n                    readyInMinutes: 45\n                    license: CC BY-SA 3.0\n                    sourceName: Full Belly Sisters\n                    sourceUrl: http://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\n                    spoonacularSourceUrl: https://spoonacular.com/pasta-with-garlic-scallions-cauliflower-breadcrumbs-716429\n                    aggregateLikes: 209\n                    healthScore: 19\n                    spoonacularScore: 83\n                    pricePerServing: 163.15\n                    analyzedInstructions: []\n                    cheap: false\n                    creditsText: Full Belly Sisters\n                    cuisines: []\n                    dairyFree: false\n                    diets: []\n                    gaps: no\n                    glutenFree: false\n                    instructions: \"\"\n                    ketogenic: false\n                    lowFodmap: false\n                    occasions: []\n                    sustainable: false\n                    vegan: false\n                    vegetarian: false\n                    veryHealthy: false\n                    veryPopular: false\n                    whole30: false\n                    weightWatcherSmartPoints: 17\n                    dishTypes:\n                    - lunch\n                    - main course\n                    - main dish\n                    - dinner\n                    extendedIngredients:\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1\n                      consitency: solid\n                      id: 1001\n                      image: butter-sliced.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: butter\n                      original: 1 tbsp butter\n                      originalName: butter\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 2\n                      consitency: solid\n                      id: 10011135\n                      image: cauliflower.jpg\n                      measures:\n                        metric:\n                          amount: 473.176\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 2\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - frozen\n                      - thawed\n                      - cut into bite-sized pieces\n                      name: cauliflower florets\n                      original: about 2 cups frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      originalName: about frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      unit: cups\n                    - aisle: Cheese\n                      amount: 2\n                      consitency: solid\n                      id: 1041009\n                      image: cheddar-cheese.png\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - grated\n                      - (I used romano)\n                      name: cheese\n                      original: 2 tbsp grated cheese (I used romano)\n                      originalName: grated cheese (I used romano)\n                      unit: tbsp\n                    - aisle: Oil, Vinegar, Salad Dressing\n                      amount: 1\n                      consitency: liquid\n                      id: 1034053\n                      image: olive-oil.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: extra virgin olive oil\n                      original: 1-2 tbsp extra virgin olive oil\n                      originalName: extra virgin olive oil\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 5\n                      consitency: solid\n                      id: 11215\n                      image: garlic.jpg\n                      measures:\n                        metric:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                        us:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                      meta: []\n                      name: garlic\n                      original: 5-6 cloves garlic\n                      originalName: garlic\n                      unit: cloves\n                    - aisle: Pasta and Rice\n                      amount: 6\n                      consitency: solid\n                      id: 20420\n                      image: fusilli.jpg\n                      measures:\n                        metric:\n                          amount: 170.097\n                          unitLong: grams\n                          unitShort: g\n                        us:\n                          amount: 6\n                          unitLong: ounces\n                          unitShort: oz\n                      meta:\n                      - (I used linguine)\n                      name: pasta\n                      original: 6-8 ounces pasta (I used linguine)\n                      originalName: pasta (I used linguine)\n                      unit: ounces\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1032009\n                      image: red-pepper-flakes.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                        us:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                      meta:\n                      - red\n                      name: red pepper flakes\n                      original: couple of pinches red pepper flakes, optional\n                      originalName: couple of red pepper flakes, optional\n                      unit: pinches\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1102047\n                      image: salt-and-pepper.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                        us:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                      meta:\n                      - to taste\n                      name: salt and pepper\n                      original: salt and pepper, to taste\n                      originalName: salt and pepper, to taste\n                      unit: servings\n                    - aisle: Produce\n                      amount: 3\n                      consitency: solid\n                      id: 11291\n                      image: spring-onions.jpg\n                      measures:\n                        metric:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                        us:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                      meta:\n                      - white\n                      - green\n                      - separated\n                      - chopped\n                      name: scallions\n                      original: 3 scallions, chopped, white and green parts separated\n                      originalName: scallions, chopped, white and green parts separated\n                      unit: \"\"\n                    - aisle: Alcoholic Beverages\n                      amount: 2\n                      consitency: liquid\n                      id: 14106\n                      image: white-wine.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - white\n                      name: white wine\n                      original: 2-3 tbsp white wine\n                      originalName: white wine\n                      unit: tbsp\n                    - aisle: Pasta and Rice\n                      amount: 0.25\n                      consitency: solid\n                      id: 99025\n                      image: breadcrumbs.jpg\n                      measures:\n                        metric:\n                          amount: 59.147\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 0.25\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - whole wheat\n                      - (I used panko)\n                      name: whole wheat bread crumbs\n                      original: 1/4 cup whole wheat bread crumbs (I used panko)\n                      originalName: whole wheat bread crumbs (I used panko)\n                      unit: cup\n                    summary: 'Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                      might be a good recipe to expand your main course repertoire.\n                      One portion of this dish contains approximately \u0026lt;b\u0026gt;19g\n                      of protein \u0026lt;/b\u0026gt;,  \u0026lt;b\u0026gt;20g of fat \u0026lt;/b\u0026gt;, and\n                      a total of  \u0026lt;b\u0026gt;584 calories \u0026lt;/b\u0026gt;. For  \u0026lt;b\u0026gt;$1.63\n                      per serving \u0026lt;/b\u0026gt;, this recipe  \u0026lt;b\u0026gt;covers 23% \u0026lt;/b\u0026gt;\n                      of your daily requirements of vitamins and minerals. This recipe\n                      serves 2. It is brought to you by fullbellysisters.blogspot.com.\n                      209 people were glad they tried this recipe. A mixture of scallions,\n                      salt and pepper, white wine, and a handful of other ingredients\n                      are all it takes to make this recipe so scrumptious. From preparation\n                      to the plate, this recipe takes approximately  \u0026lt;b\u0026gt;45 minutes\n                      \u0026lt;/b\u0026gt;. All things considered, we decided this recipe  \u0026lt;b\u0026gt;deserves\n                      a spoonacular score of 83% \u0026lt;/b\u0026gt;. This score is awesome.\n                      If you like this recipe, take a look at these similar recipes:\n                      \u0026lt;a href=\"https://spoonacular.com/recipes/cauliflower-gratin-with-garlic-breadcrumbs-318375\"\u003eCauliflower\n                      Gratin with Garlic Breadcrumbs\u0026lt;/a\u0026gt;, \u0026lt; href=\"https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\"\u003ePasta\n                      With Cauliflower, Sausage, \u0026 Breadcrumbs\u0026lt;/a\u0026gt;, and \u0026lt;a\n                      href=\"https://spoonacular.com/recipes/pasta-with-roasted-cauliflower-parsley-and-breadcrumbs-30738\"\u003ePasta\n                      With Roasted Cauliflower, Parsley, And Breadcrumbs\u0026lt;/a\u0026gt;.'\n                    winePairing:\n                      pairedWines:\n                      - chardonnay\n                      - gruener veltliner\n                      - sauvignon blanc\n                      pairingText: Chardonnay, Gruener Veltliner, and Sauvignon Blanc\n                        are great choices for Pasta. Sauvignon Blanc and Gruner Veltliner\n                        both have herby notes that complement salads with enough acid\n                        to match tart vinaigrettes, while a Chardonnay can be a good\n                        pick for creamy salad dressings. The Buddha Kat Winery Chardonnay\n                        with a 4 out of 5 star rating seems like a good match. It\n                        costs about 25 dollars per bottle.\n                      productMatches:\n                      - id: 469199\n                        title: Buddha Kat Winery Chardonnay\n                        description: We barrel ferment our Chardonnay and age it in\n                          a mix of Oak and Stainless. Giving this light bodied wine\n                          modest oak character, a delicate floral aroma, and a warming\n                          finish.\n                        price: $25.0\n                        imageUrl: https://spoonacular.com/productImages/469199-312x231.jpg\n                        averageRating: 0.8\n                        ratingCount: 1\n                        score: 0.55\n                        link: https://www.amazon.com/2015-Buddha-Kat-Winery-Chardonnay/dp/B00OSAVVM4?tag=spoonacular-20\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_4'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - id: 716429\n                    title: Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                    image: https://spoonacular.com/recipeImages/716429-556x370.jpg\n                    imageType: jpg\n                    servings: 2\n                    readyInMinutes: 45\n                    license: CC BY-SA 3.0\n                    sourceName: Full Belly Sisters\n                    sourceUrl: http://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\n                    spoonacularSourceUrl: https://spoonacular.com/pasta-with-garlic-scallions-cauliflower-breadcrumbs-716429\n                    aggregateLikes: 209\n                    healthScore: 19\n                    spoonacularScore: 83\n                    pricePerServing: 163.15\n                    analyzedInstructions: []\n                    cheap: false\n                    creditsText: Full Belly Sisters\n                    cuisines: []\n                    dairyFree: false\n                    diets: []\n                    gaps: no\n                    glutenFree: false\n                    instructions: \"\"\n                    ketogenic: false\n                    lowFodmap: false\n                    occasions: []\n                    sustainable: false\n                    vegan: false\n                    vegetarian: false\n                    veryHealthy: false\n                    veryPopular: false\n                    whole30: false\n                    weightWatcherSmartPoints: 17\n                    dishTypes:\n                    - lunch\n                    - main course\n                    - main dish\n                    - dinner\n                    extendedIngredients:\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1\n                      consitency: solid\n                      id: 1001\n                      image: butter-sliced.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: butter\n                      original: 1 tbsp butter\n                      originalName: butter\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 2\n                      consitency: solid\n                      id: 10011135\n                      image: cauliflower.jpg\n                      measures:\n                        metric:\n                          amount: 473.176\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 2\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - frozen\n                      - thawed\n                      - cut into bite-sized pieces\n                      name: cauliflower florets\n                      original: about 2 cups frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      originalName: about frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      unit: cups\n                    - aisle: Cheese\n                      amount: 2\n                      consitency: solid\n                      id: 1041009\n                      image: cheddar-cheese.png\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - grated\n                      - (I used romano)\n                      name: cheese\n                      original: 2 tbsp grated cheese (I used romano)\n                      originalName: grated cheese (I used romano)\n                      unit: tbsp\n                    - aisle: Oil, Vinegar, Salad Dressing\n                      amount: 1\n                      consitency: liquid\n                      id: 1034053\n                      image: olive-oil.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: extra virgin olive oil\n                      original: 1-2 tbsp extra virgin olive oil\n                      originalName: extra virgin olive oil\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 5\n                      consitency: solid\n                      id: 11215\n                      image: garlic.jpg\n                      measures:\n                        metric:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                        us:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                      meta: []\n                      name: garlic\n                      original: 5-6 cloves garlic\n                      originalName: garlic\n                      unit: cloves\n                    - aisle: Pasta and Rice\n                      amount: 6\n                      consitency: solid\n                      id: 20420\n                      image: fusilli.jpg\n                      measures:\n                        metric:\n                          amount: 170.097\n                          unitLong: grams\n                          unitShort: g\n                        us:\n                          amount: 6\n                          unitLong: ounces\n                          unitShort: oz\n                      meta:\n                      - (I used linguine)\n                      name: pasta\n                      original: 6-8 ounces pasta (I used linguine)\n                      originalName: pasta (I used linguine)\n                      unit: ounces\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1032009\n                      image: red-pepper-flakes.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                        us:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                      meta:\n                      - red\n                      name: red pepper flakes\n                      original: couple of pinches red pepper flakes, optional\n                      originalName: couple of red pepper flakes, optional\n                      unit: pinches\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1102047\n                      image: salt-and-pepper.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                        us:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                      meta:\n                      - to taste\n                      name: salt and pepper\n                      original: salt and pepper, to taste\n                      originalName: salt and pepper, to taste\n                      unit: servings\n                    - aisle: Produce\n                      amount: 3\n                      consitency: solid\n                      id: 11291\n                      image: spring-onions.jpg\n                      measures:\n                        metric:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                        us:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                      meta:\n                      - white\n                      - green\n                      - separated\n                      - chopped\n                      name: scallions\n                      original: 3 scallions, chopped, white and green parts separated\n                      originalName: scallions, chopped, white and green parts separated\n                      unit: \"\"\n                    - aisle: Alcoholic Beverages\n                      amount: 2\n                      consitency: liquid\n                      id: 14106\n                      image: white-wine.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - white\n                      name: white wine\n                      original: 2-3 tbsp white wine\n                      originalName: white wine\n                      unit: tbsp\n                    - aisle: Pasta and Rice\n                      amount: 0.25\n                      consitency: solid\n                      id: 99025\n                      image: breadcrumbs.jpg\n                      measures:\n                        metric:\n                          amount: 59.147\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 0.25\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - whole wheat\n                      - (I used panko)\n                      name: whole wheat bread crumbs\n                      original: 1/4 cup whole wheat bread crumbs (I used panko)\n                      originalName: whole wheat bread crumbs (I used panko)\n                      unit: cup\n                    summary: 'Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                      might be a good recipe to expand your main course repertoire.\n                      One portion of this dish contains approximately \u0026lt;b\u0026gt;19g\n                      of protein \u0026lt;/b\u0026gt;,  \u0026lt;b\u0026gt;20g of fat \u0026lt;/b\u0026gt;, and\n                      a total of  \u0026lt;b\u0026gt;584 calories \u0026lt;/b\u0026gt;. For  \u0026lt;b\u0026gt;$1.63\n                      per serving \u0026lt;/b\u0026gt;, this recipe  \u0026lt;b\u0026gt;covers 23% \u0026lt;/b\u0026gt;\n                      of your daily requirements of vitamins and minerals. This recipe\n                      serves 2. It is brought to you by fullbellysisters.blogspot.com.\n                      209 people were glad they tried this recipe. A mixture of scallions,\n                      salt and pepper, white wine, and a handful of other ingredients\n                      are all it takes to make this recipe so scrumptious. From preparation\n                      to the plate, this recipe takes approximately  \u0026lt;b\u0026gt;45 minutes\n                      \u0026lt;/b\u0026gt;. All things considered, we decided this recipe  \u0026lt;b\u0026gt;deserves\n                      a spoonacular score of 83% \u0026lt;/b\u0026gt;. This score is awesome.\n                      If you like this recipe, take a look at these similar recipes:\n                      \u0026lt;a href=\"https://spoonacular.com/recipes/cauliflower-gratin-with-garlic-breadcrumbs-318375\"\u003eCauliflower\n                      Gratin with Garlic Breadcrumbs\u0026lt;/a\u0026gt;, \u0026lt; href=\"https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\"\u003ePasta\n                      With Cauliflower, Sausage, \u0026 Breadcrumbs\u0026lt;/a\u0026gt;, and \u0026lt;a\n                      href=\"https://spoonacular.com/recipes/pasta-with-roasted-cauliflower-parsley-and-breadcrumbs-30738\"\u003ePasta\n                      With Roasted Cauliflower, Parsley, And Breadcrumbs\u0026lt;/a\u0026gt;.'\n                    winePairing:\n                      pairedWines:\n                      - chardonnay\n                      - gruener veltliner\n                      - sauvignon blanc\n                      pairingText: Chardonnay, Gruener Veltliner, and Sauvignon Blanc\n                        are great choices for Pasta. Sauvignon Blanc and Gruner Veltliner\n                        both have herby notes that complement salads with enough acid\n                        to match tart vinaigrettes, while a Chardonnay can be a good\n                        pick for creamy salad dressings. The Buddha Kat Winery Chardonnay\n                        with a 4 out of 5 star rating seems like a good match. It\n                        costs about 25 dollars per bottle.\n                      productMatches:\n                      - id: 469199\n                        title: Buddha Kat Winery Chardonnay\n                        description: We barrel ferment our Chardonnay and age it in\n                          a mix of Oak and Stainless. Giving this light bodied wine\n                          modest oak character, a delicate floral aroma, and a warming\n                          finish.\n                        price: $25.0\n                        imageUrl: https://spoonacular.com/productImages/469199-312x231.jpg\n                        averageRating: 0.8\n                        ratingCount: 1\n                        score: 0.55\n                        link: https://www.amazon.com/2015-Buddha-Kat-Winery-Chardonnay/dp/B00OSAVVM4?tag=spoonacular-20\n                  - id: 716429\n                    title: Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                    image: https://spoonacular.com/recipeImages/716429-556x370.jpg\n                    imageType: jpg\n                    servings: 2\n                    readyInMinutes: 45\n                    license: CC BY-SA 3.0\n                    sourceName: Full Belly Sisters\n                    sourceUrl: http://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\n                    spoonacularSourceUrl: https://spoonacular.com/pasta-with-garlic-scallions-cauliflower-breadcrumbs-716429\n                    aggregateLikes: 209\n                    healthScore: 19\n                    spoonacularScore: 83\n                    pricePerServing: 163.15\n                    analyzedInstructions: []\n                    cheap: false\n                    creditsText: Full Belly Sisters\n                    cuisines: []\n                    dairyFree: false\n                    diets: []\n                    gaps: no\n                    glutenFree: false\n                    instructions: \"\"\n                    ketogenic: false\n                    lowFodmap: false\n                    occasions: []\n                    sustainable: false\n                    vegan: false\n                    vegetarian: false\n                    veryHealthy: false\n                    veryPopular: false\n                    whole30: false\n                    weightWatcherSmartPoints: 17\n                    dishTypes:\n                    - lunch\n                    - main course\n                    - main dish\n                    - dinner\n                    extendedIngredients:\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1\n                      consitency: solid\n                      id: 1001\n                      image: butter-sliced.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: butter\n                      original: 1 tbsp butter\n                      originalName: butter\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 2\n                      consitency: solid\n                      id: 10011135\n                      image: cauliflower.jpg\n                      measures:\n                        metric:\n                          amount: 473.176\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 2\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - frozen\n                      - thawed\n                      - cut into bite-sized pieces\n                      name: cauliflower florets\n                      original: about 2 cups frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      originalName: about frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      unit: cups\n                    - aisle: Cheese\n                      amount: 2\n                      consitency: solid\n                      id: 1041009\n                      image: cheddar-cheese.png\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - grated\n                      - (I used romano)\n                      name: cheese\n                      original: 2 tbsp grated cheese (I used romano)\n                      originalName: grated cheese (I used romano)\n                      unit: tbsp\n                    - aisle: Oil, Vinegar, Salad Dressing\n                      amount: 1\n                      consitency: liquid\n                      id: 1034053\n                      image: olive-oil.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: extra virgin olive oil\n                      original: 1-2 tbsp extra virgin olive oil\n                      originalName: extra virgin olive oil\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 5\n                      consitency: solid\n                      id: 11215\n                      image: garlic.jpg\n                      measures:\n                        metric:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                        us:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                      meta: []\n                      name: garlic\n                      original: 5-6 cloves garlic\n                      originalName: garlic\n                      unit: cloves\n                    - aisle: Pasta and Rice\n                      amount: 6\n                      consitency: solid\n                      id: 20420\n                      image: fusilli.jpg\n                      measures:\n                        metric:\n                          amount: 170.097\n                          unitLong: grams\n                          unitShort: g\n                        us:\n                          amount: 6\n                          unitLong: ounces\n                          unitShort: oz\n                      meta:\n                      - (I used linguine)\n                      name: pasta\n                      original: 6-8 ounces pasta (I used linguine)\n                      originalName: pasta (I used linguine)\n                      unit: ounces\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1032009\n                      image: red-pepper-flakes.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                        us:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                      meta:\n                      - red\n                      name: red pepper flakes\n                      original: couple of pinches red pepper flakes, optional\n                      originalName: couple of red pepper flakes, optional\n                      unit: pinches\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1102047\n                      image: salt-and-pepper.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                        us:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                      meta:\n                      - to taste\n                      name: salt and pepper\n                      original: salt and pepper, to taste\n                      originalName: salt and pepper, to taste\n                      unit: servings\n                    - aisle: Produce\n                      amount: 3\n                      consitency: solid\n                      id: 11291\n                      image: spring-onions.jpg\n                      measures:\n                        metric:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                        us:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                      meta:\n                      - white\n                      - green\n                      - separated\n                      - chopped\n                      name: scallions\n                      original: 3 scallions, chopped, white and green parts separated\n                      originalName: scallions, chopped, white and green parts separated\n                      unit: \"\"\n                    - aisle: Alcoholic Beverages\n                      amount: 2\n                      consitency: liquid\n                      id: 14106\n                      image: white-wine.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - white\n                      name: white wine\n                      original: 2-3 tbsp white wine\n                      originalName: white wine\n                      unit: tbsp\n                    - aisle: Pasta and Rice\n                      amount: 0.25\n                      consitency: solid\n                      id: 99025\n                      image: breadcrumbs.jpg\n                      measures:\n                        metric:\n                          amount: 59.147\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 0.25\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - whole wheat\n                      - (I used panko)\n                      name: whole wheat bread crumbs\n                      original: 1/4 cup whole wheat bread crumbs (I used panko)\n                      originalName: whole wheat bread crumbs (I used panko)\n                      unit: cup\n                    summary: 'Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                      might be a good recipe to expand your main course repertoire.\n                      One portion of this dish contains approximately \u0026lt;b\u0026gt;19g\n                      of protein \u0026lt;/b\u0026gt;,  \u0026lt;b\u0026gt;20g of fat \u0026lt;/b\u0026gt;, and\n                      a total of  \u0026lt;b\u0026gt;584 calories \u0026lt;/b\u0026gt;. For  \u0026lt;b\u0026gt;$1.63\n                      per serving \u0026lt;/b\u0026gt;, this recipe  \u0026lt;b\u0026gt;covers 23% \u0026lt;/b\u0026gt;\n                      of your daily requirements of vitamins and minerals. This recipe\n                      serves 2. It is brought to you by fullbellysisters.blogspot.com.\n                      209 people were glad they tried this recipe. A mixture of scallions,\n                      salt and pepper, white wine, and a handful of other ingredients\n                      are all it takes to make this recipe so scrumptious. From preparation\n                      to the plate, this recipe takes approximately  \u0026lt;b\u0026gt;45 minutes\n                      \u0026lt;/b\u0026gt;. All things considered, we decided this recipe  \u0026lt;b\u0026gt;deserves\n                      a spoonacular score of 83% \u0026lt;/b\u0026gt;. This score is awesome.\n                      If you like this recipe, take a look at these similar recipes:\n                      \u0026lt;a href=\"https://spoonacular.com/recipes/cauliflower-gratin-with-garlic-breadcrumbs-318375\"\u003eCauliflower\n                      Gratin with Garlic Breadcrumbs\u0026lt;/a\u0026gt;, \u0026lt; href=\"https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\"\u003ePasta\n                      With Cauliflower, Sausage, \u0026 Breadcrumbs\u0026lt;/a\u0026gt;, and \u0026lt;a\n                      href=\"https://spoonacular.com/recipes/pasta-with-roasted-cauliflower-parsley-and-breadcrumbs-30738\"\u003ePasta\n                      With Roasted Cauliflower, Parsley, And Breadcrumbs\u0026lt;/a\u0026gt;.'\n                    winePairing:\n                      pairedWines:\n                      - chardonnay\n                      - gruener veltliner\n                      - sauvignon blanc\n                      pairingText: Chardonnay, Gruener Veltliner, and Sauvignon Blanc\n                        are great choices for Pasta. Sauvignon Blanc and Gruner Veltliner\n                        both have herby notes that complement salads with enough acid\n                        to match tart vinaigrettes, while a Chardonnay can be a good\n                        pick for creamy salad dressings. The Buddha Kat Winery Chardonnay\n                        with a 4 out of 5 star rating seems like a good match. It\n                        costs about 25 dollars per bottle.\n                      productMatches:\n                      - id: 469199\n                        title: Buddha Kat Winery Chardonnay\n                        description: We barrel ferment our Chardonnay and age it in\n                          a mix of Oak and Stainless. Giving this light bodied wine\n                          modest oak character, a delicate floral aroma, and a warming\n                          finish.\n                        price: $25.0\n                        imageUrl: https://spoonacular.com/productImages/469199-312x231.jpg\n                        averageRating: 0.8\n                        ratingCount: 1\n                        score: 0.55\n                        link: https://www.amazon.com/2015-Buddha-Kat-Winery-Chardonnay/dp/B00OSAVVM4?tag=spoonacular-20\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Recipe Information Bulk\n      tags:\n      - recipes\n  /recipes/{id}/similar:\n    get:\n      deprecated: false\n      description: Find recipes which are similar to the given one.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Similar-Recipes\n      operationId: getSimilarRecipes\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      - description: Whether the recipes should have an open license that allows display\n          with proper attribution.\n        explode: true\n        in: query\n        name: limitLicense\n        required: false\n        schema:\n          default: true\n          example: true\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - id: 209128\n                    title: 'Dinner Tonight: Grilled Romesco-Style Pork'\n                    imageType: jpg\n                    readyInMinutes: 45\n                    servings: 4\n                    sourceUrl: http://www.seriouseats.com/recipes/2008/07/grilled-romesco-style-pork-salad-recipe.html\n                  - id: 31868\n                    title: 'Dinner Tonight: Chickpea Bruschetta'\n                    imageType: jpg\n                    readyInMinutes: 45\n                    servings: 2\n                    sourceUrl: http://www.seriouseats.com/recipes/2009/06/dinner-tonight-chickpea-bruschetta-babbo-nyc-recipe.html\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_5'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - id: 209128\n                    title: 'Dinner Tonight: Grilled Romesco-Style Pork'\n                    imageType: jpg\n                    readyInMinutes: 45\n                    servings: 4\n                    sourceUrl: http://www.seriouseats.com/recipes/2008/07/grilled-romesco-style-pork-salad-recipe.html\n                  - id: 31868\n                    title: 'Dinner Tonight: Chickpea Bruschetta'\n                    imageType: jpg\n                    readyInMinutes: 45\n                    servings: 2\n                    sourceUrl: http://www.seriouseats.com/recipes/2009/06/dinner-tonight-chickpea-bruschetta-babbo-nyc-recipe.html\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Similar Recipes\n      tags:\n      - recipes\n  /recipes/random:\n    get:\n      deprecated: false\n      description: Find random (popular) recipes. If you need to filter recipes by\n        diet, nutrition etc. you might want to consider using the complex recipe search\n        endpoint and set the sort request parameter to random.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Random-Recipes\n      operationId: getRandomRecipes\n      parameters:\n      - description: Whether the recipes should have an open license that allows display\n          with proper attribution.\n        explode: true\n        in: query\n        name: limitLicense\n        required: false\n        schema:\n          default: true\n          example: true\n          type: boolean\n        style: form\n      - description: The tags (can be diets, meal types, cuisines, or intolerances)\n          that the recipe must have.\n        explode: true\n        in: query\n        name: tags\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    recipes:\n                    - id: 716429\n                      title: Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                      image: https://spoonacular.com/recipeImages/716429-556x370.jpg\n                      imageType: jpg\n                      servings: 2\n                      readyInMinutes: 45\n                      license: CC BY-SA 3.0\n                      sourceName: Full Belly Sisters\n                      sourceUrl: http://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\n                      spoonacularSourceUrl: https://spoonacular.com/pasta-with-garlic-scallions-cauliflower-breadcrumbs-716429\n                      aggregateLikes: 209\n                      healthScore: 19\n                      spoonacularScore: 83\n                      pricePerServing: 163.15\n                      analyzedInstructions: []\n                      cheap: false\n                      creditsText: Full Belly Sisters\n                      cuisines: []\n                      dairyFree: false\n                      diets: []\n                      gaps: no\n                      glutenFree: false\n                      instructions: \"\"\n                      ketogenic: false\n                      lowFodmap: false\n                      occasions: []\n                      sustainable: false\n                      vegan: false\n                      vegetarian: false\n                      veryHealthy: false\n                      veryPopular: false\n                      whole30: false\n                      weightWatcherSmartPoints: 17\n                      dishTypes:\n                      - lunch\n                      - main course\n                      - main dish\n                      - dinner\n                      extendedIngredients:\n                      - aisle: Milk, Eggs, Other Dairy\n                        amount: 1\n                        consitency: solid\n                        id: 1001\n                        image: butter-sliced.jpg\n                        measures:\n                          metric:\n                            amount: 1\n                            unitLong: Tbsp\n                            unitShort: Tbsp\n                          us:\n                            amount: 1\n                            unitLong: Tbsp\n                            unitShort: Tbsp\n                        meta: []\n                        name: butter\n                        original: 1 tbsp butter\n                        originalName: butter\n                        unit: tbsp\n                      - aisle: Produce\n                        amount: 2\n                        consitency: solid\n                        id: 10011135\n                        image: cauliflower.jpg\n                        measures:\n                          metric:\n                            amount: 473.176\n                            unitLong: milliliters\n                            unitShort: ml\n                          us:\n                            amount: 2\n                            unitLong: cups\n                            unitShort: cups\n                        meta:\n                        - frozen\n                        - thawed\n                        - cut into bite-sized pieces\n                        name: cauliflower florets\n                        original: about 2 cups frozen cauliflower florets, thawed,\n                          cut into bite-sized pieces\n                        originalName: about frozen cauliflower florets, thawed, cut\n                          into bite-sized pieces\n                        unit: cups\n                      - aisle: Cheese\n                        amount: 2\n                        consitency: solid\n                        id: 1041009\n                        image: cheddar-cheese.png\n                        measures:\n                          metric:\n                            amount: 2\n                            unitLong: Tbsps\n                            unitShort: Tbsps\n                          us:\n                            amount: 2\n                            unitLong: Tbsps\n                            unitShort: Tbsps\n                        meta:\n                        - grated\n                        - (I used romano)\n                        name: cheese\n                        original: 2 tbsp grated cheese (I used romano)\n                        originalName: grated cheese (I used romano)\n                        unit: tbsp\n                      - aisle: Oil, Vinegar, Salad Dressing\n                        amount: 1\n                        consitency: liquid\n                        id: 1034053\n                        image: olive-oil.jpg\n                        measures:\n                          metric:\n                            amount: 1\n                            unitLong: Tbsp\n                            unitShort: Tbsp\n                          us:\n                            amount: 1\n                            unitLong: Tbsp\n                            unitShort: Tbsp\n                        meta: []\n                        name: extra virgin olive oil\n                        original: 1-2 tbsp extra virgin olive oil\n                        originalName: extra virgin olive oil\n                        unit: tbsp\n                      - aisle: Produce\n                        amount: 5\n                        consitency: solid\n                        id: 11215\n                        image: garlic.jpg\n                        measures:\n                          metric:\n                            amount: 5\n                            unitLong: cloves\n                            unitShort: cloves\n                          us:\n                            amount: 5\n                            unitLong: cloves\n                            unitShort: cloves\n                        meta: []\n                        name: garlic\n                        original: 5-6 cloves garlic\n                        originalName: garlic\n                        unit: cloves\n                      - aisle: Pasta and Rice\n                        amount: 6\n                        consitency: solid\n                        id: 20420\n                        image: fusilli.jpg\n                        measures:\n                          metric:\n                            amount: 170.097\n                            unitLong: grams\n                            unitShort: g\n                          us:\n                            amount: 6\n                            unitLong: ounces\n                            unitShort: oz\n                        meta:\n                        - (I used linguine)\n                        name: pasta\n                        original: 6-8 ounces pasta (I used linguine)\n                        originalName: pasta (I used linguine)\n                        unit: ounces\n                      - aisle: Spices and Seasonings\n                        amount: 2\n                        consitency: solid\n                        id: 1032009\n                        image: red-pepper-flakes.jpg\n                        measures:\n                          metric:\n                            amount: 2\n                            unitLong: pinches\n                            unitShort: pinches\n                          us:\n                            amount: 2\n                            unitLong: pinches\n                            unitShort: pinches\n                        meta:\n                        - red\n                        name: red pepper flakes\n                        original: couple of pinches red pepper flakes, optional\n                        originalName: couple of red pepper flakes, optional\n                        unit: pinches\n                      - aisle: Spices and Seasonings\n                        amount: 2\n                        consitency: solid\n                        id: 1102047\n                        image: salt-and-pepper.jpg\n                        measures:\n                          metric:\n                            amount: 2\n                            unitLong: servings\n                            unitShort: servings\n                          us:\n                            amount: 2\n                            unitLong: servings\n                            unitShort: servings\n                        meta:\n                        - to taste\n                        name: salt and pepper\n                        original: salt and pepper, to taste\n                        originalName: salt and pepper, to taste\n                        unit: servings\n                      - aisle: Produce\n                        amount: 3\n                        consitency: solid\n                        id: 11291\n                        image: spring-onions.jpg\n                        measures:\n                          metric:\n                            amount: 3\n                            unitLong: \"\"\n                            unitShort: \"\"\n                          us:\n                            amount: 3\n                            unitLong: \"\"\n                            unitShort: \"\"\n                        meta:\n                        - white\n                        - green\n                        - separated\n                        - chopped\n                        name: scallions\n                        original: 3 scallions, chopped, white and green parts separated\n                        originalName: scallions, chopped, white and green parts separated\n                        unit: \"\"\n                      - aisle: Alcoholic Beverages\n                        amount: 2\n                        consitency: liquid\n                        id: 14106\n                        image: white-wine.jpg\n                        measures:\n                          metric:\n                            amount: 2\n                            unitLong: Tbsps\n                            unitShort: Tbsps\n                          us:\n                            amount: 2\n                            unitLong: Tbsps\n                            unitShort: Tbsps\n                        meta:\n                        - white\n                        name: white wine\n                        original: 2-3 tbsp white wine\n                        originalName: white wine\n                        unit: tbsp\n                      - aisle: Pasta and Rice\n                        amount: 0.25\n                        consitency: solid\n                        id: 99025\n                        image: breadcrumbs.jpg\n                        measures:\n                          metric:\n                            amount: 59.147\n                            unitLong: milliliters\n                            unitShort: ml\n                          us:\n                            amount: 0.25\n                            unitLong: cups\n                            unitShort: cups\n                        meta:\n                        - whole wheat\n                        - (I used panko)\n                        name: whole wheat bread crumbs\n                        original: 1/4 cup whole wheat bread crumbs (I used panko)\n                        originalName: whole wheat bread crumbs (I used panko)\n                        unit: cup\n                      summary: 'Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                        might be a good recipe to expand your main course repertoire.\n                        One portion of this dish contains approximately \u0026lt;b\u0026gt;19g\n                        of protein \u0026lt;/b\u0026gt;,  \u0026lt;b\u0026gt;20g of fat \u0026lt;/b\u0026gt;, and\n                        a total of  \u0026lt;b\u0026gt;584 calories \u0026lt;/b\u0026gt;. For  \u0026lt;b\u0026gt;$1.63\n                        per serving \u0026lt;/b\u0026gt;, this recipe  \u0026lt;b\u0026gt;covers 23% \u0026lt;/b\u0026gt;\n                        of your daily requirements of vitamins and minerals. This\n                        recipe serves 2. It is brought to you by fullbellysisters.blogspot.com.\n                        209 people were glad they tried this recipe. A mixture of\n                        scallions, salt and pepper, white wine, and a handful of other\n                        ingredients are all it takes to make this recipe so scrumptious.\n                        From preparation to the plate, this recipe takes approximately  \u0026lt;b\u0026gt;45\n                        minutes \u0026lt;/b\u0026gt;. All things considered, we decided this\n                        recipe  \u0026lt;b\u0026gt;deserves a spoonacular score of 83% \u0026lt;/b\u0026gt;.\n                        This score is awesome. If you like this recipe, take a look\n                        at these similar recipes: \u0026lt;a href=\"https://spoonacular.com/recipes/cauliflower-gratin-with-garlic-breadcrumbs-318375\"\u003eCauliflower\n                        Gratin with Garlic Breadcrumbs\u0026lt;/a\u0026gt;, \u0026lt; href=\"https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\"\u003ePasta\n                        With Cauliflower, Sausage, \u0026 Breadcrumbs\u0026lt;/a\u0026gt;, and \u0026lt;a\n                        href=\"https://spoonacular.com/recipes/pasta-with-roasted-cauliflower-parsley-and-breadcrumbs-30738\"\u003ePasta\n                        With Roasted Cauliflower, Parsley, And Breadcrumbs\u0026lt;/a\u0026gt;.'\n                      winePairing:\n                        pairedWines:\n                        - chardonnay\n                        - gruener veltliner\n                        - sauvignon blanc\n                        pairingText: Chardonnay, Gruener Veltliner, and Sauvignon\n                          Blanc are great choices for Pasta. Sauvignon Blanc and Gruner\n                          Veltliner both have herby notes that complement salads with\n                          enough acid to match tart vinaigrettes, while a Chardonnay\n                          can be a good pick for creamy salad dressings. The Buddha\n                          Kat Winery Chardonnay with a 4 out of 5 star rating seems\n                          like a good match. It costs about 25 dollars per bottle.\n                        productMatches:\n                        - id: 469199\n                          title: Buddha Kat Winery Chardonnay\n                          description: We barrel ferment our Chardonnay and age it\n                            in a mix of Oak and Stainless. Giving this light bodied\n                            wine modest oak character, a delicate floral aroma, and\n                            a warming finish.\n                          price: $25.0\n                          imageUrl: https://spoonacular.com/productImages/469199-312x231.jpg\n                          averageRating: 0.8\n                          ratingCount: 1\n                          score: 0.55\n                          link: https://www.amazon.com/2015-Buddha-Kat-Winery-Chardonnay/dp/B00OSAVVM4?tag=spoonacular-20\n              schema:\n                $ref: '#/components/schemas/inline_response_200_6'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Random Recipes\n      tags:\n      - recipes\n  /recipes/autocomplete:\n    get:\n      deprecated: false\n      description: Autocomplete a partial input to suggest possible recipe names.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Autocomplete-Recipe-Search\n      operationId: autocompleteRecipeSearch\n      parameters:\n      - description: The (natural language) search query.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          example: burger\n          type: string\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - id: 296687\n                    title: chicken\n                    imageType: jpg\n                  - id: 42569\n                    title: chicken bbq\n                    imageType: jpg\n                  - id: 83890\n                    title: chicken blt\n                    imageType: jpg\n                  - id: 737543\n                    title: chicken pie\n                    imageType: jpg\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_7'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - id: 296687\n                    title: chicken\n                    imageType: jpg\n                  - id: 42569\n                    title: chicken bbq\n                    imageType: jpg\n                  - id: 83890\n                    title: chicken blt\n                    imageType: jpg\n                  - id: 737543\n                    title: chicken pie\n                    imageType: jpg\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Autocomplete Recipe Search\n      tags:\n      - recipes\n  /recipes/{id}/tasteWidget.json:\n    get:\n      deprecated: false\n      description: Get a recipe's taste. The tastes supported are sweet, salty, sour,\n        bitter, savory, and fatty.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Taste-by-ID\n      operationId: getRecipeTasteByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Normalize to the strongest taste.\n        explode: true\n        in: query\n        name: normalize\n        required: false\n        schema:\n          default: true\n          enum:\n          - false\n          - true\n          example: true\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    sweetness: 28.79\n                    saltiness: 26.74\n                    sourness: 6.22\n                    bitterness: 12.38\n                    savoriness: 11.8\n                    fattiness: 100\n                    spiciness: 0\n              schema:\n                $ref: '#/components/schemas/inline_response_200_8'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Taste by ID\n      tags:\n      - recipes\n  /recipes/{id}/tasteWidget.png:\n    get:\n      deprecated: false\n      description: Get a recipe's taste as an image. The tastes supported are sweet,\n        salty, sour, bitter, savory, and fatty.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Recipe-Taste-by-ID-Image\n      operationId: recipeTasteByIDImage\n      parameters:\n      - description: The recipe id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 69095\n          type: number\n        style: simple\n      - description: Normalize to the strongest taste.\n        explode: false\n        in: query\n        name: normalize\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Red, green, blue values for the chart color.\n        explode: true\n        in: query\n        name: rgb\n        required: false\n        schema:\n          example: 75,192,192\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Recipe Taste by ID Image\n      tags:\n      - recipes\n  /recipes/{id}/equipmentWidget.json:\n    get:\n      deprecated: false\n      description: Get a recipe's equipment list.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Equipment-by-ID\n      operationId: getRecipeEquipmentByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    equipment:\n                    - image: pie-pan.png\n                      name: pie form\n                    - image: bowl.jpg\n                      name: bowl\n                    - image: oven.jpg\n                      name: oven\n                    - image: pan.png\n                      name: frying pan\n              schema:\n                $ref: '#/components/schemas/inline_response_200_9'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Equipment by ID\n      tags:\n      - recipes\n  /recipes/{id}/equipmentWidget.png:\n    get:\n      deprecated: false\n      description: Visualize a recipe's equipment list as an image.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Equipment-by-ID-Image\n      operationId: equipmentByIDImage\n      parameters:\n      - description: The recipe id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 44860\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Equipment by ID Image\n      tags:\n      - recipes\n  /recipes/{id}/priceBreakdownWidget.json:\n    get:\n      deprecated: false\n      description: Get a recipe's price breakdown data.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Price-Breakdown-by-ID\n      operationId: getRecipePriceBreakdownByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    ingredients:\n                    - amount:\n                        metric:\n                          unit: g\n                          value: 222\n                        us:\n                          unit: cups\n                          value: 1.5\n                      image: blueberries.jpg\n                      name: blueberries\n                      price: 174.43\n                    - amount:\n                        metric:\n                          unit: \"\"\n                          value: 1\n                        us:\n                          unit: \"\"\n                          value: 1\n                      image: egg-white.jpg\n                      name: egg white\n                      price: 18.21\n                    - amount:\n                        metric:\n                          unit: Tbsps\n                          value: 2\n                        us:\n                          unit: Tbsps\n                          value: 2\n                      image: flour.png\n                      name: flour\n                      price: 2\n                    - amount:\n                        metric:\n                          unit: g\n                          value: 150\n                        us:\n                          unit: cup\n                          value: 0.75\n                      image: sugar-in-bowl.png\n                      name: granulated sugar\n                      price: 20.67\n                    - amount:\n                        metric:\n                          unit: tsp\n                          value: 1\n                        us:\n                          unit: tsp\n                          value: 1\n                      image: lemon-juice.jpg\n                      name: fresh lemon juice\n                      price: 3.39\n                    - amount:\n                        metric:\n                          unit: pinch\n                          value: 1\n                        us:\n                          unit: pinch\n                          value: 1\n                      image: ground-nutmeg.jpg\n                      name: nutmeg\n                      price: 7.39\n                    - amount:\n                        metric:\n                          unit: \"\"\n                          value: 2\n                        us:\n                          unit: \"\"\n                          value: 2\n                      image: pie-crust.jpg\n                      name: pie dough round\n                      price: 364.29\n                    - amount:\n                        metric:\n                          unit: Tbsps\n                          value: 2\n                        us:\n                          unit: Tbsps\n                          value: 2\n                      image: tapioca-pearls.png\n                      name: quick cooking tapioca\n                      price: 50.89\n                    - amount:\n                        metric:\n                          unit: g\n                          value: 305\n                        us:\n                          unit: cups\n                          value: 2.5\n                      image: rhubarb.jpg\n                      name: trimmed rhubarb\n                      price: 185.18\n                    - amount:\n                        metric:\n                          unit: Tbsps\n                          value: 0.5\n                        us:\n                          unit: Tbsps\n                          value: 0.5\n                      image: butter-sliced.jpg\n                      name: unsalted butter\n                      price: 6\n                    totalCost: 832.45\n                    totalCostPerServing: 104.06\n              schema:\n                $ref: '#/components/schemas/inline_response_200_10'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Price Breakdown by ID\n      tags:\n      - recipes\n  /recipes/{id}/priceBreakdownWidget.png:\n    get:\n      deprecated: false\n      description: Visualize a recipe's price breakdown.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Price-Breakdown-by-ID-Image\n      operationId: priceBreakdownByIDImage\n      parameters:\n      - description: The recipe id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1082038\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Price Breakdown by ID Image\n      tags:\n      - recipes\n  /recipes/{id}/ingredientWidget.json:\n    get:\n      deprecated: false\n      description: Get a recipe's ingredient list.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Ingredients-by-ID\n      operationId: getRecipeIngredientsByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    ingredients:\n                    - amount:\n                        metric:\n                          unit: g\n                          value: 222\n                        us:\n                          unit: cups\n                          value: 1.5\n                      image: blueberries.jpg\n                      name: blueberries\n                    - amount:\n                        metric:\n                          unit: \"\"\n                          value: 1\n                        us:\n                          unit: \"\"\n                          value: 1\n                      image: egg-white.jpg\n                      name: egg white\n                    - amount:\n                        metric:\n                          unit: Tbsps\n                          value: 2\n                        us:\n                          unit: Tbsps\n                          value: 2\n                      image: flour.png\n                      name: flour\n                    - amount:\n                        metric:\n                          unit: g\n                          value: 150\n                        us:\n                          unit: cup\n                          value: 0.75\n                      image: sugar-in-bowl.png\n                      name: granulated sugar\n                    - amount:\n                        metric:\n                          unit: tsp\n                          value: 1\n                        us:\n                          unit: tsp\n                          value: 1\n                      image: lemon-juice.jpg\n                      name: fresh lemon juice\n                    - amount:\n                        metric:\n                          unit: pinch\n                          value: 1\n                        us:\n                          unit: pinch\n                          value: 1\n                      image: ground-nutmeg.jpg\n                      name: nutmeg\n                    - amount:\n                        metric:\n                          unit: \"\"\n                          value: 2\n                        us:\n                          unit: \"\"\n                          value: 2\n                      image: pie-crust.jpg\n                      name: pie dough round\n                    - amount:\n                        metric:\n                          unit: Tbsps\n                          value: 2\n                        us:\n                          unit: Tbsps\n                          value: 2\n                      image: tapioca-pearls.png\n                      name: quick cooking tapioca\n                    - amount:\n                        metric:\n                          unit: g\n                          value: 305\n                        us:\n                          unit: cups\n                          value: 2.5\n                      image: rhubarb.jpg\n                      name: trimmed rhubarb\n                    - amount:\n                        metric:\n                          unit: tsps\n                          value: 0.333\n                        us:\n                          unit: tsps\n                          value: 0.333\n                      image: salt.jpg\n                      name: salt\n                    - amount:\n                        metric:\n                          unit: Tbsps\n                          value: 0.5\n                        us:\n                          unit: Tbsps\n                          value: 0.5\n                      image: butter-sliced.jpg\n                      name: unsalted butter\n              schema:\n                $ref: '#/components/schemas/inline_response_200_11'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Ingredients by ID\n      tags:\n      - recipes\n  /recipes/{id}/ingredientWidget.png:\n    get:\n      deprecated: false\n      description: Visualize a recipe's ingredient list.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Ingredients-by-ID-Image\n      operationId: ingredientsByIDImage\n      parameters:\n      - description: The recipe id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1082038\n          type: number\n        style: simple\n      - description: Whether the the measures should be 'us' or 'metric'.\n        explode: false\n        in: query\n        name: measure\n        required: false\n        schema:\n          enum:\n          - us\n          - metric\n          example: metric\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Ingredients by ID Image\n      tags:\n      - recipes\n      - ingredients\n  /recipes/{id}/nutritionWidget.json:\n    get:\n      deprecated: false\n      description: Get a recipe's nutrition data.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Nutrition-by-ID\n      operationId: getRecipeNutritionWidgetByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    calories: \"316\"\n                    carbs: 49g\n                    fat: 12g\n                    protein: 3g\n                    bad:\n                    - name: Calories\n                      amount: \"316\"\n                      indented: false\n                      percentOfDailyNeeds: 15.84\n                    - name: Fat\n                      amount: 12g\n                      indented: false\n                      percentOfDailyNeeds: 18.51\n                    - name: Saturated Fat\n                      amount: 3g\n                      indented: true\n                      percentOfDailyNeeds: 24.88\n                    - name: Carbohydrates\n                      amount: 49g\n                      indented: false\n                      percentOfDailyNeeds: 16.44\n                    - name: Sugar\n                      amount: 21g\n                      indented: true\n                      percentOfDailyNeeds: 24.42\n                    - name: Cholesterol\n                      amount: 1mg\n                      indented: false\n                      percentOfDailyNeeds: 0.63\n                    - name: Sodium\n                      amount: 279mg\n                      indented: false\n                      percentOfDailyNeeds: 12.13\n                    good:\n                    - amount: 3g\n                      indented: false\n                      percentOfDailyNeeds: 7.57\n                      name: Protein\n                    - amount: 19µg\n                      indented: false\n                      percentOfDailyNeeds: 18.76\n                      name: Vitamin K\n                    - amount: 0.37mg\n                      indented: false\n                      percentOfDailyNeeds: 18.69\n                      name: Manganese\n                    - amount: 0.15mg\n                      indented: false\n                      percentOfDailyNeeds: 10.02\n                      name: Vitamin B1\n                    - amount: 2g\n                      indented: false\n                      percentOfDailyNeeds: 9.97\n                      name: Fiber\n                    - amount: 37µg\n                      indented: false\n                      percentOfDailyNeeds: 9.48\n                      name: Folate\n                    - amount: 1mg\n                      indented: false\n                      percentOfDailyNeeds: 7.62\n                      name: Iron\n                    - amount: 1mg\n                      indented: false\n                      percentOfDailyNeeds: 7.48\n                      name: Vitamin B3\n                    - amount: 0.12mg\n                      indented: false\n                      percentOfDailyNeeds: 7.34\n                      name: Vitamin B2\n                    - amount: 5mg\n                      indented: false\n                      percentOfDailyNeeds: 7.26\n                      name: Vitamin C\n                    - amount: 4µg\n                      indented: false\n                      percentOfDailyNeeds: 6.26\n                      name: Selenium\n                    - amount: 182mg\n                      indented: false\n                      percentOfDailyNeeds: 5.21\n                      name: Potassium\n                    - amount: 43mg\n                      indented: false\n                      percentOfDailyNeeds: 4.38\n                      name: Calcium\n                    - amount: 42mg\n                      indented: false\n                      percentOfDailyNeeds: 4.24\n                      name: Phosphorus\n                    - amount: 13mg\n                      indented: false\n                      percentOfDailyNeeds: 3.43\n                      name: Magnesium\n                    - amount: 0.48mg\n                      indented: false\n                      percentOfDailyNeeds: 3.19\n                      name: Vitamin E\n                    - amount: 0.06mg\n                      indented: false\n                      percentOfDailyNeeds: 3.11\n                      name: Copper\n                    - amount: 0.26mg\n                      indented: false\n                      percentOfDailyNeeds: 2.56\n                      name: Vitamin B5\n                    - amount: 0.05mg\n                      indented: false\n                      percentOfDailyNeeds: 2.32\n                      name: Vitamin B6\n                    - amount: 0.29mg\n                      indented: false\n                      percentOfDailyNeeds: 1.96\n                      name: Zinc\n                    - amount: 76IU\n                      indented: false\n                      percentOfDailyNeeds: 1.53\n                      name: Vitamin A\n              schema:\n                $ref: '#/components/schemas/inline_response_200_12'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Nutrition by ID\n      tags:\n      - recipes\n  /recipes/{id}/nutritionWidget.png:\n    get:\n      deprecated: false\n      description: Visualize a recipe's nutritional information as an image.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Recipe-Nutrition-by-ID-Image\n      operationId: recipeNutritionByIDImage\n      parameters:\n      - description: The recipe id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1082038\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Recipe Nutrition by ID Image\n      tags:\n      - recipes\n  /recipes/{id}/nutritionLabel:\n    get:\n      deprecated: false\n      description: Get a recipe's nutrition label as an HTML widget.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Recipe-Nutrition-Label-Widget\n      operationId: recipeNutritionLabelWidget\n      parameters:\n      - description: The recipe id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 641166\n          type: number\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show optional nutrients.\n        explode: false\n        in: query\n        name: showOptionalNutrients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show zero values.\n        explode: false\n        in: query\n        name: showZeroValues\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show a list of ingredients.\n        explode: false\n        in: query\n        name: showIngredients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Recipe Nutrition Label Widget\n      tags:\n      - recipes\n  /recipes/{id}/nutritionLabel.png:\n    get:\n      deprecated: false\n      description: Get a recipe's nutrition label as an image.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Recipe-Nutrition-Label-Image\n      operationId: recipeNutritionLabelImage\n      parameters:\n      - description: The recipe id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 641166\n          type: number\n        style: simple\n      - description: Whether to show optional nutrients.\n        explode: false\n        in: query\n        name: showOptionalNutrients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show zero values.\n        explode: false\n        in: query\n        name: showZeroValues\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show a list of ingredients.\n        explode: false\n        in: query\n        name: showIngredients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Recipe Nutrition Label Image\n      tags:\n      - recipes\n  /recipes/{id}/analyzedInstructions:\n    get:\n      deprecated: false\n      description: Get an analyzed breakdown of a recipe's instructions. Each step\n        is enriched with the ingredients and equipment required.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Analyzed-Recipe-Instructions\n      operationId: getAnalyzedRecipeInstructions\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Whether to break down the recipe steps even more.\n        explode: false\n        in: query\n        name: stepBreakdown\n        required: false\n        schema:\n          example: true\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    parsedInstructions:\n                    - name: \"\"\n                      steps:\n                      - number: 1\n                        step: Put the garlic in a pan and then add the onion.\n                        ingredients:\n                        - id: 11215\n                          name: garlic\n                          localizedName: garlic\n                          image: garlic.png\n                        - id: 11282\n                          name: onion\n                          localizedName: onion\n                          image: brown-onion.png\n                        equipment:\n                        - id: 404645\n                          name: frying pan\n                          localizedName: frying pan\n                          image: pan.png\n                      - number: 2\n                        step: Add some salt and oregano.\n                        ingredients:\n                        - id: 2027\n                          name: oregano\n                          localizedName: oregano\n                          image: oregano.jpg\n                        - id: 2047\n                          name: salt\n                          localizedName: salt\n                          image: salt.jpg\n                        equipment: []\n                    ingredients:\n                    - id: 2027\n                      name: oregano\n                    - id: 11215\n                      name: garlic\n                    - id: 11282\n                      name: onion\n                    - id: 2047\n                      name: salt\n                    equipment:\n                    - id: 404645\n                      name: frying pan\n              schema:\n                $ref: '#/components/schemas/inline_response_200_13'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Analyzed Recipe Instructions\n      tags:\n      - recipes\n  /recipes/extract:\n    get:\n      deprecated: false\n      description: This endpoint lets you extract recipe data such as title, ingredients,\n        and instructions from any properly formatted Website.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Extract-Recipe-from-Website\n      operationId: extractRecipeFromWebsite\n      parameters:\n      - description: The URL of the recipe page.\n        explode: false\n        in: query\n        name: url\n        required: true\n        schema:\n          example: https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies\n          type: string\n        style: form\n      - description: If true, the extraction will be triggered whether we already\n          know the recipe or not. Use this only if information is missing as this\n          operation is slower.\n        explode: false\n        in: query\n        name: forceExtraction\n        required: false\n        schema:\n          example: true\n          type: boolean\n        style: form\n      - description: If true, the recipe will be analyzed and classified resolving\n          in more data such as cuisines, dish types, and more.\n        explode: false\n        in: query\n        name: analyze\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Include nutrition data in the recipe information. Nutrition data\n          is per serving. If you want the nutrition data for the entire recipe, just\n          multiply by the number of servings.\n        explode: true\n        in: query\n        name: includeNutrition\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - description: Whether taste data should be added to correctly parsed ingredients.\n        explode: true\n        in: query\n        name: includeTaste\n        required: false\n        schema:\n          default: false\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    id: 716429\n                    title: Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                    image: https://spoonacular.com/recipeImages/716429-556x370.jpg\n                    imageType: jpg\n                    servings: 2\n                    readyInMinutes: 45\n                    license: CC BY-SA 3.0\n                    sourceName: Full Belly Sisters\n                    sourceUrl: http://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\n                    spoonacularSourceUrl: https://spoonacular.com/pasta-with-garlic-scallions-cauliflower-breadcrumbs-716429\n                    aggregateLikes: 209\n                    healthScore: 19\n                    spoonacularScore: 83\n                    pricePerServing: 163.15\n                    analyzedInstructions: []\n                    cheap: false\n                    creditsText: Full Belly Sisters\n                    cuisines: []\n                    dairyFree: false\n                    diets: []\n                    gaps: no\n                    glutenFree: false\n                    instructions: \"\"\n                    ketogenic: false\n                    lowFodmap: false\n                    occasions: []\n                    sustainable: false\n                    vegan: false\n                    vegetarian: false\n                    veryHealthy: false\n                    veryPopular: false\n                    whole30: false\n                    weightWatcherSmartPoints: 17\n                    dishTypes:\n                    - lunch\n                    - main course\n                    - main dish\n                    - dinner\n                    extendedIngredients:\n                    - aisle: Milk, Eggs, Other Dairy\n                      amount: 1\n                      consitency: solid\n                      id: 1001\n                      image: butter-sliced.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: butter\n                      original: 1 tbsp butter\n                      originalName: butter\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 2\n                      consitency: solid\n                      id: 10011135\n                      image: cauliflower.jpg\n                      measures:\n                        metric:\n                          amount: 473.176\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 2\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - frozen\n                      - thawed\n                      - cut into bite-sized pieces\n                      name: cauliflower florets\n                      original: about 2 cups frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      originalName: about frozen cauliflower florets, thawed, cut\n                        into bite-sized pieces\n                      unit: cups\n                    - aisle: Cheese\n                      amount: 2\n                      consitency: solid\n                      id: 1041009\n                      image: cheddar-cheese.png\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - grated\n                      - (I used romano)\n                      name: cheese\n                      original: 2 tbsp grated cheese (I used romano)\n                      originalName: grated cheese (I used romano)\n                      unit: tbsp\n                    - aisle: Oil, Vinegar, Salad Dressing\n                      amount: 1\n                      consitency: liquid\n                      id: 1034053\n                      image: olive-oil.jpg\n                      measures:\n                        metric:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                        us:\n                          amount: 1\n                          unitLong: Tbsp\n                          unitShort: Tbsp\n                      meta: []\n                      name: extra virgin olive oil\n                      original: 1-2 tbsp extra virgin olive oil\n                      originalName: extra virgin olive oil\n                      unit: tbsp\n                    - aisle: Produce\n                      amount: 5\n                      consitency: solid\n                      id: 11215\n                      image: garlic.jpg\n                      measures:\n                        metric:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                        us:\n                          amount: 5\n                          unitLong: cloves\n                          unitShort: cloves\n                      meta: []\n                      name: garlic\n                      original: 5-6 cloves garlic\n                      originalName: garlic\n                      unit: cloves\n                    - aisle: Pasta and Rice\n                      amount: 6\n                      consitency: solid\n                      id: 20420\n                      image: fusilli.jpg\n                      measures:\n                        metric:\n                          amount: 170.097\n                          unitLong: grams\n                          unitShort: g\n                        us:\n                          amount: 6\n                          unitLong: ounces\n                          unitShort: oz\n                      meta:\n                      - (I used linguine)\n                      name: pasta\n                      original: 6-8 ounces pasta (I used linguine)\n                      originalName: pasta (I used linguine)\n                      unit: ounces\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1032009\n                      image: red-pepper-flakes.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                        us:\n                          amount: 2\n                          unitLong: pinches\n                          unitShort: pinches\n                      meta:\n                      - red\n                      name: red pepper flakes\n                      original: couple of pinches red pepper flakes, optional\n                      originalName: couple of red pepper flakes, optional\n                      unit: pinches\n                    - aisle: Spices and Seasonings\n                      amount: 2\n                      consitency: solid\n                      id: 1102047\n                      image: salt-and-pepper.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                        us:\n                          amount: 2\n                          unitLong: servings\n                          unitShort: servings\n                      meta:\n                      - to taste\n                      name: salt and pepper\n                      original: salt and pepper, to taste\n                      originalName: salt and pepper, to taste\n                      unit: servings\n                    - aisle: Produce\n                      amount: 3\n                      consitency: solid\n                      id: 11291\n                      image: spring-onions.jpg\n                      measures:\n                        metric:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                        us:\n                          amount: 3\n                          unitLong: \"\"\n                          unitShort: \"\"\n                      meta:\n                      - white\n                      - green\n                      - separated\n                      - chopped\n                      name: scallions\n                      original: 3 scallions, chopped, white and green parts separated\n                      originalName: scallions, chopped, white and green parts separated\n                      unit: \"\"\n                    - aisle: Alcoholic Beverages\n                      amount: 2\n                      consitency: liquid\n                      id: 14106\n                      image: white-wine.jpg\n                      measures:\n                        metric:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                        us:\n                          amount: 2\n                          unitLong: Tbsps\n                          unitShort: Tbsps\n                      meta:\n                      - white\n                      name: white wine\n                      original: 2-3 tbsp white wine\n                      originalName: white wine\n                      unit: tbsp\n                    - aisle: Pasta and Rice\n                      amount: 0.25\n                      consitency: solid\n                      id: 99025\n                      image: breadcrumbs.jpg\n                      measures:\n                        metric:\n                          amount: 59.147\n                          unitLong: milliliters\n                          unitShort: ml\n                        us:\n                          amount: 0.25\n                          unitLong: cups\n                          unitShort: cups\n                      meta:\n                      - whole wheat\n                      - (I used panko)\n                      name: whole wheat bread crumbs\n                      original: 1/4 cup whole wheat bread crumbs (I used panko)\n                      originalName: whole wheat bread crumbs (I used panko)\n                      unit: cup\n                    summary: 'Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\n                      might be a good recipe to expand your main course repertoire.\n                      One portion of this dish contains approximately \u003cb\u003e19g of protein\n                      \u003c/b\u003e,  \u003cb\u003e20g of fat \u003c/b\u003e, and a total of  \u003cb\u003e584 calories \u003c/b\u003e.\n                      For  \u003cb\u003e$1.63 per serving \u003c/b\u003e, this recipe  \u003cb\u003ecovers 23% \u003c/b\u003e\n                      of your daily requirements of vitamins and minerals. This recipe\n                      serves 2. It is brought to you by fullbellysisters.blogspot.com.\n                      209 people were glad they tried this recipe. A mixture of scallions,\n                      salt and pepper, white wine, and a handful of other ingredients\n                      are all it takes to make this recipe so scrumptious. From preparation\n                      to the plate, this recipe takes approximately  \u003cb\u003e45 minutes\n                      \u003c/b\u003e. All things considered, we decided this recipe  \u003cb\u003edeserves\n                      a spoonacular score of 83% \u003c/b\u003e. This score is awesome. If you\n                      like this recipe, take a look at these similar recipes: \u003ca href=\"https://spoonacular.com/recipes/cauliflower-gratin-with-garlic-breadcrumbs-318375\"\u003eCauliflower\n                      Gratin with Garlic Breadcrumbs\u003c/a\u003e, \u003c href=\"https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\"\u003ePasta\n                      With Cauliflower, Sausage, \u0026 Breadcrumbs\u003c/a\u003e, and \u003ca href=\"https://spoonacular.com/recipes/pasta-with-roasted-cauliflower-parsley-and-breadcrumbs-30738\"\u003ePasta\n                      With Roasted Cauliflower, Parsley, And Breadcrumbs\u003c/a\u003e.'\n                    winePairing:\n                      pairedWines:\n                      - chardonnay\n                      - gruener veltliner\n                      - sauvignon blanc\n                      pairingText: Chardonnay, Gruener Veltliner, and Sauvignon Blanc\n                        are great choices for Pasta. Sauvignon Blanc and Gruner Veltliner\n                        both have herby notes that complement salads with enough acid\n                        to match tart vinaigrettes, while a Chardonnay can be a good\n                        pick for creamy salad dressings. The Buddha Kat Winery Chardonnay\n                        with a 4 out of 5 star rating seems like a good match. It\n                        costs about 25 dollars per bottle.\n                      productMatches:\n                      - id: 469199\n                        title: Buddha Kat Winery Chardonnay\n                        description: We barrel ferment our Chardonnay and age it in\n                          a mix of Oak and Stainless. Giving this light bodied wine\n                          modest oak character, a delicate floral aroma, and a warming\n                          finish.\n                        price: $25.0\n                        imageUrl: https://spoonacular.com/productImages/469199-312x231.jpg\n                        averageRating: 0.8\n                        ratingCount: 1\n                        score: 0.55\n                        link: https://www.amazon.com/2015-Buddha-Kat-Winery-Chardonnay/dp/B00OSAVVM4?tag=spoonacular-20\n              schema:\n                $ref: '#/components/schemas/inline_response_200_3'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Extract Recipe from Website\n      tags:\n      - recipes\n  /recipes/{id}/ingredientWidget:\n    get:\n      deprecated: false\n      description: Visualize a recipe's ingredient list.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Ingredients-by-ID-Widget\n      operationId: visualizeRecipeIngredientsByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      - description: Whether the the measures should be 'us' or 'metric'.\n        explode: true\n        in: query\n        name: measure\n        required: false\n        schema:\n          enum:\n          - us\n          - metric\n          example: metric\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Ingredients by ID Widget\n      tags:\n      - recipes\n  /recipes/{id}/tasteWidget:\n    get:\n      deprecated: false\n      description: Get a recipe's taste. The tastes supported are sweet, salty, sour,\n        bitter, savory, and fatty.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Recipe-Taste-by-ID-Widget\n      operationId: visualizeRecipeTasteByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Whether to normalize to the strongest taste.\n        explode: true\n        in: query\n        name: normalize\n        required: false\n        schema:\n          default: true\n          enum:\n          - true\n          - false\n          example: true\n          type: boolean\n        style: form\n      - description: Red, green, blue values for the chart color.\n        explode: true\n        in: query\n        name: rgb\n        required: false\n        schema:\n          example: 75,192,192\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Recipe Taste by ID Widget\n      tags:\n      - recipes\n  /recipes/{id}/equipmentWidget:\n    get:\n      deprecated: false\n      description: Visualize a recipe's equipment list.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Equipment-by-ID-Widget\n      operationId: visualizeRecipeEquipmentByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            text/html:\n              examples: {}\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Equipment by ID Widget\n      tags:\n      - recipes\n  /recipes/{id}/priceBreakdownWidget:\n    get:\n      deprecated: false\n      description: Visualize a recipe's price breakdown.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Price-Breakdown-by-ID-Widget\n      operationId: visualizeRecipePriceBreakdownByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Price Breakdown by ID Widget\n      tags:\n      - recipes\n  /recipes/visualizeTaste:\n    post:\n      deprecated: false\n      description: Visualize a recipe's taste information as HTML including CSS. You\n        can play around with that endpoint!\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Recipe-Taste-Widget\n      operationId: visualizeRecipeTaste\n      parameters:\n      - description: The language of the input. Either 'en' or 'de'.\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          enum:\n          - en\n          - de\n          example: en\n          type: string\n        style: form\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      - description: Accept header.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/json\n          - text/html\n          - media/*\n          example: application/json\n          type: string\n        style: simple\n      - description: Whether to normalize to the strongest taste.\n        explode: true\n        in: query\n        name: normalize\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Red, green, blue values for the chart color.\n        explode: true\n        in: query\n        name: rgb\n        required: false\n        schema:\n          example: 75,192,192\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: ingredientList=3 tomatoes, 5 oranges, 1 tsp salt\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Recipe Taste Widget\n      tags:\n      - recipes\n  /recipes/visualizeNutrition:\n    post:\n      deprecated: false\n      description: Visualize a recipe's nutritional information as HTML including\n        CSS.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Recipe-Nutrition-Widget\n      operationId: visualizeRecipeNutrition\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      - description: Accept header.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/json\n          - text/html\n          - media/*\n          example: application/json\n          type: string\n        style: simple\n      - description: The language of the input. Either 'en' or 'de'.\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          enum:\n          - en\n          - de\n          example: en\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: ingredientList=3 oz flour\u0026servings=2\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Recipe Nutrition Widget\n      tags:\n      - recipes\n  /recipes/visualizePriceEstimator:\n    post:\n      deprecated: false\n      description: Visualize the price breakdown of a recipe.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Price-Breakdown-Widget\n      operationId: visualizePriceBreakdown\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      - description: Accept header.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/json\n          - text/html\n          - media/*\n          example: application/json\n          type: string\n        style: simple\n      - description: The language of the input. Either 'en' or 'de'.\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          enum:\n          - en\n          - de\n          example: en\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: ingredientList=3 oz flour\u0026servings=2\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Price Breakdown Widget\n      tags:\n      - recipes\n  /recipes/visualizeEquipment:\n    post:\n      deprecated: false\n      description: Visualize the equipment used to make a recipe.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Equipment-Widget\n      operationId: visualizeEquipment\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      - description: Accept header.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/json\n          - text/html\n          - media/*\n          example: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: instructions=Preheat oven. Cut cucumber with a knife and put\n                  in a blender.\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Equipment Widget\n      tags:\n      - recipes\n  /recipes/{id}/summary:\n    get:\n      deprecated: false\n      description: Automatically generate a short description that summarizes key\n        information about the recipe.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Summarize-Recipe\n      operationId: summarizeRecipe\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    id: 4632\n                    summary: 'The recipe Soy-and-Ginger-Glazed Salmon with Udon Noodles\n                      can be made  \u003cb\u003ein approximately 1 hour and 35 minutes \u003c/b\u003e.\n                      One portion of this dish contains about  \u003cb\u003e48g of protein \u003c/b\u003e,  \u003cb\u003e17g\n                      of fat \u003c/b\u003e, and a total of  \u003cb\u003e552 calories \u003c/b\u003e. This recipe\n                      serves 4. For  \u003cb\u003e$5.91 per serving \u003c/b\u003e, this recipe  \u003cb\u003ecovers\n                      47% \u003c/b\u003e of your daily requirements of vitamins and minerals.\n                      It works well as a main course. 1 person has tried and liked\n                      this recipe. It is brought to you by Food and Wine. If you have\n                      fresh ginger, udon noodles, salmon fillets, and a few other\n                      ingredients on hand, you can make it. It is a good option if\n                      you''re following a  \u003cb\u003edairy free and pescatarian \u003c/b\u003e diet.\n                      All things considered, we decided this recipe  \u003cb\u003edeserves a\n                      spoonacular score of 92% \u003c/b\u003e. This score is great. If you like\n                      this recipe, take a look at these similar recipes: Salmon With\n                      Soy-ginger Noodles, Ginger-Soy Salmon With Soba Noodles, and\n                      Soy \u0026 ginger salmon with soba noodles.'\n                    title: Soy-and-Ginger-Glazed Salmon with Udon Noodles\n              schema:\n                $ref: '#/components/schemas/inline_response_200_14'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Summarize Recipe\n      tags:\n      - recipes\n  /recipes/visualizeRecipe:\n    post:\n      deprecated: false\n      description: Generate a recipe card for a recipe.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Create-Recipe-Card\n      operationId: createRecipeCard\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            examples:\n              example-1:\n                value: title=My recipe\u0026ingredients=2 cups of green beans\u0026instructions=cook\n                  the beans\u0026readyInMinutes=60\u0026servings=2\u0026mask=ellipseMask\u0026backgroundImage=background1\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    url: https://spoonacular.com/url-to-generated-recipe-card.jpg\n              schema:\n                $ref: '#/components/schemas/inline_response_200_15'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Create Recipe Card\n      tags:\n      - recipes\n  /recipes/analyzeInstructions:\n    post:\n      deprecated: false\n      description: This endpoint allows you to break down instructions into atomic\n        steps. Furthermore, each step will contain the ingredients and equipment required.\n        Additionally, all ingredients and equipment from the recipe's instructions\n        will be extracted independently of the step they're used in.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Analyze-Recipe-Instructions\n      operationId: analyzeRecipeInstructions\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: instructions=Put the garlic in a pan and then add the onion.\n                  Add some salt and oregano.\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    parsedInstructions:\n                    - name: \"\"\n                      steps:\n                      - number: 1\n                        step: Put the garlic in a pan and then add the onion.\n                        ingredients:\n                        - id: 11215\n                          name: garlic\n                          localizedName: garlic\n                          image: garlic.png\n                        - id: 11282\n                          name: onion\n                          localizedName: onion\n                          image: brown-onion.png\n                        equipment:\n                        - id: 404645\n                          name: frying pan\n                          localizedName: frying pan\n                          image: pan.png\n                      - number: 2\n                        step: Add some salt and oregano.\n                        ingredients:\n                        - id: 2027\n                          name: oregano\n                          localizedName: oregano\n                          image: oregano.jpg\n                        - id: 2047\n                          name: salt\n                          localizedName: salt\n                          image: salt.jpg\n                        equipment: []\n                    ingredients:\n                    - id: 2027\n                      name: oregano\n                    - id: 11215\n                      name: garlic\n                    - id: 11282\n                      name: onion\n                    - id: 2047\n                      name: salt\n                    equipment:\n                    - id: 404645\n                      name: frying pan\n              schema:\n                $ref: '#/components/schemas/inline_response_200_16'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Analyze Recipe Instructions\n      tags:\n      - recipes\n  /recipes/cuisine:\n    post:\n      deprecated: false\n      description: Classify the recipe's cuisine.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Classify-Cuisine\n      operationId: classifyCuisine\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: title=Pork roast with green beans\u0026ingredientList=3 oz pork\n                  shoulder\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    cuisine: Mediterranean\n                    cuisines:\n                    - Mediterranean\n                    - European\n                    - Italian\n                    confidence: 0\n              schema:\n                $ref: '#/components/schemas/inline_response_200_17'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Classify Cuisine\n      tags:\n      - recipes\n  /recipes/queries/analyze:\n    get:\n      deprecated: false\n      description: Parse a recipe search query to find out its intention.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Analyze-a-Recipe-Search-Query\n      operationId: analyzeARecipeSearchQuery\n      parameters:\n      - description: The recipe search query.\n        explode: false\n        in: query\n        name: q\n        required: true\n        schema:\n          example: salmon with fusilli and no nuts\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    dishes:\n                    - image: https://spoonacular.com/cdn/ingredients_100x100/salmon.png\n                      name: salmon\n                    ingredients:\n                    - image: fusilli.jpg\n                      include: true\n                      name: fusilli\n                    - image: nuts-mixed.jpg\n                      include: false\n                      name: nuts mixed\n                    cuisines: []\n                    modifiers: []\n              schema:\n                $ref: '#/components/schemas/inline_response_200_18'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Analyze a Recipe Search Query\n      tags:\n      - recipes\n  /recipes/convert:\n    get:\n      deprecated: false\n      description: Convert amounts like \"2 cups of flour to grams\".\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Convert-Amounts\n      operationId: convertAmounts\n      parameters:\n      - description: The ingredient which you want to convert.\n        explode: false\n        in: query\n        name: ingredientName\n        required: true\n        schema:\n          example: flour\n          type: string\n        style: form\n      - description: The amount from which you want to convert, e.g. the 2.5 in \"2.5\n          cups of flour to grams\".\n        explode: false\n        in: query\n        name: sourceAmount\n        required: true\n        schema:\n          example: 2.5\n          type: number\n        style: form\n      - description: The unit from which you want to convert, e.g. the grams in \"2.5\n          cups of flour to grams\". You can also use \"piece\", e.g. \"3.4 oz tomatoes\n          to piece\"\n        explode: false\n        in: query\n        name: sourceUnit\n        required: true\n        schema:\n          example: cups\n          type: string\n        style: form\n      - description: The unit to which you want to convert, e.g. the grams in \"2.5\n          cups of flour to grams\". You can also use \"piece\", e.g. \"3.4 oz tomatoes\n          to piece\"\n        explode: false\n        in: query\n        name: targetUnit\n        required: true\n        schema:\n          example: grams\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    sourceAmount: 2.5\n                    sourceUnit: cups\n                    targetAmount: 312.5\n                    targetUnit: grams\n                    answer: 2.5 cups flour translates to 312.5 grams.\n              schema:\n                $ref: '#/components/schemas/inline_response_200_19'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Convert Amounts\n      tags:\n      - recipes\n  /recipes/parseIngredients:\n    post:\n      deprecated: false\n      description: Extract an ingredient from plain text.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Parse-Ingredients\n      operationId: parseIngredients\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      - description: The language of the input. Either 'en' or 'de'.\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          enum:\n          - en\n          - de\n          example: en\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: ingredientList=1 cup green tea\u0026servings=1\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - id: 10014355\n                    original: 1 cup green tea\n                    originalName: green tea\n                    name: tea\n                    nameClean: green tea\n                    amount: 1\n                    unit: cup\n                    unitShort: cup\n                    unitLong: cup\n                    possibleUnits:\n                    - g\n                    - oz\n                    - fluid ounce\n                    - cup\n                    estimatedCost:\n                      value: 1786.86\n                      unit: US Cents\n                    consistency: solid\n                    aisle: Tea and Coffee\n                    image: green-tea-leaves.jpg\n                    meta:\n                    - green\n                    nutrition:\n                      nutrients:\n                      - name: Calories\n                        amount: 2.36\n                        unit: kcal\n                        percentOfDailyNeeds: 0.12\n                      - name: Fat\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0\n                      - name: Saturated Fat\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0.03\n                      - name: Carbohydrates\n                        amount: 0.71\n                        unit: g\n                        percentOfDailyNeeds: 0.24\n                      - name: Net Carbohydrates\n                        amount: 0.71\n                        unit: g\n                        percentOfDailyNeeds: 0.26\n                      - name: Sugar\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0\n                      - name: Cholesterol\n                        amount: 0\n                        unit: mg\n                        percentOfDailyNeeds: 0\n                      - name: Sodium\n                        amount: 7.08\n                        unit: mg\n                        percentOfDailyNeeds: 0.31\n                      - name: Caffeine\n                        amount: 47.2\n                        unit: mg\n                        percentOfDailyNeeds: 15.73\n                      - name: Protein\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0\n                      - name: Manganese\n                        amount: 0.52\n                        unit: mg\n                        percentOfDailyNeeds: 25.84\n                      - name: Folate\n                        amount: 11.8\n                        unit: µg\n                        percentOfDailyNeeds: 2.95\n                      - name: Potassium\n                        amount: 87.32\n                        unit: mg\n                        percentOfDailyNeeds: 2.49\n                      - name: Vitamin B2\n                        amount: 0.03\n                        unit: mg\n                        percentOfDailyNeeds: 1.94\n                      - name: Magnesium\n                        amount: 7.08\n                        unit: mg\n                        percentOfDailyNeeds: 1.77\n                      - name: Copper\n                        amount: 0.02\n                        unit: mg\n                        percentOfDailyNeeds: 1.18\n                      properties:\n                      - name: Glycemic Index\n                        amount: 0\n                        unit: \"\"\n                      - name: Glycemic Load\n                        amount: 0\n                        unit: \"\"\n                      flavonoids:\n                      - name: Cyanidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Petunidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Delphinidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Malvidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Pelargonidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Peonidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Catechin\n                        amount: 3.56\n                        unit: mg\n                      - name: Epigallocatechin\n                        amount: 19\n                        unit: mg\n                      - name: Epicatechin\n                        amount: 5.03\n                        unit: mg\n                      - name: Epicatechin 3-gallate\n                        amount: 13.83\n                        unit: mg\n                      - name: Epigallocatechin 3-gallate\n                        amount: 22.09\n                        unit: mg\n                      - name: Theaflavin\n                        amount: 3.73\n                        unit: mg\n                      - name: Thearubigins\n                        amount: 191.87\n                        unit: mg\n                      - name: Eriodictyol\n                        amount: 0\n                        unit: \"\"\n                      - name: Hesperetin\n                        amount: 0\n                        unit: \"\"\n                      - name: Naringenin\n                        amount: 0\n                        unit: \"\"\n                      - name: Apigenin\n                        amount: 0\n                        unit: mg\n                      - name: Luteolin\n                        amount: 0\n                        unit: mg\n                      - name: Isorhamnetin\n                        amount: 0\n                        unit: \"\"\n                      - name: Kaempferol\n                        amount: 3.33\n                        unit: mg\n                      - name: Myricetin\n                        amount: 1.06\n                        unit: mg\n                      - name: Quercetin\n                        amount: 5.17\n                        unit: mg\n                      - name: Theaflavin-3,3'-digallate\n                        amount: 4.13\n                        unit: mg\n                      - name: Theaflavin-3'-gallate\n                        amount: 3.56\n                        unit: mg\n                      - name: Theaflavin-3-gallate\n                        amount: 0\n                        unit: \"\"\n                      - name: Gallocatechin\n                        amount: 2.95\n                        unit: mg\n                      caloricBreakdown:\n                        percentProtein: 0\n                        percentFat: 0\n                        percentCarbs: 100\n                      weightPerServing:\n                        amount: 236\n                        unit: g\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_20'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - id: 10014355\n                    original: 1 cup green tea\n                    originalName: green tea\n                    name: tea\n                    nameClean: green tea\n                    amount: 1\n                    unit: cup\n                    unitShort: cup\n                    unitLong: cup\n                    possibleUnits:\n                    - g\n                    - oz\n                    - fluid ounce\n                    - cup\n                    estimatedCost:\n                      value: 1786.86\n                      unit: US Cents\n                    consistency: solid\n                    aisle: Tea and Coffee\n                    image: green-tea-leaves.jpg\n                    meta:\n                    - green\n                    nutrition:\n                      nutrients:\n                      - name: Calories\n                        amount: 2.36\n                        unit: kcal\n                        percentOfDailyNeeds: 0.12\n                      - name: Fat\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0\n                      - name: Saturated Fat\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0.03\n                      - name: Carbohydrates\n                        amount: 0.71\n                        unit: g\n                        percentOfDailyNeeds: 0.24\n                      - name: Net Carbohydrates\n                        amount: 0.71\n                        unit: g\n                        percentOfDailyNeeds: 0.26\n                      - name: Sugar\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0\n                      - name: Cholesterol\n                        amount: 0\n                        unit: mg\n                        percentOfDailyNeeds: 0\n                      - name: Sodium\n                        amount: 7.08\n                        unit: mg\n                        percentOfDailyNeeds: 0.31\n                      - name: Caffeine\n                        amount: 47.2\n                        unit: mg\n                        percentOfDailyNeeds: 15.73\n                      - name: Protein\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0\n                      - name: Manganese\n                        amount: 0.52\n                        unit: mg\n                        percentOfDailyNeeds: 25.84\n                      - name: Folate\n                        amount: 11.8\n                        unit: µg\n                        percentOfDailyNeeds: 2.95\n                      - name: Potassium\n                        amount: 87.32\n                        unit: mg\n                        percentOfDailyNeeds: 2.49\n                      - name: Vitamin B2\n                        amount: 0.03\n                        unit: mg\n                        percentOfDailyNeeds: 1.94\n                      - name: Magnesium\n                        amount: 7.08\n                        unit: mg\n                        percentOfDailyNeeds: 1.77\n                      - name: Copper\n                        amount: 0.02\n                        unit: mg\n                        percentOfDailyNeeds: 1.18\n                      properties:\n                      - name: Glycemic Index\n                        amount: 0\n                        unit: \"\"\n                      - name: Glycemic Load\n                        amount: 0\n                        unit: \"\"\n                      flavonoids:\n                      - name: Cyanidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Petunidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Delphinidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Malvidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Pelargonidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Peonidin\n                        amount: 0\n                        unit: \"\"\n                      - name: Catechin\n                        amount: 3.56\n                        unit: mg\n                      - name: Epigallocatechin\n                        amount: 19\n                        unit: mg\n                      - name: Epicatechin\n                        amount: 5.03\n                        unit: mg\n                      - name: Epicatechin 3-gallate\n                        amount: 13.83\n                        unit: mg\n                      - name: Epigallocatechin 3-gallate\n                        amount: 22.09\n                        unit: mg\n                      - name: Theaflavin\n                        amount: 3.73\n                        unit: mg\n                      - name: Thearubigins\n                        amount: 191.87\n                        unit: mg\n                      - name: Eriodictyol\n                        amount: 0\n                        unit: \"\"\n                      - name: Hesperetin\n                        amount: 0\n                        unit: \"\"\n                      - name: Naringenin\n                        amount: 0\n                        unit: \"\"\n                      - name: Apigenin\n                        amount: 0\n                        unit: mg\n                      - name: Luteolin\n                        amount: 0\n                        unit: mg\n                      - name: Isorhamnetin\n                        amount: 0\n                        unit: \"\"\n                      - name: Kaempferol\n                        amount: 3.33\n                        unit: mg\n                      - name: Myricetin\n                        amount: 1.06\n                        unit: mg\n                      - name: Quercetin\n                        amount: 5.17\n                        unit: mg\n                      - name: Theaflavin-3,3'-digallate\n                        amount: 4.13\n                        unit: mg\n                      - name: Theaflavin-3'-gallate\n                        amount: 3.56\n                        unit: mg\n                      - name: Theaflavin-3-gallate\n                        amount: 0\n                        unit: \"\"\n                      - name: Gallocatechin\n                        amount: 2.95\n                        unit: mg\n                      caloricBreakdown:\n                        percentProtein: 0\n                        percentFat: 0\n                        percentCarbs: 100\n                      weightPerServing:\n                        amount: 236\n                        unit: g\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Parse Ingredients\n      tags:\n      - recipes\n  /recipes/{id}/nutritionWidget:\n    get:\n      deprecated: false\n      description: Visualize a recipe's nutritional information as HTML including\n        CSS.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Recipe-Nutrition-by-ID-Widget\n      operationId: visualizeRecipeNutritionByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      - description: Accept header.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/json\n          - text/html\n          - media/*\n          example: application/json\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Recipe Nutrition by ID Widget\n      tags:\n      - recipes\n  /recipes/visualizeIngredients:\n    post:\n      deprecated: false\n      description: Visualize ingredients of a recipe. You can play around with that\n        endpoint!\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Ingredients-Widget\n      operationId: visualizeIngredients\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      - description: The language of the input. Either 'en' or 'de'.\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          enum:\n          - en\n          - de\n          example: en\n          type: string\n        style: form\n      - description: Accept header.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/json\n          - text/html\n          - media/*\n          example: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: ingredientList=3 oz flour\u0026servings=2\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Ingredients Widget\n      tags:\n      - ingredients\n  /recipes/guessNutrition:\n    get:\n      deprecated: false\n      description: Estimate the macronutrients of a dish based on its title.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Guess-Nutrition-by-Dish-Name\n      operationId: guessNutritionByDishName\n      parameters:\n      - description: The title of the dish.\n        explode: false\n        in: query\n        name: title\n        required: true\n        schema:\n          example: Spaghetti Aglio et Olio\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    calories:\n                      confidenceRange95Percent:\n                        max: 574.07\n                        min: 389.92\n                      standardDeviation: 148.55\n                      unit: calories\n                      value: 428\n                    carbs:\n                      confidenceRange95Percent:\n                        max: 78.19\n                        min: 55.54\n                      standardDeviation: 18.27\n                      unit: g\n                      value: 65\n                    fat:\n                      confidenceRange95Percent:\n                        max: 19.2\n                        min: 12.27\n                      standardDeviation: 5.59\n                      unit: g\n                      value: 16\n                    protein:\n                      confidenceRange95Percent:\n                        max: 29.31\n                        min: 8.12\n                      standardDeviation: 17.09\n                      unit: g\n                      value: 13\n                    recipesUsed: 10\n              schema:\n                $ref: '#/components/schemas/inline_response_200_21'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Guess Nutrition by Dish Name\n      tags:\n      - recipes\n  /food/ingredients/{id}/information:\n    get:\n      deprecated: false\n      description: Use an ingredient id to get all available information about an\n        ingredient, such as its image and supermarket aisle.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Ingredient-Information\n      operationId: getIngredientInformation\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: The amount of this ingredient.\n        explode: false\n        in: query\n        name: amount\n        required: false\n        schema:\n          example: 150\n          type: number\n        style: form\n      - description: The unit for the given amount.\n        explode: false\n        in: query\n        name: unit\n        required: false\n        schema:\n          example: grams\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    id: 9266\n                    original: pineapples\n                    originalName: pineapples\n                    name: pineapples\n                    nameClean: pineapple\n                    amount: 1\n                    unit: \"\"\n                    unitShort: \"\"\n                    unitLong: \"\"\n                    possibleUnits:\n                    - piece\n                    - slice\n                    - fruit\n                    - g\n                    - oz\n                    - cup\n                    - serving\n                    estimatedCost:\n                      value: 299\n                      unit: US Cents\n                    consistency: solid\n                    shoppingListUnits:\n                    - pieces\n                    aisle: Produce\n                    image: pineapple.jpg\n                    meta: []\n                    nutrition:\n                      nutrients:\n                      - name: Calories\n                        amount: 452.5\n                        unit: cal\n                        percentOfDailyNeeds: 22.63\n                      - name: Fat\n                        amount: 1.09\n                        unit: g\n                        percentOfDailyNeeds: 1.67\n                      - name: Saturated Fat\n                        amount: 0.08\n                        unit: g\n                        percentOfDailyNeeds: 0.51\n                      - name: Carbohydrates\n                        amount: 118.74\n                        unit: g\n                        percentOfDailyNeeds: 39.58\n                      - name: Net Carbohydrates\n                        amount: 106.07\n                        unit: g\n                        percentOfDailyNeeds: 38.57\n                      - name: Sugar\n                        amount: 89.14\n                        unit: g\n                        percentOfDailyNeeds: 99.05\n                      - name: Cholesterol\n                        amount: 0\n                        unit: mg\n                        percentOfDailyNeeds: 0\n                      - name: Sodium\n                        amount: 9.05\n                        unit: mg\n                        percentOfDailyNeeds: 0.39\n                      - name: Protein\n                        amount: 4.89\n                        unit: g\n                        percentOfDailyNeeds: 9.77\n                      - name: Vitamin C\n                        amount: 432.59\n                        unit: mg\n                        percentOfDailyNeeds: 524.35\n                      - name: Manganese\n                        amount: 8.39\n                        unit: mg\n                        percentOfDailyNeeds: 419.47\n                      - name: Fiber\n                        amount: 12.67\n                        unit: g\n                        percentOfDailyNeeds: 50.68\n                      - name: Vitamin B6\n                        amount: 1.01\n                        unit: mg\n                        percentOfDailyNeeds: 50.68\n                      - name: Copper\n                        amount: 1\n                        unit: mg\n                        percentOfDailyNeeds: 49.78\n                      - name: Vitamin B1\n                        amount: 0.72\n                        unit: mg\n                        percentOfDailyNeeds: 47.66\n                      - name: Folate\n                        amount: 162.9\n                        unit: µg\n                        percentOfDailyNeeds: 40.73\n                      - name: Potassium\n                        amount: 986.45\n                        unit: mg\n                        percentOfDailyNeeds: 28.18\n                      - name: Magnesium\n                        amount: 108.6\n                        unit: mg\n                        percentOfDailyNeeds: 27.15\n                      - name: Vitamin B3\n                        amount: 4.53\n                        unit: mg\n                        percentOfDailyNeeds: 22.63\n                      - name: Vitamin B5\n                        amount: 1.93\n                        unit: mg\n                        percentOfDailyNeeds: 19.28\n                      - name: Vitamin B2\n                        amount: 0.29\n                        unit: mg\n                        percentOfDailyNeeds: 17.04\n                      - name: Iron\n                        amount: 2.62\n                        unit: mg\n                        percentOfDailyNeeds: 14.58\n                      - name: Calcium\n                        amount: 117.65\n                        unit: mg\n                        percentOfDailyNeeds: 11.77\n                      - name: Vitamin A\n                        amount: 524.9\n                        unit: IU\n                        percentOfDailyNeeds: 10.5\n                      - name: Zinc\n                        amount: 1.09\n                        unit: mg\n                        percentOfDailyNeeds: 7.24\n                      - name: Phosphorus\n                        amount: 72.4\n                        unit: mg\n                        percentOfDailyNeeds: 7.24\n                      - name: Vitamin K\n                        amount: 6.34\n                        unit: µg\n                        percentOfDailyNeeds: 6.03\n                      - name: Selenium\n                        amount: 0.91\n                        unit: µg\n                        percentOfDailyNeeds: 1.29\n                      - name: Vitamin E\n                        amount: 0.18\n                        unit: mg\n                        percentOfDailyNeeds: 1.21\n                      properties:\n                      - name: Glycemic Index\n                        amount: 58.67\n                        unit: \"\"\n                      - name: Glycemic Load\n                        amount: 62.23\n                        unit: \"\"\n                      caloricBreakdown:\n                        percentProtein: 3.88\n                        percentFat: 1.94\n                        percentCarbs: 94.18\n                      weightPerServing:\n                        amount: 905\n                        unit: g\n                    categoryPath:\n                    - tropical fruit\n                    - fruit\n              schema:\n                $ref: '#/components/schemas/inline_response_200_22'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Ingredient Information\n      tags:\n      - ingredients\n  /food/ingredients/{id}/amount:\n    get:\n      deprecated: false\n      description: Compute the amount you need of a certain ingredient for a certain\n        nutritional goal. For example, how much pineapple do you have to eat to get\n        10 grams of protein?\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Compute-Ingredient-Amount\n      operationId: computeIngredientAmount\n      parameters:\n      - description: The id of the ingredient you want the amount for.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 9266\n          type: number\n        style: simple\n      - description: The target nutrient. See a list of supported nutrients.\n        explode: false\n        in: query\n        name: nutrient\n        required: true\n        schema:\n          example: protein\n          type: string\n        style: form\n      - description: The target number of the given nutrient.\n        explode: false\n        in: query\n        name: target\n        required: true\n        schema:\n          example: 2\n          type: number\n        style: form\n      - description: The target unit.\n        explode: false\n        in: query\n        name: unit\n        required: false\n        schema:\n          example: oz\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    amount: 65.32\n                    unit: oz\n              schema:\n                $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_weightPerServing'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Compute Ingredient Amount\n      tags:\n      - ingredients\n  /food/ingredients/glycemicLoad:\n    post:\n      deprecated: false\n      description: Retrieve the glycemic index for a list of ingredients and compute\n        the individual and total glycemic load.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Compute-Glycemic-Load\n      operationId: computeGlycemicLoad\n      parameters:\n      - description: The language of the input. Either 'en' or 'de'.\n        explode: true\n        in: query\n        name: language\n        required: false\n        schema:\n          enum:\n          - en\n          - de\n          example: en\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object'\n        content:\n          application/json:\n            examples:\n              example-1:\n                value:\n                  ingredients:\n                  - 1 kiwi\n                  - 2 cups rice\n                  - 2 glasses of water\n            schema:\n              properties:\n                ingredients:\n                  items:\n                    type: string\n                  type: array\n              required:\n              - ingredients\n              type: object\n              x-examples:\n                example-1:\n                  ingredients:\n                  - 1 kiwi\n                  - 2 cups rice\n                  - 2 glasses of water\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    totalGlycemicLoad: 183.64\n                    ingredients:\n                    - id: 9148\n                      original: 1 kiwi\n                      glycemicIndex: 52.67\n                      glycemicLoad: 5.59\n                    - id: 20444\n                      original: 2 cups rice\n                      glycemicIndex: 61.19\n                      glycemicLoad: 178.05\n                    - id: 14412\n                      original: 2 glasses of water\n                      glycemicIndex: 0\n                      glycemicLoad: 0\n              schema:\n                $ref: '#/components/schemas/inline_response_200_23'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Compute Glycemic Load\n      tags:\n      - recipes\n  /food/ingredients/autocomplete:\n    get:\n      deprecated: false\n      description: Autocomplete the entry of an ingredient.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Autocomplete-Ingredient-Search\n      operationId: autocompleteIngredientSearch\n      parameters:\n      - description: The (natural language) search query.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          example: burger\n          type: string\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      - description: Whether to return more meta information about the ingredients.\n        explode: false\n        in: query\n        name: metaInformation\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: A comma-separated list of intolerances. All recipes returned\n          must not contain ingredients that are not suitable for people with the intolerances\n          entered. See a full list of supported intolerances.\n        explode: false\n        in: query\n        name: intolerances\n        required: false\n        schema:\n          example: egg\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - name: apple\n                    image: apple.jpg\n                    id: 9003\n                    aisle: Produce\n                    possibleUnits:\n                    - small\n                    - large\n                    - piece\n                    - slice\n                    - g\n                    - extra small\n                    - medium\n                    - oz\n                    - cup slice\n                    - cup\n                    - serving\n                  - name: applesauce\n                    image: applesauce.png\n                    id: 9019\n                    aisle: Canned and Jarred\n                    possibleUnits:\n                    - g\n                    - oz\n                    - cup\n                    - serving\n                    - tablespoon\n                  - name: apple juice\n                    image: apple-juice.jpg\n                    id: 9016\n                    aisle: Beverages\n                    possibleUnits:\n                    - g\n                    - drink box\n                    - fl oz\n                    - oz\n                    - teaspoon\n                    - cup\n                    - serving\n                    - tablespoon\n                  - name: apple cider\n                    image: apple-cider.jpg\n                    id: 1009016\n                    aisle: Beverages\n                    possibleUnits:\n                    - g\n                    - drink box\n                    - fl oz\n                    - oz\n                    - teaspoon\n                    - bottle NFS\n                    - cup\n                    - serving\n                    - tablespoon\n                  - name: apple jelly\n                    image: apple-jelly.jpg\n                    id: 10019297\n                    aisle: Nut butters, Jams, and Honey\n                    possibleUnits:\n                    - g\n                    - oz\n                    - packet\n                    - teaspoon\n                    - cup\n                    - serving\n                    - tablespoon\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_24'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - name: apple\n                    image: apple.jpg\n                    id: 9003\n                    aisle: Produce\n                    possibleUnits:\n                    - small\n                    - large\n                    - piece\n                    - slice\n                    - g\n                    - extra small\n                    - medium\n                    - oz\n                    - cup slice\n                    - cup\n                    - serving\n                  - name: applesauce\n                    image: applesauce.png\n                    id: 9019\n                    aisle: Canned and Jarred\n                    possibleUnits:\n                    - g\n                    - oz\n                    - cup\n                    - serving\n                    - tablespoon\n                  - name: apple juice\n                    image: apple-juice.jpg\n                    id: 9016\n                    aisle: Beverages\n                    possibleUnits:\n                    - g\n                    - drink box\n                    - fl oz\n                    - oz\n                    - teaspoon\n                    - cup\n                    - serving\n                    - tablespoon\n                  - name: apple cider\n                    image: apple-cider.jpg\n                    id: 1009016\n                    aisle: Beverages\n                    possibleUnits:\n                    - g\n                    - drink box\n                    - fl oz\n                    - oz\n                    - teaspoon\n                    - bottle NFS\n                    - cup\n                    - serving\n                    - tablespoon\n                  - name: apple jelly\n                    image: apple-jelly.jpg\n                    id: 10019297\n                    aisle: Nut butters, Jams, and Honey\n                    possibleUnits:\n                    - g\n                    - oz\n                    - packet\n                    - teaspoon\n                    - cup\n                    - serving\n                    - tablespoon\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Autocomplete Ingredient Search\n      tags:\n      - ingredients\n  /food/ingredients/search:\n    get:\n      deprecated: false\n      description: Search for simple whole foods (e.g. fruits, vegetables, nuts, grains,\n        meat, fish, dairy etc.).\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Ingredient-Search\n      operationId: ingredientSearch\n      parameters:\n      - description: The (natural language) search query.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          example: burger\n          type: string\n        style: form\n      - description: Whether to add children of found foods.\n        explode: false\n        in: query\n        name: addChildren\n        required: false\n        schema:\n          example: true\n          type: boolean\n        style: form\n      - description: The minimum percentage of protein the food must have (between\n          0 and 100).\n        explode: false\n        in: query\n        name: minProteinPercent\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum percentage of protein the food can have (between\n          0 and 100).\n        explode: false\n        in: query\n        name: maxProteinPercent\n        required: false\n        schema:\n          example: 90\n          type: number\n        style: form\n      - description: The minimum percentage of fat the food must have (between 0 and\n          100).\n        explode: false\n        in: query\n        name: minFatPercent\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum percentage of fat the food can have (between 0 and\n          100).\n        explode: false\n        in: query\n        name: maxFatPercent\n        required: false\n        schema:\n          example: 90\n          type: number\n        style: form\n      - description: The minimum percentage of carbs the food must have (between 0\n          and 100).\n        explode: false\n        in: query\n        name: minCarbsPercent\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum percentage of carbs the food can have (between 0\n          and 100).\n        explode: false\n        in: query\n        name: maxCarbsPercent\n        required: false\n        schema:\n          example: 90\n          type: number\n        style: form\n      - description: Whether to return more meta information about the ingredients.\n        explode: false\n        in: query\n        name: metaInformation\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: A comma-separated list of intolerances. All recipes returned\n          must not contain ingredients that are not suitable for people with the intolerances\n          entered. See a full list of supported intolerances.\n        explode: false\n        in: query\n        name: intolerances\n        required: false\n        schema:\n          example: egg\n          type: string\n        style: form\n      - description: The strategy to sort recipes by. See a full list of supported\n          sorting options.\n        explode: false\n        in: query\n        name: sort\n        required: false\n        schema:\n          example: calories\n          type: string\n        style: form\n      - description: The direction in which to sort. Must be either 'asc' (ascending)\n          or 'desc' (descending).\n        explode: false\n        in: query\n        name: sortDirection\n        required: false\n        schema:\n          example: asc\n          type: string\n        style: form\n      - description: The number of results to skip (between 0 and 900).\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          maximum: 900\n          minimum: 0\n          type: integer\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    results:\n                    - id: 19400\n                      name: banana chips\n                      image: banana-chips.jpg\n                    - id: 93779\n                      name: banana liqueur\n                      image: limoncello.jpg\n                    offset: 0\n                    number: 2\n                    totalResults: 13\n              schema:\n                $ref: '#/components/schemas/inline_response_200_25'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Ingredient Search\n      tags:\n      - ingredients\n  /food/ingredients/substitutes:\n    get:\n      deprecated: false\n      description: Search for substitutes for a given ingredient.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Ingredient-Substitutes\n      operationId: getIngredientSubstitutes\n      parameters:\n      - description: The name of the ingredient you want to replace.\n        explode: false\n        in: query\n        name: ingredientName\n        required: true\n        schema:\n          example: butter\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    ingredient: butter\n                    substitutes:\n                    - 1 cup = 7/8 cup shortening and 1/2 tsp salt\n                    - 1 cup = 7/8 cup vegetable oil + 1/2 tsp salt\n                    - 1/2 cup = 1/4 cup buttermilk + 1/4 cup unsweetened applesauce\n                    - 1 cup = 1 cup margarine\n                    message: Found 4 substitutes for the ingredient.\n              schema:\n                $ref: '#/components/schemas/inline_response_200_26'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Ingredient Substitutes\n      tags:\n      - ingredients\n  /food/ingredients/{id}/substitutes:\n    get:\n      deprecated: false\n      description: Search for substitutes for a given ingredient.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Ingredient-Substitutes-by-ID\n      operationId: getIngredientSubstitutesByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    ingredient: butter\n                    substitutes:\n                    - 1 cup = 7/8 cup shortening and 1/2 tsp salt\n                    - 1 cup = 7/8 cup vegetable oil + 1/2 tsp salt\n                    - 1/2 cup = 1/4 cup buttermilk + 1/4 cup unsweetened applesauce\n                    - 1 cup = 1 cup margarine\n                    message: Found 4 substitutes for the ingredient.\n              schema:\n                $ref: '#/components/schemas/inline_response_200_26'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Ingredient Substitutes by ID\n      tags:\n      - ingredients\n  /food/products/search:\n    get:\n      deprecated: false\n      description: Search packaged food products, such as frozen pizza or Greek yogurt.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Grocery-Products\n      operationId: searchGroceryProducts\n      parameters:\n      - description: The (natural language) search query.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          example: burger\n          type: string\n        style: form\n      - description: The minimum amount of calories the product must have.\n        explode: false\n        in: query\n        name: minCalories\n        required: false\n        schema:\n          example: 50\n          type: number\n        style: form\n      - description: The maximum amount of calories the product can have.\n        explode: false\n        in: query\n        name: maxCalories\n        required: false\n        schema:\n          example: 800\n          type: number\n        style: form\n      - description: The minimum amount of carbohydrates in grams the product must\n          have.\n        explode: false\n        in: query\n        name: minCarbs\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum amount of carbohydrates in grams the product can\n          have.\n        explode: false\n        in: query\n        name: maxCarbs\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of protein in grams the product must have.\n        explode: false\n        in: query\n        name: minProtein\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum amount of protein in grams the product can have.\n        explode: false\n        in: query\n        name: maxProtein\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of fat in grams the product must have.\n        explode: false\n        in: query\n        name: minFat\n        required: false\n        schema:\n          example: 1\n          type: number\n        style: form\n      - description: The maximum amount of fat in grams the product can have.\n        explode: false\n        in: query\n        name: maxFat\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: If set to true, you get more information about the products returned.\n        explode: true\n        in: query\n        name: addProductInformation\n        required: false\n        schema:\n          enum:\n          - false\n          - true\n          example: true\n          type: boolean\n        style: form\n      - description: The number of results to skip (between 0 and 900).\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          maximum: 900\n          minimum: 0\n          type: integer\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    products:\n                    - id: 192386\n                      title: 'Pizza Buddy: Frozen Pizza Dough, 16 Oz'\n                      imageType: jpg\n                    - id: 27693\n                      title: Uno Pizza\n                      imageType: jpg\n                    totalProducts: 1258\n                    type: product\n                    offset: 0\n                    number: 2\n              schema:\n                $ref: '#/components/schemas/inline_response_200_27'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Grocery Products\n      tags:\n      - products\n  /food/products/upc/{upc}:\n    get:\n      deprecated: false\n      description: Get information about a packaged food using its UPC.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Grocery-Products-by-UPC\n      operationId: searchGroceryProductsByUPC\n      parameters:\n      - description: The product's UPC.\n        explode: false\n        in: path\n        name: upc\n        required: true\n        schema:\n          example: 41631000564\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    id: 30004\n                    title: Swan Flour\n                    badges:\n                    - egg_free\n                    - wheat_free\n                    - grain_free\n                    - peanut_free\n                    - primal\n                    - vegetarian\n                    - nut_free\n                    - vegan\n                    - pescetarian\n                    - dairy_free\n                    - paleo\n                    - gluten_free\n                    importantBadges:\n                    - gluten_free\n                    - paleo\n                    - primal\n                    - wheat_free\n                    - grain_free\n                    breadcrumbs:\n                    - flour\n                    generatedText: 'Swan Flour: This product is an awesome fit if\n                      you are searching for a healthy flour. This product has 1 ingredient\n                      (in our experience: the fewer ingredients, the better!) This\n                      product contains no ingredients that some research suggests\n                      you should avoid. One serving of this product provides 30 calories,\n                      0g grams of fat, 0g grams of protein, and 8g grams of carbs.'\n                    imageType: jpg\n                    ingredientCount: 1\n                    ingredientList: Potato Starch\n                    ingredients:\n                    - description: null\n                      name: \"\"\n                      safety_level: null\n                    - description: null\n                      name: starch\n                      safety_level: null\n                    - description: null\n                      name: potato starch\n                      safety_level: null\n                    likes: 0\n                    nutrition:\n                      nutrients:\n                      - name: Fat\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0\n                      - name: Protein\n                        amount: 0\n                        unit: g\n                        percentOfDailyNeeds: 0\n                      - name: Calories\n                        amount: 30\n                        unit: cal\n                        percentOfDailyNeeds: 10\n                      - name: Carbohydrates\n                        amount: 8\n                        unit: g\n                        percentOfDailyNeeds: 9.45\n                      caloricBreakdown:\n                        percentProtein: 22.22\n                        percentFat: 20\n                        percentCarbs: 57.78\n                    price: 0\n                    servings:\n                      number: 34\n                      size: 1\n                      unit: tbsp\n                    spoonacularScore: 99\n              schema:\n                $ref: '#/components/schemas/inline_response_200_28'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Grocery Products by UPC\n      tags:\n      - products\n  /food/customFoods/search:\n    get:\n      deprecated: false\n      description: Search custom foods in a user's account.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Custom-Foods\n      operationId: searchCustomFoods\n      parameters:\n      - description: The (natural language) search query.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          example: burger\n          type: string\n        style: form\n      - description: The username.\n        explode: false\n        in: query\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: form\n      - description: The private hash for the username.\n        explode: false\n        in: query\n        name: hash\n        required: true\n        schema:\n          example: 4b5v4398573406\n          type: string\n        style: form\n      - description: The number of results to skip (between 0 and 900).\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          maximum: 900\n          minimum: 0\n          type: integer\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    customFoods:\n                    - id: 15\n                      title: Max Cafe Curry Bratwurst\n                      servings: 1\n                      imageUrl: https://spoonacular.com/cdn/ingredients_100x100/bratwurst.jpg\n                      price: 6.9\n                    type: customFood\n                    offset: 0\n                    number: 10\n              schema:\n                $ref: '#/components/schemas/inline_response_200_29'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Custom Foods\n      tags:\n      - misc\n  /food/products/{id}:\n    get:\n      deprecated: false\n      description: Use a product id to get full information about a product, such\n        as ingredients, nutrition, etc. The nutritional information is per serving.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Product-Information\n      operationId: getProductInformation\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    id: 22347\n                    title: SNICKERS Minis Size Chocolate Candy Bars Variety Mix 10.5-oz.\n                      Bag\n                    breadcrumbs:\n                    - bars\n                    imageType: jpg\n                    badges:\n                    - msg_free\n                    - no_artificial_colors\n                    - no_artificial_flavors\n                    - no_artificial_ingredients\n                    - gluten_free\n                    importantBadges:\n                    - no_artificial_flavors\n                    - no_artificial_colors\n                    - no_artificial_ingredients\n                    - gluten_free\n                    - msg_free\n                    ingredientCount: 32\n                    generatedText: null\n                    ingredientList: 'Snickers Brand Almond Bar: Milk Chocolate (Sugar,\n                      Cocoa Butter, Chocolate, Skim Milk, Lactose, Milkfat, Soy Lecithin,\n                      Artificial Flavor), Corn Syrup, Almonds, Sugar, Milkfat, Skim\n                      Milk, Less than 2% - Lactose, Salt, Hydrogenated Palm Kernel\n                      Oil and/or Palm Oil, Egg Whites, Chocolate, Artificial Flavor.\n                      Snickers Brand: Milk Chocolate (Sugar, Cocoa Butter, Chocolate,\n                      Skim Milk, Lactose, Milkfat, Soy Lecithin, Artificial Flavor),\n                      Peanuts, Corn Syrup, Sugar, Milkfat, Skim Milk, Partially Hydrogenated\n                      Soybean Oil, Lactose, Salt, Egg Whites, Chocolate, Artificial\n                      Flavor. Snickers Brand Peanut Butter Squared Bars: Milk Chocolate\n                      (Sugar, Cocoa Butter, Chocolate, Skim Milk, Lactose, Milkfat,\n                      Soy Lecithin, Artificial Flavor), Peanut Butter (Peanuts, Partially\n                      Hydrogenated Soybean Oil), Peanuts, Sugar, Corn Syrup, Vegetable\n                      Oil (Hydrogenated Palm Kernel Oil, Palm Oil, Rapeseed Oil and\n                      Cottonseed Oil and/or Partially Hydrogenated Palm Kernel Oil),\n                      Lactose, Corn Syrup Solids, Invert Sugar, Less than 2% - Glycerin,\n                      Dextrose, Skim Milk, Salt, Calcium Carbonate, Partially Hydrogenated\n                      Soybean Oil, Egg Whites, Artificial Flavor, TBHQ to Maintain\n                      Freshness'\n                    ingredients:\n                    - description: null\n                      name: emulsifier\n                      safety_level: null\n                    - description: null\n                      name: added sugar\n                      safety_level: null\n                    - description: null\n                      name: sweetener\n                      safety_level: null\n                    - description: null\n                      name: cooking fat\n                      safety_level: null\n                    - description: null\n                      name: cooking oil\n                      safety_level: null\n                    - description: null\n                      name: lecithin\n                      safety_level: null\n                    - description: null\n                      name: yeast\n                      safety_level: null\n                    - description: null\n                      name: menu item type\n                      safety_level: null\n                    - description: null\n                      name: nuts\n                      safety_level: null\n                    - description: null\n                      name: partially hydrogenated vegetable oil\n                      safety_level: low\n                    - description: Unlike partially hydrogenated oils, fully hydrogenated\n                        oils do not contain trans fat and thus are currently considered\n                        safer.\n                      name: hydrogenated vegetable oil\n                      safety_level: high\n                    - description: null\n                      name: calcium\n                      safety_level: null\n                    - description: null\n                      name: nut butter\n                      safety_level: null\n                    - description: null\n                      name: legumes\n                      safety_level: null\n                    - description: null\n                      name: refined sweetener\n                      safety_level: null\n                    - description: null\n                      name: non food item\n                      safety_level: null\n                    - description: null\n                      name: tree nuts\n                      safety_level: null\n                    - description: null\n                      name: chocolate\n                      safety_level: null\n                    - description: null\n                      name: sugar\n                      safety_level: null\n                    - description: null\n                      name: snack\n                      safety_level: null\n                    - description: null\n                      name: corn syrup\n                      safety_level: null\n                    - description: null\n                      name: drink\n                      safety_level: null\n                    - description: null\n                      name: milk\n                      safety_level: null\n                    - description: null\n                      name: spread\n                      safety_level: null\n                    - description: null\n                      name: vegetable oil\n                      safety_level: null\n                    - description: null\n                      name: yeast nutrient\n                      safety_level: null\n                    - description: null\n                      name: palm kernel oil\n                      safety_level: null\n                    - description: null\n                      name: artificial ingredient\n                      safety_level: null\n                    - description: null\n                      name: stabilizer\n                      safety_level: null\n                    - description: null\n                      name: additive\n                      safety_level: null\n                    - description: null\n                      name: nutrient\n                      safety_level: null\n                    - description: null\n                      name: soybean oil\n                      safety_level: null\n                    - description: null\n                      name: supplement\n                      safety_level: null\n                    - description: null\n                      name: mineral\n                      safety_level: null\n                    - description: null\n                      name: artificial flavor\n                      safety_level: medium\n                    - description: null\n                      name: skim milk\n                      safety_level: null\n                    - description: null\n                      name: peanuts\n                      safety_level: null\n                    - description: null\n                      name: corn syrup solids\n                      safety_level: medium\n                    - description: Unlike partially hydrogenated oils, fully hydrogenated\n                        oils do not contain trans fat and thus are currently considered\n                        safer.\n                      name: hydrogenated palm kernel oil\n                      safety_level: high\n                    - description: null\n                      name: cottonseed oil\n                      safety_level: null\n                    - description: null\n                      name: milkfat\n                      safety_level: high\n                    - description: null\n                      name: lactose\n                      safety_level: null\n                    - description: null\n                      name: corn syrup\n                      safety_level: null\n                    - description: null\n                      name: cocoa butter\n                      safety_level: high\n                    - description: null\n                      name: tbhq to maintain freshness\n                      safety_level: null\n                    - description: null\n                      name: peanut butter\n                      safety_level: null\n                    - description: null\n                      name: egg whites\n                      safety_level: null\n                    - description: null\n                      name: sugar\n                      safety_level: null\n                    - description: null\n                      name: milk chocolate\n                      safety_level: null\n                    - description: null\n                      name: palm oil\n                      safety_level: null\n                    - description: null\n                      name: artificial flavor\n                      safety_level: null\n                    - description: null\n                      name: salt\n                      safety_level: null\n                    - description: null\n                      name: almonds\n                      safety_level: null\n                    - description: null\n                      name: skim milk less than 2% - lactose\n                      safety_level: null\n                    - description: null\n                      name: vegetable oil\n                      safety_level: null\n                    - description: null\n                      name: less than 2% - glycerin\n                      safety_level: null\n                    - description: null\n                      name: dextrose\n                      safety_level: high\n                    - description: Soy lecithin is not a concern for most people allergic\n                        to soy.\n                      name: soy lecithin\n                      safety_level: high\n                    - description: null\n                      name: invert sugar\n                      safety_level: high\n                    - description: null\n                      name: chocolate\n                      safety_level: null\n                    - description: null\n                      name: rapeseed oil\n                      safety_level: null\n                    - description: null\n                      name: partially hydrogenated soybean oil\n                      safety_level: low\n                    - description: null\n                      name: calcium carbonate\n                      safety_level: high\n                    - description: null\n                      name: partially hydrogenated palm kernel oil\n                      safety_level: low\n                    - description: null\n                      name: artificial flavor.snickers brand\n                      safety_level: null\n                    - description: null\n                      name: snickers brand almond bar\n                      safety_level: null\n                    likes: 0\n                    aisle: Sweet Snacks\n                    nutrition:\n                      nutrients:\n                      - name: Fat\n                        amount: 4\n                        unit: g\n                        percentOfDailyNeeds: 6.15\n                      - name: Protein\n                        amount: 10\n                        unit: g\n                        percentOfDailyNeeds: 20\n                      - name: Calories\n                        amount: 200\n                        unit: cal\n                        percentOfDailyNeeds: 10\n                      - name: Carbohydrates\n                        amount: 26\n                        unit: g\n                        percentOfDailyNeeds: 9.45\n                      caloricBreakdown:\n                        percentProtein: 22.22\n                        percentFat: 20\n                        percentCarbs: 57.78\n                    price: 324\n                    servings:\n                      number: 8\n                      size: 4\n                      unit: pieces\n                    spoonacularScore: 0\n              schema:\n                $ref: '#/components/schemas/inline_response_200_30'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Product Information\n      tags:\n      - products\n  /food/products/upc/{upc}/comparable:\n    get:\n      deprecated: false\n      description: Find comparable products to the given one.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Comparable-Products\n      operationId: getComparableProducts\n      parameters:\n      - description: The UPC of the product for which you want to find comparable\n          products.\n        explode: false\n        in: path\n        name: upc\n        required: true\n        schema:\n          example: 33698816271\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    comparableProducts:\n                      calories: []\n                      likes: []\n                      price: []\n                      protein:\n                      - difference: 3\n                        id: 11797\n                        image: https://webknox.com/productImages/11797.jpg\n                        title: Casa Visco Capers\n                      - difference: 1\n                        id: 90962\n                        image: https://webknox.com/productImages/90962.jpg\n                        title: Colavita Capers\n                      - difference: 1\n                        id: 88139\n                        image: https://webknox.com/productImages/88139.jpg\n                        title: Mezzetta Capers\n                      - difference: 1\n                        id: 152832\n                        image: https://webknox.com/productImages/152832.jpg\n                        title: Victoria Imported Capers\n                      spoonacularScore:\n                      - difference: 7\n                        id: 125354\n                        image: https://webknox.com/productImages/125354.jpg\n                        title: DeLallo Capers\n                      - difference: 7\n                        id: 118361\n                        image: https://webknox.com/productImages/118361.jpg\n                        title: Haddon House Non Pareil Capers\n                      - difference: 7\n                        id: 113686\n                        image: https://webknox.com/productImages/113686.jpg\n                        title: Dell Alpe Capers\n                      - difference: 7\n                        id: 112078\n                        image: https://webknox.com/productImages/112078.jpg\n                        title: Paesana Imported Capers\n                      sugar: []\n              schema:\n                $ref: '#/components/schemas/inline_response_200_31'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Comparable Products\n      tags:\n      - products\n  /food/products/suggest:\n    get:\n      deprecated: false\n      description: Generate suggestions for grocery products based on a (partial)\n        query. The matches will be found by looking in the title only.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Autocomplete-Product-Search\n      operationId: autocompleteProductSearch\n      parameters:\n      - description: The (partial) search query.\n        explode: false\n        in: query\n        name: query\n        required: true\n        schema:\n          example: chicke\n          type: string\n        style: form\n      - description: The number of results to return (between 1 and 25).\n        explode: false\n        in: query\n        name: number\n        required: false\n        schema:\n          example: 10\n          maximum: 25\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    results:\n                    - id: 208698\n                      title: buddig premium deli chicken breast - rotisserie flavored\n                    - id: 41291\n                      title: tyson all natural chicken breasts tenderloins\n              schema:\n                $ref: '#/components/schemas/inline_response_200_32'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Autocomplete Product Search\n      tags:\n      - products\n  /food/products/{id}/nutritionWidget:\n    get:\n      deprecated: false\n      description: Visualize a product's nutritional information as HTML including\n        CSS.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Product-Nutrition-by-ID-Widget\n      operationId: visualizeProductNutritionByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      - description: Accept header.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/json\n          - text/html\n          - media/*\n          example: application/json\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            text/html:\n              examples:\n                example-1:\n                  value: string\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Product Nutrition by ID Widget\n      tags:\n      - products\n  /food/products/{id}/nutritionWidget.png:\n    get:\n      deprecated: false\n      description: Visualize a product's nutritional information as an image.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Product-Nutrition-by-ID-Image\n      operationId: productNutritionByIDImage\n      parameters:\n      - description: The id of the product.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 7657\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Product Nutrition by ID Image\n      tags:\n      - products\n  /food/products/{id}/nutritionLabel:\n    get:\n      deprecated: false\n      description: Get a product's nutrition label as an HTML widget.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Product-Nutrition-Label-Widget\n      operationId: productNutritionLabelWidget\n      parameters:\n      - description: The product id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 22347\n          type: number\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show optional nutrients.\n        explode: false\n        in: query\n        name: showOptionalNutrients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show zero values.\n        explode: false\n        in: query\n        name: showZeroValues\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show a list of ingredients.\n        explode: false\n        in: query\n        name: showIngredients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Product Nutrition Label Widget\n      tags:\n      - products\n  /food/products/{id}/nutritionLabel.png:\n    get:\n      deprecated: false\n      description: Get a product's nutrition label as an image.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Product-Nutrition-Label-Image\n      operationId: productNutritionLabelImage\n      parameters:\n      - description: The product id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 22347\n          type: number\n        style: simple\n      - description: Whether to show optional nutrients.\n        explode: false\n        in: query\n        name: showOptionalNutrients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show zero values.\n        explode: false\n        in: query\n        name: showZeroValues\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show a list of ingredients.\n        explode: false\n        in: query\n        name: showIngredients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Product Nutrition Label Image\n      tags:\n      - products\n  /food/products/classify:\n    post:\n      deprecated: false\n      description: This endpoint allows you to match a packaged food to a basic category,\n        e.g. a specific brand of milk to the category milk.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Classify-Grocery-Product\n      operationId: classifyGroceryProduct\n      parameters:\n      - description: The display name of the returned category, supported is en_US\n          (for American English) and en_GB (for British English).\n        explode: false\n        in: query\n        name: locale\n        required: false\n        schema:\n          enum:\n          - en_US\n          - en_GB\n          example: en_US\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_1'\n        content:\n          application/json:\n            examples:\n              example-1:\n                value:\n                  title: Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\n                  upc: \"\"\n                  plu_code: \"\"\n            schema:\n              properties:\n                title:\n                  minLength: 1\n                  type: string\n                upc:\n                  type: string\n                plu_code:\n                  type: string\n              required:\n              - plu_code\n              - title\n              - upc\n              type: object\n              x-examples:\n                example-1:\n                  title: Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\n                  upc: \"\"\n                  plu_code: \"\"\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    cleanTitle: Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\n                    image: https://spoonacular.com/cdn/ingredients_100x100/milk.png\n                    category: 2 percent milk\n                    breadcrumbs:\n                    - 2 percent milk\n                    - milk\n                    - drink\n                    - ingredient\n                    usdaCode: 1174\n              schema:\n                $ref: '#/components/schemas/inline_response_200_33'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Classify Grocery Product\n      tags:\n      - products\n  /food/products/classifyBatch:\n    post:\n      deprecated: false\n      description: Provide a set of product jsons, get back classified products.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Classify-Grocery-Product-Bulk\n      operationId: classifyGroceryProductBulk\n      parameters:\n      - description: The display name of the returned category, supported is en_US\n          (for American English) and en_GB (for British English).\n        explode: false\n        in: query\n        name: locale\n        required: false\n        schema:\n          example: en_US\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            examples:\n              example-1:\n                value:\n                - title: Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\n                  upc: \"\"\n                  plu_code: \"\"\n            schema:\n              items:\n                $ref: '#/components/schemas/InlineObject'\n              minItems: 0\n              type: array\n              uniqueItems: true\n              x-examples:\n                example-1:\n                - title: Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\n                  upc: \"\"\n                  plu_code: \"\"\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - cleanTitle: Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\n                    image: https://spoonacular.com/cdn/ingredients_100x100/milk.png\n                    category: 2 percent milk\n                    breadcrumbs:\n                    - 2 percent milk\n                    - milk\n                    - drink\n                    - ingredient\n                    usdaCode: 1174\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_33'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - cleanTitle: Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\n                    image: https://spoonacular.com/cdn/ingredients_100x100/milk.png\n                    category: 2 percent milk\n                    breadcrumbs:\n                    - 2 percent milk\n                    - milk\n                    - drink\n                    - ingredient\n                    usdaCode: 1174\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Classify Grocery Product Bulk\n      tags:\n      - products\n  /food/ingredients/map:\n    post:\n      deprecated: false\n      description: Map a set of ingredients to products you can buy in the grocery\n        store.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Map-Ingredients-to-Grocery-Products\n      operationId: mapIngredientsToGroceryProducts\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_2'\n        content:\n          application/json:\n            examples:\n              example-1:\n                value:\n                  ingredients:\n                  - eggs\n                  - bacon\n                  servings: 2\n            schema:\n              properties:\n                ingredients:\n                  items:\n                    type: string\n                  type: array\n                servings:\n                  type: number\n              required:\n              - ingredients\n              - servings\n              type: object\n              x-examples:\n                example-1:\n                  ingredients:\n                  - eggs\n                  - bacon\n                  servings: 2\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                  - original: eggs\n                    originalName: eggs\n                    ingredientImage: egg.png\n                    meta:\n                    - egg\n                    products:\n                    - id: 209945\n                      title: Crystal Farms Eggs - Fresh Accents Peeled Hard Cooked\n                        2 ct Packs\n                      upc: \"075925889498\"\n                    - id: 214723\n                      title: Organic Valley Eggs - Organic Medium Brown\n                      upc: \"093966811100\"\n                    - id: 183228\n                      title: Eggland's Best Grade A Eggs Jumbo - 12 CT\n                      upc: \"715141328615\"\n                  - ingredientImage: raw-bacon.png\n                    meta:\n                    - bacon\n                    original: bacon\n                    originalName: bacon\n                    products:\n                    - id: 159164\n                      title: Wright Bacon - Naturally Hickory Smoked\n                      upc: \"079621461552\"\n                    - id: 87924\n                      title: Sugardale Bacon\n                      upc: \"073890006025\"\n                    - id: 213315\n                      title: John Morrell Bacon - Applewood Smoked\n                      upc: \"070100060877\"\n                    - id: 94585\n                      title: Hormel Black Label Bacon Thick Cut\n                      upc: \"037600153041\"\n              schema:\n                items:\n                  $ref: '#/components/schemas/inline_response_200_34'\n                minItems: 0\n                type: array\n                uniqueItems: true\n                x-examples:\n                  example-1:\n                  - original: eggs\n                    originalName: eggs\n                    ingredientImage: egg.png\n                    meta:\n                    - egg\n                    products:\n                    - id: 209945\n                      title: Crystal Farms Eggs - Fresh Accents Peeled Hard Cooked\n                        2 ct Packs\n                      upc: \"075925889498\"\n                    - id: 214723\n                      title: Organic Valley Eggs - Organic Medium Brown\n                      upc: \"093966811100\"\n                    - id: 183228\n                      title: Eggland's Best Grade A Eggs Jumbo - 12 CT\n                      upc: \"715141328615\"\n                  - ingredientImage: raw-bacon.png\n                    meta:\n                    - bacon\n                    original: bacon\n                    originalName: bacon\n                    products:\n                    - id: 159164\n                      title: Wright Bacon - Naturally Hickory Smoked\n                      upc: \"079621461552\"\n                    - id: 87924\n                      title: Sugardale Bacon\n                      upc: \"073890006025\"\n                    - id: 213315\n                      title: John Morrell Bacon - Applewood Smoked\n                      upc: \"070100060877\"\n                    - id: 94585\n                      title: Hormel Black Label Bacon Thick Cut\n                      upc: \"037600153041\"\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Map Ingredients to Grocery Products\n      tags:\n      - ingredients\n  /food/menuItems/suggest:\n    get:\n      deprecated: false\n      description: Generate suggestions for menu items based on a (partial) query.\n        The matches will be found by looking in the title only.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Autocomplete-Menu-Item-Search\n      operationId: autocompleteMenuItemSearch\n      parameters:\n      - description: The (partial) search query.\n        explode: false\n        in: query\n        name: query\n        required: true\n        schema:\n          example: chicke\n          type: string\n        style: form\n      - description: The number of results to return (between 1 and 25).\n        explode: false\n        in: query\n        name: number\n        required: false\n        schema:\n          example: 10\n          maximum: 25\n          minimum: 1\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    results:\n                    - id: 253419\n                      title: pei wei asian diner thai chicken lettuce wraps\n                    - id: 380722\n                      title: camille's chicken caesar salad includes 2 oz. caesar\n                        dressing\n              schema:\n                $ref: '#/components/schemas/inline_response_200_32'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Autocomplete Menu Item Search\n      tags:\n      - menu items\n  /food/menuItems/search:\n    get:\n      deprecated: false\n      description: Search over 115,000 menu items from over 800 fast food and chain\n        restaurants. For example, McDonald's Big Mac or Starbucks Mocha.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Menu-Items\n      operationId: searchMenuItems\n      parameters:\n      - description: The (natural language) search query.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          example: burger\n          type: string\n        style: form\n      - description: The minimum amount of calories the menu item must have.\n        explode: false\n        in: query\n        name: minCalories\n        required: false\n        schema:\n          example: 50\n          type: number\n        style: form\n      - description: The maximum amount of calories the menu item can have.\n        explode: false\n        in: query\n        name: maxCalories\n        required: false\n        schema:\n          example: 800\n          type: number\n        style: form\n      - description: The minimum amount of carbohydrates in grams the menu item must\n          have.\n        explode: false\n        in: query\n        name: minCarbs\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum amount of carbohydrates in grams the menu item can\n          have.\n        explode: false\n        in: query\n        name: maxCarbs\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of protein in grams the menu item must have.\n        explode: false\n        in: query\n        name: minProtein\n        required: false\n        schema:\n          example: 10\n          type: number\n        style: form\n      - description: The maximum amount of protein in grams the menu item can have.\n        explode: false\n        in: query\n        name: maxProtein\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: The minimum amount of fat in grams the menu item must have.\n        explode: false\n        in: query\n        name: minFat\n        required: false\n        schema:\n          example: 1\n          type: number\n        style: form\n      - description: The maximum amount of fat in grams the menu item can have.\n        explode: false\n        in: query\n        name: maxFat\n        required: false\n        schema:\n          example: 100\n          type: number\n        style: form\n      - description: If set to true, you get more information about the menu items\n          returned.\n        explode: true\n        in: query\n        name: addMenuItemInformation\n        required: false\n        schema:\n          enum:\n          - false\n          - true\n          example: true\n          type: boolean\n        style: form\n      - description: The number of results to skip (between 0 and 900).\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          maximum: 900\n          minimum: 0\n          type: integer\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    menuItems:\n                    - id: 419357\n                      title: Burger Sliders\n                      restaurantChain: Hooters\n                      image: https://images.spoonacular.com/file/wximages/419357-312x231.png\n                      imageType: png\n                      servings:\n                        number: 1\n                        size: 2\n                        unit: oz\n                    - id: 424571\n                      title: Bacon King Burger\n                      restaurantChain: Burger King\n                      image: https://images.spoonacular.com/file/wximages/424571-312x231.png\n                      imageType: png\n                      servings:\n                        number: 1\n                        size: 2\n                        unit: oz\n                    totalMenuItems: 6749\n                    type: menuItem\n                    offset: 0\n                    number: 2\n              schema:\n                $ref: '#/components/schemas/inline_response_200_35'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Menu Items\n      tags:\n      - menu items\n  /food/menuItems/{id}:\n    get:\n      deprecated: false\n      description: Use a menu item id to get all available information about a menu\n        item, such as nutrition.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Menu-Item-Information\n      operationId: getMenuItemInformation\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    id: 424571\n                    title: Bacon King Burger\n                    restaurantChain: Burger King\n                    nutrition:\n                      nutrients:\n                      - name: Fat\n                        amount: 69\n                        unit: g\n                        percentOfDailyNeeds: 30\n                      - name: Protein\n                        amount: 57\n                        unit: g\n                        percentOfDailyNeeds: 35\n                      - name: Calories\n                        amount: 1040\n                        unit: cal\n                        percentOfDailyNeeds: 50\n                      - name: Carbohydrates\n                        amount: 48\n                        unit: g\n                        percentOfDailyNeeds: 35\n                      caloricBreakdown:\n                        percentProtein: 35\n                        percentFat: 30\n                        percentCarbs: 35\n                    badges: []\n                    breadcrumbs:\n                    - burger\n                    - main course\n                    - food product category\n                    generatedText: \"\"\n                    imageType: png\n                    likes: 0\n                    servings:\n                      number: 1\n                      size: 2\n                      unit: oz\n                    price: 2.35\n                    spoonacularScore: 12.5\n              schema:\n                $ref: '#/components/schemas/inline_response_200_36'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Menu Item Information\n      tags:\n      - menu items\n  /food/menuItems/{id}/nutritionWidget:\n    get:\n      deprecated: false\n      description: Visualize a menu item's nutritional information as HTML including\n        CSS.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Menu-Item-Nutrition-by-ID-Widget\n      operationId: visualizeMenuItemNutritionByID\n      parameters:\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      - description: Accept header.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/json\n          - text/html\n          - media/*\n          example: application/json\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Menu Item Nutrition by ID Widget\n      tags:\n      - menu items\n  /food/menuItems/{id}/nutritionWidget.png:\n    get:\n      deprecated: false\n      description: Visualize a menu item's nutritional information as HTML including\n        CSS.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Menu-Item-Nutrition-by-ID-Image\n      operationId: menuItemNutritionByIDImage\n      parameters:\n      - description: The menu item id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 424571\n          type: number\n        style: simple\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Menu Item Nutrition by ID Image\n      tags:\n      - menu items\n  /food/menuItems/{id}/nutritionLabel:\n    get:\n      deprecated: false\n      description: Visualize a menu item's nutritional label information as HTML including\n        CSS.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Menu-Item-Nutrition-Label-Widget\n      operationId: menuItemNutritionLabelWidget\n      parameters:\n      - description: The menu item id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 342313\n          type: number\n        style: simple\n      - description: Whether the default CSS should be added to the response.\n        explode: true\n        in: query\n        name: defaultCss\n        required: false\n        schema:\n          default: true\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show optional nutrients.\n        explode: false\n        in: query\n        name: showOptionalNutrients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show zero values.\n        explode: false\n        in: query\n        name: showZeroValues\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show a list of ingredients.\n        explode: false\n        in: query\n        name: showIngredients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Menu Item Nutrition Label Widget\n      tags:\n      - menu items\n  /food/menuItems/{id}/nutritionLabel.png:\n    get:\n      deprecated: false\n      description: Visualize a menu item's nutritional label information as an image.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Menu-Item-Nutrition-Label-Image\n      operationId: menuItemNutritionLabelImage\n      parameters:\n      - description: The menu item id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 342313\n          type: number\n        style: simple\n      - description: Whether to show optional nutrients.\n        explode: false\n        in: query\n        name: showOptionalNutrients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show zero values.\n        explode: false\n        in: query\n        name: showZeroValues\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Whether to show a list of ingredients.\n        explode: false\n        in: query\n        name: showIngredients\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            image/png:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Menu Item Nutrition Label Image\n      tags:\n      - menu items\n  /mealplanner/generate:\n    get:\n      deprecated: false\n      description: Generate a meal plan with three meals per day (breakfast, lunch,\n        and dinner).\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Generate-Meal-Plan\n      operationId: generateMealPlan\n      parameters:\n      - description: Either for one \"day\" or an entire \"week\".\n        explode: false\n        in: query\n        name: timeFrame\n        required: false\n        schema:\n          example: day\n          type: string\n        style: form\n      - description: What is the caloric target for one day? The meal plan generator\n          will try to get as close as possible to that goal.\n        explode: false\n        in: query\n        name: targetCalories\n        required: false\n        schema:\n          example: 2000\n          type: number\n        style: form\n      - description: Enter a diet that the meal plan has to adhere to. See a full\n          list of supported diets.\n        explode: false\n        in: query\n        name: diet\n        required: false\n        schema:\n          example: vegetarian\n          type: string\n        style: form\n      - description: A comma-separated list of allergens or ingredients that must\n          be excluded.\n        explode: false\n        in: query\n        name: exclude\n        required: false\n        schema:\n          example: shellfish, olives\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    meals:\n                    - id: 655219\n                      title: Peanut Butter And Chocolate Oatmeal\n                      imageType: jpg\n                      readyInMinutes: 45\n                      servings: 1\n                      sourceUrl: https://spoonacular.com/recipes/peanut-butter-and-chocolate-oatmeal-655219\n                    - id: 649931\n                      title: Lentil Salad With Vegetables\n                      imageType: jpg\n                      readyInMinutes: 45\n                      servings: 4\n                      sourceUrl: https://spoonacular.com/recipes/lentil-salad-with-vegetables-649931\n                    - id: 632854\n                      title: Asian Noodles\n                      imageType: jpg\n                      readyInMinutes: 45\n                      servings: 4\n                      sourceUrl: https://spoonacular.com/recipes/asian-noodles-632854\n                    nutrients:\n                      calories: 1735.81\n                      carbohydrates: 235.17\n                      fat: 69.22\n                      protein: 55.43\n              schema:\n                $ref: '#/components/schemas/inline_response_200_37'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Generate Meal Plan\n      tags:\n      - meal planning\n  /mealplanner/{username}/week/{start-date}:\n    get:\n      deprecated: false\n      description: Retrieve a meal planned week for the given user. The username must\n        be a spoonacular user and the hash must the the user's hash that can be found\n        in his/her account.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Meal-Plan-Week\n      operationId: getMealPlanWeek\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The start date of the meal planned week in the format yyyy-mm-dd.\n        explode: false\n        in: path\n        name: start-date\n        required: true\n        schema:\n          example: 2020-06-01\n          type: string\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    days:\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 310\n                          unit: cal\n                          percentDailyNeeds: 16\n                        - name: Fat\n                          amount: 25\n                          unit: g\n                          percentDailyNeeds: 38\n                        - name: Carbohydrates\n                          amount: 1\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 20\n                          unit: g\n                          percentDailyNeeds: 40\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 0\n                          unit: cal\n                          percentDailyNeeds: 0\n                        - name: Fat\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Carbohydrates\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 310\n                          unit: cal\n                          percentDailyNeeds: 16\n                        - name: Fat\n                          amount: 25\n                          unit: g\n                          percentDailyNeeds: 38\n                        - name: Carbohydrates\n                          amount: 1\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 20\n                          unit: g\n                          percentDailyNeeds: 40\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 0\n                          unit: cal\n                          percentDailyNeeds: 0\n                        - name: Fat\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Carbohydrates\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                      date: 1589155200\n                      day: Monday\n                      items:\n                      - id: 1976489\n                        slot: 1\n                        position: 1\n                        type: RECIPE\n                        value:\n                          servings: 2\n                          id: 1023004\n                          title: Foolproof Meatloaf\n                          imageType: \"\"\n                      - id: 1976490\n                        slot: 2\n                        position: 2\n                        type: CUSTOM_FOOD\n                        value:\n                          servings: 1\n                          id: 345\n                          title: Denn's Lamb Bratwurst - 1/2 Pkg\n                          image: https://spoonacular.com/cdn/ingredients_100x100/bratwurst.jpg\n                          imageType: jpg\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 200\n                          unit: cal\n                          percentDailyNeeds: 10\n                        - name: Fat\n                          amount: 1\n                          unit: g\n                          percentDailyNeeds: 1\n                        - name: Carbohydrates\n                          amount: 52\n                          unit: g\n                          percentDailyNeeds: 17\n                        - name: Protein\n                          amount: 2\n                          unit: g\n                          percentDailyNeeds: 4\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 200\n                          unit: cal\n                          percentDailyNeeds: 10\n                        - name: Fat\n                          amount: 1\n                          unit: g\n                          percentDailyNeeds: 1\n                        - name: Carbohydrates\n                          amount: 52\n                          unit: g\n                          percentDailyNeeds: 17\n                        - name: Protein\n                          amount: 2\n                          unit: g\n                          percentDailyNeeds: 4\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 0\n                          unit: cal\n                          percentDailyNeeds: 0\n                        - name: Fat\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Carbohydrates\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 0\n                          unit: cal\n                          percentDailyNeeds: 0\n                        - name: Fat\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Carbohydrates\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                      date: 1589241600\n                      day: Tuesday\n                      items:\n                      - id: 1976491\n                        slot: 1\n                        position: 3\n                        type: INGREDIENTS\n                        value:\n                          id: 877\n                          name: \"\"\n                          title: apple and banana\n                          servings: 1\n                          imageType: jpg\n                          ingredients:\n                          - name: apple\n                            unit: \"\"\n                            amount: \"1\"\n                            image: https://spoonacular.com/cdn/ingredients_100x100/apple.jpg\n                          - name: banana\n                            unit: \"\"\n                            amount: \"1\"\n                            image: https://spoonacular.com/cdn/ingredients_100x100/bananas.jpg\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 180\n                          unit: cal\n                          percentDailyNeeds: 9\n                        - name: Fat\n                          amount: 6\n                          unit: g\n                          percentDailyNeeds: 9\n                        - name: Carbohydrates\n                          amount: 22\n                          unit: g\n                          percentDailyNeeds: 7\n                        - name: Protein\n                          amount: 10\n                          unit: g\n                          percentDailyNeeds: 20\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 180\n                          unit: cal\n                          percentDailyNeeds: 9\n                        - name: Fat\n                          amount: 6\n                          unit: g\n                          percentDailyNeeds: 9\n                        - name: Carbohydrates\n                          amount: 22\n                          unit: g\n                          percentDailyNeeds: 7\n                        - name: Protein\n                          amount: 10\n                          unit: g\n                          percentDailyNeeds: 20\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 0\n                          unit: cal\n                          percentDailyNeeds: 0\n                        - name: Fat\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Carbohydrates\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 0\n                          unit: cal\n                          percentDailyNeeds: 0\n                        - name: Fat\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Carbohydrates\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 0\n                          unit: g\n                          percentDailyNeeds: 0\n                      date: 1589328000\n                      day: Wednesday\n                      items:\n                      - id: 1976492\n                        slot: 1\n                        position: 4\n                        type: MENU_ITEM\n                        value:\n                          servings: 1\n                          id: 378557\n                          title: BBQ Steak Pizza, 9\n                          image: https://images.spoonacular.com/file/wximages/378557-312x231.png\n                          imageType: png\n              schema:\n                $ref: '#/components/schemas/inline_response_200_38'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Meal Plan Week\n      tags:\n      - meal planning\n  /mealplanner/{username}/day/{date}:\n    delete:\n      deprecated: false\n      description: Delete all planned items from the user's meal plan for a specific\n        day.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Clear-Meal-Plan-Day\n      operationId: clearMealPlanDay\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The date in the format yyyy-mm-dd.\n        explode: false\n        in: path\n        name: date\n        required: true\n        schema:\n          example: 2020-06-01\n          type: string\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_3'\n        content:\n          ?\n          : schema:\n              properties:\n                username:\n                  description: The username.\n                  example: dsky\n                  type: string\n                date:\n                  description: The date in the format yyyy-mm-dd.\n                  example: 2020-06-01\n                  type: string\n                hash:\n                  description: The private hash for the username.\n                  example: 4b5v4398573406\n                  type: string\n              required:\n              - date\n              - hash\n              - username\n              type: object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Clear Meal Plan Day\n      tags:\n      - meal planning\n  /mealplanner/{username}/items:\n    post:\n      deprecated: false\n      description: Add an item to the user's meal plan.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Add-to-Meal-Plan\n      operationId: addToMealPlan\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_4'\n        content:\n          ?\n          : schema:\n              properties:\n                username:\n                  description: The username.\n                  example: dsky\n                  type: string\n                hash:\n                  description: The private hash for the username.\n                  example: 4b5v4398573406\n                  type: string\n              required:\n              - hash\n              - username\n              type: object\n          application/json:\n            examples:\n              example-1:\n                value:\n                  date: 1589500800\n                  slot: 1\n                  position: 0\n                  type: INGREDIENTS\n                  value:\n                    ingredients:\n                    - name: 1 banana\n            schema:\n              properties:\n                date:\n                  type: number\n                slot:\n                  type: integer\n                position:\n                  type: integer\n                type:\n                  minLength: 1\n                  type: string\n                value:\n                  properties:\n                    ingredients:\n                      items:\n                        properties:\n                          name:\n                            minLength: 1\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      minItems: 0\n                      type: array\n                      uniqueItems: true\n                  required:\n                  - ingredients\n                  type: object\n              required:\n              - date\n              - position\n              - slot\n              - type\n              - value\n              type: object\n              x-examples:\n                example-1:\n                  date: 1589500800\n                  slot: 1\n                  position: 0\n                  type: INGREDIENTS\n                  value:\n                    ingredients:\n                    - name: 1 banana\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples: {}\n              schema:\n                type: object\n                x-examples:\n                  example-1:\n                    date: 1589500800\n                    slot: 1\n                    position: 0\n                    type: INGREDIENTS\n                    value:\n                      ingredients:\n                      - name: 1 banana\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Add to Meal Plan\n      tags:\n      - meal planning\n  /mealplanner/{username}/items/{id}:\n    delete:\n      deprecated: false\n      description: Delete an item from the user's meal plan.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Delete-from-Meal-Plan\n      operationId: deleteFromMealPlan\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The shopping list item id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 15678\n          type: number\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_5'\n        content:\n          ?\n          : schema:\n              properties:\n                username:\n                  description: The username.\n                  example: dsky\n                  type: string\n                id:\n                  description: The shopping list item id.\n                  example: 15678\n                  type: number\n                hash:\n                  description: The private hash for the username.\n                  example: 4b5v4398573406\n                  type: string\n              required:\n              - hash\n              - id\n              - username\n              type: object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Delete from Meal Plan\n      tags:\n      - meal planning\n  /mealplanner/{username}/templates:\n    get:\n      deprecated: false\n      description: Get meal plan templates from user or public ones.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Meal-Plan-Templates\n      operationId: getMealPlanTemplates\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    templates:\n                    - id: 37\n                      name: Busy Work Week\n                    - id: 480\n                      name: Keto Meal Plan\n                    - id: 120\n                      name: Not-So-Strict Paleo Meal Plan\n                    - id: 451\n                      name: Week 1 Meal Plan\n                    - id: 581\n                      name: Whole30 Meal Plan\n              schema:\n                $ref: '#/components/schemas/inline_response_200_39'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Meal Plan Templates\n      tags:\n      - meal planning\n    post:\n      deprecated: false\n      description: Add a meal plan template for a user.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Add-Meal-Plan-Template\n      operationId: addMealPlanTemplate\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The private hash for the username.\n        explode: false\n        in: query\n        name: hash\n        required: true\n        schema:\n          example: 4b5v4398573406\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_6'\n        content:\n          ?\n          : schema:\n              properties:\n                username:\n                  description: The username.\n                  example: dsky\n                  type: string\n                hash:\n                  description: The private hash for the username.\n                  example: 4b5v4398573406\n                  type: string\n              required:\n              - hash\n              - username\n              type: object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    name: My new meal plan template\n                    items:\n                    - day: 1\n                      slot: 1\n                      position: 0\n                      type: RECIPE\n                      value:\n                        id: 296213\n                        servings: 2\n                        title: Spinach Salad with Roasted Vegetables and Spiced Chickpea\n                        imageType: jpg\n                    - day: 2\n                      slot: 1\n                      position: 0\n                      type: PRODUCT\n                      value:\n                        id: 183433\n                        servings: 1\n                        title: Ahold Lasagna with Meat Sauce\n                        imageType: jpg\n                    - day: 3\n                      slot: 1\n                      position: 0\n                      type: MENU_ITEM\n                      value:\n                        id: 378557\n                        servings: 1\n                        title: Pizza 73 BBQ Steak Pizza, 9\n                        imageType: png\n                    - day: 4\n                      slot: 1\n                      position: 0\n                      type: CUSTOM_FOOD\n                      value:\n                        id: 348\n                        servings: 1\n                        title: Aldi Spicy Cashews - 30g\n                        image: https://spoonacular.com/cdn/ingredients_100x100/cashews.jpg\n                    - day: 5\n                      slot: 1\n                      position: 0\n                      type: INGREDIENTS\n                      value:\n                        ingredients:\n                        - name: 1 banana\n                        - name: coffee\n                          unit: cup\n                          amount: \"1\"\n                          image: https://spoonacular.com/cdn/ingredients_100x100/brewed-coffee.jpg\n                    publishAsPublic: false\n              schema:\n                $ref: '#/components/schemas/inline_response_200_40'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Add Meal Plan Template\n      tags:\n      - meal planning\n  /mealplanner/{username}/templates/{id}:\n    delete:\n      deprecated: false\n      description: Delete a meal plan template for a user.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Delete-Meal-Plan-Template\n      operationId: deleteMealPlanTemplate\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: The private hash for the username.\n        explode: false\n        in: query\n        name: hash\n        required: true\n        schema:\n          example: 4b5v4398573406\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_7'\n        content:\n          ?\n          : schema:\n              properties:\n                username:\n                  description: The username.\n                  example: dsky\n                  type: string\n                id:\n                  description: The shopping list item id.\n                  example: 15678\n                  type: number\n                hash:\n                  description: The private hash for the username.\n                  example: 4b5v4398573406\n                  type: string\n              required:\n              - hash\n              - id\n              - username\n              type: object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Delete Meal Plan Template\n      tags:\n      - meal planning\n    get:\n      deprecated: false\n      description: Get information about a meal plan template.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Meal-Plan-Template\n      operationId: getMealPlanTemplate\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    id: 128\n                    name: 1500 Calorie Meal Plan\n                    days:\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 1293\n                          unit: cal\n                          percentDailyNeeds: 65\n                        - name: Fat\n                          amount: 65\n                          unit: g\n                          percentDailyNeeds: 100\n                        - name: Carbohydrates\n                          amount: 102\n                          unit: g\n                          percentDailyNeeds: 34\n                        - name: Protein\n                          amount: 83\n                          unit: g\n                          percentDailyNeeds: 166\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 132\n                          unit: cal\n                          percentDailyNeeds: 7\n                        - name: Fat\n                          amount: 3\n                          unit: g\n                          percentDailyNeeds: 4\n                        - name: Carbohydrates\n                          amount: 25\n                          unit: g\n                          percentDailyNeeds: 8\n                        - name: Protein\n                          amount: 3\n                          unit: g\n                          percentDailyNeeds: 5\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 455\n                          unit: cal\n                          percentDailyNeeds: 23\n                        - name: Fat\n                          amount: 34\n                          unit: g\n                          percentDailyNeeds: 52\n                        - name: Carbohydrates\n                          amount: 1\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 35\n                          unit: g\n                          percentDailyNeeds: 70\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 706\n                          unit: cal\n                          percentDailyNeeds: 35\n                        - name: Fat\n                          amount: 29\n                          unit: g\n                          percentDailyNeeds: 45\n                        - name: Carbohydrates\n                          amount: 76\n                          unit: g\n                          percentDailyNeeds: 25\n                        - name: Protein\n                          amount: 46\n                          unit: g\n                          percentDailyNeeds: 91\n                      day: \"1\"\n                      items:\n                      - id: 2403\n                        slot: 1\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 630657\n                          title: Double Chocolate Protein Cookies\n                          imageType: jpg\n                      - id: 2404\n                        slot: 1\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 785\n                          name: \"\"\n                          title: orange\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: orange\n                            image: https://spoonacular.com/cdn/ingredients_100x100/orange.jpg\n                            amount: 1\n                            unit: \"\"\n                      - id: 2405\n                        slot: 2\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 296213\n                          title: Spinach Salad with Roasted Vegetables and Spiced\n                            Chickpea\n                          imageType: jpg\n                      - id: 2406\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 237677\n                          title: Chicken Parmesan with Spaghetti\n                          imageType: jpg\n                      - id: 2407\n                        slot: 3\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 787\n                          title: broccoli\n                          name: \"\"\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: broccoli\n                            image: https://spoonacular.com/cdn/ingredients_100x100/broccoli.jpg\n                            amount: 1\n                            unit: cup\n                      - id: 2408\n                        slot: 3\n                        position: 0\n                        type: PRODUCT\n                        value:\n                          id: 146191\n                          title: Lindt Dark Chocolate\n                          imageType: jpg\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 1386\n                          unit: cal\n                          percentDailyNeeds: 69\n                        - name: Fat\n                          amount: 66\n                          unit: g\n                          percentDailyNeeds: 102\n                        - name: Carbohydrates\n                          amount: 162\n                          unit: g\n                          percentDailyNeeds: 54\n                        - name: Protein\n                          amount: 48\n                          unit: g\n                          percentDailyNeeds: 96\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 239\n                          unit: cal\n                          percentDailyNeeds: 12\n                        - name: Fat\n                          amount: 11\n                          unit: g\n                          percentDailyNeeds: 17\n                        - name: Carbohydrates\n                          amount: 34\n                          unit: g\n                          percentDailyNeeds: 11\n                        - name: Protein\n                          amount: 5\n                          unit: g\n                          percentDailyNeeds: 9\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 732\n                          unit: cal\n                          percentDailyNeeds: 37\n                        - name: Fat\n                          amount: 33\n                          unit: g\n                          percentDailyNeeds: 51\n                        - name: Carbohydrates\n                          amount: 91\n                          unit: g\n                          percentDailyNeeds: 30\n                        - name: Protein\n                          amount: 22\n                          unit: g\n                          percentDailyNeeds: 44\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 414\n                          unit: cal\n                          percentDailyNeeds: 21\n                        - name: Fat\n                          amount: 22\n                          unit: g\n                          percentDailyNeeds: 33\n                        - name: Carbohydrates\n                          amount: 37\n                          unit: g\n                          percentDailyNeeds: 12\n                        - name: Protein\n                          amount: 21\n                          unit: g\n                          percentDailyNeeds: 43\n                      day: \"2\"\n                      items:\n                      - id: 2409\n                        slot: 1\n                        position: 0\n                        type: PRODUCT\n                        value:\n                          id: 101999\n                          title: Greek Gods Yogurt\n                          imageType: jpg\n                      - id: 2410\n                        slot: 1\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 457\n                          name: \"\"\n                          title: berries\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: berries\n                            image: https://spoonacular.com/cdn/ingredients_100x100/berries-mixed.jpg\n                            amount: 1\n                            unit: cup\n                      - id: 2411\n                        slot: 2\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 516377\n                          title: Southwest Quinoa Salad\n                          imageType: jpg\n                      - id: 2412\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 247683\n                          title: Pesto Caprese Omelette\n                          imageType: jpg\n                      - id: 2413\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 484337\n                          title: One Ingredient Banana Ice Cream\n                          imageType: jpg\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 1589\n                          unit: cal\n                          percentDailyNeeds: 79\n                        - name: Fat\n                          amount: 77\n                          unit: g\n                          percentDailyNeeds: 118\n                        - name: Carbohydrates\n                          amount: 158\n                          unit: g\n                          percentDailyNeeds: 53\n                        - name: Protein\n                          amount: 84\n                          unit: g\n                          percentDailyNeeds: 168\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 472\n                          unit: cal\n                          percentDailyNeeds: 24\n                        - name: Fat\n                          amount: 14\n                          unit: g\n                          percentDailyNeeds: 21\n                        - name: Carbohydrates\n                          amount: 62\n                          unit: g\n                          percentDailyNeeds: 21\n                        - name: Protein\n                          amount: 27\n                          unit: g\n                          percentDailyNeeds: 54\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 568\n                          unit: cal\n                          percentDailyNeeds: 28\n                        - name: Fat\n                          amount: 45\n                          unit: g\n                          percentDailyNeeds: 69\n                        - name: Carbohydrates\n                          amount: 31\n                          unit: g\n                          percentDailyNeeds: 10\n                        - name: Protein\n                          amount: 18\n                          unit: g\n                          percentDailyNeeds: 36\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 549\n                          unit: cal\n                          percentDailyNeeds: 27\n                        - name: Fat\n                          amount: 18\n                          unit: g\n                          percentDailyNeeds: 27\n                        - name: Carbohydrates\n                          amount: 65\n                          unit: g\n                          percentDailyNeeds: 22\n                        - name: Protein\n                          amount: 39\n                          unit: g\n                          percentDailyNeeds: 78\n                      day: \"3\"\n                      items:\n                      - id: 2414\n                        slot: 1\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 157259\n                          title: Cocoa Protein Pancakes\n                          imageType: jpg\n                      - id: 2415\n                        slot: 1\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 878\n                          name: \"\"\n                          title: orange\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: orange\n                            image: https://spoonacular.com/cdn/ingredients_100x100/orange.jpg\n                            amount: 1\n                            unit: \"\"\n                      - id: 2416\n                        slot: 2\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 535856\n                          title: BLT Chopped Salad\n                          imageType: jpg\n                      - id: 2417\n                        slot: 2\n                        position: 0\n                        type: PRODUCT\n                        value:\n                          id: 71144\n                          title: Kind Plus Fruit \u0026 Nut Bar - Almond Walnut Macadamia\n                            with Peanuts Plus Protein\n                          imageType: jpg\n                      - id: 2418\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 519197\n                          title: Zesty Sriracha Shrimp and Quinoa\n                          imageType: png\n                      - id: 2419\n                        slot: 3\n                        position: 0\n                        type: PRODUCT\n                        value:\n                          id: 163427\n                          title: Green Giant Valley Fresh Steamers - Select Sugar\n                            Snap Peas\n                          imageType: jpg\n                      - id: 2420\n                        slot: 3\n                        position: 0\n                        type: PRODUCT\n                        value:\n                          id: 146191\n                          title: Lindt Dark Chocolate\n                          imageType: jpg\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 1343\n                          unit: cal\n                          percentDailyNeeds: 67\n                        - name: Fat\n                          amount: 70\n                          unit: g\n                          percentDailyNeeds: 108\n                        - name: Carbohydrates\n                          amount: 123\n                          unit: g\n                          percentDailyNeeds: 41\n                        - name: Protein\n                          amount: 61\n                          unit: g\n                          percentDailyNeeds: 122\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 239\n                          unit: cal\n                          percentDailyNeeds: 12\n                        - name: Fat\n                          amount: 11\n                          unit: g\n                          percentDailyNeeds: 17\n                        - name: Carbohydrates\n                          amount: 34\n                          unit: g\n                          percentDailyNeeds: 11\n                        - name: Protein\n                          amount: 5\n                          unit: g\n                          percentDailyNeeds: 9\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 406\n                          unit: cal\n                          percentDailyNeeds: 20\n                        - name: Fat\n                          amount: 17\n                          unit: g\n                          percentDailyNeeds: 26\n                        - name: Carbohydrates\n                          amount: 56\n                          unit: g\n                          percentDailyNeeds: 19\n                        - name: Protein\n                          amount: 10\n                          unit: g\n                          percentDailyNeeds: 21\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 698\n                          unit: cal\n                          percentDailyNeeds: 35\n                        - name: Fat\n                          amount: 43\n                          unit: g\n                          percentDailyNeeds: 66\n                        - name: Carbohydrates\n                          amount: 34\n                          unit: g\n                          percentDailyNeeds: 11\n                        - name: Protein\n                          amount: 46\n                          unit: g\n                          percentDailyNeeds: 92\n                      day: \"4\"\n                      items:\n                      - id: 2421\n                        slot: 1\n                        position: 0\n                        type: PRODUCT\n                        value:\n                          id: 101999\n                          title: Greek Gods Yogurt\n                          imageType: jpg\n                      - id: 2422\n                        slot: 1\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 877\n                          name: \"\"\n                          title: berries\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: berries\n                            image: https://spoonacular.com/cdn/ingredients_100x100/berries-mixed.jpg\n                            amount: 1\n                            unit: cup\n                      - id: 2423\n                        slot: 2\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 535563\n                          title: Black Bean Quinoa Salad\n                          imageType: jpg\n                      - id: 2424\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 622598\n                          title: Pittata - Pizza Frittata\n                          imageType: jpg\n                      - id: 2425\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 484337\n                          title: One Ingredient Banana Ice Cream\n                          imageType: jpg\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 1247\n                          unit: cal\n                          percentDailyNeeds: 62\n                        - name: Fat\n                          amount: 61\n                          unit: g\n                          percentDailyNeeds: 95\n                        - name: Carbohydrates\n                          amount: 103\n                          unit: g\n                          percentDailyNeeds: 34\n                        - name: Protein\n                          amount: 78\n                          unit: g\n                          percentDailyNeeds: 156\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 295\n                          unit: cal\n                          percentDailyNeeds: 15\n                        - name: Fat\n                          amount: 12\n                          unit: g\n                          percentDailyNeeds: 19\n                        - name: Carbohydrates\n                          amount: 42\n                          unit: g\n                          percentDailyNeeds: 14\n                        - name: Protein\n                          amount: 11\n                          unit: g\n                          percentDailyNeeds: 23\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 455\n                          unit: cal\n                          percentDailyNeeds: 23\n                        - name: Fat\n                          amount: 34\n                          unit: g\n                          percentDailyNeeds: 52\n                        - name: Carbohydrates\n                          amount: 1\n                          unit: g\n                          percentDailyNeeds: 0\n                        - name: Protein\n                          amount: 35\n                          unit: g\n                          percentDailyNeeds: 70\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 497\n                          unit: cal\n                          percentDailyNeeds: 25\n                        - name: Fat\n                          amount: 15\n                          unit: g\n                          percentDailyNeeds: 24\n                        - name: Carbohydrates\n                          amount: 60\n                          unit: g\n                          percentDailyNeeds: 20\n                        - name: Protein\n                          amount: 32\n                          unit: g\n                          percentDailyNeeds: 63\n                      day: \"5\"\n                      items:\n                      - id: 2426\n                        slot: 1\n                        position: 0\n                        type: PRODUCT\n                        value:\n                          id: 71144\n                          title: Kind Plus Fruit \u0026 Nut Bar - Almond Walnut Macadamia\n                            with Peanuts Plus Protein\n                          imageType: jpg\n                      - id: 2427\n                        slot: 1\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 877\n                          name: \"\"\n                          title: banana\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: banana\n                            image: https://spoonacular.com/cdn/ingredients_100x100/bananas.jpg\n                            amount: 1\n                            unit: \"\"\n                      - id: 2428\n                        slot: 2\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 296213\n                          title: Spinach Salad with Roasted Vegetables and Spiced\n                            Chickpea\n                          imageType: jpg\n                      - id: 2429\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 497301\n                          title: Shrimp Scampi\n                          imageType: jpg\n                      - id: 2430\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 581021\n                          title: 'Black Bean Brownies: Fudgy Fun'\n                          imageType: jpg\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 1683\n                          unit: cal\n                          percentDailyNeeds: 84\n                        - name: Fat\n                          amount: 68\n                          unit: g\n                          percentDailyNeeds: 105\n                        - name: Carbohydrates\n                          amount: 139\n                          unit: g\n                          percentDailyNeeds: 46\n                        - name: Protein\n                          amount: 106\n                          unit: g\n                          percentDailyNeeds: 212\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 490\n                          unit: cal\n                          percentDailyNeeds: 24\n                        - name: Fat\n                          amount: 15\n                          unit: g\n                          percentDailyNeeds: 23\n                        - name: Carbohydrates\n                          amount: 65\n                          unit: g\n                          percentDailyNeeds: 22\n                        - name: Protein\n                          amount: 26\n                          unit: g\n                          percentDailyNeeds: 53\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 378\n                          unit: cal\n                          percentDailyNeeds: 19\n                        - name: Fat\n                          amount: 33\n                          unit: g\n                          percentDailyNeeds: 51\n                        - name: Carbohydrates\n                          amount: 16\n                          unit: g\n                          percentDailyNeeds: 5\n                        - name: Protein\n                          amount: 8\n                          unit: g\n                          percentDailyNeeds: 16\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 816\n                          unit: cal\n                          percentDailyNeeds: 41\n                        - name: Fat\n                          amount: 21\n                          unit: g\n                          percentDailyNeeds: 32\n                        - name: Carbohydrates\n                          amount: 58\n                          unit: g\n                          percentDailyNeeds: 19\n                        - name: Protein\n                          amount: 72\n                          unit: g\n                          percentDailyNeeds: 144\n                      day: \"6\"\n                      items:\n                      - id: 2431\n                        slot: 1\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 157259\n                          title: Cocoa Protein Pancakes\n                          imageType: jpg\n                      - id: 2432\n                        slot: 1\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 877\n                          name: \"\"\n                          title: berries\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: berries\n                            image: https://spoonacular.com/cdn/ingredients_100x100/berries-mixed.jpg\n                            amount: 1\n                            unit: cup\n                      - id: 2433\n                        slot: 2\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 535856\n                          title: BLT Chopped Salad\n                          imageType: jpg\n                      - id: 2434\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 149425\n                          title: Herb and Cheddar Cordon Bleu\n                          imageType: jpg\n                      - id: 2435\n                        slot: 3\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 877\n                          name: \"\"\n                          title: sprouts\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: brussels sprouts\n                            image: https://spoonacular.com/cdn/ingredients_100x100/brussels-sprouts.jpg\n                            amount: 1\n                            unit: cup\n                      - id: 2436\n                        slot: 3\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 877\n                          name: \"\"\n                          title: wine\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: wine\n                            image: https://spoonacular.com/cdn/ingredients_100x100/white-wine.jpg\n                            amount: 5\n                            unit: ounces\n                    - nutritionSummary:\n                        nutrients:\n                        - name: Calories\n                          amount: 1442\n                          unit: cal\n                          percentDailyNeeds: 72\n                        - name: Fat\n                          amount: 69\n                          unit: g\n                          percentDailyNeeds: 106\n                        - name: Carbohydrates\n                          amount: 147\n                          unit: g\n                          percentDailyNeeds: 49\n                        - name: Protein\n                          amount: 73\n                          unit: g\n                          percentDailyNeeds: 147\n                      nutritionSummaryBreakfast:\n                        nutrients:\n                        - name: Calories\n                          amount: 444\n                          unit: cal\n                          percentDailyNeeds: 22\n                        - name: Fat\n                          amount: 12\n                          unit: g\n                          percentDailyNeeds: 19\n                        - name: Carbohydrates\n                          amount: 51\n                          unit: g\n                          percentDailyNeeds: 17\n                        - name: Protein\n                          amount: 38\n                          unit: g\n                          percentDailyNeeds: 76\n                      nutritionSummaryLunch:\n                        nutrients:\n                        - name: Calories\n                          amount: 406\n                          unit: cal\n                          percentDailyNeeds: 20\n                        - name: Fat\n                          amount: 17\n                          unit: g\n                          percentDailyNeeds: 26\n                        - name: Carbohydrates\n                          amount: 56\n                          unit: g\n                          percentDailyNeeds: 19\n                        - name: Protein\n                          amount: 10\n                          unit: g\n                          percentDailyNeeds: 21\n                      nutritionSummaryDinner:\n                        nutrients:\n                        - name: Calories\n                          amount: 593\n                          unit: cal\n                          percentDailyNeeds: 30\n                        - name: Fat\n                          amount: 40\n                          unit: g\n                          percentDailyNeeds: 62\n                        - name: Carbohydrates\n                          amount: 41\n                          unit: g\n                          percentDailyNeeds: 14\n                        - name: Protein\n                          amount: 25\n                          unit: g\n                          percentDailyNeeds: 50\n                      day: \"7\"\n                      items:\n                      - id: 2437\n                        slot: 1\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 619085\n                          title: Protein Packed Healthy French Toast with Chocolate\n                            and Peanut Butter {Super Simple, Whole Wheat}\n                          imageType: jpg\n                      - id: 2438\n                        slot: 1\n                        position: 0\n                        type: INGREDIENTS\n                        value:\n                          id: 877\n                          name: \"\"\n                          title: orange\n                          servings: \"1\"\n                          imageType: jpg\n                          ingredients:\n                          - name: orange\n                            image: https://spoonacular.com/cdn/ingredients_100x100/orange.jpg\n                            amount: 1\n                            unit: \"\"\n                      - id: 2439\n                        slot: 2\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 535563\n                          title: Black Bean Quinoa Salad\n                          imageType: jpg\n                      - id: 2440\n                        slot: 3\n                        position: 0\n                        type: RECIPE\n                        value:\n                          id: 590570\n                          title: Asian Beef Lettuce Wraps\n                          imageType: jpg\n                      - id: 2441\n                        slot: 3\n                        position: 0\n                        type: PRODUCT\n                        value:\n                          id: 146191\n                          title: Lindt Dark Chocolate\n                          imageType: jpg\n              schema:\n                $ref: '#/components/schemas/inline_response_200_41'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Meal Plan Template\n      tags:\n      - meal planning\n  /mealplanner/{username}/shopping-list:\n    get:\n      deprecated: false\n      description: Get the current shopping list for the given user.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Get-Shopping-List\n      operationId: getShoppingList\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    aisles:\n                    - aisle: Baking\n                      items:\n                      - id: 115388\n                        name: baking powder\n                        measures:\n                          original:\n                            amount: 1\n                            unit: package\n                          metric:\n                            amount: 1\n                            unit: pkg\n                          us:\n                            amount: 1\n                            unit: pkg\n                        pantryItem: false\n                        aisle: Baking\n                        cost: 0.71\n                        ingredientId: 18369\n                    cost: 1.43\n                    startDate: 1588291200\n                    endDate: 1588896000\n              schema:\n                $ref: '#/components/schemas/inline_response_200_42'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Get Shopping List\n      tags:\n      - meal planning\n  /mealplanner/{username}/shopping-list/{start-date}/{end-date}:\n    post:\n      deprecated: false\n      description: Generate the shopping list for a user from the meal planner in\n        a given time frame.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Generate-Shopping-List\n      operationId: generateShoppingList\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The start date in the format yyyy-mm-dd.\n        explode: false\n        in: path\n        name: start-date\n        required: true\n        schema:\n          example: 2020-06-01\n          type: string\n        style: simple\n      - description: The end date in the format yyyy-mm-dd.\n        explode: false\n        in: path\n        name: end-date\n        required: true\n        schema:\n          example: 2020-06-07\n          type: string\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_8'\n        content:\n          ?\n          : schema:\n              properties:\n                username:\n                  description: The username.\n                  example: dsky\n                  type: string\n                start-date:\n                  description: The start date in the format yyyy-mm-dd.\n                  example: 2020-06-01\n                  type: string\n                end-date:\n                  description: The end date in the format yyyy-mm-dd.\n                  example: 2020-06-07\n                  type: string\n                hash:\n                  description: The private hash for the username.\n                  example: 4b5v4398573406\n                  type: string\n              required:\n              - end-date\n              - hash\n              - start-date\n              - username\n              type: object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    aisles:\n                    - aisle: Baking\n                      items:\n                      - id: 115388\n                        name: baking powder\n                        measures:\n                          original:\n                            amount: 1\n                            unit: package\n                          metric:\n                            amount: 1\n                            unit: pkg\n                          us:\n                            amount: 1\n                            unit: pkg\n                        pantryItem: false\n                        aisle: Baking\n                        cost: 0.71\n                        ingredientId: 18369\n                    cost: 0.71\n                    startDate: 1588291200\n                    endDate: 1588896000\n              schema:\n                $ref: '#/components/schemas/inline_response_200_42'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Generate Shopping List\n      tags:\n      - meal planning\n  /users/connect:\n    post:\n      deprecated: false\n      description: In order to call user-specific endpoints, you need to connect your\n        app's users to spoonacular users.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Connect-User\n      operationId: connectUser\n      parameters: []\n      requestBody:\n        content:\n          ?\n          : schema:\n              type: object\n          application/json:\n            examples:\n              example-1:\n                value:\n                  username: your user's name\n                  firstName: your user's first name\n                  lastName: your user's last name\n                  email: your user's email\n            schema:\n              properties:\n                username:\n                  minLength: 1\n                  type: string\n                firstName:\n                  minLength: 1\n                  type: string\n                lastName:\n                  minLength: 1\n                  type: string\n                email:\n                  minLength: 1\n                  type: string\n              required:\n              - email\n              - firstName\n              - lastName\n              - username\n              type: object\n              x-examples:\n                example-1:\n                  username: your user's name\n                  firstName: your user's first name\n                  lastName: your user's last name\n                  email: your user's email\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    username: api_123_user\n                    hash: q572587bq2405724q05\n              schema:\n                $ref: '#/components/schemas/inline_response_200_43'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Connect User\n      tags:\n      - meal planning\n  /mealplanner/{username}/shopping-list/items:\n    post:\n      deprecated: false\n      description: Add an item to the current shopping list of a user.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Add-to-Shopping-List\n      operationId: addToShoppingList\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_9'\n        content:\n          ?\n          : schema:\n              properties:\n                username:\n                  description: The username.\n                  example: dsky\n                  type: string\n                hash:\n                  description: The private hash for the username.\n                  example: 4b5v4398573406\n                  type: string\n              required:\n              - hash\n              - username\n              type: object\n          application/json:\n            examples:\n              example-1:\n                value:\n                  item: 1 package baking powder\n                  aisle: Baking\n                  parse: true\n            schema:\n              properties:\n                item:\n                  minLength: 1\n                  type: string\n                aisle:\n                  minLength: 1\n                  type: string\n                parse:\n                  type: boolean\n              required:\n              - aisle\n              - item\n              - parse\n              type: object\n              x-examples:\n                example-1:\n                  item: 1 package baking powder\n                  aisle: Baking\n                  parse: true\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    aisles:\n                    - aisle: Baking\n                      items:\n                      - id: 115388\n                        name: baking powder\n                        measures:\n                          original:\n                            amount: 1\n                            unit: package\n                          metric:\n                            amount: 1\n                            unit: pkg\n                          us:\n                            amount: 1\n                            unit: pkg\n                        pantryItem: false\n                        aisle: Baking\n                        cost: 0.71\n                        ingredientId: 18369\n                    cost: 0.71\n                    startDate: 1588291200\n                    endDate: 1588896000\n              schema:\n                $ref: '#/components/schemas/inline_response_200_42'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Add to Shopping List\n      tags:\n      - meal planning\n  /mealplanner/{username}/shopping-list/items/{id}:\n    delete:\n      deprecated: false\n      description: Delete an item from the current shopping list of the user.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Delete-from-Shopping-List\n      operationId: deleteFromShoppingList\n      parameters:\n      - description: The username.\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          example: dsky\n          type: string\n        style: simple\n      - description: The item's id.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: simple\n      - description: The private hash for the username.\n        explode: true\n        in: query\n        name: hash\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/inline_object_10'\n        content:\n          ?\n          : schema:\n              properties:\n                username:\n                  description: The username.\n                  example: dsky\n                  type: string\n                id:\n                  description: The shopping list item id.\n                  example: 15678\n                  type: number\n                hash:\n                  description: The private hash for the username.\n                  example: 4b5v4398573406\n                  type: string\n              required:\n              - hash\n              - id\n              - username\n              type: object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Delete from Shopping List\n      tags:\n      - meal planning\n  /food/wine/dishes:\n    get:\n      deprecated: false\n      description: Find a dish that goes well with a given wine.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Dish-Pairing-for-Wine\n      operationId: getDishPairingForWine\n      parameters:\n      - description: The type of wine that should be paired, e.g. \"merlot\", \"riesling\",\n          or \"malbec\".\n        explode: false\n        in: query\n        name: wine\n        required: true\n        schema:\n          example: malbec\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    pairings:\n                    - stew\n                    - steak\n                    - chili\n                    - burger\n                    text: Malbec is a dry red wine which is bold and full bodied.\n                      It goes especially well with round steak, tri tip steak, steak,\n                      boneless pork chops, and pizza burger.\n              schema:\n                $ref: '#/components/schemas/inline_response_200_44'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Dish Pairing for Wine\n      tags:\n      - wine\n  /food/wine/pairing:\n    get:\n      deprecated: false\n      description: Find a wine that goes well with a food. Food can be a dish name\n        (\"steak\"), an ingredient name (\"salmon\"), or a cuisine (\"italian\").\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Wine-Pairing\n      operationId: getWinePairing\n      parameters:\n      - description: The food to get a pairing for. This can be a dish (\"steak\"),\n          an ingredient (\"salmon\"), or a cuisine (\"italian\").\n        explode: false\n        in: query\n        name: food\n        required: true\n        schema:\n          example: steak\n          type: string\n        style: form\n      - description: The maximum price for the specific wine recommendation in USD.\n        explode: false\n        in: query\n        name: maxPrice\n        required: false\n        schema:\n          example: 50\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    pairedWines:\n                    - merlot\n                    - cabernet sauvignon\n                    - pinot noir\n                    pairingText: Merlot, Cabernet Sauvignon, and Pinot Noir are my\n                      top picks for Steak. After all, beef and red wine are a classic\n                      combination. Generally, leaner steaks go well with light or\n                      medium-bodied reds, such as pinot noir or merlot, while fattier\n                      steaks can handle a bold red, such as cabernet sauvingnon. The\n                      Sterling Vineyards Merlot with a 5 out of 5 star rating seems\n                      like a good match. It costs about 29 dollars per bottle.\n                    productMatches:\n                    - id: 428278\n                      title: Sterling Vineyards Merlot\n                      averageRating: 1\n                      description: null\n                      imageUrl: https://spoonacular.com/productImages/428278-312x231.jpg\n                      link: https://www.amazon.com/2014-Sterling-Vineyards-Valley-Merlot/dp/B071FP8NPG?tag=spoonacular-20\n                      price: $28.99\n                      ratingCount: 1\n                      score: 0.75\n              schema:\n                $ref: '#/components/schemas/inline_response_200_45'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Wine Pairing\n      tags:\n      - wine\n  /food/wine/description:\n    get:\n      deprecated: false\n      description: Get a simple description of a certain wine, e.g. \"malbec\", \"riesling\",\n        or \"merlot\".\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Wine-Description\n      operationId: getWineDescription\n      parameters:\n      - description: The name of the wine that should be paired, e.g. \"merlot\", \"riesling\",\n          or \"malbec\".\n        explode: false\n        in: query\n        name: wine\n        required: true\n        schema:\n          example: merlot\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    wineDescription: Merlot is a dry red wine which is smooth and\n                      medium bodied.\n              schema:\n                $ref: '#/components/schemas/inline_response_200_46'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Wine Description\n      tags:\n      - wine\n  /food/wine/recommendation:\n    get:\n      deprecated: false\n      description: Get a specific wine recommendation (concrete product) for a given\n        wine type, e.g. \"merlot\".\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Wine-Recommendation\n      operationId: getWineRecommendation\n      parameters:\n      - description: The type of wine to get a specific product recommendation for.\n        explode: false\n        in: query\n        name: wine\n        required: true\n        schema:\n          example: merlot\n          type: string\n        style: form\n      - description: The maximum price for the specific wine recommendation in USD.\n        explode: false\n        in: query\n        name: maxPrice\n        required: false\n        schema:\n          example: 50\n          type: number\n        style: form\n      - description: The minimum rating of the recommended wine between 0 and 1. For\n          example, 0.8 equals 4 out of 5 stars.\n        explode: false\n        in: query\n        name: minRating\n        required: false\n        schema:\n          example: 0.7\n          type: number\n        style: form\n      - description: The number of wine recommendations expected (between 1 and 100).\n        explode: false\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 3\n          maximum: 100\n          minimum: 1\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    recommendedWines:\n                    - id: 447938\n                      title: Rombauer Merlot\n                      averageRating: 0.96\n                      description: Enticing and lively red color; beautifully aromatic\n                        with black cherry and ripe plum. On the palate a purity of\n                        blackcurrant, cedar and mint flavors blend together seamlessly.\n                        Soft and supple, this wine has a medium-bodied mouth-feel\n                        with plush tannins that integrate with the generous finish.Our\n                        favorite pairings for this wine include chicken parmesan,\n                        cedar-planked salmon over wild rice, and mushroom pizza.\n                      imageUrl: https://spoonacular.com/productImages/447938-312x231.jpg\n                      link: https://click.linksynergy.com/deeplink?id=*QCiIS6t4gA\u0026mid=2025\u0026murl=https%3A%2F%2Fwww.wine.com%2Fproduct%2Frombauer-merlot-2008%2F116883\n                      price: $25.59\n                      ratingCount: 5\n                      score: 0.8975\n                    - id: 430475\n                      title: NV The Big Kahuna Merlot\n                      averageRating: 0.9\n                      description: A ripe and rounded Merlot with notes of plum, blackberry,\n                        and hint of spice.\n                      imageUrl: https://spoonacular.com/productImages/430475-312x231.jpg\n                      link: https://www.amazon.com/Big-Kahuna-Merlot-Red-Wine/dp/B01F5XPTUW?tag=spoonacular-20\n                      price: $6.99\n                      ratingCount: 4\n                      score: 0.823076923076923\n                    totalFound: 21\n              schema:\n                $ref: '#/components/schemas/inline_response_200_47'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Wine Recommendation\n      tags:\n      - wine\n  /food/images/classify:\n    get:\n      deprecated: false\n      description: Classify a food image.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Image-Classification-by-URL\n      operationId: imageClassificationByURL\n      parameters:\n      - description: The URL of the image to be classified.\n        explode: false\n        in: query\n        name: imageUrl\n        required: true\n        schema:\n          example: https://spoonacular.com/recipeImages/635350-240x150.jpg\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    category: burger\n                    probability: 0.91354\n              schema:\n                $ref: '#/components/schemas/inline_response_200_48'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Image Classification by URL\n      tags:\n      - misc\n  /food/images/analyze:\n    get:\n      deprecated: false\n      description: Analyze a food image. The API tries to classify the image, guess\n        the nutrition, and find a matching recipes.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Image-Analysis-by-URL\n      operationId: imageAnalysisByURL\n      parameters:\n      - description: The URL of the image to be analyzed.\n        explode: false\n        in: query\n        name: imageUrl\n        required: true\n        schema:\n          example: https://spoonacular.com/recipeImages/635350-240x150.jpg\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    nutrition:\n                      recipesUsed: 25\n                      calories:\n                        value: 508\n                        unit: calories\n                        confidenceRange95Percent:\n                          min: 428.97\n                          max: 571.98\n                        standardDeviation: 182.4\n                      fat:\n                        value: 21\n                        unit: g\n                        confidenceRange95Percent:\n                          min: 21.29\n                          max: 32.95\n                        standardDeviation: 14.88\n                      protein:\n                        value: 29\n                        unit: g\n                        confidenceRange95Percent:\n                          min: 22.58\n                          max: 33.7\n                        standardDeviation: 14.19\n                      carbs:\n                        value: 40\n                        unit: g\n                        confidenceRange95Percent:\n                          min: 29.74\n                          max: 44.96\n                        standardDeviation: 19.42\n                    category:\n                      name: burger\n                      probability: 0.9998999999999999\n                    recipes:\n                    - id: 477749\n                      title: 'Burger Club: Award-Winning Logan County Burger Patty\n                        Melt'\n                      imageType: jpg\n                      url: http://www.barbarabakes.com/2010/05/burger-club-award-winning-logan-county/\n                    - id: 493632\n                      title: 'New York Burger Week: Pretzel Burger with Beer Cheese'\n                      imageType: jpg\n                      url: http://www.foodrepublic.com/2013/09/23/new-york-burger-week-pretzel-burger-beer-cheese\n                    - id: 23359\n                      title: Beef Burger Recipe (elvis Burger With Salad \u0026 Gherkin)\n                      imageType: jpg\n                      url: http://www.jamieoliver.com/recipes/beef-recipes/elvis-burger-with-pickled-gherkin\n                    - id: 149115\n                      title: Surf N' Turf Burger (Grilled Burger with Lobster and\n                        Bacon)\n                      imageType: jpg\n                      url: http://www.seriouseats.com/recipes/2013/06/lobster-bacon-burger-recipe.html\n                    - id: 861442\n                      title: Istanbul-Style Wet Burger (Islak Burger)\n                      imageType: jpg\n                      url: http://www.epicurious.com/recipes/food/views/istanbul-style-wet-burger-islak-burger?mbid=nl_02272017_Daily_CTN_PM+(1)\n                    - id: 600423\n                      title: Rajma Burger (Red Kidney Beans Burger)\n                      imageType: jpg\n                      url: http://www.spiceupthecurry.com/rajma-burger-red-kidney-beans-burger/\n                    - id: 493634\n                      title: 'Chicago Burger Week: The Chicago Deep Dish Pizza Burger'\n                      imageType: jpg\n                      url: http://www.foodrepublic.com/2013/09/30/chicago-burger-week-chicago-deep-dish-pizza-burger\n                    - id: 487346\n                      title: aloo tikki burger , north indian style aloo tikki burger\n                      imageType: jpg\n                      url: http://www.vegrecipesofindia.com/aloo-tikki-burger/\n                    - id: 607330\n                      title: Aloo Tikki Burger | How to make aloo tikki burger at\n                        home\n                      imageType: jpg\n                      url: http://www.spiceupthecurry.com/aloo-tikki-burger-recipe/\n              schema:\n                $ref: '#/components/schemas/inline_response_200_49'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Image Analysis by URL\n      tags:\n      - misc\n  /recipes/quickAnswer:\n    get:\n      deprecated: false\n      description: Answer a nutrition related natural language question.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Quick-Answer\n      operationId: quickAnswer\n      parameters:\n      - description: The nutrition related question.\n        explode: false\n        in: query\n        name: q\n        required: true\n        schema:\n          example: How much vitamin c is in 2 apples?\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    answer: There are 16.74 mg of Vitamin C in 2 apples. This covers\n                      about 20% of your daily needs of Vitamin C.\n                    image: https://spoonacular.com/cdn/ingredients_100x100/apple.jpg\n              schema:\n                $ref: '#/components/schemas/inline_response_200_50'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Quick Answer\n      tags:\n      - recipes\n  /food/detect:\n    post:\n      deprecated: false\n      description: Take any text and find all mentions of food contained within it.\n        This task is also called Named Entity Recognition (NER). In this case, the\n        entities are foods. Either dishes, such as pizza or cheeseburger, or ingredients,\n        such as cucumber or almonds.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Detect-Food-in-Text\n      operationId: detectFoodInText\n      parameters:\n      - description: The content type.\n        explode: false\n        in: header\n        name: Content-Type\n        required: false\n        schema:\n          enum:\n          - application/x-www-form-urlencoded\n          - application/json\n          - multipart/form-data\n          example: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            examples:\n              example-1:\n                value: text=I like to eat delicious tacos. The only thing better is\n                  a cheeseburger with cheddar. But then again, pizza with pepperoni,\n                  mushrooms, and tomatoes is so good too!\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    annotations:\n                    - annotation: cheeseburger\n                      image: https://spoonacular.com/menuItemImages/cheeseburger.jpg\n                      tag: dish\n                    - annotation: mushrooms\n                      image: https://spoonacular.com/cdn/ingredients_100x100/mushrooms.png\n                      tag: ingredient\n                    - annotation: pepperoni\n                      image: https://spoonacular.com/cdn/ingredients_100x100/pepperoni.png\n                      tag: ingredient\n                    - annotation: tomatoes\n                      image: https://spoonacular.com/cdn/ingredients_100x100/tomato.png\n                      tag: ingredient\n                    - annotation: cheddar\n                      image: https://spoonacular.com/cdn/ingredients_100x100/cheddar-cheese.png\n                      tag: ingredient\n                    - annotation: tacos\n                      image: https://spoonacular.com/menuItemImages/taco-isolated.jpg\n                      tag: dish\n                    - annotation: pizza\n                      image: https://spoonacular.com/menuItemImages/cheese-pizza.png\n                      tag: dish\n              schema:\n                $ref: '#/components/schemas/inline_response_200_51'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Detect Food in Text\n      tags:\n      - misc\n  /food/site/search:\n    get:\n      deprecated: false\n      description: Search spoonacular's site content. You'll be able to find everything\n        that you could also find using the search suggestions on spoonacular.com.\n        This is a suggest API so you can send partial strings as queries.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Site-Content\n      operationId: searchSiteContent\n      parameters:\n      - description: The query to search for. You can also use partial queries such\n          as \"spagh\" to already find spaghetti recipes, articles, grocery products,\n          and other content.\n        explode: false\n        in: query\n        name: query\n        required: true\n        schema:\n          example: past\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    Articles:\n                    - dataPoints: []\n                      image: https://spoonacular.com/application/frontend/images/academy/vietnamese-cuisine.jpg\n                      link: https://spoonacular.com/academy/vietnamese\n                      name: Traditional Vietnamese Recipes\n                    - dataPoints: []\n                      image: https://spoonacular.com/application/frontend/images/academy/thai-cuisine.jpg\n                      link: https://spoonacular.com/academy/thai\n                      name: Authentic Thai Recipes\n                    - dataPoints: []\n                      image: https://spoonacular.com/application/frontend/images/academy/korean-food.jpg\n                      link: https://spoonacular.com/academy/korean\n                      name: Typical Korean Recipes\n                    Grocery Products:\n                    - dataPoints:\n                      - key: Calories\n                        value: 30 Calories\n                      - key: Protein\n                        value: 2g Protein\n                      - key: Fat\n                        value: 0.0g Total Fat\n                      - key: Carbs\n                        value: 6g Carbs\n                      image: https://spoonacular.com/productImages/218909-312x231.jpg\n                      link: https://spoonacular.com/products/vine-ripe-tomato-paste-218909\n                      name: Vine-ripe Tomato Paste\n                    - dataPoints:\n                      - key: Calories\n                        value: 30 Calories\n                      - key: Protein\n                        value: 2g Protein\n                      - key: Fat\n                        value: 0.0g Total Fat\n                      - key: Carbs\n                        value: 6g Carbs\n                      image: https://spoonacular.com/productImages/178883-312x231.jpg\n                      link: https://spoonacular.com/products/contadina-tomato-paste-178883\n                      name: Contadina Tomato Paste\n                    - dataPoints:\n                      - key: Calories\n                        value: 30 Calories\n                      - key: Protein\n                        value: 2g Protein\n                      - key: Fat\n                        value: 0.0g Total Fat\n                      - key: Carbs\n                        value: 6g Carbs\n                      image: https://spoonacular.com/productImages/137031-312x231.jpg\n                      link: https://spoonacular.com/products/cento-tomato-paste-137031\n                      name: Cento Tomato Paste\n                    Menu Items:\n                    - dataPoints:\n                      - key: Calories\n                        value: 230 Calories\n                      - key: Protein\n                        value: 1g Protein\n                      - key: Fat\n                        value: 15g Total Fat\n                      - key: Carbs\n                        value: 23g Carbs\n                      image: https://spoonacular.com/menuItemImages/stir-fry.jpg\n                      link: https://spoonacular.com/menu-items/thai-express-stir-fry-chilli-paste-401670\n                      name: Thai Express Stir-Fry, Chilli Paste\n                    Recipes:\n                    - dataPoints:\n                      - key: Cost\n                        value: $10.51 per serving\n                      - key: Calories\n                        value: 400 Calories\n                      - key: Protein\n                        value: 9g Protein\n                      - key: Fat\n                        value: 32g Total Fat\n                      - key: Carbs\n                        value: 26g Carbs\n                      image: https://webknox.com/recipeImages/224844-556x370.jpg\n                      link: https://spoonacular.com/recipes/chermoula-paste-224844\n                      name: Chermoula Paste\n                    - dataPoints:\n                      - key: Cost\n                        value: $8.37 per serving\n                      - key: Calories\n                        value: 3560 Calories\n                      - key: Protein\n                        value: 119g Protein\n                      - key: Fat\n                        value: 319g Total Fat\n                      - key: Carbs\n                        value: 54g Carbs\n                      image: https://webknox.com/recipeImages/146847-556x370.jpg\n                      link: https://spoonacular.com/recipes/lulu-paste-146847\n                      name: Lulu Paste\n                    - dataPoints:\n                      - key: Cost\n                        value: $6.68 per serving\n                      - key: Calories\n                        value: 990 Calories\n                      - key: Protein\n                        value: 53g Protein\n                      - key: Fat\n                        value: 86g Total Fat\n                      - key: Carbs\n                        value: 0.82g Carbs\n                      image: https://webknox.com/recipeImages/84670-556x370.jpg\n                      link: https://spoonacular.com/recipes/steak-paste-84670\n                      name: Steak Paste\n              schema:\n                $ref: '#/components/schemas/inline_response_200_52'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Site Content\n      tags:\n      - misc\n  /food/search:\n    get:\n      deprecated: false\n      description: Search all food content with one call. That includes recipes, grocery\n        products, menu items, simple foods (ingredients), and food videos.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-All-Food\n      operationId: searchAllFood\n      parameters:\n      - description: The search query.\n        explode: false\n        in: query\n        name: query\n        required: true\n        schema:\n          example: apple\n          type: string\n        style: form\n      - description: The number of results to skip (between 0 and 900).\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          maximum: 900\n          minimum: 0\n          type: integer\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    query: apple\n                    totalResults: 5826\n                    limit: 2\n                    offset: 0\n                    searchResults:\n                    - name: Recipes\n                      totalResults: 167\n                      results:\n                      - id: \"632485\"\n                        name: Apple Cake\n                        image: https://spoonacular.com/recipeImages/632485-312x231.jpg\n                        link: https://spoonacular.com/recipes/apple-cake-632485\n                        type: HTML\n                        relevance: 10000\n                        content: Apple Cake might be just the dessert you are searching\n                          for...\n                      - id: \"632522\"\n                        name: Apple Crumble\n                        image: https://spoonacular.com/recipeImages/632522-312x231.jpg\n                        link: https://spoonacular.com/recipes/apple-crumble-632522\n                        type: HTML\n                        relevance: 9999\n                        content: Apple Crumble might be just the dessert you are searching\n                          for...\n                    - name: Products\n                      totalResults: 3219\n                      results:\n                      - id: \"5487\"\n                        name: Pleasant Valley Apple Wine\n                        content: null\n                        image: https://spoonacular.com/productImages/469604-312x231.jpg\n                        link: https://spoonacular.com/products/pleasant-valley-apple-wine-469604\n                        type: HTML\n                        relevance: 10000\n                      - id: \"428573\"\n                        name: NV Georgetown Vineyards Apple Wine\n                        content: null\n                        image: https://spoonacular.com/productImages/428573-312x231.jpg\n                        link: https://spoonacular.com/products/nv-georgetown-vineyards-apple-wine-428573\n                        type: HTML\n                        relevance: 9999\n                    - name: Menu Items\n                      totalResults: 2410\n                      results:\n                      - id: \"334550\"\n                        name: Old Chicago Applewood Spiced BBQ Chicken Pizza, Chicago\n                          Thick, 12 Inch (Slice)\n                        image: null\n                        link: https://spoonacular.com/menu-items/old-chicago-applewood-spiced-bbq-chicken-pizza-chicago-thick-12-inch--334550\n                        type: HTML\n                        content: null\n                        relevance: 10000\n                      - id: \"422013\"\n                        name: Huddle House Apple Cobbler a la mode\n                        image: null\n                        link: https://spoonacular.com/menu-items/huddle-house-apple-cobbler-a-la-mode-422013\n                        type: HTML\n                        content: null\n                        relevance: 9999\n                    - name: Articles\n                      totalResults: 28\n                      results:\n                      - id: \"578\"\n                        name: Apples\n                        image: https://spoonacular.com/cdn/ingredients_100x100/braeburn-apples.jpg\n                        link: https://spoonacular.com/academy/apples\n                        type: HTML\n                        content: null\n                        relevance: 90.46\n                      - id: \"252\"\n                        name: Vinegar\n                        image: https://spoonacular.com/cdn/ingredients_100x100/red-wine-vinegar.jpg\n                        link: https://spoonacular.com/academy/vinegar\n                        type: HTML\n                        content: null\n                        relevance: 23.8\n                    - name: Videos\n                      totalResults: 2\n                      results:\n                      - id: G0HENy59YkE\n                        name: Pineapple Bundt Cake\n                        image: https://i.ytimg.com/vi/G0HENy59YkE/hqdefault.jpg\n                        link: https://www.youtube.com/watch?v=G0HENy59YkE\n                        type: YOUTUBE_VIDEO\n                        relevance: 10000\n                        content: 'FULL RECIPE HERE: https://tatyanaseverydayfood.com/recipe-items/pineapple-bundt-cake/...'\n                      - id: xEENgO5Z5To\n                        name: Pineapple Shrimp Tacos\n                        image: https://i.ytimg.com/vi/xEENgO5Z5To/mqdefault.jpg\n                        link: null\n                        type: YOUTUBE_VIDEO\n                        relevance: 9999\n                        content: |-\n                          RECIPE: Below in description.\n                          These Pineapple Shrimp Tacos cook in 5 minutes and assembly is a breeze...\n                    - name: Simple Foods\n                      totalResults: 2\n                      results:\n                      - id: \"78541\"\n                        name: apple\n                        image: apple.jpg\n                        type: HTML\n                        content: null\n                        link: null\n                        relevance: 10000\n                      - id: \"8782\"\n                        name: applesauce\n                        image: applesauce.png\n                        type: HTML\n                        content: null\n                        link: null\n                        relevance: 9999\n              schema:\n                $ref: '#/components/schemas/inline_response_200_53'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search All Food\n      tags:\n      - misc\n  /food/videos/search:\n    get:\n      deprecated: false\n      description: Find recipe and other food related videos.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Search-Food-Videos\n      operationId: searchFoodVideos\n      parameters:\n      - description: The (natural language) search query.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          example: burger\n          type: string\n        style: form\n      - description: The type of the recipes. See a full list of supported meal types.\n        explode: false\n        in: query\n        name: type\n        required: false\n        schema:\n          example: main course\n          type: string\n        style: form\n      - description: The cuisine(s) of the recipes. One or more, comma separated.\n          See a full list of supported cuisines.\n        explode: false\n        in: query\n        name: cuisine\n        required: false\n        schema:\n          example: italian\n          type: string\n        style: form\n      - description: The diet for which the recipes must be suitable. See a full list\n          of supported diets.\n        explode: false\n        in: query\n        name: diet\n        required: false\n        schema:\n          example: vegetarian\n          type: string\n        style: form\n      - description: A comma-separated list of ingredients that the recipes should\n          contain.\n        explode: false\n        in: query\n        name: includeIngredients\n        required: false\n        schema:\n          example: tomato,cheese\n          type: string\n        style: form\n      - description: A comma-separated list of ingredients or ingredient types that\n          the recipes must not contain.\n        explode: false\n        in: query\n        name: excludeIngredients\n        required: false\n        schema:\n          example: eggs\n          type: string\n        style: form\n      - description: Minimum video length in seconds.\n        explode: false\n        in: query\n        name: minLength\n        required: false\n        schema:\n          example: 0\n          type: number\n        style: form\n      - description: Maximum video length in seconds.\n        explode: false\n        in: query\n        name: maxLength\n        required: false\n        schema:\n          example: 999\n          type: number\n        style: form\n      - description: The number of results to skip (between 0 and 900).\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          maximum: 900\n          minimum: 0\n          type: integer\n        style: form\n      - description: The maximum number of items to return (between 1 and 100). Defaults\n          to 10.\n        explode: true\n        in: query\n        name: number\n        required: false\n        schema:\n          default: 10\n          example: 10\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    videos:\n                    - title: 8 One-Pot Pastas\n                      length: 370\n                      rating: 0.985984219269103\n                      shortTitle: 8 One-Pot Pastas\n                      thumbnail: https://i.ytimg.com/vi/YTZGPCCB2FU/mqdefault.jpg\n                      views: 550467\n                      youTubeId: YTZGPCCB2FU\n                    - title: Macaroni salad - pasta salad recipes - healthy recipe\n                        channel - quick tasty recipe - cooking channel\n                      length: 333\n                      rating: 1\n                      shortTitle: Macaroni salad\n                      thumbnail: https://i.ytimg.com/vi/81bn4p8H3Kg/mqdefault.jpg\n                      views: 307\n                      youTubeId: 81bn4p8H3Kg\n                    totalResults: 172\n              schema:\n                $ref: '#/components/schemas/inline_response_200_54'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Search Food Videos\n      tags:\n      - misc\n  /food/jokes/random:\n    get:\n      deprecated: false\n      description: 'Get a random joke that is related to food. Caution: this is an\n        endpoint for adults!'\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Random-Food-Joke\n      operationId: getARandomFoodJoke\n      parameters: []\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    text: Any salad can be a Caesar salad if you stab it enough.\n              schema:\n                $ref: '#/components/schemas/inline_response_200_55'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Random Food Joke\n      tags:\n      - misc\n  /food/trivia/random:\n    get:\n      deprecated: false\n      description: Returns random food trivia.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Random-Food-Trivia\n      operationId: getRandomFoodTrivia\n      parameters: []\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    text: The red food-coloring carmine used in Skittles and other\n                      candies is made from boiled cochineal bugs, a type of beetle.\n              schema:\n                $ref: '#/components/schemas/inline_response_200_55'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Random Food Trivia\n      tags:\n      - misc\n  /food/converse:\n    get:\n      deprecated: false\n      description: This endpoint can be used to have a conversation about food with\n        the spoonacular chatbot. Use the \"Get Conversation Suggests\" endpoint to show\n        your user what he or she can say.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Talk-to-Chatbot\n      operationId: talkToChatbot\n      parameters:\n      - description: The request / question / answer from the user to the chatbot.\n        explode: false\n        in: query\n        name: text\n        required: true\n        schema:\n          example: donut recipes\n          type: string\n        style: form\n      - description: An arbitrary globally unique id for your conversation. The conversation\n          can contain states so you should pass your context id if you want the bot\n          to be able to remember the conversation.\n        explode: false\n        in: query\n        name: contextId\n        required: false\n        schema:\n          example: \"342938\"\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    answerText: Baby, if you were a fruit you'd be a fineapple.\n                    media: []\n              schema:\n                $ref: '#/components/schemas/inline_response_200_56'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Talk to Chatbot\n      tags:\n      - misc\n  /food/converse/suggest:\n    get:\n      deprecated: false\n      description: This endpoint returns suggestions for things the user can say or\n        ask the chatbot.\n      externalDocs:\n        description: Read entire docs\n        url: https://spoonacular.com/food-api/docs#Conversation-Suggests\n      operationId: getConversationSuggests\n      parameters:\n      - description: A (partial) query from the user. The endpoint will return if\n          it matches topics it can talk about.\n        explode: false\n        in: query\n        name: query\n        required: true\n        schema:\n          example: tell\n          type: string\n        style: form\n      - description: The number of suggestions to return (between 1 and 25).\n        explode: false\n        in: query\n        name: number\n        required: false\n        schema:\n          example: 5\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    suggests:\n                      _:\n                      - name: Tell me something funny\n                      - name: Tell me a food fact\n                      - name: Tell me a joke\n                      - name: Tell me food trivia\n                      - name: Tell me a fact about food\n                    words: []\n              schema:\n                $ref: '#/components/schemas/inline_response_200_57'\n          description: Success\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n      summary: Conversation Suggests\n      tags:\n      - misc\ncomponents:\n  parameters:\n    ingredients:\n      description: A comma-separated list of ingredients that the recipes should contain.\n      explode: true\n      in: query\n      name: ingredients\n      required: false\n      schema:\n        example: carrots,tomatoes\n        type: string\n      style: form\n    number:\n      description: The maximum number of items to return (between 1 and 100). Defaults\n        to 10.\n      explode: true\n      in: query\n      name: number\n      required: false\n      schema:\n        default: 10\n        example: 10\n        maximum: 100\n        minimum: 1\n        type: integer\n      style: form\n    ignorePantry:\n      description: Whether to ignore typical pantry items, such as water, salt, flour,\n        etc.\n      explode: true\n      in: query\n      name: ignorePantry\n      required: false\n      schema:\n        default: false\n        example: false\n        type: boolean\n      style: form\n    limitLicense:\n      description: Whether the recipes should have an open license that allows display\n        with proper attribution.\n      explode: true\n      in: query\n      name: limitLicense\n      required: false\n      schema:\n        default: true\n        example: true\n        type: boolean\n      style: form\n    query:\n      description: The (natural language) search query.\n      explode: true\n      in: query\n      name: query\n      required: false\n      schema:\n        example: burger\n        type: string\n      style: form\n    offset:\n      description: The number of results to skip (between 0 and 900).\n      explode: true\n      in: query\n      name: offset\n      required: false\n      schema:\n        maximum: 900\n        minimum: 0\n        type: integer\n      style: form\n    includeNutrition:\n      description: Include nutrition data in the recipe information. Nutrition data\n        is per serving. If you want the nutrition data for the entire recipe, just\n        multiply by the number of servings.\n      explode: true\n      in: query\n      name: includeNutrition\n      required: false\n      schema:\n        default: false\n        type: boolean\n      style: form\n    tags:\n      description: The tags (can be diets, meal types, cuisines, or intolerances)\n        that the recipe must have.\n      explode: true\n      in: query\n      name: tags\n      required: false\n      schema:\n        type: string\n      style: form\n    id:\n      description: The item's id.\n      explode: false\n      in: path\n      name: id\n      required: true\n      schema:\n        example: 1\n        type: integer\n      style: simple\n    includeTaste:\n      description: Whether taste data should be added to correctly parsed ingredients.\n      explode: true\n      in: query\n      name: includeTaste\n      required: false\n      schema:\n        default: false\n        example: false\n        type: boolean\n      style: form\n    defaultCss:\n      description: Whether the default CSS should be added to the response.\n      explode: true\n      in: query\n      name: defaultCss\n      required: false\n      schema:\n        default: true\n        example: false\n        type: boolean\n      style: form\n    language:\n      description: The language of the input. Either 'en' or 'de'.\n      explode: true\n      in: query\n      name: language\n      required: false\n      schema:\n        enum:\n        - en\n        - de\n        example: en\n        type: string\n      style: form\n    Content-Type:\n      description: The content type.\n      explode: false\n      in: header\n      name: Content-Type\n      required: false\n      schema:\n        enum:\n        - application/x-www-form-urlencoded\n        - application/json\n        - multipart/form-data\n        example: application/json\n        type: string\n      style: simple\n    Accept:\n      description: Accept header.\n      explode: false\n      in: header\n      name: Accept\n      required: false\n      schema:\n        enum:\n        - application/json\n        - text/html\n        - media/*\n        example: application/json\n        type: string\n      style: simple\n    username:\n      description: The username.\n      explode: false\n      in: path\n      name: username\n      required: true\n      schema:\n        example: dsky\n        type: string\n      style: simple\n    hash:\n      description: The private hash for the username.\n      explode: true\n      in: query\n      name: hash\n      required: true\n      schema:\n        type: string\n      style: form\n    rgb:\n      description: Red, green, blue values for the chart color.\n      explode: true\n      in: query\n      name: rgb\n      required: false\n      schema:\n        example: 75,192,192\n        type: string\n      style: form\n  requestBodies:\n    inline_object_1:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/inline_object_1'\n      required: true\n    inline_object_9:\n      content:\n        ?\n        : schema:\n            $ref: '#/components/schemas/inline_object_9'\n        application/json:\n          schema:\n            $ref: '#/components/schemas/inline_object_9'\n      required: true\n    inline_object_10:\n      content:\n        ?\n        : schema:\n            $ref: '#/components/schemas/inline_object_10'\n      required: true\n    inline_object:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/inline_object'\n      required: true\n    inline_object_8:\n      content:\n        ?\n        : schema:\n            $ref: '#/components/schemas/inline_object_8'\n      required: true\n    inline_object_7:\n      content:\n        ?\n        : schema:\n            $ref: '#/components/schemas/inline_object_7'\n      required: true\n    inline_object_6:\n      content:\n        ?\n        : schema:\n            $ref: '#/components/schemas/inline_object_6'\n      required: true\n    inline_object_5:\n      content:\n        ?\n        : schema:\n            $ref: '#/components/schemas/inline_object_5'\n      required: true\n    inline_object_4:\n      content:\n        ?\n        : schema:\n            $ref: '#/components/schemas/inline_object_4'\n        application/json:\n          schema:\n            $ref: '#/components/schemas/inline_object_4'\n      required: true\n    inline_object_3:\n      content:\n        ?\n        : schema:\n            $ref: '#/components/schemas/inline_object_3'\n      required: true\n    inline_object_2:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/inline_object_2'\n      required: true\n  schemas:\n    inline_response_200_results:\n      example:\n        image: image\n        carbs: carbs\n        protein: protein\n        fat: fat\n        id: 1\n        calories: 5.962133916683182\n        title: title\n        imageType: imageType\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        calories:\n          type: number\n        carbs:\n          minLength: 1\n          type: string\n        fat:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        protein:\n          minLength: 1\n          type: string\n      required:\n      - calories\n      - carbs\n      - fat\n      - id\n      - image\n      - imageType\n      - protein\n      - title\n    inline_response_200:\n      example:\n        number: 6\n        totalResults: 5\n        offset: 0\n        results:\n        - image: image\n          carbs: carbs\n          protein: protein\n          fat: fat\n          id: 1\n          calories: 5.962133916683182\n          title: title\n          imageType: imageType\n        - image: image\n          carbs: carbs\n          protein: protein\n          fat: fat\n          id: 1\n          calories: 5.962133916683182\n          title: title\n          imageType: imageType\n      properties:\n        offset:\n          type: integer\n        number:\n          type: integer\n        results:\n          items:\n            $ref: '#/components/schemas/inline_response_200_results'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        totalResults:\n          type: integer\n      required:\n      - number\n      - offset\n      - results\n      - totalResults\n    _recipes_findByIngredients_missedIngredients:\n      example:\n        originalName: originalName\n        image: image\n        amount: 5.962133916683182\n        unit: unit\n        original: original\n        unitShort: unitShort\n        meta:\n        - meta\n        - meta\n        name: name\n        unitLong: unitLong\n        id: 5\n        aisle: aisle\n      properties:\n        aisle:\n          minLength: 1\n          type: string\n        amount:\n          type: number\n        id:\n          type: integer\n        image:\n          minLength: 1\n          type: string\n        meta:\n          items:\n            type: string\n          type: array\n        name:\n          minLength: 1\n          type: string\n        original:\n          minLength: 1\n          type: string\n        originalName:\n          minLength: 1\n          type: string\n        unit:\n          minLength: 0\n          type: string\n        unitLong:\n          minLength: 0\n          type: string\n        unitShort:\n          minLength: 0\n          type: string\n      required:\n      - aisle\n      - amount\n      - id\n      - image\n      - name\n      - original\n      - originalName\n      - unit\n      - unitLong\n      - unitShort\n    inline_response_200_1:\n      example:\n        ?\n        : \"\"\n        image: image\n        usedIngredients:\n        - originalName: originalName\n          image: image\n          amount: 5.962133916683182\n          unit: unit\n          original: original\n          unitShort: unitShort\n          meta:\n          - meta\n          - meta\n          name: name\n          unitLong: unitLong\n          id: 5\n          aisle: aisle\n        - originalName: originalName\n          image: image\n          amount: 5.962133916683182\n          unit: unit\n          original: original\n          unitShort: unitShort\n          meta:\n          - meta\n          - meta\n          name: name\n          unitLong: unitLong\n          id: 5\n          aisle: aisle\n        missedIngredients:\n        - originalName: originalName\n          image: image\n          amount: 5.962133916683182\n          unit: unit\n          original: original\n          unitShort: unitShort\n          meta:\n          - meta\n          - meta\n          name: name\n          unitLong: unitLong\n          id: 5\n          aisle: aisle\n        - originalName: originalName\n          image: image\n          amount: 5.962133916683182\n          unit: unit\n          original: original\n          unitShort: unitShort\n          meta:\n          - meta\n          - meta\n          name: name\n          unitLong: unitLong\n          id: 5\n          aisle: aisle\n        missedIngredientCount: 1\n        unusedIngredients:\n        - '{}'\n        - '{}'\n        id: 0\n        title: title\n        imageType: imageType\n        likes: 6\n        usedIngredientCount: 2.3021358869347655\n      properties:\n        id:\n          type: integer\n        image:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        likes:\n          type: integer\n        missedIngredientCount:\n          type: integer\n        missedIngredients:\n          items:\n            $ref: '#/components/schemas/_recipes_findByIngredients_missedIngredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        title:\n          minLength: 1\n          type: string\n        unusedIngredients:\n          items:\n            type: object\n          minItems: 0\n          type: array\n        usedIngredientCount:\n          type: number\n        usedIngredients:\n          items:\n            $ref: '#/components/schemas/_recipes_findByIngredients_missedIngredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ?\n        : type: string\n      required:\n      - id\n      - image\n      - imageType\n      - likes\n      - missedIngredientCount\n      - missedIngredients\n      - title\n      - unusedIngredients\n      - usedIngredientCount\n      - usedIngredients\n    inline_response_200_2:\n      example:\n        image: image\n        carbs: carbs\n        protein: protein\n        fat: fat\n        calories: 0.8008281904610115\n        id: 6\n        title: title\n        imageType: imageType\n      properties:\n        calories:\n          type: number\n        carbs:\n          minLength: 1\n          type: string\n        fat:\n          minLength: 1\n          type: string\n        id:\n          type: integer\n        image:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        protein:\n          minLength: 1\n          type: string\n        title:\n          minLength: 1\n          type: string\n      required:\n      - calories\n      - carbs\n      - fat\n      - id\n      - image\n      - imageType\n      - protein\n      - title\n    inline_response_200_3_measures_metric:\n      example:\n        amount: 4.145608029883936\n        unitShort: unitShort\n        unitLong: unitLong\n      properties:\n        amount:\n          type: number\n        unitLong:\n          minLength: 0\n          type: string\n        unitShort:\n          minLength: 0\n          type: string\n      required:\n      - amount\n      - unitLong\n      - unitShort\n    inline_response_200_3_measures:\n      example:\n        metric:\n          amount: 4.145608029883936\n          unitShort: unitShort\n          unitLong: unitLong\n        us:\n          amount: 4.145608029883936\n          unitShort: unitShort\n          unitLong: unitLong\n      properties:\n        metric:\n          $ref: '#/components/schemas/inline_response_200_3_measures_metric'\n        us:\n          $ref: '#/components/schemas/inline_response_200_3_measures_metric'\n      required:\n      - metric\n      - us\n    inline_response_200_3_extendedIngredients:\n      example:\n        originalName: originalName\n        image: image\n        amount: 3.616076749251911\n        measures:\n          metric:\n            amount: 4.145608029883936\n            unitShort: unitShort\n            unitLong: unitLong\n          us:\n            amount: 4.145608029883936\n            unitShort: unitShort\n            unitLong: unitLong\n        unit: unit\n        original: original\n        consitency: consitency\n        meta:\n        - meta\n        - meta\n        name: name\n        id: 2\n        aisle: aisle\n      properties:\n        aisle:\n          minLength: 1\n          type: string\n        amount:\n          type: number\n        consitency:\n          minLength: 1\n          type: string\n        id:\n          type: integer\n        image:\n          minLength: 1\n          type: string\n        measures:\n          $ref: '#/components/schemas/inline_response_200_3_measures'\n        meta:\n          items:\n            type: string\n          type: array\n        name:\n          minLength: 1\n          type: string\n        original:\n          minLength: 1\n          type: string\n        originalName:\n          minLength: 1\n          type: string\n        unit:\n          minLength: 0\n          type: string\n      required:\n      - aisle\n      - amount\n      - consitency\n      - id\n      - image\n      - name\n      - original\n      - originalName\n      - unit\n    inline_response_200_3_winePairing_productMatches:\n      example:\n        score: 1.4894159098541704\n        price: price\n        imageUrl: imageUrl\n        averageRating: 1.2315135367772556\n        link: link\n        description: description\n        id: 7\n        title: title\n        ratingCount: 1\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        description:\n          minLength: 1\n          type: string\n        price:\n          minLength: 1\n          type: string\n        imageUrl:\n          minLength: 1\n          type: string\n        averageRating:\n          type: number\n        ratingCount:\n          type: integer\n        score:\n          type: number\n        link:\n          minLength: 1\n          type: string\n      required:\n      - averageRating\n      - description\n      - id\n      - imageUrl\n      - link\n      - price\n      - ratingCount\n      - score\n      - title\n    inline_response_200_3_winePairing:\n      example:\n        productMatches:\n        - score: 1.4894159098541704\n          price: price\n          imageUrl: imageUrl\n          averageRating: 1.2315135367772556\n          link: link\n          description: description\n          id: 7\n          title: title\n          ratingCount: 1\n        - score: 1.4894159098541704\n          price: price\n          imageUrl: imageUrl\n          averageRating: 1.2315135367772556\n          link: link\n          description: description\n          id: 7\n          title: title\n          ratingCount: 1\n        pairingText: pairingText\n        pairedWines:\n        - pairedWines\n        - pairedWines\n      properties:\n        pairedWines:\n          items:\n            type: string\n          type: array\n        pairingText:\n          minLength: 1\n          type: string\n        productMatches:\n          items:\n            $ref: '#/components/schemas/inline_response_200_3_winePairing_productMatches'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - pairedWines\n      - pairingText\n      - productMatches\n    inline_response_200_3:\n      example:\n        instructions: instructions\n        sustainable: true\n        analyzedInstructions:\n        - '{}'\n        - '{}'\n        glutenFree: true\n        veryPopular: true\n        title: title\n        healthScore: 5.637376656633329\n        diets:\n        - diets\n        - diets\n        aggregateLikes: 5\n        readyInMinutes: 1\n        sourceUrl: sourceUrl\n        creditsText: creditsText\n        dairyFree: true\n        servings: 6.027456183070403\n        vegetarian: true\n        whole30: true\n        id: 0\n        imageType: imageType\n        winePairing:\n          productMatches:\n          - score: 1.4894159098541704\n            price: price\n            imageUrl: imageUrl\n            averageRating: 1.2315135367772556\n            link: link\n            description: description\n            id: 7\n            title: title\n            ratingCount: 1\n          - score: 1.4894159098541704\n            price: price\n            imageUrl: imageUrl\n            averageRating: 1.2315135367772556\n            link: link\n            description: description\n            id: 7\n            title: title\n            ratingCount: 1\n          pairingText: pairingText\n          pairedWines:\n          - pairedWines\n          - pairedWines\n        summary: summary\n        image: image\n        veryHealthy: true\n        vegan: true\n        cheap: true\n        dishTypes:\n        - dishTypes\n        - dishTypes\n        extendedIngredients:\n        - originalName: originalName\n          image: image\n          amount: 3.616076749251911\n          measures:\n            metric:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n            us:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n          unit: unit\n          original: original\n          consitency: consitency\n          meta:\n          - meta\n          - meta\n          name: name\n          id: 2\n          aisle: aisle\n        - originalName: originalName\n          image: image\n          amount: 3.616076749251911\n          measures:\n            metric:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n            us:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n          unit: unit\n          original: original\n          consitency: consitency\n          meta:\n          - meta\n          - meta\n          name: name\n          id: 2\n          aisle: aisle\n        gaps: gaps\n        cuisines:\n        - cuisines\n        - cuisines\n        lowFodmap: true\n        license: license\n        weightWatcherSmartPoints: 9.301444243932576\n        occasions:\n        - occasions\n        - occasions\n        spoonacularScore: 2.3021358869347655\n        pricePerServing: 7.061401241503109\n        sourceName: sourceName\n        spoonacularSourceUrl: spoonacularSourceUrl\n        ketogenic: true\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        servings:\n          type: number\n        readyInMinutes:\n          type: integer\n        license:\n          minLength: 1\n          type: string\n        sourceName:\n          minLength: 1\n          type: string\n        sourceUrl:\n          minLength: 1\n          type: string\n        spoonacularSourceUrl:\n          minLength: 1\n          type: string\n        aggregateLikes:\n          type: integer\n        healthScore:\n          type: number\n        spoonacularScore:\n          type: number\n        pricePerServing:\n          type: number\n        analyzedInstructions:\n          items:\n            type: object\n          type: array\n        cheap:\n          type: boolean\n        creditsText:\n          minLength: 1\n          type: string\n        cuisines:\n          items:\n            type: string\n          type: array\n        dairyFree:\n          type: boolean\n        diets:\n          items:\n            type: string\n          type: array\n        gaps:\n          minLength: 1\n          type: string\n        glutenFree:\n          type: boolean\n        instructions:\n          type: string\n        ketogenic:\n          type: boolean\n        lowFodmap:\n          type: boolean\n        occasions:\n          items:\n            type: string\n          type: array\n        sustainable:\n          type: boolean\n        vegan:\n          type: boolean\n        vegetarian:\n          type: boolean\n        veryHealthy:\n          type: boolean\n        veryPopular:\n          type: boolean\n        whole30:\n          type: boolean\n        weightWatcherSmartPoints:\n          type: number\n        dishTypes:\n          items:\n            type: string\n          type: array\n        extendedIngredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_3_extendedIngredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        summary:\n          minLength: 1\n          type: string\n        winePairing:\n          $ref: '#/components/schemas/inline_response_200_3_winePairing'\n      required:\n      - aggregateLikes\n      - analyzedInstructions\n      - cheap\n      - creditsText\n      - cuisines\n      - dairyFree\n      - diets\n      - dishTypes\n      - extendedIngredients\n      - gaps\n      - glutenFree\n      - healthScore\n      - id\n      - image\n      - imageType\n      - instructions\n      - ketogenic\n      - license\n      - lowFodmap\n      - occasions\n      - pricePerServing\n      - readyInMinutes\n      - servings\n      - sourceName\n      - sourceUrl\n      - spoonacularScore\n      - spoonacularSourceUrl\n      - summary\n      - sustainable\n      - title\n      - vegan\n      - vegetarian\n      - veryHealthy\n      - veryPopular\n      - weightWatcherSmartPoints\n      - whole30\n      - winePairing\n    inline_response_200_4:\n      example:\n        instructions: instructions\n        sustainable: true\n        analyzedInstructions:\n        - analyzedInstructions\n        - analyzedInstructions\n        glutenFree: true\n        veryPopular: true\n        title: title\n        healthScore: 5.637376656633329\n        diets:\n        - diets\n        - diets\n        aggregateLikes: 5\n        readyInMinutes: 1\n        sourceUrl: sourceUrl\n        creditsText: creditsText\n        dairyFree: true\n        servings: 6.027456183070403\n        vegetarian: true\n        whole30: true\n        id: 0\n        imageType: imageType\n        winePairing:\n          productMatches:\n          - score: 1.4894159098541704\n            price: price\n            imageUrl: imageUrl\n            averageRating: 1.2315135367772556\n            link: link\n            description: description\n            id: 7\n            title: title\n            ratingCount: 1\n          - score: 1.4894159098541704\n            price: price\n            imageUrl: imageUrl\n            averageRating: 1.2315135367772556\n            link: link\n            description: description\n            id: 7\n            title: title\n            ratingCount: 1\n          pairingText: pairingText\n          pairedWines:\n          - pairedWines\n          - pairedWines\n        summary: summary\n        image: image\n        veryHealthy: true\n        vegan: true\n        cheap: true\n        dishTypes:\n        - dishTypes\n        - dishTypes\n        extendedIngredients:\n        - originalName: originalName\n          image: image\n          amount: 3.616076749251911\n          measures:\n            metric:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n            us:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n          unit: unit\n          original: original\n          consitency: consitency\n          meta:\n          - meta\n          - meta\n          name: name\n          id: 2\n          aisle: aisle\n        - originalName: originalName\n          image: image\n          amount: 3.616076749251911\n          measures:\n            metric:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n            us:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n          unit: unit\n          original: original\n          consitency: consitency\n          meta:\n          - meta\n          - meta\n          name: name\n          id: 2\n          aisle: aisle\n        gaps: gaps\n        cuisines:\n        - cuisines\n        - cuisines\n        lowFodmap: true\n        license: license\n        weightWatcherSmartPoints: 9.301444243932576\n        occasions:\n        - occasions\n        - occasions\n        spoonacularScore: 2.3021358869347655\n        pricePerServing: 7.061401241503109\n        sourceName: sourceName\n        spoonacularSourceUrl: spoonacularSourceUrl\n        ketogenic: true\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        servings:\n          type: number\n        readyInMinutes:\n          type: integer\n        license:\n          minLength: 1\n          type: string\n        sourceName:\n          minLength: 1\n          type: string\n        sourceUrl:\n          minLength: 1\n          type: string\n        spoonacularSourceUrl:\n          minLength: 1\n          type: string\n        aggregateLikes:\n          type: integer\n        healthScore:\n          type: number\n        spoonacularScore:\n          type: number\n        pricePerServing:\n          type: number\n        analyzedInstructions:\n          items:\n            type: string\n          type: array\n        cheap:\n          type: boolean\n        creditsText:\n          minLength: 1\n          type: string\n        cuisines:\n          items:\n            type: string\n          type: array\n        dairyFree:\n          type: boolean\n        diets:\n          items:\n            type: string\n          type: array\n        gaps:\n          minLength: 1\n          type: string\n        glutenFree:\n          type: boolean\n        instructions:\n          type: string\n        ketogenic:\n          type: boolean\n        lowFodmap:\n          type: boolean\n        occasions:\n          items:\n            type: string\n          type: array\n        sustainable:\n          type: boolean\n        vegan:\n          type: boolean\n        vegetarian:\n          type: boolean\n        veryHealthy:\n          type: boolean\n        veryPopular:\n          type: boolean\n        whole30:\n          type: boolean\n        weightWatcherSmartPoints:\n          type: number\n        dishTypes:\n          items:\n            type: string\n          type: array\n        extendedIngredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_3_extendedIngredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        summary:\n          minLength: 1\n          type: string\n        winePairing:\n          $ref: '#/components/schemas/inline_response_200_3_winePairing'\n      required:\n      - aggregateLikes\n      - analyzedInstructions\n      - cheap\n      - creditsText\n      - cuisines\n      - dairyFree\n      - diets\n      - dishTypes\n      - extendedIngredients\n      - gaps\n      - glutenFree\n      - healthScore\n      - id\n      - image\n      - imageType\n      - instructions\n      - ketogenic\n      - license\n      - lowFodmap\n      - occasions\n      - pricePerServing\n      - readyInMinutes\n      - servings\n      - sourceName\n      - sourceUrl\n      - spoonacularScore\n      - spoonacularSourceUrl\n      - summary\n      - sustainable\n      - title\n      - vegan\n      - vegetarian\n      - veryHealthy\n      - veryPopular\n      - weightWatcherSmartPoints\n      - whole30\n      - winePairing\n    inline_response_200_5:\n      example:\n        readyInMinutes: 6\n        sourceUrl: sourceUrl\n        servings: 1.4658129805029452\n        id: 0\n        title: title\n        imageType: imageType\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        readyInMinutes:\n          type: integer\n        servings:\n          type: number\n        sourceUrl:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - imageType\n      - readyInMinutes\n      - servings\n      - sourceUrl\n      - title\n    inline_response_200_6_recipes:\n      example:\n        instructions: instructions\n        sustainable: true\n        analyzedInstructions:\n        - '{}'\n        - '{}'\n        glutenFree: true\n        veryPopular: true\n        title: title\n        healthScore: 5.637376656633329\n        diets:\n        - diets\n        - diets\n        aggregateLikes: 5.962133916683182\n        readyInMinutes: 1\n        sourceUrl: sourceUrl\n        creditsText: creditsText\n        dairyFree: true\n        servings: 6.027456183070403\n        vegetarian: true\n        whole30: true\n        id: 0\n        imageType: imageType\n        winePairing:\n          productMatches:\n          - score: 1.4894159098541704\n            price: price\n            imageUrl: imageUrl\n            averageRating: 1.2315135367772556\n            link: link\n            description: description\n            id: 7\n            title: title\n            ratingCount: 1\n          - score: 1.4894159098541704\n            price: price\n            imageUrl: imageUrl\n            averageRating: 1.2315135367772556\n            link: link\n            description: description\n            id: 7\n            title: title\n            ratingCount: 1\n          pairingText: pairingText\n          pairedWines:\n          - pairedWines\n          - pairedWines\n        summary: summary\n        image: image\n        veryHealthy: true\n        vegan: true\n        cheap: true\n        dishTypes:\n        - dishTypes\n        - dishTypes\n        extendedIngredients:\n        - originalName: originalName\n          image: image\n          amount: 3.616076749251911\n          measures:\n            metric:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n            us:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n          unit: unit\n          original: original\n          consitency: consitency\n          meta:\n          - meta\n          - meta\n          name: name\n          id: 2\n          aisle: aisle\n        - originalName: originalName\n          image: image\n          amount: 3.616076749251911\n          measures:\n            metric:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n            us:\n              amount: 4.145608029883936\n              unitShort: unitShort\n              unitLong: unitLong\n          unit: unit\n          original: original\n          consitency: consitency\n          meta:\n          - meta\n          - meta\n          name: name\n          id: 2\n          aisle: aisle\n        gaps: gaps\n        cuisines:\n        - cuisines\n        - cuisines\n        lowFodmap: true\n        license: license\n        weightWatcherSmartPoints: 9.301444243932576\n        occasions:\n        - occasions\n        - occasions\n        spoonacularScore: 2.3021358869347655\n        pricePerServing: 7.061401241503109\n        sourceName: sourceName\n        spoonacularSourceUrl: spoonacularSourceUrl\n        ketogenic: true\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        servings:\n          type: number\n        readyInMinutes:\n          type: integer\n        license:\n          minLength: 1\n          type: string\n        sourceName:\n          minLength: 1\n          type: string\n        sourceUrl:\n          minLength: 1\n          type: string\n        spoonacularSourceUrl:\n          minLength: 1\n          type: string\n        aggregateLikes:\n          type: number\n        healthScore:\n          type: number\n        spoonacularScore:\n          type: number\n        pricePerServing:\n          type: number\n        analyzedInstructions:\n          items:\n            type: object\n          type: array\n        cheap:\n          type: boolean\n        creditsText:\n          minLength: 1\n          type: string\n        cuisines:\n          items:\n            type: string\n          type: array\n        dairyFree:\n          type: boolean\n        diets:\n          items:\n            type: string\n          type: array\n        gaps:\n          minLength: 1\n          type: string\n        glutenFree:\n          type: boolean\n        instructions:\n          type: string\n        ketogenic:\n          type: boolean\n        lowFodmap:\n          type: boolean\n        occasions:\n          items:\n            type: string\n          type: array\n        sustainable:\n          type: boolean\n        vegan:\n          type: boolean\n        vegetarian:\n          type: boolean\n        veryHealthy:\n          type: boolean\n        veryPopular:\n          type: boolean\n        whole30:\n          type: boolean\n        weightWatcherSmartPoints:\n          type: number\n        dishTypes:\n          items:\n            type: string\n          type: array\n        extendedIngredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_3_extendedIngredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        summary:\n          minLength: 1\n          type: string\n        winePairing:\n          $ref: '#/components/schemas/inline_response_200_3_winePairing'\n      required:\n      - aggregateLikes\n      - cheap\n      - creditsText\n      - dairyFree\n      - gaps\n      - glutenFree\n      - healthScore\n      - id\n      - image\n      - imageType\n      - instructions\n      - ketogenic\n      - license\n      - lowFodmap\n      - pricePerServing\n      - readyInMinutes\n      - servings\n      - sourceName\n      - sourceUrl\n      - spoonacularScore\n      - spoonacularSourceUrl\n      - summary\n      - sustainable\n      - title\n      - vegan\n      - vegetarian\n      - veryHealthy\n      - veryPopular\n      - weightWatcherSmartPoints\n      - whole30\n    inline_response_200_6:\n      example:\n        recipes:\n        - instructions: instructions\n          sustainable: true\n          analyzedInstructions:\n          - '{}'\n          - '{}'\n          glutenFree: true\n          veryPopular: true\n          title: title\n          healthScore: 5.637376656633329\n          diets:\n          - diets\n          - diets\n          aggregateLikes: 5.962133916683182\n          readyInMinutes: 1\n          sourceUrl: sourceUrl\n          creditsText: creditsText\n          dairyFree: true\n          servings: 6.027456183070403\n          vegetarian: true\n          whole30: true\n          id: 0\n          imageType: imageType\n          winePairing:\n            productMatches:\n            - score: 1.4894159098541704\n              price: price\n              imageUrl: imageUrl\n              averageRating: 1.2315135367772556\n              link: link\n              description: description\n              id: 7\n              title: title\n              ratingCount: 1\n            - score: 1.4894159098541704\n              price: price\n              imageUrl: imageUrl\n              averageRating: 1.2315135367772556\n              link: link\n              description: description\n              id: 7\n              title: title\n              ratingCount: 1\n            pairingText: pairingText\n            pairedWines:\n            - pairedWines\n            - pairedWines\n          summary: summary\n          image: image\n          veryHealthy: true\n          vegan: true\n          cheap: true\n          dishTypes:\n          - dishTypes\n          - dishTypes\n          extendedIngredients:\n          - originalName: originalName\n            image: image\n            amount: 3.616076749251911\n            measures:\n              metric:\n                amount: 4.145608029883936\n                unitShort: unitShort\n                unitLong: unitLong\n              us:\n                amount: 4.145608029883936\n                unitShort: unitShort\n                unitLong: unitLong\n            unit: unit\n            original: original\n            consitency: consitency\n            meta:\n            - meta\n            - meta\n            name: name\n            id: 2\n            aisle: aisle\n          - originalName: originalName\n            image: image\n            amount: 3.616076749251911\n            measures:\n              metric:\n                amount: 4.145608029883936\n                unitShort: unitShort\n                unitLong: unitLong\n              us:\n                amount: 4.145608029883936\n                unitShort: unitShort\n                unitLong: unitLong\n            unit: unit\n            original: original\n            consitency: consitency\n            meta:\n            - meta\n            - meta\n            name: name\n            id: 2\n            aisle: aisle\n          gaps: gaps\n          cuisines:\n          - cuisines\n          - cuisines\n          lowFodmap: true\n          license: license\n          weightWatcherSmartPoints: 9.301444243932576\n          occasions:\n          - occasions\n          - occasions\n          spoonacularScore: 2.3021358869347655\n          pricePerServing: 7.061401241503109\n          sourceName: sourceName\n          spoonacularSourceUrl: spoonacularSourceUrl\n          ketogenic: true\n        - instructions: instructions\n          sustainable: true\n          analyzedInstructions:\n          - '{}'\n          - '{}'\n          glutenFree: true\n          veryPopular: true\n          title: title\n          healthScore: 5.637376656633329\n          diets:\n          - diets\n          - diets\n          aggregateLikes: 5.962133916683182\n          readyInMinutes: 1\n          sourceUrl: sourceUrl\n          creditsText: creditsText\n          dairyFree: true\n          servings: 6.027456183070403\n          vegetarian: true\n          whole30: true\n          id: 0\n          imageType: imageType\n          winePairing:\n            productMatches:\n            - score: 1.4894159098541704\n              price: price\n              imageUrl: imageUrl\n              averageRating: 1.2315135367772556\n              link: link\n              description: description\n              id: 7\n              title: title\n              ratingCount: 1\n            - score: 1.4894159098541704\n              price: price\n              imageUrl: imageUrl\n              averageRating: 1.2315135367772556\n              link: link\n              description: description\n              id: 7\n              title: title\n              ratingCount: 1\n            pairingText: pairingText\n            pairedWines:\n            - pairedWines\n            - pairedWines\n          summary: summary\n          image: image\n          veryHealthy: true\n          vegan: true\n          cheap: true\n          dishTypes:\n          - dishTypes\n          - dishTypes\n          extendedIngredients:\n          - originalName: originalName\n            image: image\n            amount: 3.616076749251911\n            measures:\n              metric:\n                amount: 4.145608029883936\n                unitShort: unitShort\n                unitLong: unitLong\n              us:\n                amount: 4.145608029883936\n                unitShort: unitShort\n                unitLong: unitLong\n            unit: unit\n            original: original\n            consitency: consitency\n            meta:\n            - meta\n            - meta\n            name: name\n            id: 2\n            aisle: aisle\n          - originalName: originalName\n            image: image\n            amount: 3.616076749251911\n            measures:\n              metric:\n                amount: 4.145608029883936\n                unitShort: unitShort\n                unitLong: unitLong\n              us:\n                amount: 4.145608029883936\n                unitShort: unitShort\n                unitLong: unitLong\n            unit: unit\n            original: original\n            consitency: consitency\n            meta:\n            - meta\n            - meta\n            name: name\n            id: 2\n            aisle: aisle\n          gaps: gaps\n          cuisines:\n          - cuisines\n          - cuisines\n          lowFodmap: true\n          license: license\n          weightWatcherSmartPoints: 9.301444243932576\n          occasions:\n          - occasions\n          - occasions\n          spoonacularScore: 2.3021358869347655\n          pricePerServing: 7.061401241503109\n          sourceName: sourceName\n          spoonacularSourceUrl: spoonacularSourceUrl\n          ketogenic: true\n      properties:\n        recipes:\n          items:\n            $ref: '#/components/schemas/inline_response_200_6_recipes'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - recipes\n    inline_response_200_7:\n      example:\n        id: 0\n        title: title\n        imageType: imageType\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - imageType\n      - title\n    inline_response_200_8:\n      example:\n        fattiness: 2.3021358869347655\n        spiciness: 7.061401241503109\n        saltiness: 6.027456183070403\n        bitterness: 5.962133916683182\n        savoriness: 5.637376656633329\n        sweetness: 0.8008281904610115\n        sourness: 1.4658129805029452\n      properties:\n        sweetness:\n          type: number\n        saltiness:\n          type: number\n        sourness:\n          type: number\n        bitterness:\n          type: number\n        savoriness:\n          type: number\n        fattiness:\n          type: number\n        spiciness:\n          type: number\n      required:\n      - bitterness\n      - fattiness\n      - saltiness\n      - savoriness\n      - sourness\n      - spiciness\n      - sweetness\n    inline_response_200_9:\n      example:\n        equipment:\n        - '{}'\n        - '{}'\n      properties:\n        equipment:\n          items:\n            properties:\n              image:\n                minLength: 1\n                type: string\n              name:\n                minLength: 1\n                type: string\n            required:\n            - image\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - equipment\n    inline_response_200_10_amount_metric:\n      example:\n        unit: unit\n        value: 0.8008281904610115\n      properties:\n        unit:\n          minLength: 0\n          type: string\n        value:\n          type: number\n      required:\n      - unit\n      - value\n    inline_response_200_10_amount:\n      example:\n        metric:\n          unit: unit\n          value: 0.8008281904610115\n        us:\n          unit: unit\n          value: 0.8008281904610115\n      properties:\n        metric:\n          $ref: '#/components/schemas/inline_response_200_10_amount_metric'\n        us:\n          $ref: '#/components/schemas/inline_response_200_10_amount_metric'\n      required:\n      - metric\n      - us\n    inline_response_200_10_ingredients:\n      example:\n        image: image\n        amount:\n          metric:\n            unit: unit\n            value: 0.8008281904610115\n          us:\n            unit: unit\n            value: 0.8008281904610115\n        price: 6.027456183070403\n        name: name\n      properties:\n        amount:\n          $ref: '#/components/schemas/inline_response_200_10_amount'\n        image:\n          minLength: 1\n          type: string\n        name:\n          minLength: 1\n          type: string\n        price:\n          type: number\n      required:\n      - image\n      - name\n      - price\n    inline_response_200_10:\n      example:\n        totalCostPerServing: 5.962133916683182\n        ingredients:\n        - image: image\n          amount:\n            metric:\n              unit: unit\n              value: 0.8008281904610115\n            us:\n              unit: unit\n              value: 0.8008281904610115\n          price: 6.027456183070403\n          name: name\n        - image: image\n          amount:\n            metric:\n              unit: unit\n              value: 0.8008281904610115\n            us:\n              unit: unit\n              value: 0.8008281904610115\n          price: 6.027456183070403\n          name: name\n        totalCost: 1.4658129805029452\n      properties:\n        ingredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_10_ingredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        totalCost:\n          type: number\n        totalCostPerServing:\n          type: number\n      required:\n      - ingredients\n      - totalCost\n      - totalCostPerServing\n    inline_response_200_11_ingredients:\n      example:\n        image: image\n        amount:\n          metric:\n            unit: unit\n            value: 0.8008281904610115\n          us:\n            unit: unit\n            value: 0.8008281904610115\n        name: name\n      properties:\n        amount:\n          $ref: '#/components/schemas/inline_response_200_10_amount'\n        image:\n          minLength: 1\n          type: string\n        name:\n          minLength: 1\n          type: string\n      required:\n      - image\n      - name\n    inline_response_200_11:\n      example:\n        ingredients:\n        - image: image\n          amount:\n            metric:\n              unit: unit\n              value: 0.8008281904610115\n            us:\n              unit: unit\n              value: 0.8008281904610115\n          name: name\n        - image: image\n          amount:\n            metric:\n              unit: unit\n              value: 0.8008281904610115\n            us:\n              unit: unit\n              value: 0.8008281904610115\n          name: name\n      properties:\n        ingredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_11_ingredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - ingredients\n    inline_response_200_12:\n      example:\n        bad:\n        - '{}'\n        - '{}'\n        carbs: carbs\n        protein: protein\n        fat: fat\n        calories: calories\n        good:\n        - '{}'\n        - '{}'\n      properties:\n        calories:\n          minLength: 1\n          type: string\n        carbs:\n          minLength: 1\n          type: string\n        fat:\n          minLength: 1\n          type: string\n        protein:\n          minLength: 1\n          type: string\n        bad:\n          items:\n            properties:\n              name:\n                minLength: 1\n                type: string\n              amount:\n                minLength: 1\n                type: string\n              indented:\n                type: boolean\n              percentOfDailyNeeds:\n                type: number\n            required:\n            - amount\n            - indented\n            - name\n            - percentOfDailyNeeds\n          minItems: 0\n          type: array\n          uniqueItems: true\n        good:\n          items:\n            properties:\n              amount:\n                minLength: 1\n                type: string\n              indented:\n                type: boolean\n              percentOfDailyNeeds:\n                type: number\n              name:\n                minLength: 1\n                type: string\n            required:\n            - amount\n            - indented\n            - name\n            - percentOfDailyNeeds\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - bad\n      - calories\n      - carbs\n      - fat\n      - good\n      - protein\n    inline_response_200_13_ingredients:\n      example:\n        image: image\n        localizedName: localizedName\n        name: name\n        id: 6\n      properties:\n        id:\n          type: integer\n        name:\n          minLength: 1\n          type: string\n        localizedName:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - image\n      - localizedName\n      - name\n    inline_response_200_13_steps:\n      example:\n        number: 0.8008281904610115\n        ingredients:\n        - image: image\n          localizedName: localizedName\n          name: name\n          id: 6\n        - image: image\n          localizedName: localizedName\n          name: name\n          id: 6\n        equipment:\n        - image: image\n          localizedName: localizedName\n          name: name\n          id: 6\n        - image: image\n          localizedName: localizedName\n          name: name\n          id: 6\n        step: step\n      properties:\n        number:\n          type: number\n        step:\n          minLength: 1\n          type: string\n        ingredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_13_ingredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        equipment:\n          items:\n            $ref: '#/components/schemas/inline_response_200_13_ingredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - number\n      - step\n    inline_response_200_13_parsedInstructions:\n      example:\n        name: name\n        steps:\n        - number: 0.8008281904610115\n          ingredients:\n          - image: image\n            localizedName: localizedName\n            name: name\n            id: 6\n          - image: image\n            localizedName: localizedName\n            name: name\n            id: 6\n          equipment:\n          - image: image\n            localizedName: localizedName\n            name: name\n            id: 6\n          - image: image\n            localizedName: localizedName\n            name: name\n            id: 6\n          step: step\n        - number: 0.8008281904610115\n          ingredients:\n          - image: image\n            localizedName: localizedName\n            name: name\n            id: 6\n          - image: image\n            localizedName: localizedName\n            name: name\n            id: 6\n          equipment:\n          - image: image\n            localizedName: localizedName\n            name: name\n            id: 6\n          - image: image\n            localizedName: localizedName\n            name: name\n            id: 6\n          step: step\n      properties:\n        name:\n          type: string\n        steps:\n          items:\n            $ref: '#/components/schemas/inline_response_200_13_steps'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - name\n    inline_response_200_13_ingredients_1:\n      example:\n        name: name\n        id: 1\n      properties:\n        id:\n          type: integer\n        name:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - name\n    inline_response_200_13:\n      example:\n        parsedInstructions:\n        - name: name\n          steps:\n          - number: 0.8008281904610115\n            ingredients:\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            equipment:\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            step: step\n          - number: 0.8008281904610115\n            ingredients:\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            equipment:\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            step: step\n        - name: name\n          steps:\n          - number: 0.8008281904610115\n            ingredients:\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            equipment:\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            step: step\n          - number: 0.8008281904610115\n            ingredients:\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            equipment:\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            - image: image\n              localizedName: localizedName\n              name: name\n              id: 6\n            step: step\n        ingredients:\n        - name: name\n          id: 1\n        - name: name\n          id: 1\n        equipment:\n        - name: name\n          id: 1\n        - name: name\n          id: 1\n      properties:\n        parsedInstructions:\n          items:\n            $ref: '#/components/schemas/inline_response_200_13_parsedInstructions'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ingredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_13_ingredients_1'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        equipment:\n          items:\n            $ref: '#/components/schemas/inline_response_200_13_ingredients_1'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - equipment\n      - ingredients\n      - parsedInstructions\n    inline_response_200_14:\n      example:\n        summary: summary\n        id: 0\n        title: title\n      properties:\n        id:\n          type: integer\n        summary:\n          minLength: 1\n          type: string\n        title:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - summary\n      - title\n    inline_response_200_15:\n      example:\n        url: url\n      properties:\n        url:\n          minLength: 1\n          type: string\n      required:\n      - url\n    inline_response_200_16:\n      example:\n        parsedInstructions:\n        - '{}'\n        - '{}'\n        ingredients:\n        - '{}'\n        - '{}'\n        equipment:\n        - '{}'\n        - '{}'\n      properties:\n        parsedInstructions:\n          items:\n            properties:\n              name:\n                type: string\n              steps:\n                items:\n                  properties:\n                    number:\n                      type: number\n                    step:\n                      minLength: 1\n                      type: string\n                    ingredients:\n                      items:\n                        properties:\n                          id:\n                            type: number\n                          name:\n                            minLength: 1\n                            type: string\n                          localizedName:\n                            minLength: 1\n                            type: string\n                          image:\n                            minLength: 1\n                            type: string\n                        required:\n                        - id\n                        - image\n                        - localizedName\n                        - name\n                      minItems: 0\n                      type: array\n                      uniqueItems: true\n                    equipment:\n                      items:\n                        properties:\n                          id:\n                            type: number\n                          name:\n                            minLength: 1\n                            type: string\n                          localizedName:\n                            minLength: 1\n                            type: string\n                          image:\n                            minLength: 1\n                            type: string\n                        required:\n                        - id\n                        - image\n                        - localizedName\n                        - name\n                      minItems: 0\n                      type: array\n                      uniqueItems: true\n                  required:\n                  - number\n                  - step\n                minItems: 0\n                type: array\n                uniqueItems: true\n            required:\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ingredients:\n          items:\n            properties:\n              id:\n                type: number\n              name:\n                minLength: 1\n                type: string\n            required:\n            - id\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n        equipment:\n          items:\n            properties:\n              id:\n                type: number\n              name:\n                minLength: 1\n                type: string\n            required:\n            - id\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - equipment\n      - ingredients\n      - parsedInstructions\n    inline_response_200_17:\n      example:\n        confidence: 0.8008281904610115\n        cuisine: cuisine\n        cuisines:\n        - cuisines\n        - cuisines\n      properties:\n        cuisine:\n          minLength: 1\n          type: string\n        cuisines:\n          items:\n            type: string\n          type: array\n        confidence:\n          type: number\n      required:\n      - confidence\n      - cuisine\n      - cuisines\n    inline_response_200_18_dishes:\n      example:\n        image: image\n        name: name\n      properties:\n        image:\n          minLength: 1\n          type: string\n        name:\n          minLength: 1\n          type: string\n      required:\n      - image\n      - name\n    inline_response_200_18_ingredients:\n      example:\n        image: image\n        include: true\n        name: name\n      properties:\n        image:\n          minLength: 1\n          type: string\n        include:\n          type: boolean\n        name:\n          minLength: 1\n          type: string\n      required:\n      - image\n      - include\n      - name\n    inline_response_200_18:\n      example:\n        ingredients:\n        - image: image\n          include: true\n          name: name\n        - image: image\n          include: true\n          name: name\n        dishes:\n        - image: image\n          name: name\n        - image: image\n          name: name\n        modifiers:\n        - modifiers\n        - modifiers\n        cuisines:\n        - cuisines\n        - cuisines\n      properties:\n        dishes:\n          items:\n            $ref: '#/components/schemas/inline_response_200_18_dishes'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ingredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_18_ingredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        cuisines:\n          items:\n            type: string\n          type: array\n        modifiers:\n          items:\n            type: string\n          type: array\n      required:\n      - cuisines\n      - dishes\n      - ingredients\n      - modifiers\n    inline_response_200_19:\n      example:\n        targetUnit: targetUnit\n        answer: answer\n        targetAmount: 6.027456183070403\n        sourceAmount: 0.8008281904610115\n        sourceUnit: sourceUnit\n      properties:\n        sourceAmount:\n          type: number\n        sourceUnit:\n          minLength: 1\n          type: string\n        targetAmount:\n          type: number\n        targetUnit:\n          minLength: 1\n          type: string\n        answer:\n          minLength: 1\n          type: string\n      required:\n      - answer\n      - sourceAmount\n      - sourceUnit\n      - targetAmount\n      - targetUnit\n    _recipes_parseIngredients_estimatedCost:\n      example:\n        unit: unit\n        value: 1.4658129805029452\n      properties:\n        value:\n          type: number\n        unit:\n          minLength: 1\n          type: string\n      required:\n      - unit\n      - value\n    _recipes_parseIngredients_nutrition_nutrients:\n      example:\n        amount: 5.962133916683182\n        unit: unit\n        percentOfDailyNeeds: 5.637376656633329\n        name: name\n      properties:\n        name:\n          minLength: 1\n          type: string\n        amount:\n          type: number\n        unit:\n          minLength: 1\n          type: string\n        percentOfDailyNeeds:\n          type: number\n      required:\n      - amount\n      - name\n      - percentOfDailyNeeds\n      - unit\n    _recipes_parseIngredients_nutrition_properties:\n      example:\n        amount: 2.3021358869347655\n        unit: unit\n        name: name\n      properties:\n        name:\n          minLength: 1\n          type: string\n        amount:\n          type: number\n        unit:\n          type: string\n      required:\n      - amount\n      - name\n      - unit\n    _recipes_parseIngredients_nutrition_caloricBreakdown:\n      example:\n        percentCarbs: 3.616076749251911\n        percentProtein: 7.061401241503109\n        percentFat: 9.301444243932576\n      properties:\n        percentProtein:\n          type: number\n        percentFat:\n          type: number\n        percentCarbs:\n          type: number\n      required:\n      - percentCarbs\n      - percentFat\n      - percentProtein\n    _recipes_parseIngredients_nutrition_weightPerServing:\n      example:\n        amount: 2.027123023002322\n        unit: unit\n      properties:\n        amount:\n          type: number\n        unit:\n          minLength: 1\n          type: string\n      required:\n      - amount\n      - unit\n    _recipes_parseIngredients_nutrition:\n      example:\n        caloricBreakdown:\n          percentCarbs: 3.616076749251911\n          percentProtein: 7.061401241503109\n          percentFat: 9.301444243932576\n        weightPerServing:\n          amount: 2.027123023002322\n          unit: unit\n        flavonoids:\n        - amount: 2.3021358869347655\n          unit: unit\n          name: name\n        - amount: 2.3021358869347655\n          unit: unit\n          name: name\n        properties:\n        - amount: 2.3021358869347655\n          unit: unit\n          name: name\n        - amount: 2.3021358869347655\n          unit: unit\n          name: name\n        nutrients:\n        - amount: 5.962133916683182\n          unit: unit\n          percentOfDailyNeeds: 5.637376656633329\n          name: name\n        - amount: 5.962133916683182\n          unit: unit\n          percentOfDailyNeeds: 5.637376656633329\n          name: name\n      properties:\n        nutrients:\n          items:\n            $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_nutrients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        properties:\n          items:\n            $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_properties'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        flavonoids:\n          items:\n            $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_properties'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        caloricBreakdown:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_caloricBreakdown'\n        weightPerServing:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_weightPerServing'\n      required:\n      - caloricBreakdown\n      - flavonoids\n      - nutrients\n      - properties\n      - weightPerServing\n    inline_response_200_20:\n      example:\n        image: image\n        amount: 6.027456183070403\n        original: original\n        nameClean: nameClean\n        unitLong: unitLong\n        possibleUnits:\n        - possibleUnits\n        - possibleUnits\n        estimatedCost:\n          unit: unit\n          value: 1.4658129805029452\n        aisle: aisle\n        consistency: consistency\n        originalName: originalName\n        unit: unit\n        nutrition:\n          caloricBreakdown:\n            percentCarbs: 3.616076749251911\n            percentProtein: 7.061401241503109\n            percentFat: 9.301444243932576\n          weightPerServing:\n            amount: 2.027123023002322\n            unit: unit\n          flavonoids:\n          - amount: 2.3021358869347655\n            unit: unit\n            name: name\n          - amount: 2.3021358869347655\n            unit: unit\n            name: name\n          properties:\n          - amount: 2.3021358869347655\n            unit: unit\n            name: name\n          - amount: 2.3021358869347655\n            unit: unit\n            name: name\n          nutrients:\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n        unitShort: unitShort\n        meta:\n        - meta\n        - meta\n        name: name\n        id: 0\n      properties:\n        id:\n          type: integer\n        original:\n          minLength: 1\n          type: string\n        originalName:\n          minLength: 1\n          type: string\n        name:\n          minLength: 1\n          type: string\n        nameClean:\n          minLength: 1\n          type: string\n        amount:\n          type: number\n        unit:\n          minLength: 1\n          type: string\n        unitShort:\n          minLength: 1\n          type: string\n        unitLong:\n          minLength: 1\n          type: string\n        possibleUnits:\n          items:\n            type: string\n          type: array\n        estimatedCost:\n          $ref: '#/components/schemas/_recipes_parseIngredients_estimatedCost'\n        consistency:\n          minLength: 1\n          type: string\n        aisle:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        meta:\n          items:\n            type: string\n          type: array\n        nutrition:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition'\n      required:\n      - aisle\n      - amount\n      - consistency\n      - estimatedCost\n      - id\n      - image\n      - meta\n      - name\n      - nameClean\n      - nutrition\n      - original\n      - originalName\n      - possibleUnits\n      - unit\n      - unitLong\n      - unitShort\n    inline_response_200_21_calories_confidenceRange95Percent:\n      example:\n        min: 6.027456183070403\n        max: 0.8008281904610115\n      properties:\n        max:\n          type: number\n        min:\n          type: number\n      required:\n      - max\n      - min\n    inline_response_200_21_calories:\n      example:\n        confidenceRange95Percent:\n          min: 6.027456183070403\n          max: 0.8008281904610115\n        unit: unit\n        value: 5.962133916683182\n        standardDeviation: 1.4658129805029452\n      properties:\n        confidenceRange95Percent:\n          $ref: '#/components/schemas/inline_response_200_21_calories_confidenceRange95Percent'\n        standardDeviation:\n          type: number\n        unit:\n          minLength: 1\n          type: string\n        value:\n          type: number\n      required:\n      - confidenceRange95Percent\n      - standardDeviation\n      - unit\n      - value\n    inline_response_200_21:\n      example:\n        recipesUsed: 5\n        carbs:\n          confidenceRange95Percent:\n            min: 6.027456183070403\n            max: 0.8008281904610115\n          unit: unit\n          value: 5.962133916683182\n          standardDeviation: 1.4658129805029452\n        protein:\n          confidenceRange95Percent:\n            min: 6.027456183070403\n            max: 0.8008281904610115\n          unit: unit\n          value: 5.962133916683182\n          standardDeviation: 1.4658129805029452\n        fat:\n          confidenceRange95Percent:\n            min: 6.027456183070403\n            max: 0.8008281904610115\n          unit: unit\n          value: 5.962133916683182\n          standardDeviation: 1.4658129805029452\n        calories:\n          confidenceRange95Percent:\n            min: 6.027456183070403\n            max: 0.8008281904610115\n          unit: unit\n          value: 5.962133916683182\n          standardDeviation: 1.4658129805029452\n      properties:\n        calories:\n          $ref: '#/components/schemas/inline_response_200_21_calories'\n        carbs:\n          $ref: '#/components/schemas/inline_response_200_21_calories'\n        fat:\n          $ref: '#/components/schemas/inline_response_200_21_calories'\n        protein:\n          $ref: '#/components/schemas/inline_response_200_21_calories'\n        recipesUsed:\n          type: integer\n      required:\n      - calories\n      - carbs\n      - fat\n      - protein\n      - recipesUsed\n    inline_response_200_22_nutrition:\n      example:\n        caloricBreakdown:\n          percentCarbs: 3.616076749251911\n          percentProtein: 7.061401241503109\n          percentFat: 9.301444243932576\n        weightPerServing:\n          amount: 2.027123023002322\n          unit: unit\n        properties:\n        - amount: 2.3021358869347655\n          unit: unit\n          name: name\n        - amount: 2.3021358869347655\n          unit: unit\n          name: name\n        nutrients:\n        - amount: 5.962133916683182\n          unit: unit\n          percentOfDailyNeeds: 5.637376656633329\n          name: name\n        - amount: 5.962133916683182\n          unit: unit\n          percentOfDailyNeeds: 5.637376656633329\n          name: name\n      properties:\n        nutrients:\n          items:\n            $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_nutrients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        properties:\n          items:\n            $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_properties'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        caloricBreakdown:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_caloricBreakdown'\n        weightPerServing:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_weightPerServing'\n      required:\n      - caloricBreakdown\n      - nutrients\n      - properties\n      - weightPerServing\n    inline_response_200_22:\n      example:\n        shoppingListUnits:\n        - shoppingListUnits\n        - shoppingListUnits\n        image: image\n        amount: 6.027456183070403\n        original: original\n        nameClean: nameClean\n        categoryPath:\n        - categoryPath\n        - categoryPath\n        unitLong: unitLong\n        possibleUnits:\n        - possibleUnits\n        - possibleUnits\n        estimatedCost:\n          unit: unit\n          value: 1.4658129805029452\n        aisle: aisle\n        consistency: consistency\n        originalName: originalName\n        unit: unit\n        nutrition:\n          caloricBreakdown:\n            percentCarbs: 3.616076749251911\n            percentProtein: 7.061401241503109\n            percentFat: 9.301444243932576\n          weightPerServing:\n            amount: 2.027123023002322\n            unit: unit\n          properties:\n          - amount: 2.3021358869347655\n            unit: unit\n            name: name\n          - amount: 2.3021358869347655\n            unit: unit\n            name: name\n          nutrients:\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n        unitShort: unitShort\n        meta:\n        - '{}'\n        - '{}'\n        name: name\n        id: 0\n      properties:\n        id:\n          type: integer\n        original:\n          minLength: 1\n          type: string\n        originalName:\n          minLength: 1\n          type: string\n        name:\n          minLength: 1\n          type: string\n        nameClean:\n          minLength: 1\n          type: string\n        amount:\n          type: number\n        unit:\n          type: string\n        unitShort:\n          type: string\n        unitLong:\n          type: string\n        possibleUnits:\n          items:\n            type: string\n          type: array\n        estimatedCost:\n          $ref: '#/components/schemas/_recipes_parseIngredients_estimatedCost'\n        consistency:\n          minLength: 1\n          type: string\n        shoppingListUnits:\n          items:\n            type: string\n          type: array\n        aisle:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        meta:\n          items:\n            type: object\n          type: array\n        nutrition:\n          $ref: '#/components/schemas/inline_response_200_22_nutrition'\n        categoryPath:\n          items:\n            type: string\n          type: array\n      required:\n      - aisle\n      - amount\n      - categoryPath\n      - consistency\n      - estimatedCost\n      - id\n      - image\n      - meta\n      - name\n      - nameClean\n      - nutrition\n      - original\n      - originalName\n      - possibleUnits\n      - shoppingListUnits\n      - unit\n      - unitLong\n      - unitShort\n    inline_object:\n      properties:\n        ingredients:\n          items:\n            type: string\n          type: array\n      required:\n      - ingredients\n      type: object\n      x-examples:\n        example-1:\n          ingredients:\n          - 1 kiwi\n          - 2 cups rice\n          - 2 glasses of water\n    inline_response_200_23_ingredients:\n      example:\n        original: original\n        glycemicLoad: 5.962133916683182\n        id: 6\n        glycemicIndex: 1.4658129805029452\n      properties:\n        id:\n          type: integer\n        original:\n          minLength: 1\n          type: string\n        glycemicIndex:\n          type: number\n        glycemicLoad:\n          type: number\n      required:\n      - glycemicIndex\n      - glycemicLoad\n      - id\n      - original\n    inline_response_200_23:\n      example:\n        totalGlycemicLoad: 0.8008281904610115\n        ingredients:\n        - original: original\n          glycemicLoad: 5.962133916683182\n          id: 6\n          glycemicIndex: 1.4658129805029452\n        - original: original\n          glycemicLoad: 5.962133916683182\n          id: 6\n          glycemicIndex: 1.4658129805029452\n      properties:\n        totalGlycemicLoad:\n          type: number\n        ingredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_23_ingredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - ingredients\n      - totalGlycemicLoad\n    inline_response_200_24:\n      example:\n        image: image\n        name: name\n        possibleUnits:\n        - possibleUnits\n        - possibleUnits\n        id: 0\n        aisle: aisle\n      properties:\n        name:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        id:\n          type: integer\n        aisle:\n          minLength: 1\n          type: string\n        possibleUnits:\n          items:\n            type: string\n          type: array\n      required:\n      - aisle\n      - id\n      - image\n      - name\n      - possibleUnits\n    inline_response_200_25_results:\n      example:\n        image: image\n        name: name\n        id: 0\n      properties:\n        id:\n          type: integer\n        name:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - image\n      - name\n    inline_response_200_25:\n      example:\n        number: 1\n        totalResults: 5\n        offset: 6\n        results:\n        - image: image\n          name: name\n          id: 0\n        - image: image\n          name: name\n          id: 0\n      properties:\n        results:\n          items:\n            $ref: '#/components/schemas/inline_response_200_25_results'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        offset:\n          type: integer\n        number:\n          type: integer\n        totalResults:\n          type: integer\n      required:\n      - number\n      - offset\n      - results\n      - totalResults\n    inline_response_200_26:\n      example:\n        ingredient: ingredient\n        substitutes:\n        - substitutes\n        - substitutes\n        message: message\n      properties:\n        ingredient:\n          minLength: 1\n          type: string\n        substitutes:\n          items:\n            type: string\n          type: array\n        message:\n          minLength: 1\n          type: string\n      required:\n      - ingredient\n      - message\n      - substitutes\n    inline_response_200_27:\n      example:\n        number: 1\n        offset: 6\n        totalProducts: 0\n        type: type\n        products:\n        - id: 0\n          title: title\n          imageType: imageType\n        - id: 0\n          title: title\n          imageType: imageType\n      properties:\n        products:\n          items:\n            $ref: '#/components/schemas/inline_response_200_7'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        totalProducts:\n          type: integer\n        type:\n          minLength: 1\n          type: string\n        offset:\n          type: integer\n        number:\n          type: integer\n      required:\n      - number\n      - offset\n      - products\n      - totalProducts\n      - type\n    inline_response_200_28_ingredients:\n      example:\n        safety_level: \"\"\n        name: name\n        description: \"\"\n      properties:\n        description: {}\n        name:\n          type: string\n        safety_level: {}\n      required:\n      - name\n    inline_response_200_28_nutrition:\n      example:\n        caloricBreakdown:\n          percentCarbs: 3.616076749251911\n          percentProtein: 7.061401241503109\n          percentFat: 9.301444243932576\n        nutrients:\n        - amount: 5.962133916683182\n          unit: unit\n          percentOfDailyNeeds: 5.637376656633329\n          name: name\n        - amount: 5.962133916683182\n          unit: unit\n          percentOfDailyNeeds: 5.637376656633329\n          name: name\n      properties:\n        nutrients:\n          items:\n            $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_nutrients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        caloricBreakdown:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_caloricBreakdown'\n      required:\n      - caloricBreakdown\n      - nutrients\n    inline_response_200_28_servings:\n      example:\n        number: 5.637376656633329\n        unit: unit\n        size: 2.3021358869347655\n      properties:\n        number:\n          type: number\n        size:\n          type: number\n        unit:\n          minLength: 1\n          type: string\n      required:\n      - number\n      - size\n      - unit\n    inline_response_200_28:\n      example:\n        ingredientCount: 6\n        title: title\n        badges:\n        - badges\n        - badges\n        generatedText: generatedText\n        nutrition:\n          caloricBreakdown:\n            percentCarbs: 3.616076749251911\n            percentProtein: 7.061401241503109\n            percentFat: 9.301444243932576\n          nutrients:\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n        servings:\n          number: 5.637376656633329\n          unit: unit\n          size: 2.3021358869347655\n        price: 5.962133916683182\n        ingredientList: ingredientList\n        ingredients:\n        - safety_level: \"\"\n          name: name\n          description: \"\"\n        - safety_level: \"\"\n          name: name\n          description: \"\"\n        spoonacularScore: 7.061401241503109\n        id: 0\n        imageType: imageType\n        breadcrumbs:\n        - breadcrumbs\n        - breadcrumbs\n        importantBadges:\n        - importantBadges\n        - importantBadges\n        likes: 1.4658129805029452\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        badges:\n          items:\n            type: string\n          type: array\n        importantBadges:\n          items:\n            type: string\n          type: array\n        breadcrumbs:\n          items:\n            type: string\n          type: array\n        generatedText:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        ingredientCount:\n          type: integer\n        ingredientList:\n          minLength: 1\n          type: string\n        ingredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_28_ingredients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        likes:\n          type: number\n        nutrition:\n          $ref: '#/components/schemas/inline_response_200_28_nutrition'\n        price:\n          type: number\n        servings:\n          $ref: '#/components/schemas/inline_response_200_28_servings'\n        spoonacularScore:\n          type: number\n      required:\n      - badges\n      - breadcrumbs\n      - generatedText\n      - id\n      - imageType\n      - importantBadges\n      - ingredientList\n      - ingredients\n      - likes\n      - nutrition\n      - price\n      - servings\n      - spoonacularScore\n      - title\n    inline_response_200_29_customFoods:\n      example:\n        servings: 6.027456183070403\n        price: 1.4658129805029452\n        imageUrl: imageUrl\n        id: 0\n        title: title\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        servings:\n          type: number\n        imageUrl:\n          minLength: 1\n          type: string\n        price:\n          type: number\n      required:\n      - id\n      - imageUrl\n      - price\n      - servings\n      - title\n    inline_response_200_29:\n      example:\n        number: 5\n        offset: 5\n        type: type\n        customFoods:\n        - servings: 6.027456183070403\n          price: 1.4658129805029452\n          imageUrl: imageUrl\n          id: 0\n          title: title\n        - servings: 6.027456183070403\n          price: 1.4658129805029452\n          imageUrl: imageUrl\n          id: 0\n          title: title\n      properties:\n        customFoods:\n          items:\n            $ref: '#/components/schemas/inline_response_200_29_customFoods'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        type:\n          minLength: 1\n          type: string\n        offset:\n          type: integer\n        number:\n          type: integer\n      required:\n      - customFoods\n      - number\n      - offset\n      - type\n    inline_response_200_30_ingredients:\n      example:\n        safety_level: \"\"\n        name: name\n        description: \"\"\n      properties:\n        description: {}\n        name:\n          minLength: 1\n          type: string\n        safety_level: {}\n      required:\n      - name\n    inline_response_200_30:\n      example:\n        ingredientCount: 6\n        title: title\n        aisle: aisle\n        badges:\n        - badges\n        - badges\n        generatedText: \"\"\n        nutrition:\n          caloricBreakdown:\n            percentCarbs: 3.616076749251911\n            percentProtein: 7.061401241503109\n            percentFat: 9.301444243932576\n          nutrients:\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n        servings:\n          number: 5.637376656633329\n          unit: unit\n          size: 2.3021358869347655\n        price: 5.962133916683182\n        ingredientList: ingredientList\n        ingredients:\n        - safety_level: \"\"\n          name: name\n          description: \"\"\n        - safety_level: \"\"\n          name: name\n          description: \"\"\n        spoonacularScore: 5.637376656633329\n        id: 0\n        imageType: imageType\n        breadcrumbs:\n        - breadcrumbs\n        - breadcrumbs\n        importantBadges:\n        - importantBadges\n        - importantBadges\n        likes: 1.4658129805029452\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        breadcrumbs:\n          items:\n            type: string\n          type: array\n        imageType:\n          minLength: 1\n          type: string\n        badges:\n          items:\n            type: string\n          type: array\n        importantBadges:\n          items:\n            type: string\n          type: array\n        ingredientCount:\n          type: integer\n        generatedText: {}\n        ingredientList:\n          minLength: 1\n          type: string\n        ingredients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_30_ingredients'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        likes:\n          type: number\n        aisle:\n          minLength: 1\n          type: string\n        nutrition:\n          $ref: '#/components/schemas/inline_response_200_28_nutrition'\n        price:\n          type: number\n        servings:\n          $ref: '#/components/schemas/inline_response_200_28_servings'\n        spoonacularScore:\n          type: number\n      required:\n      - aisle\n      - badges\n      - breadcrumbs\n      - id\n      - imageType\n      - importantBadges\n      - ingredientCount\n      - ingredientList\n      - ingredients\n      - likes\n      - nutrition\n      - price\n      - servings\n      - spoonacularScore\n      - title\n    inline_response_200_31_comparableProducts_protein:\n      example:\n        image: image\n        difference: 0.8008281904610115\n        id: 6\n        title: title\n      properties:\n        difference:\n          type: number\n        id:\n          type: integer\n        image:\n          minLength: 1\n          type: string\n        title:\n          minLength: 1\n          type: string\n      required:\n      - difference\n      - id\n      - image\n      - title\n    inline_response_200_31_comparableProducts:\n      example:\n        price:\n        - '{}'\n        - '{}'\n        protein:\n        - image: image\n          difference: 0.8008281904610115\n          id: 6\n          title: title\n        - image: image\n          difference: 0.8008281904610115\n          id: 6\n          title: title\n        spoonacularScore:\n        - image: image\n          difference: 0.8008281904610115\n          id: 6\n          title: title\n        - image: image\n          difference: 0.8008281904610115\n          id: 6\n          title: title\n        calories:\n        - '{}'\n        - '{}'\n        sugar:\n        - '{}'\n        - '{}'\n        likes:\n        - '{}'\n        - '{}'\n      properties:\n        calories:\n          items:\n            type: object\n          type: array\n        likes:\n          items:\n            type: object\n          type: array\n        price:\n          items:\n            type: object\n          type: array\n        protein:\n          items:\n            $ref: '#/components/schemas/inline_response_200_31_comparableProducts_protein'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        spoonacularScore:\n          items:\n            $ref: '#/components/schemas/inline_response_200_31_comparableProducts_protein'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        sugar:\n          items:\n            type: object\n          type: array\n      required:\n      - calories\n      - likes\n      - price\n      - protein\n      - spoonacularScore\n      - sugar\n    inline_response_200_31:\n      example:\n        comparableProducts:\n          price:\n          - '{}'\n          - '{}'\n          protein:\n          - image: image\n            difference: 0.8008281904610115\n            id: 6\n            title: title\n          - image: image\n            difference: 0.8008281904610115\n            id: 6\n            title: title\n          spoonacularScore:\n          - image: image\n            difference: 0.8008281904610115\n            id: 6\n            title: title\n          - image: image\n            difference: 0.8008281904610115\n            id: 6\n            title: title\n          calories:\n          - '{}'\n          - '{}'\n          sugar:\n          - '{}'\n          - '{}'\n          likes:\n          - '{}'\n          - '{}'\n      properties:\n        comparableProducts:\n          $ref: '#/components/schemas/inline_response_200_31_comparableProducts'\n      required:\n      - comparableProducts\n    inline_response_200_32_results:\n      example:\n        id: 0\n        title: title\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - title\n    inline_response_200_32:\n      example:\n        results:\n        - id: 0\n          title: title\n        - id: 0\n          title: title\n      properties:\n        results:\n          items:\n            $ref: '#/components/schemas/inline_response_200_32_results'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - results\n    inline_object_1:\n      properties:\n        title:\n          minLength: 1\n          type: string\n        upc:\n          type: string\n        plu_code:\n          type: string\n      required:\n      - plu_code\n      - title\n      - upc\n      type: object\n      x-examples:\n        example-1:\n          title: Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\n          upc: \"\"\n          plu_code: \"\"\n    inline_response_200_33:\n      example:\n        cleanTitle: cleanTitle\n        image: image\n        usdaCode: 0\n        category: category\n        breadcrumbs:\n        - breadcrumbs\n        - breadcrumbs\n      properties:\n        cleanTitle:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        category:\n          minLength: 1\n          type: string\n        breadcrumbs:\n          items:\n            type: string\n          type: array\n        usdaCode:\n          type: integer\n      required:\n      - breadcrumbs\n      - category\n      - cleanTitle\n      - image\n      - usdaCode\n    InlineObject:\n      example:\n        plu_code: plu_code\n        upc: upc\n        title: title\n      properties:\n        title:\n          minLength: 1\n          type: string\n        upc:\n          type: string\n        plu_code:\n          type: string\n      required:\n      - plu_code\n      - title\n      - upc\n    inline_object_2:\n      properties:\n        ingredients:\n          items:\n            type: string\n          type: array\n        servings:\n          type: number\n      required:\n      - ingredients\n      - servings\n      type: object\n      x-examples:\n        example-1:\n          ingredients:\n          - eggs\n          - bacon\n          servings: 2\n    _food_ingredients_map_products:\n      example:\n        upc: upc\n        id: 0\n        title: title\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        upc:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - title\n      - upc\n    inline_response_200_34:\n      example:\n        originalName: originalName\n        ingredientImage: ingredientImage\n        original: original\n        meta:\n        - meta\n        - meta\n        products:\n        - upc: upc\n          id: 0\n          title: title\n        - upc: upc\n          id: 0\n          title: title\n      properties:\n        original:\n          minLength: 1\n          type: string\n        originalName:\n          minLength: 1\n          type: string\n        ingredientImage:\n          minLength: 1\n          type: string\n        meta:\n          items:\n            type: string\n          type: array\n        products:\n          items:\n            $ref: '#/components/schemas/_food_ingredients_map_products'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - ingredientImage\n      - meta\n      - original\n      - originalName\n      - products\n    inline_response_200_35_menuItems:\n      example:\n        restaurantChain: restaurantChain\n        image: image\n        servings:\n          number: 5.637376656633329\n          unit: unit\n          size: 2.3021358869347655\n        id: 0\n        title: title\n        imageType: imageType\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        restaurantChain:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        servings:\n          $ref: '#/components/schemas/inline_response_200_28_servings'\n      required:\n      - id\n      - image\n      - imageType\n      - restaurantChain\n      - title\n    inline_response_200_35:\n      example:\n        totalMenuItems: 6\n        number: 5\n        offset: 1\n        menuItems:\n        - restaurantChain: restaurantChain\n          image: image\n          servings:\n            number: 5.637376656633329\n            unit: unit\n            size: 2.3021358869347655\n          id: 0\n          title: title\n          imageType: imageType\n        - restaurantChain: restaurantChain\n          image: image\n          servings:\n            number: 5.637376656633329\n            unit: unit\n            size: 2.3021358869347655\n          id: 0\n          title: title\n          imageType: imageType\n        type: type\n      properties:\n        menuItems:\n          items:\n            $ref: '#/components/schemas/inline_response_200_35_menuItems'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        totalMenuItems:\n          type: integer\n        type:\n          minLength: 1\n          type: string\n        offset:\n          type: integer\n        number:\n          type: integer\n      required:\n      - menuItems\n      - number\n      - offset\n      - totalMenuItems\n      - type\n    inline_response_200_36:\n      example:\n        badges:\n        - badges\n        - badges\n        generatedText: generatedText\n        restaurantChain: restaurantChain\n        nutrition:\n          caloricBreakdown:\n            percentCarbs: 3.616076749251911\n            percentProtein: 7.061401241503109\n            percentFat: 9.301444243932576\n          nutrients:\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n          - amount: 5.962133916683182\n            unit: unit\n            percentOfDailyNeeds: 5.637376656633329\n            name: name\n        servings:\n          number: 5.637376656633329\n          unit: unit\n          size: 2.3021358869347655\n        price: 1.4658129805029452\n        spoonacularScore: 5.962133916683182\n        id: 0\n        title: title\n        imageType: imageType\n        breadcrumbs:\n        - breadcrumbs\n        - breadcrumbs\n        likes: 6.027456183070403\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        restaurantChain:\n          minLength: 1\n          type: string\n        nutrition:\n          $ref: '#/components/schemas/inline_response_200_28_nutrition'\n        badges:\n          items:\n            type: string\n          type: array\n        breadcrumbs:\n          items:\n            type: string\n          type: array\n        generatedText:\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        likes:\n          type: number\n        servings:\n          $ref: '#/components/schemas/inline_response_200_28_servings'\n        price:\n          type: number\n        spoonacularScore:\n          type: number\n      required:\n      - badges\n      - breadcrumbs\n      - id\n      - imageType\n      - likes\n      - nutrition\n      - restaurantChain\n      - servings\n      - title\n    inline_response_200_37_nutrients:\n      example:\n        carbohydrates: 6.027456183070403\n        protein: 5.962133916683182\n        fat: 1.4658129805029452\n        calories: 0.8008281904610115\n      properties:\n        calories:\n          type: number\n        carbohydrates:\n          type: number\n        fat:\n          type: number\n        protein:\n          type: number\n      required:\n      - calories\n      - carbohydrates\n      - fat\n      - protein\n    inline_response_200_37:\n      example:\n        meals:\n        - readyInMinutes: 6\n          sourceUrl: sourceUrl\n          servings: 1.4658129805029452\n          id: 0\n          title: title\n          imageType: imageType\n        - readyInMinutes: 6\n          sourceUrl: sourceUrl\n          servings: 1.4658129805029452\n          id: 0\n          title: title\n          imageType: imageType\n        nutrients:\n          carbohydrates: 6.027456183070403\n          protein: 5.962133916683182\n          fat: 1.4658129805029452\n          calories: 0.8008281904610115\n      properties:\n        meals:\n          items:\n            $ref: '#/components/schemas/inline_response_200_5'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        nutrients:\n          $ref: '#/components/schemas/inline_response_200_37_nutrients'\n      required:\n      - meals\n      - nutrients\n    inline_response_200_38_nutritionSummary_nutrients:\n      example:\n        amount: 0.8008281904610115\n        unit: unit\n        name: name\n        percentDailyNeeds: 6.027456183070403\n      properties:\n        name:\n          minLength: 1\n          type: string\n        amount:\n          type: number\n        unit:\n          minLength: 1\n          type: string\n        percentDailyNeeds:\n          type: number\n      required:\n      - amount\n      - name\n      - percentDailyNeeds\n      - unit\n    inline_response_200_38_nutritionSummary:\n      example:\n        nutrients:\n        - amount: 0.8008281904610115\n          unit: unit\n          name: name\n          percentDailyNeeds: 6.027456183070403\n        - amount: 0.8008281904610115\n          unit: unit\n          name: name\n          percentDailyNeeds: 6.027456183070403\n      properties:\n        nutrients:\n          items:\n            $ref: '#/components/schemas/inline_response_200_38_nutritionSummary_nutrients'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - nutrients\n    inline_response_200_38_value:\n      example:\n        servings: 7.061401241503109\n        id: 9.301444243932576\n        title: title\n        imageType: imageType\n      properties:\n        servings:\n          type: number\n        id:\n          type: number\n        title:\n          minLength: 1\n          type: string\n        imageType:\n          type: string\n      required:\n      - id\n      - imageType\n      - servings\n      - title\n    inline_response_200_38_items:\n      example:\n        id: 5\n        slot: 5\n        position: 2\n        type: type\n        value:\n          servings: 7.061401241503109\n          id: 9.301444243932576\n          title: title\n          imageType: imageType\n      properties:\n        id:\n          type: integer\n        slot:\n          type: integer\n        position:\n          type: integer\n        type:\n          minLength: 1\n          type: string\n        value:\n          $ref: '#/components/schemas/inline_response_200_38_value'\n      required:\n      - id\n      - position\n      - slot\n      - type\n    inline_response_200_38_days:\n      example:\n        nutritionSummaryDinner:\n          nutrients:\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n        date: 1.4658129805029452\n        nutritionSummary:\n          nutrients:\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n        nutritionSummaryLunch:\n          nutrients:\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n        day: day\n        items:\n        - id: 5\n          slot: 5\n          position: 2\n          type: type\n          value:\n            servings: 7.061401241503109\n            id: 9.301444243932576\n            title: title\n            imageType: imageType\n        - id: 5\n          slot: 5\n          position: 2\n          type: type\n          value:\n            servings: 7.061401241503109\n            id: 9.301444243932576\n            title: title\n            imageType: imageType\n        nutritionSummaryBreakfast:\n          nutrients:\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n      properties:\n        nutritionSummary:\n          $ref: '#/components/schemas/inline_response_200_38_nutritionSummary'\n        nutritionSummaryBreakfast:\n          $ref: '#/components/schemas/inline_response_200_38_nutritionSummary'\n        nutritionSummaryLunch:\n          $ref: '#/components/schemas/inline_response_200_38_nutritionSummary'\n        nutritionSummaryDinner:\n          $ref: '#/components/schemas/inline_response_200_38_nutritionSummary'\n        date:\n          type: number\n        day:\n          minLength: 1\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/inline_response_200_38_items'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - date\n      - day\n    inline_response_200_38:\n      example:\n        days:\n        - nutritionSummaryDinner:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          date: 1.4658129805029452\n          nutritionSummary:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          nutritionSummaryLunch:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          day: day\n          items:\n          - id: 5\n            slot: 5\n            position: 2\n            type: type\n            value:\n              servings: 7.061401241503109\n              id: 9.301444243932576\n              title: title\n              imageType: imageType\n          - id: 5\n            slot: 5\n            position: 2\n            type: type\n            value:\n              servings: 7.061401241503109\n              id: 9.301444243932576\n              title: title\n              imageType: imageType\n          nutritionSummaryBreakfast:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n        - nutritionSummaryDinner:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          date: 1.4658129805029452\n          nutritionSummary:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          nutritionSummaryLunch:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          day: day\n          items:\n          - id: 5\n            slot: 5\n            position: 2\n            type: type\n            value:\n              servings: 7.061401241503109\n              id: 9.301444243932576\n              title: title\n              imageType: imageType\n          - id: 5\n            slot: 5\n            position: 2\n            type: type\n            value:\n              servings: 7.061401241503109\n              id: 9.301444243932576\n              title: title\n              imageType: imageType\n          nutritionSummaryBreakfast:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n      properties:\n        days:\n          items:\n            $ref: '#/components/schemas/inline_response_200_38_days'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - days\n    inline_object_3:\n      properties:\n        username:\n          description: The username.\n          example: dsky\n          type: string\n        date:\n          description: The date in the format yyyy-mm-dd.\n          example: 2020-06-01\n          type: string\n        hash:\n          description: The private hash for the username.\n          example: 4b5v4398573406\n          type: string\n      required:\n      - date\n      - hash\n      - username\n      type: object\n    inline_object_4:\n      properties:\n        username:\n          description: The username.\n          example: dsky\n          type: string\n        hash:\n          description: The private hash for the username.\n          example: 4b5v4398573406\n          type: string\n      required:\n      - hash\n      - username\n      type: object\n    inline_object_5:\n      properties:\n        username:\n          description: The username.\n          example: dsky\n          type: string\n        id:\n          description: The shopping list item id.\n          example: 15678\n          type: number\n        hash:\n          description: The private hash for the username.\n          example: 4b5v4398573406\n          type: string\n      required:\n      - hash\n      - id\n      - username\n      type: object\n    inline_response_200_39:\n      example:\n        templates:\n        - name: name\n          id: 1\n        - name: name\n          id: 1\n      properties:\n        templates:\n          items:\n            $ref: '#/components/schemas/inline_response_200_13_ingredients_1'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - templates\n    inline_object_6:\n      properties:\n        username:\n          description: The username.\n          example: dsky\n          type: string\n        hash:\n          description: The private hash for the username.\n          example: 4b5v4398573406\n          type: string\n      required:\n      - hash\n      - username\n      type: object\n    inline_response_200_40_value:\n      example:\n        servings: 5.637376656633329\n        id: 5\n        title: title\n        imageType: imageType\n      properties:\n        id:\n          type: integer\n        servings:\n          type: number\n        title:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n    inline_response_200_40_items:\n      example:\n        slot: 6\n        position: 1\n        type: type\n        day: 0\n        value:\n          servings: 5.637376656633329\n          id: 5\n          title: title\n          imageType: imageType\n      properties:\n        day:\n          type: integer\n        slot:\n          type: integer\n        position:\n          type: integer\n        type:\n          minLength: 1\n          type: string\n        value:\n          $ref: '#/components/schemas/inline_response_200_40_value'\n      required:\n      - day\n      - position\n      - slot\n      - type\n    inline_response_200_40:\n      example:\n        publishAsPublic: true\n        name: name\n        items:\n        - slot: 6\n          position: 1\n          type: type\n          day: 0\n          value:\n            servings: 5.637376656633329\n            id: 5\n            title: title\n            imageType: imageType\n        - slot: 6\n          position: 1\n          type: type\n          day: 0\n          value:\n            servings: 5.637376656633329\n            id: 5\n            title: title\n            imageType: imageType\n      properties:\n        name:\n          minLength: 1\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/inline_response_200_40_items'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        publishAsPublic:\n          type: boolean\n      required:\n      - items\n      - name\n      - publishAsPublic\n    inline_response_200_41_value:\n      example:\n        id: 5.637376656633329\n        title: title\n        imageType: imageType\n      properties:\n        id:\n          type: number\n        title:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - imageType\n      - title\n    inline_response_200_41_items:\n      example:\n        id: 6\n        slot: 1\n        position: 5\n        type: type\n        value:\n          id: 5.637376656633329\n          title: title\n          imageType: imageType\n      properties:\n        id:\n          type: integer\n        slot:\n          type: integer\n        position:\n          type: integer\n        type:\n          minLength: 1\n          type: string\n        value:\n          $ref: '#/components/schemas/inline_response_200_41_value'\n      required:\n      - id\n      - position\n      - slot\n      - type\n    inline_response_200_41_days:\n      example:\n        nutritionSummaryDinner:\n          nutrients:\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n        nutritionSummary:\n          nutrients:\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n        nutritionSummaryLunch:\n          nutrients:\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n        day: day\n        items:\n        - id: 6\n          slot: 1\n          position: 5\n          type: type\n          value:\n            id: 5.637376656633329\n            title: title\n            imageType: imageType\n        - id: 6\n          slot: 1\n          position: 5\n          type: type\n          value:\n            id: 5.637376656633329\n            title: title\n            imageType: imageType\n        nutritionSummaryBreakfast:\n          nutrients:\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n          - amount: 0.8008281904610115\n            unit: unit\n            name: name\n            percentDailyNeeds: 6.027456183070403\n      properties:\n        nutritionSummary:\n          $ref: '#/components/schemas/inline_response_200_38_nutritionSummary'\n        nutritionSummaryBreakfast:\n          $ref: '#/components/schemas/inline_response_200_38_nutritionSummary'\n        nutritionSummaryLunch:\n          $ref: '#/components/schemas/inline_response_200_38_nutritionSummary'\n        nutritionSummaryDinner:\n          $ref: '#/components/schemas/inline_response_200_38_nutritionSummary'\n        day:\n          minLength: 1\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/inline_response_200_41_items'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - day\n    inline_response_200_41:\n      example:\n        name: name\n        days:\n        - nutritionSummaryDinner:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          nutritionSummary:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          nutritionSummaryLunch:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          day: day\n          items:\n          - id: 6\n            slot: 1\n            position: 5\n            type: type\n            value:\n              id: 5.637376656633329\n              title: title\n              imageType: imageType\n          - id: 6\n            slot: 1\n            position: 5\n            type: type\n            value:\n              id: 5.637376656633329\n              title: title\n              imageType: imageType\n          nutritionSummaryBreakfast:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n        - nutritionSummaryDinner:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          nutritionSummary:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          nutritionSummaryLunch:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n          day: day\n          items:\n          - id: 6\n            slot: 1\n            position: 5\n            type: type\n            value:\n              id: 5.637376656633329\n              title: title\n              imageType: imageType\n          - id: 6\n            slot: 1\n            position: 5\n            type: type\n            value:\n              id: 5.637376656633329\n              title: title\n              imageType: imageType\n          nutritionSummaryBreakfast:\n            nutrients:\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n            - amount: 0.8008281904610115\n              unit: unit\n              name: name\n              percentDailyNeeds: 6.027456183070403\n        id: 0\n      properties:\n        id:\n          type: integer\n        name:\n          minLength: 1\n          type: string\n        days:\n          items:\n            $ref: '#/components/schemas/inline_response_200_41_days'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - days\n      - id\n      - name\n    inline_object_7:\n      properties:\n        username:\n          description: The username.\n          example: dsky\n          type: string\n        id:\n          description: The shopping list item id.\n          example: 15678\n          type: number\n        hash:\n          description: The private hash for the username.\n          example: 4b5v4398573406\n          type: string\n      required:\n      - hash\n      - id\n      - username\n      type: object\n    inline_response_200_42_measures:\n      example:\n        original:\n          amount: 2.027123023002322\n          unit: unit\n        metric:\n          amount: 2.027123023002322\n          unit: unit\n        us:\n          amount: 2.027123023002322\n          unit: unit\n      properties:\n        original:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_weightPerServing'\n        metric:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_weightPerServing'\n        us:\n          $ref: '#/components/schemas/_recipes_parseIngredients_nutrition_weightPerServing'\n      required:\n      - metric\n      - original\n      - us\n    inline_response_200_42_items:\n      example:\n        ingredientId: 1\n        measures:\n          original:\n            amount: 2.027123023002322\n            unit: unit\n          metric:\n            amount: 2.027123023002322\n            unit: unit\n          us:\n            amount: 2.027123023002322\n            unit: unit\n        cost: 6.027456183070403\n        name: name\n        pantryItem: true\n        id: 0\n        aisle: aisle\n      properties:\n        id:\n          type: integer\n        name:\n          minLength: 1\n          type: string\n        measures:\n          $ref: '#/components/schemas/inline_response_200_42_measures'\n        pantryItem:\n          type: boolean\n        aisle:\n          minLength: 1\n          type: string\n        cost:\n          type: number\n        ingredientId:\n          type: integer\n      required:\n      - aisle\n      - cost\n      - id\n      - ingredientId\n      - name\n      - pantryItem\n    inline_response_200_42_aisles:\n      example:\n        aisle: aisle\n        items:\n        - ingredientId: 1\n          measures:\n            original:\n              amount: 2.027123023002322\n              unit: unit\n            metric:\n              amount: 2.027123023002322\n              unit: unit\n            us:\n              amount: 2.027123023002322\n              unit: unit\n          cost: 6.027456183070403\n          name: name\n          pantryItem: true\n          id: 0\n          aisle: aisle\n        - ingredientId: 1\n          measures:\n            original:\n              amount: 2.027123023002322\n              unit: unit\n            metric:\n              amount: 2.027123023002322\n              unit: unit\n            us:\n              amount: 2.027123023002322\n              unit: unit\n          cost: 6.027456183070403\n          name: name\n          pantryItem: true\n          id: 0\n          aisle: aisle\n      properties:\n        aisle:\n          minLength: 1\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/inline_response_200_42_items'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - aisle\n    inline_response_200_42:\n      example:\n        cost: 5.962133916683182\n        endDate: 2.3021358869347655\n        aisles:\n        - aisle: aisle\n          items:\n          - ingredientId: 1\n            measures:\n              original:\n                amount: 2.027123023002322\n                unit: unit\n              metric:\n                amount: 2.027123023002322\n                unit: unit\n              us:\n                amount: 2.027123023002322\n                unit: unit\n            cost: 6.027456183070403\n            name: name\n            pantryItem: true\n            id: 0\n            aisle: aisle\n          - ingredientId: 1\n            measures:\n              original:\n                amount: 2.027123023002322\n                unit: unit\n              metric:\n                amount: 2.027123023002322\n                unit: unit\n              us:\n                amount: 2.027123023002322\n                unit: unit\n            cost: 6.027456183070403\n            name: name\n            pantryItem: true\n            id: 0\n            aisle: aisle\n        - aisle: aisle\n          items:\n          - ingredientId: 1\n            measures:\n              original:\n                amount: 2.027123023002322\n                unit: unit\n              metric:\n                amount: 2.027123023002322\n                unit: unit\n              us:\n                amount: 2.027123023002322\n                unit: unit\n            cost: 6.027456183070403\n            name: name\n            pantryItem: true\n            id: 0\n            aisle: aisle\n          - ingredientId: 1\n            measures:\n              original:\n                amount: 2.027123023002322\n                unit: unit\n              metric:\n                amount: 2.027123023002322\n                unit: unit\n              us:\n                amount: 2.027123023002322\n                unit: unit\n            cost: 6.027456183070403\n            name: name\n            pantryItem: true\n            id: 0\n            aisle: aisle\n        startDate: 5.637376656633329\n      properties:\n        aisles:\n          items:\n            $ref: '#/components/schemas/inline_response_200_42_aisles'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        cost:\n          type: number\n        startDate:\n          type: number\n        endDate:\n          type: number\n      required:\n      - aisles\n      - cost\n      - endDate\n      - startDate\n    inline_object_8:\n      properties:\n        username:\n          description: The username.\n          example: dsky\n          type: string\n        start-date:\n          description: The start date in the format yyyy-mm-dd.\n          example: 2020-06-01\n          type: string\n        end-date:\n          description: The end date in the format yyyy-mm-dd.\n          example: 2020-06-07\n          type: string\n        hash:\n          description: The private hash for the username.\n          example: 4b5v4398573406\n          type: string\n      required:\n      - end-date\n      - hash\n      - start-date\n      - username\n      type: object\n    inline_response_200_43:\n      example:\n        hash: hash\n        username: username\n      properties:\n        username:\n          minLength: 1\n          type: string\n        hash:\n          minLength: 1\n          type: string\n      required:\n      - hash\n      - username\n    inline_object_9:\n      properties:\n        username:\n          description: The username.\n          example: dsky\n          type: string\n        hash:\n          description: The private hash for the username.\n          example: 4b5v4398573406\n          type: string\n      required:\n      - hash\n      - username\n      type: object\n    inline_object_10:\n      properties:\n        username:\n          description: The username.\n          example: dsky\n          type: string\n        id:\n          description: The shopping list item id.\n          example: 15678\n          type: number\n        hash:\n          description: The private hash for the username.\n          example: 4b5v4398573406\n          type: string\n      required:\n      - hash\n      - id\n      - username\n      type: object\n    inline_response_200_44:\n      example:\n        text: text\n        pairings:\n        - pairings\n        - pairings\n      properties:\n        pairings:\n          items:\n            type: string\n          type: array\n        text:\n          minLength: 1\n          type: string\n      required:\n      - pairings\n      - text\n    inline_response_200_45_productMatches:\n      example:\n        score: 5.962133916683182\n        price: price\n        averageRating: 6.027456183070403\n        imageUrl: imageUrl\n        link: link\n        description: \"\"\n        id: 0\n        title: title\n        ratingCount: 1\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        averageRating:\n          type: number\n        description: {}\n        imageUrl:\n          minLength: 1\n          type: string\n        link:\n          minLength: 1\n          type: string\n        price:\n          minLength: 1\n          type: string\n        ratingCount:\n          type: integer\n        score:\n          type: number\n      required:\n      - averageRating\n      - id\n      - imageUrl\n      - link\n      - price\n      - ratingCount\n      - score\n      - title\n    inline_response_200_45:\n      example:\n        productMatches:\n        - score: 5.962133916683182\n          price: price\n          averageRating: 6.027456183070403\n          imageUrl: imageUrl\n          link: link\n          description: \"\"\n          id: 0\n          title: title\n          ratingCount: 1\n        - score: 5.962133916683182\n          price: price\n          averageRating: 6.027456183070403\n          imageUrl: imageUrl\n          link: link\n          description: \"\"\n          id: 0\n          title: title\n          ratingCount: 1\n        pairingText: pairingText\n        pairedWines:\n        - pairedWines\n        - pairedWines\n      properties:\n        pairedWines:\n          items:\n            type: string\n          type: array\n        pairingText:\n          minLength: 1\n          type: string\n        productMatches:\n          items:\n            $ref: '#/components/schemas/inline_response_200_45_productMatches'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - pairedWines\n      - pairingText\n      - productMatches\n    inline_response_200_46:\n      example:\n        wineDescription: wineDescription\n      properties:\n        wineDescription:\n          minLength: 1\n          type: string\n      required:\n      - wineDescription\n    inline_response_200_47_recommendedWines:\n      example:\n        score: 5.962133916683182\n        price: price\n        averageRating: 6.027456183070403\n        imageUrl: imageUrl\n        link: link\n        description: description\n        id: 0\n        title: title\n        ratingCount: 1\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        averageRating:\n          type: number\n        description:\n          minLength: 1\n          type: string\n        imageUrl:\n          minLength: 1\n          type: string\n        link:\n          minLength: 1\n          type: string\n        price:\n          minLength: 1\n          type: string\n        ratingCount:\n          type: integer\n        score:\n          type: number\n      required:\n      - averageRating\n      - description\n      - id\n      - imageUrl\n      - link\n      - price\n      - ratingCount\n      - score\n      - title\n    inline_response_200_47:\n      example:\n        recommendedWines:\n        - score: 5.962133916683182\n          price: price\n          averageRating: 6.027456183070403\n          imageUrl: imageUrl\n          link: link\n          description: description\n          id: 0\n          title: title\n          ratingCount: 1\n        - score: 5.962133916683182\n          price: price\n          averageRating: 6.027456183070403\n          imageUrl: imageUrl\n          link: link\n          description: description\n          id: 0\n          title: title\n          ratingCount: 1\n        totalFound: 5\n      properties:\n        recommendedWines:\n          items:\n            $ref: '#/components/schemas/inline_response_200_47_recommendedWines'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        totalFound:\n          type: integer\n      required:\n      - recommendedWines\n      - totalFound\n    inline_response_200_48:\n      example:\n        probability: 0.8008281904610115\n        category: category\n      properties:\n        category:\n          minLength: 1\n          type: string\n        probability:\n          type: number\n      required:\n      - category\n      - probability\n    inline_response_200_49_nutrition_calories_confidenceRange95Percent:\n      example:\n        min: 1.4658129805029452\n        max: 5.962133916683182\n      properties:\n        min:\n          type: number\n        max:\n          type: number\n      required:\n      - max\n      - min\n    inline_response_200_49_nutrition_calories:\n      example:\n        confidenceRange95Percent:\n          min: 1.4658129805029452\n          max: 5.962133916683182\n        unit: unit\n        value: 6.027456183070403\n        standardDeviation: 5.637376656633329\n      properties:\n        value:\n          type: number\n        unit:\n          minLength: 1\n          type: string\n        confidenceRange95Percent:\n          $ref: '#/components/schemas/inline_response_200_49_nutrition_calories_confidenceRange95Percent'\n        standardDeviation:\n          type: number\n      required:\n      - confidenceRange95Percent\n      - standardDeviation\n      - unit\n      - value\n    inline_response_200_49_nutrition:\n      example:\n        recipesUsed: 0\n        carbs:\n          confidenceRange95Percent:\n            min: 1.4658129805029452\n            max: 5.962133916683182\n          unit: unit\n          value: 6.027456183070403\n          standardDeviation: 5.637376656633329\n        protein:\n          confidenceRange95Percent:\n            min: 1.4658129805029452\n            max: 5.962133916683182\n          unit: unit\n          value: 6.027456183070403\n          standardDeviation: 5.637376656633329\n        fat:\n          confidenceRange95Percent:\n            min: 1.4658129805029452\n            max: 5.962133916683182\n          unit: unit\n          value: 6.027456183070403\n          standardDeviation: 5.637376656633329\n        calories:\n          confidenceRange95Percent:\n            min: 1.4658129805029452\n            max: 5.962133916683182\n          unit: unit\n          value: 6.027456183070403\n          standardDeviation: 5.637376656633329\n      properties:\n        recipesUsed:\n          type: integer\n        calories:\n          $ref: '#/components/schemas/inline_response_200_49_nutrition_calories'\n        fat:\n          $ref: '#/components/schemas/inline_response_200_49_nutrition_calories'\n        protein:\n          $ref: '#/components/schemas/inline_response_200_49_nutrition_calories'\n        carbs:\n          $ref: '#/components/schemas/inline_response_200_49_nutrition_calories'\n      required:\n      - calories\n      - carbs\n      - fat\n      - protein\n      - recipesUsed\n    inline_response_200_49_category:\n      example:\n        probability: 2.3021358869347655\n        name: name\n      properties:\n        name:\n          minLength: 1\n          type: string\n        probability:\n          type: number\n      required:\n      - name\n      - probability\n    inline_response_200_49_recipes:\n      example:\n        id: 7\n        title: title\n        imageType: imageType\n        url: url\n      properties:\n        id:\n          type: integer\n        title:\n          minLength: 1\n          type: string\n        imageType:\n          minLength: 1\n          type: string\n        url:\n          minLength: 1\n          type: string\n      required:\n      - id\n      - imageType\n      - title\n      - url\n    inline_response_200_49:\n      example:\n        recipes:\n        - id: 7\n          title: title\n          imageType: imageType\n          url: url\n        - id: 7\n          title: title\n          imageType: imageType\n          url: url\n        nutrition:\n          recipesUsed: 0\n          carbs:\n            confidenceRange95Percent:\n              min: 1.4658129805029452\n              max: 5.962133916683182\n            unit: unit\n            value: 6.027456183070403\n            standardDeviation: 5.637376656633329\n          protein:\n            confidenceRange95Percent:\n              min: 1.4658129805029452\n              max: 5.962133916683182\n            unit: unit\n            value: 6.027456183070403\n            standardDeviation: 5.637376656633329\n          fat:\n            confidenceRange95Percent:\n              min: 1.4658129805029452\n              max: 5.962133916683182\n            unit: unit\n            value: 6.027456183070403\n            standardDeviation: 5.637376656633329\n          calories:\n            confidenceRange95Percent:\n              min: 1.4658129805029452\n              max: 5.962133916683182\n            unit: unit\n            value: 6.027456183070403\n            standardDeviation: 5.637376656633329\n        category:\n          probability: 2.3021358869347655\n          name: name\n      properties:\n        nutrition:\n          $ref: '#/components/schemas/inline_response_200_49_nutrition'\n        category:\n          $ref: '#/components/schemas/inline_response_200_49_category'\n        recipes:\n          items:\n            $ref: '#/components/schemas/inline_response_200_49_recipes'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - category\n      - nutrition\n      - recipes\n    inline_response_200_50:\n      example:\n        image: image\n        answer: answer\n      properties:\n        answer:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          type: string\n      required:\n      - answer\n      - image\n    inline_response_200_51:\n      example:\n        annotations:\n        - '{}'\n        - '{}'\n      properties:\n        annotations:\n          items:\n            properties:\n              annotation:\n                minLength: 1\n                type: string\n              image:\n                minLength: 1\n                type: string\n              tag:\n                minLength: 1\n                type: string\n            required:\n            - annotation\n            - image\n            - tag\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - annotations\n    inline_response_200_52:\n      example:\n        Articles:\n        - '{}'\n        - '{}'\n        Menu Items:\n        - '{}'\n        - '{}'\n        Recipes:\n        - '{}'\n        - '{}'\n        Grocery Products:\n        - '{}'\n        - '{}'\n      properties:\n        Articles:\n          items:\n            properties:\n              dataPoints:\n                items:\n                  properties: {}\n                type: array\n              image:\n                minLength: 1\n                type: string\n              link:\n                minLength: 1\n                type: string\n              name:\n                minLength: 1\n                type: string\n            required:\n            - image\n            - link\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n        Grocery Products:\n          items:\n            properties:\n              dataPoints:\n                items:\n                  properties:\n                    key:\n                      minLength: 1\n                      type: string\n                    value:\n                      minLength: 1\n                      type: string\n                  required:\n                  - key\n                  - value\n                minItems: 0\n                type: array\n                uniqueItems: true\n              image:\n                minLength: 1\n                type: string\n              link:\n                minLength: 1\n                type: string\n              name:\n                minLength: 1\n                type: string\n            required:\n            - image\n            - link\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n        Menu Items:\n          items:\n            properties:\n              dataPoints:\n                items:\n                  properties:\n                    key:\n                      minLength: 1\n                      type: string\n                    value:\n                      minLength: 1\n                      type: string\n                  required:\n                  - key\n                  - value\n                minItems: 0\n                type: array\n                uniqueItems: true\n              image:\n                minLength: 1\n                type: string\n              link:\n                minLength: 1\n                type: string\n              name:\n                minLength: 1\n                type: string\n            required:\n            - image\n            - link\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n        Recipes:\n          items:\n            properties:\n              dataPoints:\n                items:\n                  properties:\n                    key:\n                      minLength: 1\n                      type: string\n                    value:\n                      minLength: 1\n                      type: string\n                  required:\n                  - key\n                  - value\n                minItems: 0\n                type: array\n                uniqueItems: true\n              image:\n                minLength: 1\n                type: string\n              link:\n                minLength: 1\n                type: string\n              name:\n                minLength: 1\n                type: string\n            required:\n            - image\n            - link\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - Articles\n      - Grocery Products\n      - Menu Items\n      - Recipes\n    inline_response_200_53_results:\n      example:\n        image: image\n        name: name\n        link: link\n        id: id\n        type: type\n        relevance: 5.637376656633329\n        content: content\n      properties:\n        id:\n          type: string\n        name:\n          minLength: 1\n          type: string\n        image:\n          minLength: 1\n          nullable: true\n          type: string\n        link:\n          minLength: 1\n          nullable: true\n          type: string\n        type:\n          minLength: 1\n          type: string\n        relevance:\n          type: number\n        content:\n          minLength: 0\n          nullable: true\n          type: string\n      required:\n      - content\n      - id\n      - image\n      - link\n      - name\n      - relevance\n      - type\n    inline_response_200_53_searchResults:\n      example:\n        totalResults: 5\n        name: name\n        results:\n        - image: image\n          name: name\n          link: link\n          id: id\n          type: type\n          relevance: 5.637376656633329\n          content: content\n        - image: image\n          name: name\n          link: link\n          id: id\n          type: type\n          relevance: 5.637376656633329\n          content: content\n      properties:\n        name:\n          minLength: 1\n          type: string\n        totalResults:\n          type: integer\n        results:\n          items:\n            $ref: '#/components/schemas/inline_response_200_53_results'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - name\n      - totalResults\n    inline_response_200_53:\n      example:\n        totalResults: 0\n        offset: 1\n        query: query\n        limit: 6\n        searchResults:\n        - totalResults: 5\n          name: name\n          results:\n          - image: image\n            name: name\n            link: link\n            id: id\n            type: type\n            relevance: 5.637376656633329\n            content: content\n          - image: image\n            name: name\n            link: link\n            id: id\n            type: type\n            relevance: 5.637376656633329\n            content: content\n        - totalResults: 5\n          name: name\n          results:\n          - image: image\n            name: name\n            link: link\n            id: id\n            type: type\n            relevance: 5.637376656633329\n            content: content\n          - image: image\n            name: name\n            link: link\n            id: id\n            type: type\n            relevance: 5.637376656633329\n            content: content\n      properties:\n        query:\n          minLength: 1\n          type: string\n        totalResults:\n          type: integer\n        limit:\n          type: integer\n        offset:\n          type: integer\n        searchResults:\n          items:\n            $ref: '#/components/schemas/inline_response_200_53_searchResults'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - limit\n      - offset\n      - query\n      - searchResults\n      - totalResults\n    inline_response_200_54_videos:\n      example:\n        thumbnail: thumbnail\n        youTubeId: youTubeId\n        length: 0\n        rating: 6.027456183070403\n        shortTitle: shortTitle\n        title: title\n        views: 1\n      properties:\n        title:\n          minLength: 1\n          type: string\n        length:\n          type: integer\n        rating:\n          type: number\n        shortTitle:\n          minLength: 1\n          type: string\n        thumbnail:\n          minLength: 1\n          type: string\n        views:\n          type: integer\n        youTubeId:\n          minLength: 1\n          type: string\n      required:\n      - length\n      - rating\n      - shortTitle\n      - thumbnail\n      - title\n      - views\n      - youTubeId\n    inline_response_200_54:\n      example:\n        totalResults: 5\n        videos:\n        - thumbnail: thumbnail\n          youTubeId: youTubeId\n          length: 0\n          rating: 6.027456183070403\n          shortTitle: shortTitle\n          title: title\n          views: 1\n        - thumbnail: thumbnail\n          youTubeId: youTubeId\n          length: 0\n          rating: 6.027456183070403\n          shortTitle: shortTitle\n          title: title\n          views: 1\n      properties:\n        videos:\n          items:\n            $ref: '#/components/schemas/inline_response_200_54_videos'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        totalResults:\n          type: integer\n      required:\n      - totalResults\n      - videos\n    inline_response_200_55:\n      example:\n        text: text\n      properties:\n        text:\n          minLength: 1\n          type: string\n      required:\n      - text\n    inline_response_200_56:\n      example:\n        answerText: answerText\n        media:\n        - \"\"\n        - \"\"\n      properties:\n        answerText:\n          minLength: 1\n          type: string\n        media:\n          items:\n            properties: {}\n          type: array\n      required:\n      - answerText\n      - media\n    inline_response_200_57_suggests:\n      example:\n        _:\n        - '{}'\n        - '{}'\n      properties:\n        _:\n          items:\n            properties:\n              name:\n                minLength: 1\n                type: string\n            required:\n            - name\n          minItems: 0\n          type: array\n          uniqueItems: true\n      required:\n      - _\n    inline_response_200_57:\n      example:\n        suggests:\n          _:\n          - '{}'\n          - '{}'\n        words:\n        - \"\"\n        - \"\"\n      properties:\n        suggests:\n          $ref: '#/components/schemas/inline_response_200_57_suggests'\n        words:\n          items:\n            properties: {}\n          type: array\n      required:\n      - suggests\n      - words\n  securitySchemes:\n    apiKeyScheme:\n      in: query\n      name: apiKey\n      type: apiKey\n"
		}
	},
	"Error": "Unsupported map key of type: %!s(\u003cnil\u003e), key: \u003cnil\u003e, value: map[interface {}]interface {}{\"schema\":map[interface {}]interface {}{\"properties\":map[interface {}]interface {}{\"date\":map[interface {}]interface {}{\"description\":\"The date in the format yyyy-mm-dd.\", \"example\":\"2020-06-01\", \"type\":\"string\"}, \"hash\":map[interface {}]interface {}{\"description\":\"The private hash for the username.\", \"example\":\"4b5v4398573406\", \"type\":\"string\"}, \"username\":map[interface {}]interface {}{\"description\":\"The username.\", \"example\":\"dsky\", \"type\":\"string\"}}, \"required\":[]interface {}{\"date\", \"hash\", \"username\"}, \"type\":\"object\"}}"
}