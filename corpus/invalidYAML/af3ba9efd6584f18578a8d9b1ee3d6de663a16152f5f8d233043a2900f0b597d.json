{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tsuru/rpaas-operator"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 20505,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Reverse Proxy as a Service\n  description: |-\n    The presented API definition (formally called as RPaaS v2 API) is a superset of [Tsuru Service API] and the [legacy RPaaS][RPaaS v1 API] (aka RPaaS v1).\n    \n    Source code: [github.com/tsuru/rpaas-operator](https://github.com/tsuru/rpaas-operator.git)\n  \n    [Tsuru Service API]: https://app.swaggerhub.com/apis/tsuru/tsuru-service_api/1.0.0\n    [RPaaS v1 API]: https://raw.githubusercontent.com/tsuru/rpaas/master/rpaas/api.py\n  contact:\n    name: Tsuru\n    email: tsuru@g.globo\n  version: v2\n  license:\n    name: BSD-3-Clause License\n    url: https://raw.githubusercontent.com/tsuru/rpaas-operator/master/LICENSE\n\nsecurity:\n- basicAuth: []\n\npaths:\n  /healthcheck:\n    get:\n      summary: Check the API healthiness\n      operationId: Healthcheck\n      security: []\n      tags:\n      - rpaas\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: WORKING\n        default:\n          description: Not OK\n\n  /resources:\n    post:\n      summary: Create an instance\n      description: This endpoint is part of Tsuru Service API.\n      operationId: CreateInstance\n      tags:\n      - rpaas\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateInstance'\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Instance already exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: An unknown error\n          content:\n            text/plain:\n              example: failed to create instance on storage\n\n  /resources/{instance}:\n    parameters:\n    - in: path\n      name: instance\n      schema:\n        type: string\n      required: true\n      description: Instance name\n    delete:\n      summary: Delete an instance\n      description: This endpoint is part of Tsuru Service API.\n      operationId: DeleteInstance\n      tags:\n      - rpaas\n      responses:\n        '200':\n          description: Deleted\n        '404':\n          description: Instance not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: An unknown error\n          content:\n            text/plain:\n              example: failed to create instance on storage\n    get:\n      summary: Get additional informations about an instance\n      description: This endpoint is part of Tsuru Service API.\n      operationId: GetInstance\n      tags:\n      - rpaas\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdditionalInstanceInfo'\n        '404':\n          description: Instance not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: Unknonw error\n          content:\n            text/plain:\n              schema:\n                type: string\n              example: an unknown error\n    put:\n      summary: Update an instance\n      description: This endpoint is part of Tsuru Service API.\n      operationId: UpdateInstance\n      tags:\n      - rpaas\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UpdateInstance'\n      responses:\n        '200':\n          description: Updated\n        '400':\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Instance not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: An unknown error\n          content:\n            text/plain:\n              example: failed to create instance on storage\n\n  /resources/{instance}/status:\n    get:\n      summary: Whether instance is running or not\n      description: This endpoint is part of Tsuru Service API.\n      tags:\n      - rpaas\n      parameters:\n      - in: path\n        name: instance\n        schema:\n          type: string\n        required: true\n        description: Instance name\n      responses:\n        '202':\n          description: Instance is pending (partially provisioned)\n        '204':\n          description: Instance is up and running\n\n  /resources/{instance}/bind-app:\n    parameters:\n      - name: instance\n        in: path\n        description: Instance name\n        required: true\n        schema:\n          type: string\n\n    post:\n      summary: Binds the app to the rpaas instance\n      description: This endpoint is part of Tsuru Service API.\n      operationId: BindApp\n      tags:\n        - rpaas\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BindApp'\n      responses:\n        '201':\n          description: App successfully bound to the rpaas instance\n        '404':\n          description: rpaas instance does not exist\n        '412':\n          description: rpaas instance not ready\n\n    delete:\n      summary: Unbinds the app from the rpaas instance\n      description: This endpoint is part of Tsuru Service API.\n      operationId: UnbindApp\n      tags:\n        - rpaas\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BindApp'\n      responses:\n        '200':\n          description: App successfully unbound from rpaas instance\n        '404':\n          description: rpaas instance does not exist\n\n  /resources/{instance}/bind:\n    parameters:\n      - name: instance\n        in: path\n        description: Instance name\n        required: true\n        schema:\n          type: string\n\n      post:\n        operationId: BindInstance\n        deprecated: true\n        summary: Bind Unit\n        description: Not used, just to follow Tsuru Service API spec\n        tags:\n          - rpaas\n        responses:\n          '200':\n            description: Nothing happens\n\n      delete:\n        operationId: UnbindInstance\n        deprecated: true\n        summary: Unbind Unit\n        description: Not used, just to follow Tsuru Service API spec\n        tags:\n          - rpaas\n        responses:\n          '200':\n            description: Nothing happens\n\n  /resources/{instance}/info:\n    get:\n      summary: Get a summary informations about an instance\n      description: This endpoint is exclusive for RPaaS v2 API.\n      operationId: GetInstanceInfo\n      tags:\n      - rpaas\n      parameters:\n      - in: path\n        name: instance\n        schema:\n          type: string\n        required: true\n        description: Instance name\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceInfo'\n        '404':\n          description: Instance not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: Unknonw error\n          content:\n            text/plain:\n              schema:\n                type: string\n              example: an unknown error\n\n  /resources/plans:\n    get:\n      summary: List supported plans\n      description: This endpoint is part of Tsuru Service API.\n      operationId: ListPlans\n      tags:\n      - rpaas\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Plan'\n        default:\n          description: An unknown error\n          content:\n            text/plain:\n              example: failed to get plans from storage\n\n  /resources/{instance}/plans:\n    get:\n      summary: List supported plans by instance\n      description: This endpoint is part of legacy RPaaS API.\n      operationId: ListPlansByInstance\n      tags:\n      - rpaas\n      parameters:\n      - in: path\n        name: instance\n        schema:\n          type: string\n        required: true\n        description: Instance name\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Plan'\n        '404':\n          description: Instance not found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Error'\n        default:\n          description: An unknown error\n          content:\n            text/plain:\n              example: failed to get plans from storage\n\n  /resources/flavors:\n    get:\n      summary: List supported flavors\n      description: |-\n        This endpoint is part of legacy RPaaS API.\n\n        Deprecated in favor of `GET /resources/plans` (see the supported flavors within `schemas` field of `Plan` object).\n      operationId: ListFlavors\n      deprecated: true\n      tags:\n      - rpaas\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Flavor'\n        default:\n          description: An unknown error\n          content:\n            text/plain:\n              example: failed to get flavors from storage\n\n  /resources/{instance}/flavors:\n    get:\n      summary: List flavors by instance\n      description: |-\n        This endpoint is part of legacy RPaaS API.\n\n        Deprecated in favor of `GET /resources/plans` (see the supported flavors within `schemas` field of `Plan` object).\n      operationId: ListFlavorsByInstance\n      deprecated: true\n      tags:\n      - rpaas\n      parameters:\n      - in: path\n        name: instance\n        schema:\n          type: string\n        required: true\n        description: Instance name\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Flavor'\n        '404':\n          description: Instance not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: An unknown error\n          content:\n            text/plain:\n              example: failed to get flavors from storage\n\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n      \n  schemas:\n    AdditionalInstanceInfo:\n      type: object\n      properties:\n        label:\n          type: string\n          example: Address\n        value:\n          type: string\n          example: 169.254.254.100\n\n    Autoscale:\n      type: object\n      properties:\n        minReplicas:\n          type: number\n          example: 3\n        maxReplicas:\n          type: number\n          example: 100\n        cpu:\n          type: number\n          example: 95\n          minimum: 0\n          maximum: 100\n        memory:\n          type: number\n          example: 99\n          minimum: 0\n          maximum: 100\n\n    BindApp:\n      type: object\n      properties:\n        app-name:\n          type: string\n          example: app1\n        app-host:\n          type: string\n          example: app1.tsuru.example.com\n        user:\n          type: string\n        eventid:\n          type: string\n        app-hosts:\n          type: array\n          items:\n            type: string\n            example: app1.tsuru.example.com\n        app-internal-hosts:\n          type: array\n          items:\n            type: string\n            example: localService.namespace\n\n    Block:\n      type: object\n      properties:\n        block_name:\n          type: string\n          enum:\n          - root\n          - http\n          - server\n          - lua-server\n          - lua-worker\n          example: root\n        content:\n          type: string\n          example: |-\n            # Some custom Nginx conf snippet which will be injected into root/main context.\n            # See more at https://nginx.org/en/docs/ngx_core_module.html\n            load_module /path/to/my/module.so;\n  \n    CertificateInfo:\n      type: object\n      properties:\n        name:\n          type: string\n          example: default\n        dnsNames:\n          type: array\n          items:\n            type: string\n          example:\n          - my-instance.example.com\n          - my-instance.test\n        publicKeyAlgorithm:\n          type: string\n          enum:\n          - ECDSA\n          - RSA\n          example: RSA\n        publicKeyBitSize:\n          type: number\n          example: 4096\n        validFrom:\n          type: string\n          format: date-time\n          example: '2020-08-20T00:00:00Z'\n        validUntil:\n          type: string\n          format: date-time\n          example: '2020-08-20T00:00:00Z'\n\n    CreateInstance:\n      type: object\n      required:\n      - name\n      - plan\n      - team\n      properties:\n        name:\n          type: string\n          example: my-instance\n          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'\n          minLength: 1\n          maxLength: 30\n        plan:\n          type: string\n          example: small\n        team:\n          type: string\n          example: team-one\n        description:\n          type: string\n          example: Awesome description about an instance.\n        tags:\n          type: array\n          items:\n            type: string\n            example:\n            - tag1\n            - tagN\n        parameters:\n          type: object\n          description: |-\n            This object must be encoded like [github.com/ajg/form](https://github.com/ajg/form) does. Example:\n            ```\n            parameters.flavors=chocolate,milk\u0026parameters.ip=169.254.254.100\n            ```\n          properties:\n            flavors:\n              type: string\n              example: chocolate,milk\n            ip:\n              type: string\n              example: 169.254.254.100\n            plan-override:\n              type: string\n              example: '{\"image\": \"my.registry.test/nginx:v1.18.0\"}'\n            lb-name:\n              type: string\n              example: my-instance.custom.example.com\n\n    Error:\n      type: object\n      properties:\n        Msg:\n          type: string\n          example: instance \"my-instance\" not found\n\n    Flavor:\n      type: object\n      properties:\n        name:\n          type: string\n          example: chocolate\n        description:\n          type: string\n          example: Awesome description about \"chocolate\" flavor.\n\n    InstanceInfo:\n      type: object\n      properties:\n        name:\n          type: string\n          example: my-instance\n        description:\n          type: string\n          example: Awesome description about my-instance.\n        team:\n          type: string\n          example: team-one\n        tags:\n          type: array\n          items:\n            type: string\n          example:\n          - tag1\n          - tag2\n        plan:\n          type: string\n          example: small\n        flavors:\n          type: array\n          items:\n            type: string\n          example:\n          - coffe\n          - milk\n          - chocolate\n        replicas:\n          type: number\n          example: 42\n        autoscale:\n          $ref: '#/components/schemas/Autoscale'\n        pods:\n          type: array\n          items:\n            $ref: '#/components/schemas/PodInfo'\n        certificates:\n          type: array\n          items:\n            $ref: '#/components/schemas/CertificateInfo'\n        blocks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Block'\n        routes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Route'\n  \n    Plan:\n      type: object\n      properties:\n        name:\n          type: string\n          example: small\n        description:\n          type: string\n          example: |-\n            Description about \"small\" plan:\n            CPUs: 2 + Memory: 1024MB + Disk: SSD M.2 ultra fast\n        schemas:\n          type: object\n          properties:\n            service_instance:\n              type: object\n              properties:\n                create:\n                  type: object\n                  properties:\n                    properties:\n                      type: object\n                update:\n                  type: object\n                  properties:\n                    properties:\n                      type: object\n            service_binding:\n              type: object\n              properties:\n                create:\n                  type: object\n                  properties:\n                    properties:\n                      type: object\n                    response:\n                      type: object\n          example:\n            service_instance:\n              create:\n                '$id': https://example.com/schema.json\n                '$schema': https://json-schema.org/draft-07/schema#\n                type: object\n                properties:\n                  flavors:\n                    type: string\n                  ip:\n                    type: string\n                  plan-override:\n                    type: string\n                  lb-name:\n                    type: string\n\n    PodInfo:\n      type: object\n      properties:\n        name:\n          type: string\n          example: my-instance-abcdef-12345\n        ip:\n          type: string\n          example: 172.16.10.10\n        host:\n          type: string\n          example: 10.10.10.10\n        ports:\n          type: array\n          items:\n            $ref: '#/components/schemas/PodPortInfo'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2020-08-20T00:00:00Z'\n\n    PodPortInfo:\n      type: object\n      properties:\n        name:\n          type: string\n          example: http\n        hostPort:\n          type: number\n          example: 20001\n        containerPort:\n          type: number\n          example: 20001\n        protocol:\n          type: string\n          example: TCP\n        hostIP:\n          type: string\n          example: 0.0.0.0\n\n    Route:\n      type: object\n      properties:\n        path:\n          type: string\n          example: /checkout/cart\n        destination:\n          type: string\n          example: checkout.apps.tsuru.example.com\n        https_only:\n          type: boolean\n          example: true\n        content:\n          type: string\n          example: \"\"\n\n    UpdateInstance:\n      type: object\n      properties:\n        team:\n          type: string\n          example: team-one\n        description:\n          type: string\n          example: Awesome description about an instance.\n        tags:\n          type: array\n          items:\n            type: string\n            example:\n            - tag1\n            - tagN\n        parameters:\n          type: object\n          description: |-\n            This object must be encoded like [github.com/ajg/form](https://github.com/ajg/form) does. Example:\n            ```\n            parameters.flavors=chocolate,milk\u0026parameters.ip=169.254.254.100\n            ```\n          properties:\n            flavors:\n              type: string\n              example: chocolate,milk\n            ip:\n              type: string\n              example: 169.254.254.100\n            plan-override:\n              type: string\n              example: '{\"image\": \"my.registry.test/nginx:v1.18.0\"}'\n            lb-name:\n              type: string\n              example: my-instance.custom.example.com\n",
			"canonicalURL": "/github.com/tsuru/rpaas-operator@57d477e79428c3f30eb4f43d22688c5046b97c48/-/blob/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tsuru/rpaas-operator/blob/57d477e79428c3f30eb4f43d22688c5046b97c48/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 236: did not find expected '-' indicator"
}