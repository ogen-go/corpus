{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/LibreTime/libretime-debian-packaging"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/api/openapi.yaml",
			"byteSize": 48489,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n  title: LibreTime API overview\n  version: 1.1\npaths:\n  /live-info:\n    get:\n      summary: Retrieve the currently playing show as well as upcoming shows\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n        - name: type\n          in: path\n          description: |-\n            endofday retrieves the info for shows up until the end of the day,\n            while interval will return shows in the next 48 hours\n          schema:\n            enum:\n              - 'endofday'\n              - 'interval'\n            default: 'interval'\n          required: false\n        - name: limit\n          in: path\n          description: the number of shows to retrieve\n          schema:\n            type: integer\n            default: 5\n          required: false\n      responses:\n        '200':\n          description: 200 response for default request\n          content:\n            application/json:\n              example: {\n                \"env\": \"production\",\n                \"schedulerTime\": \"2019-10-21 17:52:45\",\n                \"previous\": {\n                  \"starts\": \"2019-10-21 17:47:25.000000\",\n                  \"ends\": \"2019-10-21 17:52:13.000000\",\n                  \"type\": \"track\",\n                  \"name\": \"Disclosure - F For You (feat. Mary J. Blige)\",\n                  \"metadata\": {\n                    \"id\": 8,\n                    \"name\": \"\",\n                    \"mime\": \"audio/mp3\",\n                    \"ftype\": \"audioclip\",\n                    \"directory\": 1,\n                    \"filepath\": \"imported/1/Disclosure/www.mmibty.com/01-F-For-You-feat.-Mary-J.-Blige.mp3\",\n                    \"import_status\": 0,\n                    \"currentlyaccessing\": 0,\n                    \"editedby\": null,\n                    \"mtime\": \"2019-10-21 17:19:03\",\n                    \"utime\": \"2019-10-21 17:18:57\",\n                    \"lptime\": \"2019-10-21 17:47:25\",\n                    \"md5\": \"e008616551750aea49820a16d1fb1527\",\n                    \"track_title\": \"F For You (feat. Mary J. Blige)\",\n                    \"artist_name\": \"Disclosure\",\n                    \"bit_rate\": 251628,\n                    \"sample_rate\": 44100,\n                    \"format\": null,\n                    \"length\": \"00:04:48.026122\",\n                    \"album_title\": \"www.mmibty.com\",\n                    \"genre\": \"Electronic\",\n                    \"comments\": null,\n                    \"year\": \"2014\",\n                    \"track_number\": 1,\n                    \"channels\": 2,\n                    \"url\": null,\n                    \"bpm\": null,\n                    \"rating\": null,\n                    \"encoded_by\": null,\n                    \"disc_number\": null,\n                    \"mood\": null,\n                    \"label\": null,\n                    \"composer\": null,\n                    \"encoder\": null,\n                    \"checksum\": null,\n                    \"lyrics\": null,\n                    \"orchestra\": null,\n                    \"conductor\": null,\n                    \"lyricist\": null,\n                    \"original_lyricist\": null,\n                    \"radio_station_name\": null,\n                    \"info_url\": null,\n                    \"artist_url\": null,\n                    \"audio_source_url\": null,\n                    \"radio_station_url\": null,\n                    \"buy_this_url\": null,\n                    \"isrc_number\": null,\n                    \"catalog_number\": null,\n                    \"original_artist\": null,\n                    \"copyright\": null,\n                    \"report_datetime\": null,\n                    \"report_location\": null,\n                    \"report_organization\": null,\n                    \"subject\": null,\n                    \"contributor\": null,\n                    \"language\": null,\n                    \"soundcloud_id\": null,\n                    \"soundcloud_error_code\": null,\n                    \"soundcloud_error_msg\": null,\n                    \"soundcloud_link_to_file\": null,\n                    \"soundcloud_upload_time\": null,\n                    \"replay_gain\": \"-5.58\",\n                    \"owner_id\": 1,\n                    \"cuein\": \"00:00:00\",\n                    \"cueout\": \"00:04:48.026122\",\n                    \"hidden\": false,\n                    \"filesize\": 9271626,\n                    \"description\": null,\n                    \"artwork\": \"imported/1/artwork/01-F-For-You-feat.-Mary-J.-Blige\",\n                    \"artwork_url\": \"http://localhost:8080/api/track?id=8&amp;return=artwork\"\n                  }\n                },\n                \"current\": {\n                  \"starts\": \"2019-10-21 17:52:13\",\n                  \"ends\": \"2019-10-21 17:56:27\",\n                  \"type\": \"track\",\n                  \"name\": \"Armin van Buuren - Ping Pong\",\n                  \"media_item_played\": true,\n                  \"metadata\": {\n                    \"id\": 2,\n                    \"name\": \"\",\n                    \"mime\": \"audio/mp3\",\n                    \"ftype\": \"audioclip\",\n                    \"directory\": 1,\n                    \"filepath\": \"imported/1/Armin van Buuren/A State of Trance 2014/2-18 Armin van Buuren - Ping Pong.mp3\",\n                    \"import_status\": 0,\n                    \"currentlyaccessing\": 0,\n                    \"editedby\": null,\n                    \"mtime\": \"2019-10-21 17:18:02\",\n                    \"utime\": \"2019-10-21 17:18:00\",\n                    \"lptime\": \"2019-10-21 17:52:13\",\n                    \"md5\": \"04c26823902065db0706d121d0e703a2\",\n                    \"track_title\": \"Ping Pong\",\n                    \"artist_name\": \"Armin van Buuren\",\n                    \"bit_rate\": 32000,\n                    \"sample_rate\": 44100,\n                    \"format\": null,\n                    \"length\": \"00:04:14.171429\",\n                    \"album_title\": \"A State of Trance 2014\",\n                    \"genre\": \"Trance;Electronic;Dance\",\n                    \"comments\": null,\n                    \"year\": \"2014\",\n                    \"track_number\": 18,\n                    \"channels\": 2,\n                    \"url\": null,\n                    \"bpm\": null,\n                    \"rating\": null,\n                    \"encoded_by\": null,\n                    \"disc_number\": null,\n                    \"mood\": null,\n                    \"label\": \"Armada Music\",\n                    \"composer\": null,\n                    \"encoder\": null,\n                    \"checksum\": null,\n                    \"lyrics\": null,\n                    \"orchestra\": null,\n                    \"conductor\": null,\n                    \"lyricist\": null,\n                    \"original_lyricist\": null,\n                    \"radio_station_name\": null,\n                    \"info_url\": null,\n                    \"artist_url\": null,\n                    \"audio_source_url\": null,\n                    \"radio_station_url\": null,\n                    \"buy_this_url\": null,\n                    \"isrc_number\": null,\n                    \"catalog_number\": null,\n                    \"original_artist\": null,\n                    \"copyright\": null,\n                    \"report_datetime\": null,\n                    \"report_location\": null,\n                    \"report_organization\": null,\n                    \"subject\": null,\n                    \"contributor\": null,\n                    \"language\": null,\n                    \"soundcloud_id\": null,\n                    \"soundcloud_error_code\": null,\n                    \"soundcloud_error_msg\": null,\n                    \"soundcloud_link_to_file\": null,\n                    \"soundcloud_upload_time\": null,\n                    \"replay_gain\": \"-5.07\",\n                    \"owner_id\": 1,\n                    \"cuein\": \"00:00:00\",\n                    \"cueout\": \"00:04:14.171429\",\n                    \"hidden\": false,\n                    \"filesize\": 6136238,\n                    \"description\": null,\n                    \"artwork\": \"imported/1/artwork/2-18 Armin van Buuren - Ping Pong\",\n                    \"artwork_url\": \"http://localhost:8080/api/track?id=2&amp;return=artwork\"\n                  },\n                  \"record\": \"0\"\n                },\n                \"next\": {\n                  \"starts\": \"2019-10-21 17:56:27.000000\",\n                  \"ends\": \"2019-10-21 18:00:28.000000\",\n                  \"type\": \"track\",\n                  \"name\": \"Bastille - No Angels (feat. Ella)\",\n                  \"metadata\": {\n                    \"id\": 4,\n                    \"name\": \"\",\n                    \"mime\": \"audio/mp3\",\n                    \"ftype\": \"audioclip\",\n                    \"directory\": 1,\n                    \"filepath\": \"imported/1/Bastille/Other People&#039;s Heartache, Pt. 2/03 Bastille - No Angels (feat. Ella).mp3\",\n                    \"import_status\": 0,\n                    \"currentlyaccessing\": 0,\n                    \"editedby\": null,\n                    \"mtime\": \"2019-10-21 17:18:16\",\n                    \"utime\": \"2019-10-21 17:18:14\",\n                    \"lptime\": \"2019-10-21 17:24:46\",\n                    \"md5\": \"87bf83451d7618eefc0141c262aead2a\",\n                    \"track_title\": \"No Angels (feat. Ella)\",\n                    \"artist_name\": \"Bastille\",\n                    \"bit_rate\": 128000,\n                    \"sample_rate\": 44100,\n                    \"format\": null,\n                    \"length\": \"00:04:00.752438\",\n                    \"album_title\": \"Other People&#039;s Heartache, Pt. 2\",\n                    \"genre\": null,\n                    \"comments\": null,\n                    \"year\": \"2012\",\n                    \"track_number\": 3,\n                    \"channels\": 2,\n                    \"url\": null,\n                    \"bpm\": null,\n                    \"rating\": null,\n                    \"encoded_by\": null,\n                    \"disc_number\": null,\n                    \"mood\": null,\n                    \"label\": \"[no label]\",\n                    \"composer\": null,\n                    \"encoder\": null,\n                    \"checksum\": null,\n                    \"lyrics\": null,\n                    \"orchestra\": null,\n                    \"conductor\": null,\n                    \"lyricist\": null,\n                    \"original_lyricist\": null,\n                    \"radio_station_name\": null,\n                    \"info_url\": null,\n                    \"artist_url\": null,\n                    \"audio_source_url\": null,\n                    \"radio_station_url\": null,\n                    \"buy_this_url\": null,\n                    \"isrc_number\": null,\n                    \"catalog_number\": null,\n                    \"original_artist\": null,\n                    \"copyright\": null,\n                    \"report_datetime\": null,\n                    \"report_location\": null,\n                    \"report_organization\": null,\n                    \"subject\": null,\n                    \"contributor\": null,\n                    \"language\": null,\n                    \"soundcloud_id\": null,\n                    \"soundcloud_error_code\": null,\n                    \"soundcloud_error_msg\": null,\n                    \"soundcloud_link_to_file\": null,\n                    \"soundcloud_upload_time\": null,\n                    \"replay_gain\": \"-8.57\",\n                    \"owner_id\": 1,\n                    \"cuein\": \"00:00:00\",\n                    \"cueout\": \"00:04:00.752438\",\n                    \"hidden\": false,\n                    \"filesize\": 3858688,\n                    \"description\": null,\n                    \"artwork\": \"\"\n                  }\n                },\n                \"currentShow\": [\n                  {\n                    \"start_timestamp\": \"2019-10-21 17:20:00\",\n                    \"end_timestamp\": \"2019-10-21 18:31:00\",\n                    \"name\": \"Show 1\",\n                    \"description\": \"A show\",\n                    \"id\": 1,\n                    \"instance_id\": 1,\n                    \"record\": 0,\n                    \"url\": \"https://example.com\",\n                    \"image_path\": \"\",\n                    \"starts\": \"2019-10-21 17:20:00\",\n                    \"ends\": \"2019-10-21 18:31:00\"\n                  }\n                ],\n                \"nextShow\": [\n                  {\n                    \"id\": 2,\n                    \"instance_id\": 2,\n                    \"name\": \"Reading\",\n                    \"description\": \"A reading of After the EMP by Harley Tate\",\n                    \"url\": \"https://example.com\",\n                    \"start_timestamp\": \"2019-10-21 18:31:00\",\n                    \"end_timestamp\": \"2019-10-22 10:45:00\",\n                    \"starts\": \"2019-10-21 18:31:00\",\n                    \"ends\": \"2019-10-22 10:45:00\",\n                    \"record\": 0,\n                    \"image_path\": \"\",\n                    \"type\": \"show\"\n                  }\n                ],\n                \"source_enabled\": \"Scheduled\",\n                \"timezone\": \"UTC\",\n                \"timezoneOffset\": \"0\",\n                \"AIRTIME_API_VERSION\": \"1.1\"\n              }\n  /live-info-v2:\n    get:\n      summary: Retrieve the currently playing and upcoming shows\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n        - name: days\n          in: path\n          description: The number of days to return\n          schema:\n            type: integer\n            default: 2\n          required: false\n        - show_id: shows\n          in: path\n          description: the number of shows to retrieve\n          schema:\n            type: integer\n            default: 5\n          required: false\n        - name: timezone\n          in: path\n          description: The timezone to send the times in\n          schema:\n            type: string\n            default: \"$server_timezone\"\n          required: false\n      responses:\n        '200':\n          description: 200 response for default request\n          content:\n            application/json:\n              example: {\n                \"station\": {\n                  \"env\": \"production\",\n                  \"schedulerTime\": \"2019-10-21 17:29:40\",\n                  \"source_enabled\": \"Scheduled\",\n                  \"timezone\": \"UTC\",\n                  \"AIRTIME_API_VERSION\": \"1.1\"\n                },\n                \"tracks\": {\n                  \"previous\": {\n                    \"starts\": \"2019-10-21 17:24:45\",\n                    \"ends\": \"2019-10-21 17:28:46\",\n                    \"type\": \"track\",\n                    \"name\": \"Bastille - No Angels (feat. Ella)\",\n                    \"metadata\": {\n                      \"id\": 4,\n                      \"name\": \"\",\n                      \"mime\": \"audio/mp3\",\n                      \"ftype\": \"audioclip\",\n                      \"directory\": 1,\n                      \"filepath\": \"imported/1/Bastille/Other People&#039;s Heartache, Pt. 2/03 Bastille - No Angels (feat. Ella).mp3\",\n                      \"import_status\": 0,\n                      \"currentlyaccessing\": 0,\n                      \"editedby\": null,\n                      \"mtime\": \"2019-10-21 17:18:16\",\n                      \"utime\": \"2019-10-21 17:18:14\",\n                      \"lptime\": \"2019-10-21 17:24:46\",\n                      \"md5\": \"87bf83451d7618eefc0141c262aead2a\",\n                      \"track_title\": \"No Angels (feat. Ella)\",\n                      \"artist_name\": \"Bastille\",\n                      \"bit_rate\": 128000,\n                      \"sample_rate\": 44100,\n                      \"format\": null,\n                      \"length\": \"00:04:00.752438\",\n                      \"album_title\": \"Other People&#039;s Heartache, Pt. 2\",\n                      \"genre\": null,\n                      \"comments\": null,\n                      \"year\": \"2012\",\n                      \"track_number\": 3,\n                      \"channels\": 2,\n                      \"url\": null,\n                      \"bpm\": null,\n                      \"rating\": null,\n                      \"encoded_by\": null,\n                      \"disc_number\": null,\n                      \"mood\": null,\n                      \"label\": \"[no label]\",\n                      \"composer\": null,\n                      \"encoder\": null,\n                      \"checksum\": null,\n                      \"lyrics\": null,\n                      \"orchestra\": null,\n                      \"conductor\": null,\n                      \"lyricist\": null,\n                      \"original_lyricist\": null,\n                      \"radio_station_name\": null,\n                      \"info_url\": null,\n                      \"artist_url\": null,\n                      \"audio_source_url\": null,\n                      \"radio_station_url\": null,\n                      \"buy_this_url\": null,\n                      \"isrc_number\": null,\n                      \"catalog_number\": null,\n                      \"original_artist\": null,\n                      \"copyright\": null,\n                      \"report_datetime\": null,\n                      \"report_location\": null,\n                      \"report_organization\": null,\n                      \"subject\": null,\n                      \"contributor\": null,\n                      \"language\": null,\n                      \"soundcloud_id\": null,\n                      \"soundcloud_error_code\": null,\n                      \"soundcloud_error_msg\": null,\n                      \"soundcloud_link_to_file\": null,\n                      \"soundcloud_upload_time\": null,\n                      \"replay_gain\": \"-8.57\",\n                      \"owner_id\": 1,\n                      \"cuein\": \"00:00:00\",\n                      \"cueout\": \"00:04:00.752438\",\n                      \"hidden\": false,\n                      \"filesize\": 3858688,\n                      \"description\": null,\n                      \"artwork\": \"\"\n                    }\n                  },\n                  \"current\": null,\n                  \"next\": {\n                    \"starts\": \"2019-10-21 17:32:49\",\n                    \"ends\": \"2019-10-21 17:36:44\",\n                    \"type\": \"track\",\n                    \"name\": \"Bob Marley - Could You Be Loved\",\n                    \"metadata\": {\n                      \"id\": 14,\n                      \"name\": \"\",\n                      \"mime\": \"audio/mp3\",\n                      \"ftype\": \"audioclip\",\n                      \"directory\": 1,\n                      \"filepath\": \"imported/1/Bob Marley/Greatest Hits/02. Could You Be Loved.mp3\",\n                      \"import_status\": 0,\n                      \"currentlyaccessing\": 0,\n                      \"editedby\": null,\n                      \"mtime\": \"2019-10-21 17:19:16\",\n                      \"utime\": \"2019-10-21 17:18:59\",\n                      \"lptime\": null,\n                      \"md5\": \"75e49569fd6af61cc8c18f5660beadc2\",\n                      \"track_title\": \"Could You Be Loved\",\n                      \"artist_name\": \"Bob Marley\",\n                      \"bit_rate\": 128000,\n                      \"sample_rate\": 44100,\n                      \"format\": null,\n                      \"length\": \"00:03:55.11\",\n                      \"album_title\": \"Greatest Hits\",\n                      \"genre\": \"Various\",\n                      \"comments\": null,\n                      \"year\": null,\n                      \"track_number\": 2,\n                      \"channels\": 2,\n                      \"url\": null,\n                      \"bpm\": 103,\n                      \"rating\": null,\n                      \"encoded_by\": null,\n                      \"disc_number\": null,\n                      \"mood\": null,\n                      \"label\": null,\n                      \"composer\": null,\n                      \"encoder\": null,\n                      \"checksum\": null,\n                      \"lyrics\": null,\n                      \"orchestra\": null,\n                      \"conductor\": null,\n                      \"lyricist\": null,\n                      \"original_lyricist\": null,\n                      \"radio_station_name\": null,\n                      \"info_url\": null,\n                      \"artist_url\": null,\n                      \"audio_source_url\": null,\n                      \"radio_station_url\": null,\n                      \"buy_this_url\": null,\n                      \"isrc_number\": null,\n                      \"catalog_number\": null,\n                      \"original_artist\": null,\n                      \"copyright\": null,\n                      \"report_datetime\": null,\n                      \"report_location\": null,\n                      \"report_organization\": null,\n                      \"subject\": null,\n                      \"contributor\": null,\n                      \"language\": null,\n                      \"soundcloud_id\": null,\n                      \"soundcloud_error_code\": null,\n                      \"soundcloud_error_msg\": null,\n                      \"soundcloud_link_to_file\": null,\n                      \"soundcloud_upload_time\": null,\n                      \"replay_gain\": \"-1.2\",\n                      \"owner_id\": 1,\n                      \"cuein\": \"00:00:00\",\n                      \"cueout\": \"00:03:55.11\",\n                      \"hidden\": false,\n                      \"filesize\": 3773820,\n                      \"description\": null,\n                      \"artwork\": \"\"\n                    }\n                  }\n                },\n                \"shows\": {\n                  \"previous\": [],\n                  \"current\": {\n                    \"name\": \"Show 1\",\n                    \"description\": \"A show\",\n                    \"genre\": \"HipHop\",\n                    \"id\": 1,\n                    \"instance_id\": 1,\n                    \"record\": 0,\n                    \"url\": \"https://example.com\",\n                    \"image_path\": \"\",\n                    \"starts\": \"2019-10-21 17:20:00\",\n                    \"ends\": \"2019-10-21 18:31:00\"\n                  },\n                  \"next\": [\n                    {\n                      \"name\": \"Reading\",\n                      \"description\": \"A reading of After the EMP by Harley Tate\",\n                      \"genre\": \"Sci-fi\",\n                      \"id\": 2,\n                      \"instance_id\": 2,\n                      \"record\": 0,\n                      \"url\": \"https://example.com\",\n                      \"image_path\": \"\",\n                      \"starts\": \"2019-10-21 18:31:00\",\n                      \"ends\": \"2019-10-22 10:45:00\"\n                    }\n                  ]\n                },\n                \"sources\": {\n                  \"livedj\": \"off\",\n                  \"masterdj\": \"off\",\n                  \"scheduledplay\": \"on\"\n                }\n              }\n  /week-info:\n    get:\n      summary: Retrieve the schedule for the week\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n      responses:\n        '200':\n          description: 200 response for default request\n          content:\n            application/json:\n              example: {\n                \"monday\": [\n                  {\n                    \"start_timestamp\": \"2019-10-21 17:20:00\",\n                    \"end_timestamp\": \"2019-10-21 18:31:00\",\n                    \"name\": \"Show 1\",\n                    \"description\": \"A show\",\n                    \"id\": 1,\n                    \"instance_id\": 1,\n                    \"instance_description\": \"\",\n                    \"record\": 0,\n                    \"url\": \"https://example.com\",\n                    \"image_path\": \"\",\n                    \"starts\": \"2019-10-21 17:20:00\",\n                    \"ends\": \"2019-10-21 18:31:00\"\n                  },\n                  {\n                    \"start_timestamp\": \"2019-10-21 18:31:00\",\n                    \"end_timestamp\": \"2019-10-22 10:45:00\",\n                    \"name\": \"Reading\",\n                    \"description\": \"A reading of After the EMP by Harley Tate\",\n                    \"id\": 2,\n                    \"instance_id\": 2,\n                    \"instance_description\": \"\",\n                    \"record\": 0,\n                    \"url\": \"https://example.com\",\n                    \"image_path\": \"\",\n                    \"starts\": \"2019-10-21 18:31:00\",\n                    \"ends\": \"2019-10-22 10:45:00\"\n                  }\n                ],\n                \"tuesday\": [],\n                \"wednesday\": [],\n                \"thursday\": [],\n                \"friday\": [],\n                \"saturday\": [],\n                \"sunday\": [],\n                \"nextmonday\": [],\n                \"nexttuesday\": [],\n                \"nextwednesday\": [],\n                \"nextthursday\": [],\n                \"nextfriday\": [],\n                \"nextsaturday\": [],\n                \"nextsunday\": [],\n                \"AIRTIME_API_VERSION\": \"1.1\"\n              }\n  /station-metadata:\n    get:\n      summary: BROKEN - Retrieve the schedule for the week\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n  /station-logo:\n    get:\n      summary: Fetch the station logo\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n  /show-history-feed:\n    get:\n      summary: BROKEN - Retrieve the show shedules for a given time range and show\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n        - name: start\n          in: path\n          description: The start time for the feed\n          required: true\n        - name: end\n          in: path\n          description: The end time for the feed\n          required: true\n        - name: timezone\n          in: path\n          description: The timezone that the times are in\n          required: true\n  /item-history-feed:\n    get:\n      summary: Retrieve the items for a time range and/or show\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n        - name: start\n          in: path\n          description: The start time for the feed\n          required: false\n        - name: end\n          in: path\n          description: The end time for the feed\n          required: false\n        - name: timezone\n          in: path\n          description: The timezone that the times are in\n          required: false\n        - name: instance_id\n          in: path\n          description: The show instance ID\n          required: false\n      responses:\n        '200':\n          description: The 200 default response\n          content:\n            application/json:\n              example: [\n                {\n                  \"starts\": \"2019-10-21 18:19:07\",\n                  \"ends\": \"2019-10-21 18:23:55\",\n                  \"history_id\": 16,\n                  \"instance_id\": 1,\n                  \"track_title\": \"F For You (feat. Mary J. Blige)\",\n                  \"artist_name\": \"Disclosure\",\n                  \"checkbox\": \"\"\n                },\n                {\n                  \"starts\": \"2019-10-21 17:20:31\",\n                  \"ends\": \"2019-10-21 17:24:45\",\n                  \"history_id\": 1,\n                  \"instance_id\": 1,\n                  \"track_title\": \"Ping Pong\",\n                  \"artist_name\": \"Armin van Buuren\",\n                  \"checkbox\": \"\"\n                },\n              ]\n  /shows:\n    get:\n      summary: Retrieve the show info (without schedule for given show_id\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n        - name: show_id\n          in: path\n          description: The ID of the show\n          required: false\n      response:\n        '200':\n          description: The response with a show_id of 1\n          content:\n            application/json:\n              example: [\n                {\n                  \"name\": \"Show 1\",\n                  \"id\": 1,\n                  \"url\": \"https://example.com\",\n                  \"genre\": \"HipHop\",\n                  \"description\": \"A show\",\n                  \"color\": \"\",\n                  \"background_color\": \"\",\n                  \"linked\": false,\n                  \"has_autoplaylist\": false,\n                  \"autoplaylist_id\": null,\n                  \"autoplaylist_repeat\": false\n                }\n              ]\n  /show-tracks:\n    get:\n      summary: Display the track listing for given instance_id\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n        - name: instance_id\n          in: path\n          description: The ID of the show\n          required: true\n      response:\n        '200':\n          description: The response with a instance_id of 1\n          content:\n            application/json:\n              example: [\n                {\n                  \"title\": \"Ping Pong\",\n                  \"artist\": \"Armin van Buuren\",\n                  \"position\": 0,\n                  \"id\": 1,\n                  \"mime\": \"audio/mp3\",\n                  \"starts\": \"2019-10-21 17:20:31\",\n                  \"length\": \"4:14.2\",\n                  \"file_id\": 2\n                },\n                {\n                  \"title\": \"No Angels (feat. Ella)\",\n                  \"artist\": \"Bastille\",\n                  \"position\": 1,\n                  \"id\": 2,\n                  \"mime\": \"audio/mp3\",\n                  \"starts\": \"2019-10-21 17:24:45\",\n                  \"length\": \"4:00.8\",\n                  \"file_id\": 4\n                }\n              ]\n  /show-schedules:\n    get:\n      summary: Display the show schedule for given show_id\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n        - name: show_id\n          in: path\n          description: The ID of the show\n          required: true\n        - name: start\n          in: path\n          description: The start time for the feed\n          required: false\n        - name: end\n          in: path\n          description: The end time for the feed\n          required: false\n        - name: timezone\n          in: path\n          description: The timezone that the times are in\n          required: false\n      response:\n        '200':\n          description: The response with a instance_id of 1\n          content:\n            application/json:\n              example: [\n                {\n                  \"starts\": \"2019-10-21 17:20:00\",\n                  \"ends\": \"2019-10-21 18:31:00\",\n                  \"record\": 0,\n                  \"rebroadcast\": 0,\n                  \"parent_starts\": null,\n                  \"record_id\": null,\n                  \"show_id\": 1,\n                  \"name\": \"Show 1\",\n                  \"description\": \"A show\",\n                  \"color\": \"\",\n                  \"background_color\": \"\",\n                  \"image_path\": \"\",\n                  \"linked\": false,\n                  \"file_id\": null,\n                  \"instance_id\": 1,\n                  \"instance_description\": \"\",\n                  \"created\": \"2019-10-21 17:20:22\",\n                  \"last_scheduled\": \"2019-10-21 17:20:50\",\n                  \"time_filled\": \"01:14:39.265872\",\n                  \"soundcloud_id\": null\n                }\n              ]\n  /show-logo:\n    get:\n      summary: Fetch the show logo. Returns the station logo if none exists\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n        - name: id\n          in: path\n          description: The ID of the show with the logo to retrieve\n          required: true\n  /track:\n    get:\n      summary: Displays the metadata of a particular track\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n        - name: id\n          in: path\n          description: The track id\n          required: true\n        - name: response\n          in: path\n          description: The type of response\n          schema:\n            enum:\n              - json\n              - artwork_data\n              - artwork\n          required: true\n      responses:\n        '200':\n          description: The 200 response\n          content:\n            application/json:\n              example: {\n                \"MDATA_KEY_FILEPATH\": \"imported\\/1\\/Armin van Buuren\\/Another You (feat. Mr. Probz)\\/01 Another You (feat. Mr. Probz).mp3\",\n                \"MDATA_KEY_DIRECTORY\": 1,\n                \"MDATA_KEY_TITLE\": \"Another You (feat. Mr. Probz)\",\n                \"MDATA_KEY_CREATOR\": \"Armin van Buuren\",\n                \"MDATA_KEY_SOURCE\": \"Another You (feat. Mr. Probz)\",\n                \"MDATA_KEY_DURATION\": \"00:03:19.183673\",\n                \"MDATA_KEY_MIME\": \"audio\\/mp3\",\n                \"MDATA_KEY_FTYPE\": \"audioclip\",\n                \"MDATA_KEY_URL\": null,\n                \"MDATA_KEY_GENRE\": null,\n                \"MDATA_KEY_MOOD\": null,\n                \"MDATA_KEY_LABEL\": \"Armin Audio B.V.\",\n                \"MDATA_KEY_COMPOSER\": null,\n                \"MDATA_KEY_DESCRIPTION\": null,\n                \"MDATA_KEY_SAMPLERATE\": 44100,\n                \"MDATA_KEY_BITRATE\": 192000,\n                \"MDATA_KEY_ENCODER\": null,\n                \"MDATA_KEY_ISRC\": null,\n                \"MDATA_KEY_COPYRIGHT\": null,\n                \"MDATA_KEY_YEAR\": \"2015\",\n                \"MDATA_KEY_BPM\": null,\n                \"MDATA_KEY_TRACKNUMBER\": 1,\n                \"MDATA_KEY_CONDUCTOR\": null,\n                \"MDATA_KEY_LANGUAGE\": null,\n                \"MDATA_KEY_REPLAYGAIN\": \"-8.36\",\n                \"MDATA_KEY_OWNER_ID\": 1,\n                \"MDATA_KEY_CUE_IN\": \"00:00:00\",\n                \"MDATA_KEY_CUE_OUT\": \"00:03:19.183673\",\n                \"MDATA_KEY_ARTWORK\": \"imported\\/1\\/artwork\\/01 Another You (feat. Mr. Probz)\"\n              }\n  /stream-m3u:\n    get:\n      summary: Returns m3u playlist file for the station's output stream\n      response:\n        '200':\n          description: The M3U file for the stream\n          content: application/x-mpegurl\n  /version:\n    get:\n      summary: Returns the current LibreTime and API versions\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: false\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              example: {\n                \"airtime_version\": \"3.0.0~alpha.5\",\n                \"api_version\": \"1.1\"\n              }\n  /recorded-shows:\n    get:\n      summary: BROKEN - Unclear what this did, not implemented in ApiController\n  /calendar-init:\n    get:\n      summary: BROKEN - Unclear what this did, not implemented in ApiController\n  /upload-file:\n    get:\n      summary: BROKEN - Unclear what this did, not implemented in ApiController\n  /upload-recorded:\n    post:\n      summary: Upload a recorded show\n      parameters:\n        - name: showinstanceid\n          in: path\n          description: The ID of the show that was recorded\n          required: true\n        - name: fileid\n          in: path\n          description: The ID of the recorded file in the database\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /media-monitor-setup:\n    post:\n      summary: Initialises monitoring of media directories\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /media-item-status:\n    get:\n      summary: BROKEN - Unclear what this did, not implemented in ApiController\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /reload-metadata:\n    get:\n      summary: BROKEN - Unclear what this did, not implemented in ApiController\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /list-all-files:\n    get:\n      summary: BROKEN - List all files in a given directory managed by LibreTime\n      parameters:\n        - name: dir_id\n          in: path\n          description: The directory to list files in\n          required: true\n        - name: all\n          in: path\n          description: |-\n            true to show all files in the database, even if they do not exist\n            on disk\n          required: false\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /list-all-watched-dirs:\n    get:\n      summary: |-\n        BROKEN (LT does not currently support watched files) - lists all\n        directories to watch for new files\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /add-watched-dir:\n    post:\n      summary: |-\n        BROKEN (LT does not currently support watched files) - adds a directory\n        to the list of watched directories\n      parameters:\n        - name: path\n          in: path\n          description: the path of the directory on the server, base64 encoded\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /remove-watched-dir:\n    post:\n      summary: |-\n        BROKEN (LT does not currently support watched files) - removes a\n        directory from the list of watched directories\n      parameters:\n        - name: path\n          in: path\n          description: the path of the directory on the server, base64 encoded\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /set-storage-dir:\n    post:\n      summary: Sets the storage path for music files\n      parameters:\n        - name: path\n          in: path\n          description: The base64 encoded path to the new storage directory\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /get-stream-setting:\n    get:\n      summary: |-\n        BROKEN - Returns the settings configured for the four output Icecast\n        streams\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /status:\n    get:\n      summary: |-\n        BROKEN - Returns the current status of the various LibreTime\n        components\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /register-component:\n    post:\n      summary: Add a service component (for example Monit)\n      parameters:\n        - name: component\n          in: path\n          description: The component name to add\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /update-liquidsoap-status:\n    post:\n      summary: |-\n        Update the status of a stream to indicate a Liquidsoap status update\n      parameters:\n        - name: msg_post\n          in: path\n          description: The error message to use\n          required: true\n        - name: stream_id\n          in: path\n          description: The ID of the stream to update\n          required: true\n        - name: boot_time\n          description: |-\n            The time that the status was last updated. Excluding this will\n            force update.\n          required: false\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /update-file-system-mount:\n    post:\n      summary: |-\n        Handles additions/deletions of mount points on which watched\n        directories reside\n      parameters:\n        - name: added_dir\n          in: path\n          description: |-\n            A comma separated list of directories that were added to the system\n          required: false\n        - name: removed_dir\n          in: path\n          description: |-\n            A comma separated list of directories that were removed from the\n            system\n          required: false\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /handle-watched-dir-missing:\n    post:\n      summary: |-\n        BROKEN (LibreTime does not currentl handle watched directories) -\n        Handles missing watched directories.\n      parameters:\n        - name: dir\n          in: path\n          description: The directory to disable\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /rabbitmq-do-push:\n    post:\n      summary: |-\n        Used by dev scripts to make rabbitmq send out a message to pypo that a\n        potential change has been made to the database.\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /check-live-stream-auth:\n    get:\n      summary: |-\n        Tests the authentication supplied to authenticate DJs connecting to a\n        live stream\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n                  format: password\n                djtype:\n                  type: string\n              required:\n                - username\n                - password\n                - djtype\n  /update-source-status:\n    post:\n      summary: Update on source connect or disconnect\n      parameters:\n        - name: sourcename\n          in: path\n          description: |-\n            The name of the source that has connected or disconnected\n        - name: status\n          in: path\n          description: true if the source is now connected\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /get-bootstrap-info:\n    get:\n      summary: |-\n        BROKEN - Retrieves the current state of the instance. This includes\n        which sources are currently connected, station name, etc\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /get-files-without-replay-gain:\n    get:\n      summary: |-\n        BROKEN (returns all files) - Returns the files that do not have replay\n        gain set.\n      parameters:\n        - name: dir_id\n          in: path\n          description: The directory ID\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /get-files-without-silan-value:\n    get:\n      summary: Returns the files that have not been processed by silan\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n      responses:\n        '200':\n          description: 200 response for default request\n          content:\n            application/json:\n              example: [\n                {\n                  \"id\": 9,\n                  \"fp\": \"/srv/airtime/stor/\"\n                },\n                {\n                  \"id\": 12,\n                  \"fp\": \"/srv/airtime/stor/imported/1/Sam Smith Feat John Legend/The Official Uk Top 40 Singles Chart 03-22-2015/01 Sam Smith Feat John Legend - Lay Me Down.mp3\"\n                },\n                {\n                  \"id\": 13,\n                  \"fp\": \"/srv/airtime/stor/imported/1/Mumford & Sons/Wilder Mind [ Deluxe Edition ]/01 - Tompkins Square Park.mp3\"\n                },\n                {\n                  \"id\": 3,\n                  \"fp\": \"/srv/airtime/stor/imported/1/Bastille/All This Bad Blood/1-02 Things We Lost in the Fire.mp3\"\n                },\n                {\n                  \"id\": 1,\n                  \"fp\": \"/srv/airtime/stor/imported/1/Armin van Buuren/Another You (feat. Mr. Probz)/01 Another You (feat. Mr. Probz).mp3\"\n                },\n                {\n                  \"id\": 15,\n                  \"fp\": \"/srv/airtime/stor/imported/1/Harley Tate/Harley Tate - After the EMP 01 - After the EMP/Harley Tate - After the EMP 01 - After the EMP.mp3\"\n                }\n              ]\n  /reload-metadata-group:\n    get:\n      summary: |-\n        Extracts all file metadata from the list of files\n      parameters:\n        - name: mdXXX\n          # This could be wrong - the function in ApiController is confusing...\n          in: path\n          description: |-\n            A json encoded hash with all the information related to the action.\n            the XXX represents at least 1 digit. Currently the mdXXX key has no\n            meaning.\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /notify-webstream-data:\n    post:\n      summary: Notifies webstreams of data being updated\n      parameters:\n        - name: data\n          in: path\n          description: |-\n            A json encoded hash with the data used to notify the webstream. This\n            includes keys such as 'title'.\n          required: true\n        - name: media_id\n          in: path\n          description: The ID of the media to show\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /get-stream-parameters:\n    get:\n      summary: BROKEN - Retrieves the parameters set for each stream\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /push-stream-stats:\n    post:\n      summary: Updates the listener number statistics\n      parameters:\n        - name: data\n          in: path\n          description: A json encoded mapping of time to number of listeners\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /update-stream-setting-table:\n    post:\n      summary: Set stream settings\n      parameters:\n        - name: data\n          in: path\n          description: A json encoded array of key-value pairs to update\n          required: true\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /update-replay-gain-value:\n    post:\n      summary: Updates the replay gain values for media items\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n        - name: data\n          description: A json encoded array of media ID and gain pairs\n          required: true\n  /update-cue-values-by-silan:\n    post:\n      summary: Updates the silan cue values for media items\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n        - name: data\n          description: A json encoded array of media ID and cue pairs\n          required: true\n  /get-usability-hint:\n    get:\n      summary: Returns the usibility hint tool-tip for a UI item\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n        - name: userPath\n          in: path\n          description: The URL path to the UI item\n          required: true\n  /poll-celery:\n    post:\n      summary: Polls celery for tasks\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n  /recalculate-schedule:\n    post:\n      summary: Recalculates the schedule to remove gaps and update timing\n      parameters:\n        - name: api_key\n          in: path\n          description: The API key to use for authentication\n          required: true\n",
			"canonicalURL": "/github.com/LibreTime/libretime-debian-packaging@101357e1ea4eb53a49ecfdf4239d36653a16c03a/-/blob/docs/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/libretime/libretime-debian-packaging/blob/101357e1ea4eb53a49ecfdf4239d36653a16c03a/docs/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 853: found unknown escape character"
}