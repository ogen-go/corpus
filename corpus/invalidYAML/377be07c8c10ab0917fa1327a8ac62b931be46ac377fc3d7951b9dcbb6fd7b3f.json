{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NHSDigital/personal-demographics-service-api"
		},
		"file": {
			"name": "personal-demographics.yaml",
			"size": 0,
			"path": "specification/personal-demographics.yaml",
			"byteSize": 115348,
			"content": "# This is an OpenAPI Specification (https://swagger.io/specification/)\n# for the Personal Demographics Service (PDS) API\n# owned by NHS Digital (https://digital.nhs.uk/)\nopenapi: \"3.0.0\"\ninfo:\n  version: \"{VERSION}\"\n  title: Personal Demographics Service (FHIR) API\n  description: |\n    ## Overview\n    Use this API to access the [Personal Demographics Service (PDS)](https://digital.nhs.uk/services/demographics) - the national electronic database of NHS patient details such as name, address, date of birth, related people, registered GP and NHS number.\n\n    You can:\n    * search for patients\n    * get patient details\n    * update patient details\n    * verify an NHS number for a patient\n\n    You cannot currently use this API to:\n    * create a new record for a birth - use [PDS HL7 V3 API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-hl7-v3)\n    * receive birth notifications - use [PDS HL7 V3 API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-hl7-v3) or [PDS Notifications FHIR API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-notifications-fhir) \n    * create a record for a new patient - use [PDS HL7 V3 API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-hl7-v3)\n    * register a new patient at a GP Practice - use [NHAIS GP Links API](https://digital.nhs.uk/developer/api-catalogue/nhais-gp-links)\n    * receive patient death notifications - use [PDS Notifications FHIR API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-notifications-fhir) \n    * receive notifications about a patient's change of address - use [PDS Notifications FHIR API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-notifications-fhir) \n    * receive notifications about a patient's change of GP - use [PDS Notifications FHIR API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-notifications-fhir) \n    * receive notifications about any PDS record change - use [PDS Notifications FHIR API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-notifications-fhir) \n    \n \n    You can read and update the following data:\n    * NHS number (read only)\n    * name\n    * gender\n    * addresses and contact details\n    * birth information\n    * death information\n    * registered GP\n    * nominated pharmacy\n    * dispensing doctor pharmacy\n    * medical appliance supplier pharmacy\n    * related people, such as next of kin (read only - update coming soon)\n    \n    ### Patients included in PDS\n    Regardless of nationality, or where they live now, PDS includes all patients who have ever been registered with a GP practice, or treated by a health or care organisation (even as a visitor or migrant) in England, Wales, the Isle of Man, or in a UK Defence Medical Services unit anywhere in the world. \n\n    All patients in PDS have an NHS number which is unique. The 10-digit NHS number is used in England, Wales, the Isle of Man, Scotland and Northern Ireland, but not the Channel Islands. Scotland and Northern Ireland have their own distinct number ranges.\n\n    ### Access modes\n    This API has three access modes:\n    \n    | Access mode                    | Functions          | Availability |\n    | ------------------------------ | ------------------ | ------------ |\n    | [Application-restricted access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#application-restricted-apis)  |Search for a patient (single result).</br>Get patient details.                                    | Available in production ([stable](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status)) |\n    | [Healthcare worker access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis)              |Search for patients (multiple results).</br>Get patient details.</br>Update patient details.    | Available in production ([beta](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status))   |\n    | [Patient access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis)                        |Get own details.</br>Update own details (limited).                                                 | Available in integration environment ([alpha](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status))|\n    \n    For further details about the access modes for this API, see [Security and authorisation](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-fhir#api-description__security-and-authorisation) below.\n    \n    ## Who can use this API\n    This API can only be used where there is a [legal basis](http://digital.nhs.uk/services/demographics/access-data-on-the-personal-demographics-service) to do so. Make sure you have a valid use case before you go too far with your development.  You must demonstrate you have a [valid use case](https://digital.nhs.uk/services/demographics/access-data-on-the-personal-demographics-service) as part of digital onboarding. \n    \n    You must do this before you can go live (see ‘Onboarding’ below).\n\n    ### Who can access PDS records\n    Health and care organisations in England and the Isle of Man can access PDS records. Legitimate direct care examples include NHS organisations delivering healthcare, local authorities delivering care, third sector and private sector health and care organisations, and developers delivering systems to health and care organisations. \n\n    Health and care organisations in Wales access their own version of PDS called the Welsh Demographics Service (WDS) which is connected to PDS behind the scenes. \n\n    Health and care organisations in Scotland, Northern Ireland and the Channel Islands access their own equivalents of PDS.\n    \n    Patients who receive health and social care or make use of NHS services in England, Wales, the Isle of Man, Scotland, Northern Ireland and the Channel Islands.\n\n    ## Related APIs\n    The following APIs also give access to the Personal Demographics Service:\n    - [Personal Demographics Service (SMSP) API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-smsp) - this API is now deprecated.\n    - [Personal Demographics Service (HL7 V3) API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-hl7-v3) - use this if you want to use functions that are not yet available on the FHIR API, such as creating a new record for a birth, receiving birth notifications, or creating a record for a new patient (except when registering a new patient at a GP Practice, use [NHAIS](https://digital.nhs.uk/services/nhais)). For birth notifications, another option is [PDS Notifications - FHIR API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-notifications-fhir).\n\n    Once our roadmap is complete, the above APIs will become redundant.\n\n    The following APIs are also related to this API:\n    - [Personal Demographics Service Notifications - FHIR API](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-notifications-fhir) - use this to subscribe to be notified of a set of patient record changes, including any record update, birth, death, change of address and change of GP.\n    - [Organisation Data Service FHIR API](https://developer.nhs.uk/apis/ods/) - use this to get full details for the organisations related to the patient, such as their registered GP or nominated pharmacy.\n\n    ## API status and roadmap\n    ### Application-restricted access\n    This access mode is [stable](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status):\n    * you should strongly consider it as the primary choice for PDS integration\n    * we do not make routine breaking changes, if it cannot be avoided, for example, for security reasons, we will give advance notice\n     \n    ### Healthcare worker access\n    This access mode is in [beta](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status), meaning:\n    - it is available in production\n    - we might make breaking changes, but only if we cannot avoid it, and we will give advance notice\n        \n    ### Patient access\n    This access mode is in [alpha](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status), meaning:\n    - it is available for testing in the integration environment, but not for production use\n    - we might make breaking changes, but only if we cannot avoid it, and we will give advance notice\n    \n    ### Roadmap\n    To see our roadmap, or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/?order=popular&filter=allexceptdone&tag=pds-fhir-api).\n    \n    If you have any other queries, please [contact us](https://digital.nhs.uk/developer/help-and-support).\n\n    ## Service level\n    \n    This API is a platinum service, meaning it is operational and supported 24 x 7 x 365.\n\n    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).\n    \n    ## Technology\n    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#basic-rest).\n\n    It also conforms to the [FHIR](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#fhir) global standard for health care data exchange.\n    Specifically, it is aligned with [FHIR UK Core](https://digital.nhs.uk/services/fhir-uk-core), which is built on FHIR Release 4.\n\n    You do not need to know much about FHIR to use this API - FHIR APIs are just RESTful APIs that follow specific rules.\n    In particular:\n    - resource names are capitalised and singular, for example `/Patient` not `/patients`\n    - array names are singular, for example `line` not `lines` for address lines\n    - data items that are country-specific and thus not included in the FHIR global base resources are usually wrapped in an `extension` object\n\n    There are [libraries and SDKs available](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#fhir-libraries-and-sdks) to help with FHIR API integration.\n\n    ## Network access\n    This API is available on the internet and, indirectly, on the [Health and Social Care Network (HSCN)](https://digital.nhs.uk/services/health-and-social-care-network).\n\n    To use this API with [NHS smartcards](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/nhs-smartcards-for-developers) you do need an HSCN connection, although internet-facing alternatives are available.\n    \n    For more details see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).\n    \n    ## Security and authorisation\n    \n    This API has three access modes:\n    - application-restricted access\n    - healthcare worker access\n    - patient access\n\n    ### Application-restricted access\n    Use this access mode if you need to:\n    * search for a patient – and only get a result if there is a unique match\n    * get a single patient's details\n    \n    This access mode is [application-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#application-restricted-apis), meaning we authenticate the calling application but not the end user.\n    \n    The end user could be:\n    * a healthcare worker - in which case you must ensure they are authenticated and suitably authorised locally\n    * a patient - in which case you must ensure they are authenticated locally\n    * not present at all - for example as part of a back end process to check NHS numbers for data flowing from one system to another\n    \n    To use this access mode, use the following security pattern:\n    * [Application-restricted RESTful API - signed JWT authentication](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/application-restricted-restful-apis-signed-jwt-authentication)\n    \n    ### Healthcare worker access\n    Use this access mode if the end user is a healthcare worker and you need to: \n    * search for patients – and be able to present a list of matches for the user to choose from \n    * get patient details \n    * update patient details \n\n    This access mode is [user-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis), meaning an end user must be present, authenticated and authorised.\n\n    The end user must be:\n    * a healthcare worker\n    * strongly authenticated, using either an [NHS smartcard or a modern alternative](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/nhs-smartcards-for-developers)\n    * authorised, using [national role-based access control (RBAC)](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/national-rbac-for-developers)\n\n    To use this access mode, use one of the following security patterns:\n    \n    |\tSecurity pattern\t\t                                                                                                                                                                                                  |\tTechnical details\t                                             |\tAdvantages                                                              | Disadvantages                                                             |\n    |-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| ---------------------------------------------------------| -------------------------------------------------------------------------|---------------------------------------------------------------------------|\n    |[NHS CIS2 - combined authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-cis2-combined-authentication-and-authorisation) |OAuth 2.0 authorisation code flow with API key and secret |No need to integrate and onboard separately with NHS CIS2.                |No access to user information.</br> Not recommended for use in GP software.     |\n    |[NHS CIS2 - separate authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-cis2-separate-authentication-and-authorisation) |OAuth 2.0 token exchange with signed JWT                  |Gives access to user information.</br>Recommended for use in GP software.     |Need to integrate and onboard separately with NHS CIS2.                    |\n\n\n    ### Patient access\n    Use this access mode if the end user is a patient and you need to: \n    * get the patient’s own details\n    * update the patient’s own details\n    \n    This access mode is [user-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis), meaning an end user must be present, authenticated and authorised.\n    \n    The end user must be:\n    * a patient who receives health and social care or makes use of NHS services\n    * strongly authenticated, using [NHS login](https://digital.nhs.uk/services/nhs-login)\n    \n    To use this access mode, use one of the following security patterns:\n    \n    |\tSecurity pattern\t\t                                                                                                                                                                                                          |\tTechnical details\t                                  |\tAdvantages\t                                                | Disadvantages                                           |\n    |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| ----------------------------------------------------| ------------------------------------------------------------|---------------------------------------------------------|\n    |[NHS login - combined authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-login-combined-authentication-and-authorisation) |OAuth 2.0 authorisation code with API key and secret |No need to integrate and onboard separately with NHS login.  |No access to user information.                           |\n    |[NHS login - separate authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-login-separate-authentication-and-authorisation) |OAuth 2.0 token exchange with signed JWT             |Gives access to user information.                            |Need to integrate and onboard separately with NHS login. |\n    \n    ## Environments and testing\n\n    | Environment       | Base URL                                                               |\n    | ----------------- | ---------------------------------------------------------------------- |\n    | Sandbox           | `https://sandbox.api.service.nhs.uk/personal-demographics/FHIR/R4/`    |\n    | Integration test  | `https://int.api.service.nhs.uk/personal-demographics/FHIR/R4/`        |\n    | Production        | `https://api.service.nhs.uk/personal-demographics/FHIR/R4/`            |\n\n    ### Sandbox testing\n    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):\n    * is for early developer testing\n    * only covers a limited set of scenarios\n    * is stateless, so does not actually persist any updates\n    * is open access, so does not allow you to test authorisation\n\n    For details of sandbox test scenarios, or to try out the sandbox using our 'Try this API' feature, see the documentation for each endpoint.\n\n    Alternatively, you can try out the sandbox using our Postman collection:\n    \n    [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/14719036-953f067f-30b9-4552-8252-7cc10b21dad3)\n\n    ### Integration testing\n    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):\n    * is for formal integration testing\n    * is stateful, so persists updates\n    * includes authorisation, with options for user-restricted access (with or without [smartcards](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/nhs-smartcards-for-developers) and application-restricted access\n         \n    For read-only testing, you can either use our [PDS FHIR API test data packs](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-fhir/pds-fhir-api-test-data) or set up your own test data.\n    \n    To test updating patient details, you must set up your own test data.\n\n    For more details see [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).\n\n    ### Production smoke testing\n    You must not use real patient data for smoke testing in the production environment.\n    \n    Rather, use our [production test patient](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-fhir/pds-fhir-api-test-data#production-smoke-testing).\n\n    ## Onboarding\n    You need to get your software approved by us before it can go live with this API. We call this onboarding. The onboarding process can sometimes be quite long, so it’s worth planning well ahead.\n    \n    This API uses our online digital onboarding process. To get started, send us an email at [api.management@nhs.net](mailto:api.management@nhs.net).\n    \n    As part of this process, you need to demonstrate your technical conformance to the requirements for this API. For more details according to your access mode, see:\n    * [PDS FHIR API technical conformance - application-restricted access mode](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-fhir/pds-fhir-technical-conformance---application-restricted-access-mode)\n    * [PDS FHIR API technical conformance - healthcare worker access mode](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-fhir/pds-fhir-technical-conformance---healthcare-worker-access-mode)\n\n    To find out more about the process, see [digital onboarding](https://digital.nhs.uk/developer/guides-and-documentation/onboarding-process#digital-onboarding). \n    \n  contact:\n    name: Personal Demographics Service FHIR API Support\n    url: 'https://digital.nhs.uk/developer/help-and-support'\n    email: api.management@nhs.net\nservers:\n  - url: 'https://sandbox.api.service.nhs.uk/personal-demographics/FHIR/R4'\n    description: Sandbox environment.\n  - url: 'https://int.api.service.nhs.uk/personal-demographics/FHIR/R4'\n    description: Integration test environment.\n  - url: 'https://api.service.nhs.uk/personal-demographics/FHIR/R4'\n    description: Production environment.\npaths:\n  /Patient:\n    parameters:\n      - $ref: '#/components/parameters/BearerAuthorization'\n      - $ref: '#/components/parameters/RoleId'\n      - $ref: '#/components/parameters/RequestID'\n      - $ref: '#/components/parameters/CorrelationID'\n    get:\n      summary: Search for a patient\n      operationId: search-patient\n      externalDocs:\n        description: ODS codes and documentation.\n        url: https://fhir.nhs.uk/Id/ods-organization-code\n      description: |\n        ## Overview\n        Use this endpoint to search for a patient in PDS.\n        \n        You can search using various combinations of:\n          * given name\n          * family name\n          * gender\n          * postcode\n          * date of birth - which can be a range\n          * date of death - which can be a range\n          * registered GP practice\n          \n        There are various search options, such as fuzzy search, exact match, history and wildcards.\n        \n        The behaviour of this endpoint depends on which access mode you are using:\n        \n        | Access mode                    | Behaviour                                  |\n        | ------------------------------ | ------------------------------------------ |\n        | Application-restricted access  | Only a single unique match returned        |\n        | Healthcare worker access       | Up to 50 matching patient records returned |\n        | Patient access                 | Not yet available                          |\n\n        ## Search options\n        The following sections explain the various search options.\n        Which options you choose depends very much on your use case, and getting it right is really important.\n        If you need help, [contact us](https://digital.nhs.uk/developer/help-and-support).\n\n        ### Application-restricted access mode\n        In this access mode, you only get a single matching patient record, and only if it's a unique match.\n\n        Use search options that are likely to find a unique match. In our experience, the following is a good starting point:\n          * search on given name, family name, postcode and date of birth - this combination should uniquely identify a patient\n          * for given name, use the first three characters and a wildcard, for example to search for `Annabel`, use `Ann*` - this caters for different name spellings and abbreviations\n          * for postcode, use the first two characters and a wildcard, for example to search for `LS11 6AD`, use `LS*` - this caters for people who have moved locally but not updated PDS\n          * use a non-fuzzy search - this reduces the chance of multiple matches\n          * use a non-exact match - an exact match does not work with wildcards\n          * include history - this increases the chance of a match\n\n        For more details, see the following sections.\n\n        ### Healthcare worker access mode\n        In this access mode - where the end user is a strongly authenticated healthcare worker - you can get up to 50 matching patient records.\n        This allows the end user to choose the best match.\n\n        Use search parameters that are relevant to your use case - for example date of death is not always appropriate.\n        \n        To protect patient privacy, design your search to minimise the number of matching patients.\n        For example, you could:\n          * encourage users to enter as many search parameters as they can\n          * force users to try a non-fuzzy search first and then only offer a fuzzy search if they cannot find the patient\n        \n        For more details, see the following sections.\n\n        ### Non-fuzzy search\n        A non-fuzzy search:\n          * allows wildcards in names and postcodes\n          * does not match homophones or transposed names\n          * can optionally search history, such as previous names and addresses\n\n        It is less likely to return multiple matches than a fuzzy search, so is more suitable for finding a unique match.\n\n        The minimum search parameters are:\n          * family name - which can include wildcards\n          * date of birth - which can be a range\n          \n        ### Fuzzy search\n        A fuzzy search:\n          * matches common homophones, such as `Smith` and `Smythe`, using the [Soundex](https://en.wikipedia.org/wiki/Soundex) algorithm\n          * checks for transposed names, such as `Adam Thomas` and `Thomas Adam`\n          * always searches history, such as previous names and addresses\n\n        It is more likely to include multiple matches than a non-fuzzy search, so is not ideal for finding a unique match.\n        \n        It is also more likely to include false positives - other patients that match the search criteria.\n        Therefore, for privacy reasons, it is better to use it only if a non-fuzzy match has failed.\n\n        You must use one of the following search parameter combinations:\n          * given name, family name and date of birth\n          * family name, date of birth, gender and postcode\n          * given name, date of birth, gender and postcode\n\n        If you include the date of death or registered GP practice query parameters, they are not used in the search. However they do affect the patient's matching score - a mismatch reduces the returned score.\n\n        ### History\n        PDS holds historic information, including previous names and addresses.\n\n        A fuzzy search always includes history. For a non-fuzzy search, you can request to include history.\n\n        Searching history can match patients where only a previous name or address is known, or if a patient provides a previous name or address on the assumption that their record hasn’t been updated.\n\n        ### Exact match\n        You can request an exact match.\n        This might be useful if you are verifying an NHS number against details you already believe to be correct.\n        It is unlikely to work well with wildcards or fuzzy search.\n\n        ### Names\n        Matching names can be difficult due to:\n          * multiple given names, such as in `Jane Anne Smith`\n          * [compound given names](https://en.wikipedia.org/wiki/Given_name#Compound), such as in `John Paul Smith`\n          * multiple or double-barrelled surnames, such as in `Michael Smith-Jones`\n          * homophones, such as `Smith` and `Smythe` or `Ann` and `Anne`\n          * abbreviated names, such as `Bob` instead of `Robert`\n          * transposed names, such as `Adam Thomas` instead of `Thomas Adam`\n          * previous names, such as maiden names\n          * special characters such as in `O'Reilly`, `Jones-Smith` or `Kociński`\n          * spelling mistakes, either in the search criteria or in PDS\n\n        To deal with some of these issues:\n          * we always search all given names\n          * we search across all types of name - usual, nickname and temporary\n          * a fuzzy search matches homophones, transposed names and previous names\n          * for a non fuzzy search, you can optionally use wildcards and search previous names\n\n        ### Gender\n        PDS has four options for gender - `male`, `female`, `other` and `unknown`.\n        For some people, the gender held in PDS might not match the gender they identify with.\n\n        In these cases, searching by gender might not find the patient.\n        These are edge cases but are important to consider because gender can be a sensitive issue for the people in question.\n\n        In general, we recommend not including gender as a search parameter.\n          \n        ### Date of birth and death\n        Sometimes, the exact date of birth or death is not known when doing a search.\n        Sometimes, the date of birth or death is not accurate in PDS.\n        For example, if only the year of birth is known, the day and month of birth might be recorded as the first of January - for example, `01/01/1932`.\n\n        In such cases, searching a range of dates can help. This can result in multiple matches, so might not work well when searching for a unique match.\n\n        ### Postcode\n        People sometimes move locally, meaning the postcode in PDS is out of date, but does at least match on the first two characters.\n\n        Searching for the first two characters of the postcode and a wildcard can work well. For example, to search for `LS11 6AD`, use `LS*`.\n        This is only possible for a non-fuzzy search.\n        \n        This can result in multiple matches, but it has been known to work well in some cases - even for unique matches.\n\n        ### General practitioner\n        This is an ODS code. If you use it, it must match exactly.\n\n        ## Patient data returned\n        The patient data returned on a search is not the full set of data that is returned on a retrieval by NHS number. The following data is included:\n        * NHS number\n        * names - usual, nickname and temporary\n        * gender\n        * birth information, apart from place of birth\n        * death information\n        * address - home address\n        * contact details\n        * registered GP\n        * restricted patient flag\n\n        The following data is excluded:\n        * place of birth\n        * names, apart from usual, nickname and temporary \n        * addresses, apart from home address\n        * pharmacy details\n        * communication details\n        * contact preferences\n\n        ### Restricted patients\n        Some patients are tagged as [restricted](https://digital.nhs.uk/services/demographics/restricting-access-to-a-patients-demographic-record) and are sometimes known as sensitive patients. When performing a search, restricted patients can be returned; however, location sensitive fields such as `address`, `telecom`, `contact` and `generalPractitioner` are removed.\n\n        If `address-postcode` or `general-practitioner` are included in the search parameters, no restricted patients are returned even if a match is identified.\n\n        The restricted flag can be found in the data under `meta/security` on the patient resource.\n        \n        ### Invalidated patients\n        Some patients are marked as invalidated in PDS - also known as `redacted` in FHIR terminology. Invalidated patient records are not returned in search results.\n        If an invalidated patient record has been superseded, the superseding record is returned.\n\n        ## Scoring\n        Every matched patient in the result list includes a score to indicate how closely the patient matched the search parameters.\n\n        A score of 1.0 indicates an exact match. A score of less than 1.0 indicates a partial match.\n\n        The result list is sorted in descending score order - best match first.\n\n        Use the `_exact-match` query parameter to return exact matches only - where the score is 1.0.\n\n        ## Clinical safety and privacy\n        This endpoint can return multiple matching patients for a given search, including partial matches.\n\n        Ensure that you design your software to minimise the following risks:\n        * an end user selects the wrong patient from the results presented, so there is a risk of clinical harm; for example due to retrieval of the wrong clinical data\n        * the end user has access to patients’ personal data, so there is a risk to patient privacy\n\n        Note that:\n        * we record an access request in our audit trail for all patients matched in a PDS search\n        * it is almost certainly a good idea to display search results in descending score order - best match first\n\n        Please consider the information your application returns to users. For example a patient's temporary address can be used to perform a successful search. The home address will be included in the response. For citizen facing services please be aware of this behaviour and do not present a different address to the patient, unless they are logged in at a sufficiently high proof point.\n        \n        ## Sandbox testing\n        You can test the following scenarios in our sandbox environment:\n\n        | Scenario                    | Request                                                      | Response                                   |\n        | --------------------------- | ------------------------------------------------------------ | ------------------------------------------ |\n        | Basic search                | `family`=`Smith`, `gender`=`female`, `birthdate`=`eq2010-10-22` | HTTP Status 200 with single search result. |\n        | Wildcard search             | `family`=`Sm*`, `gender`=`female`, `birthdate`=`eq2010-10-22` | HTTP Status 200 with search result of two. |\n        | Search with limited results | `family`=`Sm*`, `gender`=`female`, `birthdate`=`eq2010-10-22`, `_max-results`=`2` | HTTP Status 200 with search result of two. |\n        | Search with date range      | `family`=`Smith`, `gender`=`female`, `birthdate`=`ge2010-10-21`, `birthdate`=`le2010-10-23` | HTTP Status 200 with single search result. |\n        | Fuzzy search                | `family`=`Smith`, `given`=`Jane`, `gender`=`female`, `birthdate`=`eq2010-10-22`, `_fuzzy-match`=`true` | HTTP Status 200 with single search result. |\n        | Restricted patient search   | `family`=`Smythe`, `given`=`Janet`, `gender`=`female`, `birthdate`=`eq2005-06-16` | HTTP Status 200 with single search result with restricted data omitted. |\n        | Compound name search        | `family`=`Smith`, `given`=`John Paul`, `given`=`James`, `gender`=`female`, `birthdate`=`eq2010-10-22` | HTTP Status 200 with single search result. |\n        | Unsuccessful search         | Any other valid search query parameters                      | HTTP Status 200 with no search results     |\n        | Invalid date format         | `birthdate` or `death-date` query parameters with values not in format `YYYY-MM-DD` | HTTP Status 400 with problem description   |\n        | Too few search parameters   | Any invalid combination of query parameters                  | HTTP Status 400 with problem description   |\n        | Missing X-Request-ID        | `id`=`9000000009` (or any other valid NHS number)            | HTTP Status 412 with problem description   |\n\n        You can try out the sandbox using the 'Try this API' feature on this page.\n\n        Alternatively, you can try out the sandbox using our Postman collection:\n        \n        \n        [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/a1ce1b055839caa384a8?action=collection%2Fimport)\n\n      parameters:\n        - $ref: '#/components/parameters/FuzzyMatch'\n        - $ref: '#/components/parameters/ExactMatch'\n        - $ref: '#/components/parameters/History'\n        - $ref: '#/components/parameters/MaxResults'\n        - $ref: '#/components/parameters/Family'\n        - $ref: '#/components/parameters/Given'\n        - $ref: '#/components/parameters/Gender'\n        - $ref: '#/components/parameters/Birthdate'\n        - $ref: '#/components/parameters/DeathDate'\n        - $ref: '#/components/parameters/AddressPostcode'\n        - $ref: '#/components/parameters/GeneralPractitioner'\n      responses:\n        '200':\n          description: |\n            A completed search. This might contain zero, one or many matching patients, or it might contain a 'TOO_MANY_MATCHES' error.\n          headers:\n            X-Correlation-Id:\n              $ref: '#/components/headers/X-Correlation-Id'\n            X-Request-Id:\n              $ref: '#/components/headers/X-Request-Id' \n          content:\n            application/fhir+json:\n              schema:\n                $ref: '#/components/schemas/PatientSearch'\n              example:\n                $ref: components/examples/PatientSearch.json\n        '4XX':\n          description: |\n            An error occurred as follows:\n            \n            | HTTP status | Error code                 | Description |\n            | ----------- | -------------------------- | --------------------------------------------- |\n            | 200         | TOO_MANY_MATCHES           | Too many matches were found - user should be told to refine their search parameters.\t|\n            | 400         | INVALID_SEARCH_DATA\t       | Invalid combination of search parameters. For details, see the `diagnostics` field. |\n            | 400         | UNSUPPORTED_SERVICE        | No search parameters provided. |\n            | 400         | MISSING_VALUE              | Missing header or query parameter. For details, see the `diagnostics` field. |\n            | 400         | INVALID_VALUE              | Invalid header or query parameter. For details, see the `diagnostics` field. |\n            | 400         | ADDITIONAL_PROPERTIES      | Unrecognised query parameter. For details, see the `diagnostics` field. |\n            | 401         | ACCESS_DENIED              | Access token missing, invalid or expired, or calling application not configured for this operation. |\n            | 403         | INVALID_VALUE              | Multiple results requested when using the API in application-restricted mode. |\n            | 408         | UNABLE_TO_CALL_SERVICE     | The downstream domain processing has not completed within the configured timeout period. |\n            | 429         | TOO_MANY_REQUESTS          | You have exceeded your application's [rate limit](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#rate-limits). |\n  \n          content:\n            application/fhir+json:\n              schema:\n                $ref: '#/components/schemas/OperationOutcome'\n              example:\n                resourceType: OperationOutcome\n                issue:\n                  - severity: error\n                    code: value\n                    details:\n                      coding:\n                        - system: 'https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode'\n                          version: '1'\n                          code: INVALID_VALUE\n                          display: Provided value is invalid\n                    diagnostics: \"Invalid value - 'mal' in field 'gender'\"   \n  '/Patient/{id}':\n    parameters:\n      - $ref: '#/components/parameters/Id'\n      - $ref: '#/components/parameters/BearerAuthorization'\n      - $ref: '#/components/parameters/RoleId'\n      - $ref: '#/components/parameters/RequestID'\n      - $ref: '#/components/parameters/CorrelationID'\n    get:\n      description: |\n        ## Overview\n        Use this endpoint to get patient details from PDS for a given NHS number.\n        \n        You cannot get a patient's related people details, use the RelatedPerson endpoint instead.\n\n        ## Superseded patients\n        Some patients are marked as superseded, this means that for some reason the original resource is no longer valid and has been replaced with a different resource.\n\n        On retrieval of a superseded resource, the new resource is automatically returned in place of the requested resource. You can spot a superseded resource when the `id` is not the same as the one requested.\n\n        When retrieving a superseding resource you must update your system with the new resource and remove the superseded resource, ensuring that the same `id` does not exist against another resource in your system.\n\n        ## Restricted patients\n        Some patients are tagged as [restricted](https://digital.nhs.uk/services/demographics/restricting-access-to-a-patients-demographic-record) and are sometimes known as sensitive patients. Restricted patients can be retrieved; however, location sensitive fields such as `address`, `telecom` and `generalPractitioner` are removed.\n\n        The restricted flag can be found in the data under `meta/security` on the patient resource.\n\n        ## Sandbox test scenarios\n        You can test the following scenarios in our sandbox environment:\n\n        | Scenario                         | Request                                           | Response                                                                                                                                      |\n        | -------------------------------- | ------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n        | Patient exists                   | `id`=`9000000009`                                 | HTTP Status 200 with patient data in response                                                                                                 |\n        | Sensitive patient exists         | `id`=`9000000025`                                 | HTTP Status 200 with patient data in response with the restricted data removed                                                                |\n        | Patient exists with minimal data | `id`=`9000000033`                                 | HTTP Status 200 with patient data in response, there will be very little data so can be used as an example of a patient with bad data quality |\n        | Patient does not exist            | `id`=`9111231130` (or any other valid NHS number) | HTTP Status 404 with problem description                                                                                                      |\n        | Invalid NHS number               | `id`=`9000000000` (or any invalid NHS number)     | HTTP Status 400 with problem description                                                                                                      |\n        | Missing X-Request-ID             | `id`=`9000000009` (or any other valid NHS number) | HTTP Status 412 with problem description                                                                                                      |\n\n        You can try out the sandbox using the 'Try this API' feature on this page.\n\n        Alternatively, you can try out the sandbox using our Postman collection:\n        \n        [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/14719036-953f067f-30b9-4552-8252-7cc10b21dad3)\n              \n         \n      summary: \"Get patient details\"\n      operationId: get-patient\n      responses:\n        '200':\n          description: Information successfully returned.\n          headers:\n            ETag:\n              $ref: '#/components/headers/ETag'\n            X-Correlation-Id:\n              $ref: '#/components/headers/X-Correlation-Id'\n            X-Request-Id:\n              $ref: '#/components/headers/X-Request-Id'     \n          content:\n            application/fhir+json:\n              schema:\n                $ref: components/schemas/Patient.yaml\n              example:\n                $ref: components/examples/Patient.json\n        '4XX':\n          description: |\n            An error occurred as follows:\n            \n            | HTTP status | Error code                 | Description |\n            | ----------- | -------------------------- | --------------------------------------------- |\n            | 400         | INVALID_RESOURCE_ID        | Invalid NHS number. |\n            | 400         | UNSUPPORTED_SERVICE        | Missing NHS number. |\n            | 400         | MISSING_VALUE              | Missing header parameter. For details, see the `diagnostics` field. |\n            | 400         | INVALID_VALUE              | Invalid header parameter. For details, see the `diagnostics` field. |\n            | 401         | ACCESS_DENIED              | Access token missing, invalid or expired, or calling application not configured for this operation. |\n            | 403         | ACCESS_DENIED              | Patient cannot perform this action. |\n            | 404         | RESOURCE_NOT_FOUND         | Patient does not exist for given NHS number. |\n            | 404         | INVALIDATED_RESOURCE       | Patient did exist for given NHS number, but has been invalidated and not superseded by another NHS number. |\n            | 408         | UNABLE_TO_CALL_SERVICE     | The downstream domain processing has not completed within the configured timeout period. |\n            | 429         | TOO_MANY_REQUESTS          | You have exceeded your application's [rate limit](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#rate-limits). |\n    \n          content:\n            application/fhir+json:\n              schema:\n                $ref: '#/components/schemas/OperationOutcome'\n              example:\n                resourceType: OperationOutcome\n                issue:\n                  - severity: error\n                    code: structure\n                    details:\n                      coding:\n                        - system: 'https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode'\n                          version: '1'\n                          code: MISSING_VALUE\n                          display: Required value is missing\n                    diagnostics: \"Missing value - 'birth_date/birth_date_range_start/birth_date_range_end'\"      \n    patch:\n      description: |\n        ## Overview\n        Use this endpoint to update patient details in PDS.\n\n        This is a 'PATCH' operation - you can update specific parts of the patient record, such as name or gender, without having to update the entire record.\n\n        When you make a PATCH request with your application, the endpoint will respond with a successful (200) response code, along with the updated patient resource, or, an unsuccessful (4xx/5xx) response. \n\n        99.99% of all updates complete in under 10 seconds. If an update takes longer than 10 seconds, the endpoint responds with an HTTP status of 503 (Gateway Timeout). \n        \n        You can alter the timeout period using the `X-Sync-Wait` header. If you re-submit the update, use the same `X-Request-ID` header.\n        \n        The behaviour of this endpoint depends on which access mode you are using:\n        \n        | Access mode                    | Behaviour restrictions              |\n        | ------------------------------ | ----------------------------------- |\n        | Application-restricted access  | Updates not allowed                 |\n        | Healthcare worker access       | Updates allowed                     |\n        | Patient access                 | Updates allowed (Available in integration environment only)|\n                \n        <a name=\"patient-resource-versioning\"/>\n        \n        ## Patient resource versioning\n        To update a patient's resource you must have retrieved it first, to ensure you are working against an up-to-date patient resource.\n\n        When you retrieve a patient resource, you get a version number for the resource (in the `ETag` response header in the form `W/\"2\"` and in the `versionId` field in the response, in the form `\"2\"`).\n\n        You must then pass the patient's version number in the update request (in the `If-Match` response header).\n\n        It is recommended you use the value from the `Etag` header as this is in the correct form the `If-Match` header is expected, for example `W/\"2\"` and can be mirrored back in the request.\n\n        The update only succeeds, if the patient resource has not been updated in our database between your first retrieval and the update request.\n\n        If the update succeeds, you will receive the updated patient resource, this will contain the new resource version number.\n\n        If you make a subsequent update you must use the new version number.\n\n        ## JSON Patch\n        To update a patient record, a [JSON Patch](https://tools.ietf.org/html/rfc6902) should be sent. A JSON Patch consists of one or more patch objects within a list.\n\n        It is recommended that all desired updates are sent together in a single request as a list of patches.\n        This is the most efficient approach and reduces the danger of race conditions occurring when updating the patient record multiple times in a short period of time.\n\n        When processing the list of patch objects, each patch must be valid and pass all the business rules against the data. If one patch object fails, none of the patch objects are applied.\n\n        A patch object consists of:\n        * an operation, `op` - this is required.\n        * a path to the data that you want to change, `path` - this is required.\n        * the value that is assigned, `value` - this is required for `add`, `replace` and `test`; but should not be included for a `remove`.\n\n        The following operations are supported:\n        * `add` - to add a new value.\n        * `replace` - to replace an existing value.\n        * `remove` - to remove an existing value.\n        * `test` - to test the state of a value is as expected before continuing with the update.\n\n        Paths point to a single value, list or object, for example:\n        * `/gender` - pointing to the gender value.\n        * `/name` - point to the name list.\n        * `/name/0` - pointing to the 1st object in the name list.\n        * `/address/0/line/1` - pointing to the 2nd line string in the 1st address object.\n\n        The value can be set to any valid value for that path, so could be a null, a string, an object or a list.\n\n        ### Addition\n\n        `add` should be used to add new items to a patient.\n\n        Adding a simple data item such as the date of death can be done using a patch such as:\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"add\", \"path\": \"/deceasedDate\", \"value\": \"2020-01-01\" }\n          ]\n        }\n        ```\n\n        Adding to a list such as a `name` should be done by including the whole object in the value field. Note, the list index is `-` this is because when adding to a list, the index is not known:\n\n        ```json\n        {\n            \"patches\": [\n              {\n                    \"op\": \"add\",\n                    \"path\": \"/name/-\",\n                    \"value\": {\n                        \"use\": \"usual\",\n                        \"period\": { \"start\": \"2019-12-31\" },\n                        \"prefix\": [\"Dr\"],\n                        \"given\": [\n                          \"Joe\",\n                          \"Horation\",\n                          \"Maximus\"\n                        ],\n                        \"family\": \"Bloggs\",\n                        \"suffix\": [\"PhD\"]\n                    }\n                }\n          ]\n        }\n        ```\n\n        When adding a base level list item such as a new name or address, ensure the index is always `-`, otherwise the request is rejected. For example, `/name/-`.\n        The reason for this is because the backend system makes the decision on the ordering of the listed objects to ensure they are always returned in the same order.\n\n        If you are adding to a sub-element that is a list, such as an additional given name, it is valid to provide an exact index. So the following is valid:\n\n        ```json\n        {\n          \"patches\": [\n            {\n              \"op\": \"add\", \"path\": \"/name/0/id\", \"value\": \"8F8B957D\"\n            },\n            {\n              \"op\": \"add\", \"path\": \"/name/0/given/0\", \"value\": \"Rose\"\n            }\n          ]\n        }\n        ```\n\n        It is possible to `add` a sub-element to an existing object in a patch request. If the object already exists and you have the object `id`, you must supply it or the update is rejected.\n        The following patch is allowed:\n\n        ```json\n        {\n          \"patches\": [\n            {\n              \"op\": \"add\", \"path\": \"/name/0/id\", \"value\": \"8F8B957D\"\n            },\n            {\n              \"op\": \"add\", \"path\": \"/name/0/given/0\", \"value\": \"Rose\"\n            }\n          ]\n        }\n        ```\n\n        but the following is not allowed:\n        \n        ```json\n        {\n          \"patches\": [\n            {\n              \"op\": \"add\", \"path\": \"/name/0/given/-\", \"value\": \"Rose\"\n            }\n          ]\n        }\n        ```\n\n        ### Replacing\n\n        `replace` should be used to alter existing items on the patient.\n\n        Replacing a simple data item such as the gender can be done using a patch such as:\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"replace\", \"path\": \"/gender\", \"value\": \"male\" }\n          ]\n        }\n        ```\n\n        Replacing a list item can be done in two ways which may be dependent on any external development libraries that can be used to create the patch.\n\n        The first approach is to replace the whole list item:\n\n        ```json\n        {\n            \"patches\": [\n              {\n                    \"op\": \"replace\",\n                    \"path\": \"/name/0\",\n                    \"value\": {\n                        \"id\": \"123\",\n                        \"use\": \"usual\",\n                        \"period\": { \"start\": \"2019-12-31\" },\n                        \"prefix\": [\"Dr\"],\n                        \"given\": [\n                          \"Joe\",\n                          \"Horation\",\n                          \"Maximus\"\n                        ],\n                        \"family\": \"Bloggs\",\n                        \"suffix\": [\"PhD\"]\n                    }\n                }\n          ]\n        }\n        ```\n\n        The second approach is to replace just a part, or parts, of the list object keys if all others remain the same:\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"replace\", \"path\": \"/name/0/id\", \"value\": \"123\" },\n              { \"op\": \"replace\", \"path\": \"/name/0/prefix/0\", \"value\": \"Mr\" },\n              { \"op\": \"replace\", \"path\": \"/name/0/family\", \"value\": \"Smith\" }\n            ]\n        }\n        ```\n\n        An added requirement to ensure no accidental data loss or replacement of the wrong list item, you must always include the list `id` or `url`. This is in the object on retrieval so just needs to be mirrored back. You should not include an ID on an addition as this is automatically generated by the system and is a unique object ID, so only our system can guarantee that.\n\n        ### Removal\n\n        `remove` should be used to delete existing items on a patient.\n\n        Removing a simple data item such as the gender can be done using a patch such as:\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"remove\", \"path\": \"/gender\" }\n          ]\n        }\n        ```\n\n        Note, that in this scenario, although the patch is perfectly valid, the update is still rejected as a patients gender cannot be removed.\n\n        Removing a list item should only be done on the whole item object, not individual sub-items; instead use the replace operation.\n\n        To remove a list item, a `test` operation must <u>immediately proceed</u> the `remove` . This is an added requirement to ensure no accidental data loss occurs or the wrong item is removed. The test operation should be used to assert either:\n\n        * the `id` - the object ID for items that have one - for example `name`, `address` or `telecom`.\n        * the `url` - the URL for the extension being removed.\n        * the whole object being removed.\n\n        An example of a list item removal using the `id` would be:\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"test\", \"path\": \"/name/0/id\", \"value\": \"123\" },\n              { \"op\": \"remove\", \"path\": \"/name/0\" }\n          ]\n        }\n        ```\n\n        An example of a extension list item removal using the `url` would be:\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"test\", \"path\": \"/extension/0/url\", \"value\": \"https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-DeathNotificationStatus\" },\n              { \"op\": \"remove\", \"path\": \"/extension/0\" }\n          ]\n        }\n        ```\n\n        An example of a list item removal using the whole object would be:\n\n        ```json\n        {\n            \"patches\": [\n              { \n                    \"op\": \"test\",\n                    \"path\": \"/name/0\",\n                    \"value\": {\n                        \"id\": \"123\",\n                        \"use\": \"usual\",\n                        \"period\": { \"start\": \"2019-12-31\" },\n                        \"prefix\": [\"Dr\"],\n                        \"given\": [\n                          \"Joe\",\n                          \"Horation\",\n                          \"Maximus\"\n                        ],\n                        \"family\": \"Bloggs\",\n                        \"suffix\": [\"PhD\"]\n                    }\n                },\n              { \"op\": \"remove\", \"path\": \"/name/0\" }\n          ]\n        }\n        ```\n\n        Special care should be taken when performing multiple removals in the same list; as removing a particular index could affect all subsequent index positions. The next two examples perform **<u>exactly</u>** the same operation.\n\n        Using the following initial (simplified) data, with the intention of removing the names in index 1 (Irwin) and 2 (Bruce):\n\n        ```json\n        {\n            \"name\": [\n                {\"id\": \"2\", \"family\": \"Parker\"},\n                {\"id\": \"3\", \"family\": \"Irwin\"},\n                {\"id\": \"4\", \"family\": \"Bruce\"},\n                {\"id\": \"5\", \"family\": \"Sharpe\"}\n            ]\n        }\n        ```\n\n        **Example 1**:\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"test\", \"path\": \"/name/1/id\", \"value\": \"3\" },\n              { \"op\": \"remove\", \"path\": \"/name/1\" },\n              { \"op\": \"test\", \"path\": \"/name/1/id\", \"value\": \"4\" },\n              { \"op\": \"remove\", \"path\": \"/name/1\" }\n          ]\n        }\n        ```\n\n        After the 1st removal the data looks like:\n\n        ```json\n        {\n            \"name\": [\n                {\"id\": \"2\", \"family\": \"Parker\"},\n                {\"id\": \"4\", \"family\": \"Bruce\"},\n                {\"id\": \"5\", \"family\": \"Sharpe\"}\n            ]\n        }\n        ```\n\n        meaning Irwin has been removed, Bruce has moved from index 2 -> 1 and Sharpe from 3 -> 2.\n\n        So after applying the 2nd removal the data looks like:\n\n        ```json\n        {\n            \"name\": [\n                {\"id\": \"2\", \"family\": \"Parker\"},\n                {\"id\": \"5\", \"family\": \"Sharpe\"}\n            ]\n        }\n        ```\n\n        Which is the intended outcome. Using the same index 1 for both removals may look unexpected, but the way JSON Patch works is iterating over each patch operation in turn and making the change to the list index positions. This means a developer needs to account for lists changing from one operation to the next.\n\n        **Example 2**:\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"test\", \"path\": \"/name/2/id\", \"value\": \"4\" },\n              { \"op\": \"remove\", \"path\": \"/name/2\" },\n              { \"op\": \"test\", \"path\": \"/name/1/id\", \"value\": \"3\" },\n              { \"op\": \"remove\", \"path\": \"/name/1\" }\n          ]\n        }\n        ```\n\n        After the 1st removal the data looks like:\n\n        ```json\n        {\n            \"name\": [\n                {\"id\": \"2\", \"family\": \"Parker\"},\n                {\"id\": \"3\", \"family\": \"Irwin\"},\n                {\"id\": \"5\", \"family\": \"Sharpe\"}\n            ]\n        }\n        ```\n\n        Applying the 2nd removal the data looks like:\n\n        ```json\n        {\n            \"name\": [\n                {\"id\": \"2\", \"family\": \"Parker\"},\n                {\"id\": \"5\", \"family\": \"Sharpe\"}\n            ]\n        }\n        ```\n\n        Which is the intended outcome. Providing the patches with the indexes descending means that the list stays in a stable format the whole way through as the only changes to the index positions are items have been passed over already.\n\n        **Example 3 - a failure**\n\n        ```json\n        {\n            \"patches\": [\n              { \"op\": \"test\", \"path\": \"/name/1/id\", \"value\": \"3\" },\n              { \"op\": \"remove\", \"path\": \"/name/1\" },\n              { \"op\": \"test\", \"path\": \"/name/2/id\", \"value\": \"4\" },\n              { \"op\": \"remove\", \"path\": \"/name/2\" }\n          ]\n        }\n        ```\n\n        After the 1st removal the data looks like:\n\n        ```json\n        {\n            \"name\": [\n                {\"id\": \"2\", \"family\": \"Parker\"},\n                {\"id\": \"4\", \"family\": \"Bruce\"},\n                {\"id\": \"5\", \"family\": \"Sharpe\"}\n            ]\n        }\n        ```\n\n        When applying the 2nd test, it fails as the index 2 ID is `5`, but the test was looking for `4`. An error is returned and none of the updates provided would be made to the database.\n\n        This failure example is a good reason for forcing the use of the `test` operation. If there was no test, index 2 would have been blindly removed, meaning the final state of the data would look like:\n\n        ```json\n        {\n            \"name\": [\n                {\"id\": \"2\", \"family\": \"Parker\"},\n                {\"id\": \"4\", \"family\": \"Bruce\"}\n            ]\n        }\n        ```\n\n        Which is incorrect, as Irwin and Sharpe were removed instead of Irwin and Bruce.\n\n\n        ## Patient data fields\n\n        ### Address\n\n        List item found under `address` field.\n\n        In a JSON Patch request the path should be:\n        * `/address/0` if the address to be replaced or removed is the first item in the list. If it is the second item in the list the path is `/address/1`, and so on.\n        * `/address/-` when adding a new address.\n\n        An address consists of 5 lines of unstructured text, postcode and PAF (Postcode Address File) key.\n        \n        Postcode is optional but strongly encouraged.\n        If the address has no postcode, use a [pseudo postcode from the list defined by the Office for National Statistics](https://digital.nhs.uk/services/organisation-data-service/data-downloads/office-for-national-statistics-data) (see the ‘look_ups’ file).\n        \n        In particular, for a patient at no fixed abode, use the pseudo postcode `ZZ99 3VZ`.\n        \n        When adding or replacing address lines, use the following rules:\n        *\tline 1 - premises ID and/or house name, for example `Flat 1` or `The Old Schoolhouse`\n        *\tline 2 - house number, dependent thoroughfare name and descriptor (if present), thoroughfare name and descriptor, for example `23 Mill Lane`\n        *\tline 3 - dependent locality/village, locality (if present), for example `Boxgrove`\n        *\tline 4 - post town, for example `Leeds`\n        *\tline 5 - county (if present), for example `West Yorkshire`\n        \n        When updating an address, you must populate lines 1 or 2, and line 4. You should not include line 5 in manually created addresses but you may include it in PAF-derived addresses.\n\n        There are exceptions:\n        * if you submit a postcode and PAF key, in which case the lines are automatically populated, however if there are no matches or too many matches the message is rejected due to missing address lines\n        * if you use a pseudo postcode, for example `ZZ99 3VZ` meaning `no fixed abode`\n\n        When creating the FHIR payload message, to be fully FHIR compliant all empty lines should be removed, so for example:\n        \n        ```json\n        {\n            \"address\": {\n                \"line\": [\n                    \"\",\n                    \"23 Mill Lane\",\n                    \"\",\n                    \"Leeds\",\n                    \"\"\n                ]\n            }\n\n        }\n        ```\n\n        should be sent in as:\n\n        ```json\n                {\n                    \"address\": {\n                        \"line\": [\n                            \"23 Mill Lane\",\n                            \"Leeds\"\n                        ]\n                    }\n\n                }\n        ```\n\n        however if you do not do this the message is not rejected; the response is in that form though.\n\n        To ensure consistent data across all patient addresses, you should match addresses to the PAF and send them in PAF format including the PAF key.\n        If you do not include the PAF key it is added to the address if a match is found\n        Additionally the provided address lines and post code are enriched and reformatted if necessary.\n\n        The following address types are supported:\n        * `home` - the home address is the patient's normal residence. Home address is also known as usual, main, registered, current or permanent address\n        * `temp` - a temporary address is an address used for a set period of time, but where the patient's home, permanent address remains unchanged\n        * `billing` - an address used for correspondence purposes only\n\n        A patient must have no more than one current `temp` and/or `billing` address.\n        However, historically this was constrained only by the integration requirements and was not enforced so theoretically more than one can exist for a patient when retrieving.\n        Where multiple instances already exist for the patient it is not expected that local systems should manage those, but should choose the most appropriate one to maintain (for example by examining period dates).\n\n        A `home` address is the patient's main residential address and should normally be used for all clinical and demographic purposes, including clinical and appointment correspondence.\n        However additionally, `temp` and `billing` addresses may be provided by a patient when there is a requirement to record an alternative location for the purposes of unbroken care.\n        When sending correspondence to a patient:\n        *\ta present and valid `billing` address may take precedence over `home` and `temp` addresses. A patient should have only a single current `billing` address. An address is considered 'valid' according to its period start and to dates.\n        *\tif no current `billing` address is provided, a `temp` address may take precedence over the `home` address, again if it is valid according to its period start and to dates.\n        * if there is no valid, current `billing` and/or `temp` address, the `home` address must be used.\n\n        Not all local systems support `temp` and `billing` addresses, so these are not uniformly maintained. Therefore, where the patient contact has clinical or business significance, the precedence of these addresses over the `home` address should be determined by a user wherever possible.\n        When the end date for a `temp` or `billing` address passes, local systems should use the patient’s `home` address. It is extremely rare that no home address is present on a patient record.\n\n        Be aware of the following business rules:\n        * you cannot add more than one of each address use types; `home`, `temp` or `billing`\n        * `work` address `use` type is a valid response but cannot be added or replaced as it is a legacy value. An address with the `work` type can be removed though\n        * any `temp` address must have both a `period start` and a `period end` date. The provision of a period end date has particular importance in order to avoid temporary addresses that are no longer relevant to the patient still being held as current data available to any system retrieving the patient record. A suggested default where no actual period end is known is 30 days later than the period start, up to a maximum of 3 months.\n        * any `billing` address must have both a `period start` and a `period end` date. The provision of a period end date has particular importance in order to avoid correspondence addresses that are no longer relevant to the patient still being held as current data available to any system retrieving the patient record. A suggested default where no actual period end is known is 30 days later than the period start, up to a maximum of 12 months.\n        * the date period is optional; where present they must be valid dates and the `end` date cannot be before the `start` date\n        * the period `start` date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update\n        * where a `temp` address is provided a description must be sent using the `text` field, the list of possible values are:\n          * `Second Home` - a patient's second home\n          * `Student Accommodation` - a patient's place of residence while at university\n          * `Respite Care Address` - where the patient resides during respite care\n          * `Temporary Residence Address` - where the patient resides for a specific period of time\n          * `Convalescence Home` - the address for a patient during a period of recovery\n          * `Mobile Home` - the address of a patient's mobile home, parked for a specific period of time, e.g. the address of a caravan park\n          * `Holiday Home` - the address for a patient during a holiday\n\n        ### Communication\n\n        Single item found under `extension` with the extension URL `https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NHSCommunication`.\n\n        In a JSON Patch request, where the communication extension does not exist the path should be:\n        * `/extension/-` when adding a communication extension.\n\n        Where you are replacing/removing the full communication extension, the path should be:\n        * `/extension/0` if the communication extension is the first item in the list. If it is the second item in the list the path is `/extension/1`, and so on.\n\n        Where the communication extension already exists and you wish to replace a specific sub-extension, then the path should be:\n        * `/extension/0/extension/1` if the communication extension is the first item in the list and the sub-extension is the second item in the list.\n        \n        You can find examples of the above requests in our sandbox Postman collection\n\n        There are a number of business rules that should be taken into account:\n        * preferred language must not be supplied where it is English even though the [code list](https://simplifier.net/resolve?target=simplifier&scope=uk.nhsdigital.r4&canonical=https://fhir.hl7.org.uk/ValueSet/UKCore-HumanLanguage) contains a value for English (en).\n        * any language codes outside the accepted list are rejected; such as local system `qa` codes.\n\n        ### Contact preferences\n        Single item found under `extension` with the extension URL `https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-ContactPreference`.\n\n        In a JSON Patch request, where the Contact Preference extension does not exist or you are replacing/removing the full list of Contact preferences, the path should be:\n        * `/extension/0` if the contact preference is the first item in the list. If it is the second item in the list the path is `/extension/1`, and so on.\n        * `/extension/-` when adding a contact preference.\n\n        Where the Contact Preference extension already exists and you wish to add, replace or remove a specific contact preference(s) sub-extension, then the path should be:\n        * `/extension/0/extension/1` if the contact preference extension is the first item in the list and the method is the second item in the sub-extension list.\n        \n        You can find examples of the above requests in our sandbox Postman collection \n\n        There are a number of business rules that should be taken into account:\n        * a patient can have `0` or `1` contact preference.\n        * preferred contact time is a free-text field limited to 40 characters.\n        * where a contact time is specified a contact method must also exist.\n\n        ### Date of birth\n\n        Single item found under `birthDate` field.\n\n        In a JSON Patch request the path should be `/birthDate`.\n\n        When adding or updating the birth date, the update should be in the format `yyyy-mm-dd`.\n\n        There are a number of business rules that should be taken into account:\n        * cannot be removed.\n        * cannot be a date in the future.\n        * cannot be after the deceased date, if present.\n\n        ### Date of death\n\n        Single item found under `deceasedDateTime` field.\n\n        In a JSON Patch request the path should be `/deceasedDateTime`.\n\n        When adding or updating the deceased date time, the update should be in the format `yyyy-mm-ddTHH:MM:SS+HH:MM`.\n\n        There are a number of business rules that should be taken into account:\n        * cannot be removed.\n        * cannot be a date in the future.\n        * cannot be before the birth date.\n        * cannot be replaced if the death notification status is 2 (formal).\n        * when adding date of death, a death notification status must also be added.\n\n        ### Death notification\n\n        Single item found under `extension` with the extension URL `https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-DeathNotificationStatus`.\n\n        In a JSON Patch request the path should be:\n        * `/extension/0` if the death notification is the first item in the list. If it is the second item in the list the path is `/extension/1`, and so on.\n        * `/extension/-` when adding a death notification.\n        \n        You can find examples of the above requests in our sandbox Postman collection\n\n        There are a number of business rules that should be taken into account:\n        * cannot be removed.\n        * cannot be replaced if the death notification status is formal (2).\n        * only certain endpoints can set a death notification of formal (2).\n        * when adding a death notification, a deceased date time must also be added.\n\n        ### Emergency contact\n\n        List item found under `contact` field.\n\n        In a JSON Patch request the path should be:\n        * `/contact/0` if the contact to be replaced or removed is the first item in the list. If it is the second item in the list the path is `/contact/1`, and so on.\n        * `/contact/-` when adding a new contact.\n\n        Only emergency contact details should be added to `contact`, regular telecommunication methods such as home phone should be added to the `telecom` field.\n        Any other contact relationship types are rejected.\n\n        There are a number of business rules that should be taken into account:\n        * in any telecom child object the `use` key should not be present.\n        * in any telecom child object the system cannot be `fax`.\n        * the date period is optional; where present they must be valid dates and the `end` date cannot be before the `start` date.\n        * the period `start` date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.\n        * the date period, if present, should be on the parent `contact` object and not any `telecom` child objects.\n        * if the system is email, the value must be a valid email format, for example john.smith@nhs.net; and must be more than 6 characters and less than 90 characters\n        * the relationship can only be `C` meaning `Emergency Contact`\n\n        ### Gender\n\n        Single item found under `gender` field.\n\n        In a JSON Patch request the path should be `/gender`.\n\n        When setting a gender, the local system should encourage the user to select `male` or `female` rather than `unknown`.\n        The fourth value of gender, `other`, meaning indeterminate; i.e. unable to be classified as either male or female; should never pro-actively be set by local systems - although this value can be retrieved due to legacy data or data quality issues.\n\n        There are a number of business rules that should be taken into account:\n          * cannot be removed.\n          * can only be `male`, `female` or `unknown`.\n          * cannot set gender to `other`.\n\n        ### General practice\n\n        List item found under `generalPractitioner` field. Although only a single general practice is allowed.\n\n        In a JSON Patch request the path should be:\n        * `/generalPractitioner/0` for replacing or removing the general practice.\n        * `/generalPractitioner/-` when adding a new general practice.\n\n        There are a number of business rules that should be taken into account:\n        * only valid GP Practice codes may be used, see [Organisation Data Service FHIR API](https://developer.nhs.uk/apis/ods/) for more details on valid codes.\n        * the period `start` date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.\n        * do not provide a period `end` date.\n        * the general practice should only be updated by primary care systems, [NHAIS](https://digital.nhs.uk/services/nhais) or by the National Back Office.\n        * removal of a general practice can only be done by [NHAIS](https://digital.nhs.uk/services/nhais) or by the National Back Office.\n        * only a single general practice is supported; emergency, temporary and additional practices must be maintained in the local system only.\n\n        ### Managing Organisation (internal-use only)\n\n        Single item found under `managingOrganization` field.\n\n        In a JSON Patch request the path should be `/managingOrganization`.\n\n        The following business rules should be observed:\n        * only valid GP Practice codes may be used, see [Organisation Data Service FHIR API](https://developer.nhs.uk/apis/ods/) for more details on valid codes.\n        * the period `start` date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.\n        * only a single general practice is supported; emergency, temporary and additional practices must be maintained in the local system only.\n\n        ### Multiple birth order\n\n        Single item found under `multipleBirthInteger` field.\n\n        In a JSON Patch request the path should be `/multipleBirthInteger`.\n\n        When adding or updating the birth order, the update should be an integer in the range `1` - `9` inclusive. These values have differing meanings:\n        * 1 - 7 indicates the order of birth, with 1 indicating the first or only birth in the sequence, 2 indicating the second birth in the sequence, 3 indicating the third, and so on up to 7.\n        * 8 - `Not applicable`\n        * 9 - `Not known`\n\n        ### Name\n\n        List item found under `name` field.\n\n        In a JSON Patch request the path should be:\n        * `/name/0` if the name to be replaced or removed is the first item in the list. If it is the second item in the list the path is `/name/1`, and so on.\n        * `/name/-` when adding a new name.\n\n        There are a number of business rules that should be taken into account:\n        * cannot add more than one `usual` name.\n        * cannot remove the `usual` name.\n        * cannot add more than one `nickname`.\n        * can have multiple instances of all other name use types.\n        * cannot replace the use type on an existing name. For example, once a name is a nickname, it cannot be changed directly to an alias. You must instead remove the nickname and add the alias.\n        * the first character of each `suffix` item must be `A-Z`.\n        * the date period is optional; where present they must be valid dates and the `end` date cannot be before the `start` date.\n        * the period `start` date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.\n        * supplied name data must be UTF-8 encodable.\n        * the `period` is optional, but if included the `end` date cannot be before the `start` date. They can however be in the past, present or future.\n        * the full available range of generally recognised titles are permitted, however, if any of the following are used then the value input must conform to the following format:\n            * Mr\n            * Mrs\n            * Ms\n            * Dr\n            * Rev\n            * Sir\n            * Lady\n            * Lord\n        * any trailing full stops at the end of a prefix are automatically removed; for example `Mrs.` changes to `Mrs`.\n\n        ### Pharmacy\n\n        Single item found under `extension` with one of the extension urls:\n        * `https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NominatedPharmacy`\n        * `https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-MedicalApplianceSupplier`\n        * `https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-PreferredDispenserOrganization`\n\n        In a JSON Patch request the path should be:\n        * `/extension/0` if the pharmacy is the first item in the list. If it is the second item in the list the path is `/extension/1`, and so on\n        * `/extension/-` when adding a pharmacy\n\n        There are a number of business rules that should be taken into account:\n        * multiple pharmacies are allowed, however only one of each type\n        * there are no effective date periods, only a single current instance of each type is supported\n        * only valid National Pharmacy codes may be used for the pharmacy identifier, see [Organisation Data Service FHIR API](https://developer.nhs.uk/apis/ods/) for more details on valid codes\n\n        ### Place of birth\n\n        Single item found under `extension` with the extension URL `http://hl7.org/fhir/StructureDefinition/patient-birthPlace`.\n\n        In a JSON Patch request the path should be:\n        * `/extension/0` if the place of birth is the first item in the list. If it is the second item in the list the path is `/extension/1`, and so on\n        * `/extension/-` when adding a place of birth\n\n        There are a number of business rules that should be taken into account:\n        * the three fields, `city`, `district` and `country` are all optional, however at least one of them must be provided\n        * country is a coded value and must be in the set of valid values\n\n        ### Telecom\n\n        List item found under `telecom` field.\n\n        In a JSON Patch request the path should be:\n        * `/telecom/0` if the telecom to be replaced or removed is the first item in the list. If it is the second item in the list the path is `/telecom/1`, and so on\n        * `/telecom/-` when adding a new telecom\n\n        Emergency contact details should not be added to the `telecom` field, instead they should be added to the `contact` field.\n\n        There are a number of business rules that should be taken into account:\n        * the date period is optional; where present they must be valid dates and the `end` date cannot be before the `start` date\n        * the period `start` date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.\n        * if the telecom system is email, the value must be a valid email format, for example john.smith@nhs.net; and must be more than 6 characters and less than 90 characters\n\n        ## Sandbox test scenarios\n\n        You can test the following scenarios in our sandbox environment.\n\n        Things to note when using the sandbox for PATCH:\n        * Your changes are not persisted.\n        * JSON Patch operations themselves are validated, but the resulting resource is not validated for correctness; meaning any business rules are not applied.\n        * You can use the patient with minimal data, `9000000033` to test adding all data types (as most of them are missing on this patient), that would normally be present (e.g. gender).\n\n        | Scenario                            | Request                                                                   | Response                                         |\n        | ----------------------------------- | ------------------------------------------------------------------------- | ------------------------------------------------ |\n        | Successful update                   | `id`=`9000000009`<br/><br/>Body: One of the provided examples or your own combination of patches<br/><br/>Headers: `If-Match`=`W/\"2\"`, `Content-Type`=`application/json-patch+json` | HTTP Status 200 with updated patient resource. |\n        | Patient does not exist               | `id`=`9111231130` (or any other valid NHS number)                         | HTTP Status 404 with problem description         |\n        | Invalid NHS number                  | `id`=`9000000000` (or any invalid NHS number)                             | HTTP Status 400 with problem description         |\n        | Missing resource version identifier | `If-Match` header missing or set to format other than `W/\"<version>\"`     | HTTP Status 412 with problem description         |\n        | Incorrect resource version          | `If-Match`=`W/\"1\"`                                                        | HTTP Status 412 with problem description         |\n        | Wrong content type                  | `Content-Type` header missing or other than `application/json-patch+json` | HTTP Status 400 with problem description         |\n        | No patches sent                     | Send body with no `patches` attribute                                     | HTTP Status 400 with problem description         |\n        | Invalid patch operations            | Send body with invalid JSON patches in `patches` attribute                | HTTP Status 400 with problem description         |\n        | Missing X-Request-ID                | `id`=`9000000009` (or any other valid NHS number)                         | HTTP Status 412 with problem description         |\n\n        You can try out the sandbox using the 'Try this API' feature on this page.\n\n        Alternatively, you can try out the sandbox using our Postman collection:\n        \n        [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/14719036-953f067f-30b9-4552-8252-7cc10b21dad3)\n\n        \n      summary: Update patient details\n      operationId: update-patient-partial\n      externalDocs:\n        description: IETF RFC 6902, which defines json-patch.\n        url: https://tools.ietf.org/html/rfc6902\n      parameters:\n        - $ref: '#/components/parameters/IfMatch'\n        - $ref: '#/components/parameters/ContentType'\n      requestBody:\n        required: true\n        content:\n          application/json-patch+json:\n            schema:\n              type: object\n              required:\n                - patches\n              properties:\n                patches:\n                  $ref: components/schemas/JsonPatch.yaml\n            examples:\n              add-deceased-date-time:\n                summary: Add a new single item (deceasedDateTime) to the patient\n                value:\n                  $ref: components/examples/requests/PatientPatch/add-deceased-date-time.json\n              add-name:\n                summary: Add a new list item (name) to the patient\n                value:\n                  $ref: components/examples/requests/PatientPatch/add-name.json\n              add-extension:\n                summary: Add a an extension (nominated pharmacy) to the Patient\n                value:\n                  $ref: components/examples/requests/PatientPatch/add-extension.json\n              update-gender:\n                summary: Update the simple item (gender)\n                value:\n                  $ref: components/examples/requests/PatientPatch/update-gender.json\n              update-address:\n                summary: Update specific fields on a list item (address)\n                value:\n                  $ref: components/examples/requests/PatientPatch/update-address.json\n              update-address-alternative:\n                summary: Update whole object on a list item (address)\n                value:\n                  $ref: components/examples/requests/PatientPatch/update-address-alternative.json\n              update-extension:\n                summary: Update an extension (death notification)\n                value:\n                  $ref: components/examples/requests/PatientPatch/update-extension.json\n              delete-gender:\n                summary: Remove a single item (gender) no longer in use\n                value:\n                  $ref: components/examples/requests/PatientPatch/delete-gender.json\n              delete-name:\n                summary: Remove a list item (name) no longer in use, using test pointing to the name items id\n                value:\n                  $ref: components/examples/requests/PatientPatch/delete-name.json\n              delete-name-alternative:\n                summary: Remove a list item (name) no longer in use, using test pointing to the name object\n                value:\n                  $ref: components/examples/requests/PatientPatch/delete-name-alternative.json\n              delete-extension:\n                summary: Remove an extension (dispensing doctor pharmacy) no longer in use\n                value:\n                  $ref: components/examples/requests/PatientPatch/delete-extension.json\n      responses:\n        '200':\n          description: Patient updated.\n          headers:\n            ETag:\n              $ref: '#/components/headers/ETag'\n            X-Correlation-Id:\n              $ref: '#/components/headers/X-Correlation-Id'\n            X-Request-Id:\n              $ref: '#/components/headers/X-Request-Id'            \n          content:\n            application/fhir+json:\n              schema:\n                $ref: components/schemas/Patient.yaml\n              example:\n                $ref: components/examples/Patient.json   \n        '4XX':\n          description: |\n            An error occurred as follows:\n            \n            | HTTP status | Error code                 | Description |\n            | ----------- | -------------------------- | --------------------------------------------- |\n            | 400         | UNSUPPORTED_SERVICE        | Missing NHS number. |\n            | 400         | MISSING_VALUE              | Missing header parameter. For details, see the `diagnostics` field. |\n            | 400         | INVALID_VALUE              | Invalid header parameter or invalid value in body of patch request. For details, see the `diagnostics` field. |\n            | 400         | INVALID_UPDATE             | Malformed patch request or client error after the patch was accepted and patient was not updated. For example, a start date was after the corresponding end date. |\n            | 400         | INVALID_RESOURCE_ID        | Invalid NHS number. |\n            | 400         | VALIDATION_ERROR           | This is the \"default\" error thrown when no others are applicable. |\n            | 400         | UNSUPPORTED_CHARACTERS_IN_FIELD | Invalid value in body of patch request. For details, see the `diagnostics` field. |\n            | 400         | ADDITIONAL_PROPERTIES      | The user sent additional properties within the dictionary. For example sending a patient patch and attempting to add 'pets', which is not an allowed field within the patient resource. |\n            | 400         | UNSUPPORTED_VALUE          | There was an unsupported value in the request. The value may be valid in the schema - however it could be a legacy value that we do not allow to be set anymore. For example - setting the death notification status to 'removed'. The invalid value and field will be presented in the display. |\n            | 400         | TOO_FEW_VALUES_SUBMITTED   | The field in question has a minimum number of items and the user sent too few. |\n            | 400         | TOO_MANY_VALUES_SUBMITTED  | The field in question has a maximum number of items and the user sent too many. |\n            | 401         | ACCESS_DENIED              | Access token missing, invalid or expired, or calling application not configured for this operation. |\n            | 403         | FORBIDDEN_UPDATE           | The user is not permitted to update certain resources or elements, for example most users are not allowed to update the date of death once it has been set. A detailed description will be added to the display. For example - updating a sensitive patient or adding a formal death notification is only permitted from certain systems. |\n            | 403         | ACCESS_DENIED              | Patient cannot perform this action. |\n            | 404         | RESOURCE_NOT_FOUND         | Patient does not exist for given NHS number. |\n            | 404         | INVALIDATED_RESOURCE       | Patient record for given NHS number has been invalidated and not superseded by another NHS number. |\n            | 408         | UNABLE_TO_CALL_SERVICE     | The downstream domain processing has not completed within the configured timeout period. |\n            | 409         | RESOURCE_VERSION_MISMATCH  | The resource version in the `If-Match` header of the update request did not match the current version of the resource. See [Patient resource versioning](https://digital.nhs.uk/developer/api-catalogue/personal-demographics-service-fhir#patient-resource-versioning). |\n            | 412         | PRECONDITION_FAILED        | Problem with request, for example missing `If-Match` header. For details, see the `diagnostics` field. |\n            | 429         | TOO_MANY_REQUESTS          | You have exceeded your application's [rate limit](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#rate-limits). |\n          content:\n            application/fhir+json:\n              schema:\n                $ref: '#/components/schemas/OperationOutcome'\n              example:\n                resourceType: OperationOutcome\n                issue:\n                  - severity: error\n                    code: structure\n                    details:\n                      coding:\n                        - system: 'https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode'\n                          version: '1'\n                          code: INVALID_UPDATE\n                          display: Update is invalid\n                    diagnostics: \"Invalid update with error - Update unsupported for resource - 'pets'\"      \n        '503':\n          description: |\n            The request timed out during processing. This does not imply the request has failed or been rejected. Error code: `SERVICE_UNAVAILABLE`.\n\n            Re-send the request after the time specified in the `Retry-After` header using the same `X-Request-ID` value.\n          headers:\n            RetryAfter:\n              $ref: '#/components/headers/RetryAfter'\n          content:\n            application/fhir+json:\n              schema:\n                $ref: '#/components/schemas/OperationOutcome'\n              example:\n                resourceType: OperationOutcome\n                issue:\n                  - severity: error\n                    code: timeout\n                    details:\n                      coding:\n                        - system: 'https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode'\n                          version: '1'\n                          code: SERVICE_UNAVAILABLE\n                          display: Service unavailable\n                    diagnostics: \"The downstream domain processing has not completed within the configured timeout period. Using the same 'X-Request-ID' header, retry your request after the time specified by the 'Retry-After' response header.\"\n  '/Patient/{id}/RelatedPerson':\n    parameters:\n      - $ref: '#/components/parameters/Id'\n      - $ref: '#/components/parameters/BearerAuthorization'\n      - $ref: '#/components/parameters/RoleId'\n      - $ref: '#/components/parameters/RequestID'\n      - $ref: '#/components/parameters/CorrelationID'\n    get:\n      description: |\n        ## Overview\n        Use this endpoint to get a patient's related people details from PDS for a given NHS number. This is a list of people who can be contacted, and how, regarding the patient. These details may be useful for a practitioner to get in contact with a next of kin or guardian.\n        \n        ## Restricted patients\n        Some patients are tagged as [restricted](https://digital.nhs.uk/services/demographics/restricting-access-to-a-patients-demographic-record) and are sometimes known as sensitive patients. Related people are not returned for a restricted patient and an empty bundle is returned.\n\n        If a related person only contains a patient reference, and when the patient is retrieved, it is restricted; location sensitive fields such as `address` and `telecom` are removed.\n\n        ## Sandbox test scenarios\n        You can test the following scenarios in our sandbox environment:\n\n        | Scenario                        | Request                                       | Response                                                      |\n        | ------------------------------- | --------------------------------------------- | ------------------------------------------------------------- |\n        | Multiple related people exists  | `id`=`9000000009`                             | HTTP Status 200 with related person data in a response Bundle |\n        | Single related person exists    | `id`=`9000000017`                             | HTTP Status 200 with related person data in a response Bundle |\n        | Related people do not exist     | `id`=`9000000025`                             | HTTP Status 404 with problem description                      |\n        | Missing X-Request-ID            | `id`=`9000000009` (or any other valid NHS number) | HTTP Status 412 with problem description                  |\n\n        You can try out the sandbox using the 'Try this API' feature on this page.\n\n        Alternatively, you can try out the sandbox using our Postman collection:\n        \n        [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/14719036-953f067f-30b9-4552-8252-7cc10b21dad3)\n       \n      summary: \"Get a patient's related people\"\n      operationId: get-related-people\n      responses:\n        '200':\n          description: Information successfully returned.\n          headers:\n            ETag:\n              $ref: '#/components/headers/ETag'\n            X-Correlation-Id:\n              $ref: '#/components/headers/X-Correlation-Id'\n            X-Request-Id:\n              $ref: '#/components/headers/X-Request-Id'\n          content:\n            application/fhir+json:\n              schema:\n                $ref: '#/components/schemas/RelatedPerson'\n              example:\n                $ref: components/examples/RelatedPerson.json\n        '4XX':\n          description: |\n            An error occurred as follows:\n            \n            | HTTP status | Error code                 | Description |\n            | ----------- | -------------------------- | --------------------------------------------- |\n            | 400         | INVALID_RESOURCE_ID        | Invalid NHS number. |\n            | 400         | MISSING_VALUE              | Missing header parameter. For details, see the `diagnostics` field. |\n            | 400         | INVALID_VALUE              | Invalid header parameter. For details, see the `diagnostics` field. |\n            | 401         | ACCESS_DENIED              | Access token missing, invalid or expired, or calling application not configured for this operation. |\n            | 404         | RESOURCE_NOT_FOUND         | No related people exist for given NHS number. |\n            | 404         | INVALIDATED_RESOURCE       | Patient record for given NHS number has been invalidated and not superseded by another NHS number. |\n            | 408         | UNABLE_TO_CALL_SERVICE     | The downstream domain processing has not completed within the configured timeout period. |\n            | 429         | TOO_MANY_REQUESTS          | You have exceeded your application's [rate limit](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#rate-limits). |\n\n          content:\n            application/fhir+json:\n              schema:\n                $ref: '#/components/schemas/OperationOutcome'\n              example:\n                resourceType: OperationOutcome\n                issue:\n                  - severity: error\n                    code: structure\n                    details:\n                      coding:\n                        - system: 'https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode'\n                          version: '1'\n                          code: PRECONDITION_FAILED\n                          display: Required condition was not fulfilled\n                    diagnostics: \"Invalid request with error - X-Request-ID header must be supplied to access this resource\"      \ncomponents:\n  headers:\n    ETag:\n      $ref: 'components/schemas/ETag.yaml'\n    X-Correlation-Id:\n      $ref: 'components/schemas/XCorrelationId.yaml'\n    X-Request-Id:\n      $ref: 'components/schemas/XRequestID.yaml'\n    RetryAfter:\n      $ref: 'components/schemas/RetryAfter.yaml'\n  parameters:\n    Id:\n      name: id\n      in: path\n      description: The patient's NHS number. The primary identifier of a patient, unique within NHS England and Wales. Always 10 digits and must be a [valid NHS number](https://www.datadictionary.nhs.uk/attributes/nhs_number.html).\n      required: true\n      schema:\n        type: string\n        example: \"9000000009\"\n    MessageId:\n      name: message_id\n      in: path\n      description: The message ID of the accepted update that needs to be submitted to confirm the resource a successfully updated.\n      required: true\n      schema:\n        type: string\n        example: '20200522091633363041_000001A'\n    ObjectId:\n      name: object_id\n      in: path\n      description: A resource Object ID. The primary identifier of a resource.\n      required: true\n      schema:\n        type: string\n        example: \"507B7621\"\n    IfMatch:\n      in: header\n      name: If-Match\n      description: |\n        Latest known version identifier enclosed in quotes preceded by `W/`.\n\n        Send the value of the patient's `ETag` response header on patient retrieval when updating a patient.\n        This is to ensure that any updates are applied against an up-to-date version of the patient resource.\n      required: true\n      schema:\n        type: string\n        pattern: \"^W\\/\\\"[0-9]+\\\"$\"  # Printable characters enclosed in quotes. See: https://tools.ietf.org/html/rfc7230#section-3.2.6\n        example: 'W/\"2\"'\n    RoleId:\n      in: header\n      name: NHSD-Session-URID\n      description: |\n      \n        The user role ID (URID) for the current session. Also known as a user role profile ID (URPID).\n\n        This header is optional.\n        \n        In Application-restricted access mode this header is ignored.\n\n        In Healthcare worker access mode if you send this header it must be valid for the logged-in user. See [determine the user's role](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-cis2-separate-authentication-and-authorisation#step-9-determine-the-user-s-role) for guidance.\n        \n      required: false\n      schema:\n        type: string\n        pattern: '^[0-9]+$'\n        example: '555254240100'\n    BearerAuthorization:\n      in: header\n      name: Authorization\n      description: |\n        An [OAuth 2.0 bearer token](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis).\n\n        Required in all environments except sandbox.\n      required: false\n      schema:\n        type: string\n        format: '^Bearer\\ [[:ascii:]]+$'\n        example: 'Bearer g1112R_ccQ1Ebbb4gtHBP1aaaNM'\n    ContentType:\n      in: header\n      name: Content-Type\n      description: |\n        For a PATCH request, this must be set to `application/json-patch+json`.\n      required: true\n      schema:\n        type: string\n        example: application/json-patch+json\n    RequestID:\n      in: header\n      name: X-Request-ID\n      required: false\n      description: |\n        A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.\n        \n        Must be a universally unique identifier (UUID) (ideally version 4).\n\n        Mirrored back in a response header.\n\n        If you re-send a failed request, use the same value in this header.\n      schema:\n        type: string\n        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'\n        example: 60E0B220-8136-4CA5-AE46-1D97EF59D068\n    CorrelationID:\n      in: header\n      name: X-Correlation-ID\n      required: false\n      description: |\n        An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters.\n        \n        Mirrored back in a response header.\n      schema:\n        type: string\n        example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA\n    FuzzyMatch:\n      name: _fuzzy-match\n      description: |\n        A fuzzy search is performed, including checks for homophones, transposed names and historic information.\n\n        You cannot use wildcards with a fuzzy search.\n      example: false\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: false\n    ExactMatch:\n      name: _exact-match\n      description: The search only returns results where the `score` field is 1.0. Use this with care - it is unlikely to work with fuzzy search or wildcards.\n      example: false\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: false\n    History:\n      name: _history\n      description: |\n        The search looks for matches in historic information such as previous names and addresses.\n\n        This parameter has no effect for a fuzzy search, which always includes historic information.\n      example: true\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: false\n    MaxResults:\n      name: _max-results\n      description: |\n        The maximum number of matching patients to return. For healthcare worker access, this must be between 1 and 50, and the default is 50.\n        For application-restricted access, this must be 1, and the default is 1.\n        If too many patients match the search criteria, we return a `TOO_MANY_MATCHES` error.\n      example: 1\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: int32\n    Family:\n      name: family\n      description: |\n        The patient's family name (surname).\n\n        Not case sensitive.\n        Use `*` as a wildcard but not in the first two characters and not in fuzzy search mode.\n        Must be [URL encoded](https://en.wikipedia.org/wiki/Percent-encoding), for example a space must be represented by either `%20` or `+` and a wildcard must be encoded as `%2A`.\n      examples:\n        simple:\n          value: Smith\n          summary: Matches Smythe if `_fuzzy-match` is specified.\n        wildcarded:\n          value: \"Sm*t*\"\n          summary: 'Wildcards must contain at least two characters, this matches Smith, Smythe'\n      in: query\n      required: false\n      schema:\n        type: string\n    Given:\n      name: given\n      description: |\n        The patient's given names.\n\n        Not case sensitive.\n        Use `*` as a wildcard but not in the first two characters and not in fuzzy search mode.\n        Must be [URL encoded](https://en.wikipedia.org/wiki/Percent-encoding), for example a space must be represented by either `%20` or `+` and a wildcard must be encoded as `%2A`.\n\n        A patient may have more than one given name. Subsequent given names are commonly referred to as 'middle names'.\n        Specify multiple given names by repeating this parameter.\n        To search for  `Jane Anne Smith` use `given=Jane&given=Anne&family=Smith`.\n\n        The first given name may be a [compound name](https://en.wikipedia.org/wiki/Given_name#Compound), for example `John Paul`.\n        To search for `John Paul James Smith` (where `John Paul` is the first given name, `James` is the second given name, and `Smith` the family name) use `given=John%20Paul&given=James&family=Smith`.\n\n        Note that it is not necessary to specify subsequent given (middle) names, and that doing so may impact your search results in the case they are not recorded in the demographics system.\n      example: Jane\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    Gender:\n      name: gender\n      description: Gender with which the patient most strongly identifies.\n      example: female\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - male\n          - female\n          - other\n          - unknown\n        example: female\n    Birthdate:\n      name: birthdate\n      in: query\n      description: Date of birth in the format `<eq|ge|le>yyyy-mm-dd`. To specify a range, use `birthdate=geyyyy-mm-dd&birthdate=leyyyy-mm-dd`.\n      examples:\n        simple:\n          value:\n            - eq2010-10-22\n          description: Exact match date\n        rangege:\n          value:\n            - ge2010-10-22\n          description: Greater than or equals match, which matches 2010-10-22 or 2010-10-23\n        rangele:\n          value:\n            - le2010-10-22\n          description: Less than or equals match, which matches 2010-10-22 or 2010-10-21\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    DeathDate:\n      name: death-date\n      in: query\n      description: |\n        Date of death in the format `<eq|ge|le>yyyy-mm-dd`. To specify a range, use `death-date=geyyyy-mm-dd&death-date=leyyyy-mm-dd`.\n\n        For a fuzzy search, this is ignored for matching but included in the score calculation.\n      examples:\n        simple:\n          value: eq2010-10-22\n          description: Exact match date\n        rangege:\n          value: ge2010-10-22\n          description: Greater than or equals match which matches 2010-10-22 or 2010-10-23\n        rangele:\n          value: 'le2010-10-22'\n          description: Less than or equals match, which matches 2010-10-22 or 2010-10-21\n      required: false\n      schema:\n        type: string\n        format: date\n    AddressPostcode:\n      name: address-postcode\n      description: |\n        The postcode of any of the patient’s known addresses.\n\n        Not case sensitive.\n        Spaces are ignored, for example `LS16AE` and `LS1 6AE` both match `LS1 6AE`.\n        Use `*` as a wildcard but not in the first two characters and not in fuzzy search mode.\n        Must be [URL encoded](https://en.wikipedia.org/wiki/Percent-encoding), for example a space must be represented by either `%20` or `+` and a wildcard must be encoded as `%2A`.\n      examples:\n        simple:\n          value: LS1 6AE\n          summary: 'Spaces ignored, would match LS16AE'\n        wildcarded:\n          value: \"LS1*\"\n          summary: \"Matches 'LS16AE', 'LS1 6AE' and 'LS1 6AB'\"\n      in: query\n      required: false\n      schema:\n        type: string\n    GeneralPractitioner:\n      name: general-practitioner\n      description: |\n        The Organisation Data Service (ODS) code of the patient's registered GP practice.\n\n        Not case sensitive.\n        For a fuzzy search, this is ignored for matching but included in the score calculation.\n      example: Y12345\n      in: query\n      required: false\n      schema:\n        type: string\n    ManagingOrganization:\n      name: managing-organization\n      description: |\n        **This field is for internal-use only**.\n        \n        The Organisation Data Service (ODS) code of the patient's current managing organization.\n        Not case sensitive.\n        For a fuzzy search, this is ignored for matching but included in the score calculation.\n      example: Y12345\n      in: query\n      required: false\n      schema:\n        type: string\n    ETag:\n      name: etag\n      schema:\n        type: string\n        pattern: \"^W\\/\\\"[0-9]+\\\"$\" # Printable characters enclosed in quotes. See: https://tools.ietf.org/html/rfc7230#section-3.2.6\n        example: W/\"2\"\n      in: header\n      description: |\n        Record version identifier enclosed in quotes and preceded by 'W/'. For example, `W/\"2\"`.\n\n        Corresponds to `meta.versionId` attribute in the patient resource body.\n\n        When you retrieve a patient resource, you get a version number for the resource (in the `ETag` response header and in the `versionId` field in the response).\n        You must then pass the resource's version number in any update request (in the `If-Match` response header) made for the patient.\n    XCorrelationId:\n      name: x-correlation-id\n      schema:\n        type: string\n        example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA\n      in: header\n      description: |\n        The X-Correlation-ID from the request header, if supplied, mirrored back.\n    XRequestID:\n      name: x-request-id\n      schema:\n        type: string\n        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'\n        example: 60E0B220-8136-4CA5-AE46-1D97EF59D068\n      in: header\n      description: |\n        The X-Request-ID from the request header, if supplied, mirrored back.\n    RetryAfter:\n      name: retry-after\n      description: Time to wait before retrying your request in seconds\n      in: header\n      schema:\n        type: string\n        example: \"5\"    \n  schemas:\n    Patient:\n      $ref: components/schemas/Patient.yaml\n    PatientSearch:\n      $ref: components/schemas/PatientSearch.yaml\n    RelatedPerson:\n      $ref: components/schemas/RelatedPerson.yaml\n    OperationOutcome:\n      $ref: components/schemas/OperationOutcome.yaml\n  examples:\n    OperationOutcome:\n      summary: OperationOutcome example\n      value:\n        resourceType: OperationOutcome\n        issue:\n          - severity: error\n            code: value\n            details:\n              coding:\n                - system: 'https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode'\n                  version: '1'\n                  code: INVALID_RESOURCE_ID\n                  display: Resource Id is invalid\n",
			"canonicalURL": "/github.com/NHSDigital/personal-demographics-service-api@e1a604fec51152708d0257c99c4a28b925c5bcd5/-/blob/specification/personal-demographics.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NHSDigital/personal-demographics-service-api/blob/e1a604fec51152708d0257c99c4a28b925c5bcd5/specification/personal-demographics.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 1681: found unknown escape character"
}