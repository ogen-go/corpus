{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kyma-project/rafter"
		},
		"file": {
			"name": "example-openapi-service.yaml",
			"size": 0,
			"path": "docs/assets/example-openapi-service.yaml",
			"byteSize": 4399,
			"content": "openapi: 3.0.0\ninfo:\n  description: This example shows an API specification of a service that exposes endpoints for all Rafter webhooks. It contains the /convert, /validate, and /extract endpoints.\n  title: Example webhook service\n  contact:\n    name: Kyma project authors\n    url: http://slack.kyma-project.io\n    email: kyma-sig-core@googlegroups.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  version: 0.0.1\npaths:\n  /convert:\n    post:\n      description: Represents the `mutation webhook`.\n      tags:\n        - convert\n      summary: Converts input files.\n      operationId: convertReq\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                parameters:\n                  description: Additional parameters for the service\n                  type: string\n                content:\n                  description: File to convert\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/successConversionResponse\"\n        \"304\":\n          $ref: \"#/components/responses/notModified\"\n  /validate:\n    post:\n      description: Represents the `validation webhook`.\n      tags:\n        - validate\n      summary: Validates input files.\n      operationId: validateReq\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                parameters:\n                  description: Additional parameters for the service\n                  type: string\n                content:\n                  description: File to validate\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/successValidationResponse\"\n        \"422\":\n          $ref: \"#/components/responses/unprocessableEntity\"\n  /extract:\n    post:\n      description: Represents the `metadata webhook`.\n      tags:\n        - extract\n      summary: Extracts metadata from input files.\n      operationId: extractReq\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n                format: binary\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/successResponse\"\nservers:\n  - url: http://localhost:3000/v1\ncomponents:\n  responses:\n    successConversionResponse:\n      description: Successful response with the new file content\n      content:\n        text/plain:\n          schema:\n            type: string\n            example: \"{\\\"info\\\":{\\\"version\\\":\\\"1.0.0\\\",\\\"title\\\":\\\"AnyOf example\\\"},\\\"topics\\\":{\\\"test\\\":{\\\"publish\\\":{\\\"$ref\\\":\\\"#\\/components\\/messages\\/testMessages\\\"}}},\\\"asyncapi\\\":\\\"1.1.0\\\",\\\"components\\\":{\\\"messages\\\":{\\\"testMessages\\\":{\\\"payload\\\":{\\\"anyOf\\\":[{\\\"$ref\\\":\\\"#\\/components\\/schemas\\/objectWithKey\\\"},{\\\"$ref\\\":\\\"#\\/components\\/schemas\\/objectWithKey2\\\"}]}}},\\\"schemas\\\":{\\\"objectWithKey2\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"key2\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"objectWithKey\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"key\\\":{\\\"type\\\":\\\"string\\\"}}}}}}\"\n    notModified:\n      description: File content not modified\n    successValidationResponse:\n      description: Successful response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                description: Files that were successfully processed\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ResultSuccess\"\n    unprocessableEntity:\n      description: Unprocessable entities. File validation failed.\n      content:\n        text/plain:\n          schema:\n            type: string\n            example: Invalid property\n    successResponse:\n      description: Successful response\n  schemas:\n    ResultSuccess:\n      description: Successful processing of a single file\n      type: object\n      properties:\n        filePath:\n          description: Relative or absolute path to the file which was sent in the form body\n          type: string\n        metadata:\n          description: Front matter metadata extracted from the file\n          type: object\n          additionalProperties:\n            type: object\n"
		}
	},
	"Error": "invalidYAML: yaml: line 92: found unknown escape character"
}