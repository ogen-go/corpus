{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ASCOMInitiative/ASCOMRemote"
		},
		"file": {
			"name": "AlpacaDeviceAPI_v1.yaml",
			"size": 0,
			"path": "Swagger/AlpacaDeviceAPI_v1.yaml",
			"byteSize": 223998,
			"content": "openapi: 3.0.2\nservers:\n  - description: Within the \"Try it out\" URLs, the device URL root is the trailing slash in \"/ASCOMInitiative/\".\n    url: https://virtserver.swaggerhub.com/ASCOMInitiative/api/v1\n\ninfo:\n  title: ASCOM Alpaca Device API\n  version: v1\n  description: \u003e\n    The Alpaca API uses RESTful techniques and TCP/IP to enable ASCOM applications and devices to communicate across modern network environments.\n\n\n    ## Interface Behaviour\n\n    The ASCOM Interface behavioural requirements for Alpaca drivers are the same as for COM based drivers and are documented in the\n    \u003ca href=\"https://ascom-standards.org/Help/Developer/html/N_ASCOM_DeviceInterface.htm\"\u003eAPI Interface Definitions\u003c/a\u003e e.g.\n    the \u003ca href=\"https://ascom-standards.org/Help/Developer/html/M_ASCOM_DeviceInterface_ITelescopeV3_SlewToCoordinates.htm\"\u003eTelescope.SlewToCoordinates\u003c/a\u003e method.      \n    This document focuses on how to use the ASCOM Interface standards in their RESTful Alpaca form.\n    \n    ## Alpaca URLs, Case Sensitivity, Parameters and Returned values\n\n    **Alpaca Device API URLs** are of the form **http(s)://host:port/path** where path comprises **\"/api/v1/\"** followed by one of the method names below.\n    e.g. for an Alpaca interface running on port 7843 of a device with IP address 192.168.1.89:\n    \n    * A telescope \"Interface Version\" method URL would be **http://192.168.1.89:7843/api/v1/telescope/0/interfaceversion**\n        \n    * A first focuser \"Position\" method URL would be  **http://192.168.1.89:7843/api/v1/focuser/0/position**\n        \n    * A second focuser \"StepSize\" method URL would be  **http://192.168.1.89:7843/api/v1/focuser/1/stepsize**\n\n    * A rotator \"Halt\" method URL would be  **http://192.168.1.89:7843/api/v1/rotator/0/halt**\n    \n    \n    \n    URLs are case sensitive and all elements must be in lower case. This means that both the device type and command name must always be in lower case. Parameter names are not case sensitive, so clients and drivers should be prepared for parameter names to be supplied and returned with any casing. Parameter values can be in mixed case as required.\n    \n    \n    For GET operations, parameters should be placed in the URL query string and for PUT operations they should be placed in the body of the message.\n\n\n    Responses, as described below, are returned in JSON format and always include a common set of values including the client's transaction number, \n    the server's transaction number together with any error message and error number.\n\n    If the transaction completes successfully, the ErrorMessage field will be an empty string and the ErrorNumber field will be zero.\n\n\n    ## HTTP Status Codes and ASCOM Error codes\n\n    The returned HTTP status code gives a high level view of whether the device understood the request and whether it attempted to process it.\n    \n    \n    Under most circumstances the returned status will be `200`, indicating that the request was correctly formatted and that it was passed to the device's handler to execute.\n    A `200` status does not necessarily mean that the operation completed as expected, without error, and you must always check the ErrorMessage and ErrorNumber fields to confirm\n    whether the returned result is valid. The `200` status simply means that the transaction was successfully managed by the device's transaction management layer.\n    \n    \n    An HTTP status code of `400` indicates that the device could not interpret the request e.g. an invalid device number or misspelt device type was supplied. Check the body of the response for a text error message.\n\n\n    An HTTP status code of `500` indicates an unexpected error within the device from which it could not recover. Check the body of the response for a text error message.\n\n    ## SetupDialog and Alpaca Device Configuration\n\n    The SetupDialog method has been omitted from the Alpaca Device API because it presents a user interface rather than returning data. Alpaca device configuration is covered in the \"ASCOM Alpaca Management API\" specification, which can be selected through the drop-down box at the head of this page.\n    \n    \n\npaths:\n  '/{device_type}/{device_number}/action':\n    put:\n      summary: Invokes the named device-specific action.\n      description:  \u003e-\n        Actions and SupportedActions are a standardised means for drivers to extend functionality beyond the built-in capabilities of the ASCOM device interfaces.\n        \n        \n        The key advantage of using Actions is that drivers can expose any device specific functionality required. The downside is that, in order to use these unique features, every application author would need to create bespoke code to present or exploit them.\n        \n        \n        The Action parameter and return strings are deceptively simple, but can support transmission of arbitrarily complex data structures, for example through JSON encoding.\n        \n        \n        This capability will be of primary value to\n         * \u003cspan style=\"font-size:14px;\"\u003ebespoke software and hardware configurations where a single entity controls both the consuming application software and the hardware / driver environment\u003c/span\u003e\n         * \u003cspan style=\"font-size:14px;\"\u003ea group of application and device authors to quickly formulate and try out new interface capabilities without requiring an immediate change to the ASCOM device interface, which will take a lot longer than just agreeing a name, input parameters and a standard response for an Action command.\u003c/span\u003e\n        \n        \n        The list of Action commands supported by a driver can be discovered through the SupportedActions property.\n        \n        \n        This method should return an error message and NotImplementedException error number (0x400) if the driver just implements the standard ASCOM device methods and has no bespoke, unique, functionality.\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Action:\n                  description: \u003e-\n                    A well known name that represents the action to be carried\n                    out.\n                  type: string\n                Parameters:\n                  description: \u003e-\n                    List of required parameters or an Empty String if none are\n                    required\n                  type: string\n              required:\n                - Action\n                - Parameters\n  '/{device_type}/{device_number}/commandblind':\n    put:\n      summary: Transmits an arbitrary string to the device\n      description: \u003e-\n        Transmits an arbitrary string to the device and does not wait for a\n        response. Optionally, protocol framing characters may be added to the\n        string before transmission.\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'\n  '/{device_type}/{device_number}/commandbool':\n    put:\n      summary: \u003e-\n        Transmits an arbitrary string to the device and returns a boolean value\n        from the device.\n      description: \u003e-\n        Transmits an arbitrary string to the device and waits for a boolean\n        response. Optionally, protocol framing characters may be added to the\n        string before transmission.\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'\n  '/{device_type}/{device_number}/commandstring':\n    put:\n      summary: \u003e-\n        Transmits an arbitrary string to the device and returns a string value\n        from the device.\n      description: \u003e-\n        Transmits an arbitrary string to the device and waits for a string\n        response. Optionally, protocol framing characters may be added to the\n        string before transmission.\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'\n  '/{device_type}/{device_number}/connected':\n    get:\n      summary: Retrieves the connected state of the device\n      description: Retrieves the connected state of the device\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the connected state of the device\n      description: Sets the connected state of the device\n      tags:\n        - ASCOM Methods Common To All Devices\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Connected:\n                  description: \u003e-\n                    Set True to connect to the device hardware, set False to\n                    disconnect from the device hardware\n                  type: boolean\n              required:\n                - Connected\n  '/{device_type}/{device_number}/description':\n    get:\n      summary: Device description\n      description: The description of the device\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/{device_type}/{device_number}/driverinfo':\n    get:\n      summary: Device driver description\n      description: The description of the driver\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/{device_type}/{device_number}/driverversion':\n    get:\n      summary: Driver Version\n      description: A string containing only the major and minor version of the driver.\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/{device_type}/{device_number}/interfaceversion':\n    get:\n      summary: The ASCOM Device interface version number that this device supports.\n      description: \u003e-\n        This method returns the version of the ASCOM device interface contract to which this device complies. Only one interface version is current at a moment in time and all\n        new devices should be built to the latest interface version. Applications can choose which device interface versions they support and it is in their interest to support \n        previous versions as well as the current version to ensure thay can use the largest number of devices.\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/{device_type}/{device_number}/name':\n    get:\n      summary: Device name\n      description: The name of the device\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/{device_type}/{device_number}/supportedactions':\n    get:\n      summary: Returns the list of action names supported by this driver.\n      description: Returns the list of action names supported by this driver.\n      parameters:\n        - $ref: '#/components/parameters/device_type'\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          $ref: '#/components/responses/StringArrayResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/bayeroffsetx':\n    get:\n      summary: Returns the X offset of the Bayer matrix.\n      description: 'Returns the X offset of the Bayer matrix, as defined in SensorType.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/bayeroffsety':\n    get:\n      summary: Returns the Y offset of the Bayer matrix.\n      description: 'Returns the Y offset of the Bayer matrix, as defined in SensorType.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/binx':\n    get:\n      summary: Returns the binning factor for the X axis.\n      description: Returns the binning factor for the X axis.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the binning factor for the X axis.\n      description: Sets the binning factor for the X axis.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                BinX:\n                  description: The X binning value\n                  type: integer\n                  format: int32\n                  default: 1\n              required:\n                - BinX\n  '/camera/{device_number}/biny':\n    get:\n      summary: Returns the binning factor for the Y axis.\n      description: Returns the binning factor for the Y axis.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the binning factor for the Y axis.\n      description: Sets the binning factor for the Y axis.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                BinY:\n                  description: The Y binning value\n                  type: integer\n                  format: int32\n                  default: 1\n              required:\n                - BinY\n  '/camera/{device_number}/camerastate':\n    get:\n      summary: Returns the camera operational state.\n      description: \u003e-\n        Returns the current camera operational state as an integer. 0 =\n        CameraIdle , 1 = CameraWaiting , 2 = CameraExposing , 3 = CameraReading\n        , 4 = CameraDownload , 5 = CameraError\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/cameraxsize':\n    get:\n      summary: Returns the width of the CCD camera chip.\n      description: Returns the width of the CCD camera chip in unbinned pixels.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/cameraysize':\n    get:\n      summary: Returns the height of the CCD camera chip.\n      description: Returns the height of the CCD camera chip in unbinned pixels.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/canabortexposure':\n    get:\n      summary: Indicates whether the camera can abort exposures.\n      description: Returns true if the camera can abort exposures; false if not.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/canasymmetricbin':\n    get:\n      summary: Indicates whether the camera supports asymmetric binning\n      description: Returns a flag showing whether this camera supports asymmetric binning\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/canfastreadout':\n    get:\n      summary: Indicates whether the camera has a fast readout mode.\n      description: Indicates whether the camera has a fast readout mode.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/cangetcoolerpower':\n    get:\n      summary: Indicates whether the camera's cooler power setting can be read.\n      description: 'If true, the camera''s cooler power setting can be read.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/canpulseguide':\n    get:\n      summary: Returns a flag indicating whether this camera supports pulse guiding\n      description: Returns a flag indicating whether this camera supports pulse guiding.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/cansetccdtemperature':\n    get:\n      summary: \u003e-\n        Returns a flag indicating whether this camera supports setting the CCD\n        temperature\n      description: \u003e-\n        Returns a flag indicatig whether this camera supports setting the CCD\n        temperature\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/canstopexposure':\n    get:\n      summary: \u003e-\n        Returns a flag indicating whether this camera can stop an exposure that\n        is in progress\n      description: \u003e-\n        Returns a flag indicating whether this camera can stop an exposure that\n        is in progress\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/ccdtemperature':\n    get:\n      summary: Returns the current CCD temperature\n      description: Returns the current CCD temperature in degrees Celsius.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/cooleron':\n    get:\n      summary: Returns the current cooler on/off state.\n      description: Returns the current cooler on/off state.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Turns the camera cooler on and off\n      description: 'Turns on and off the camera cooler. True = cooler on, False = cooler off'\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                CoolerOn:\n                  description: Cooler state\n                  type: boolean\n                  default: true\n              required:\n                - CoolerOn\n  '/camera/{device_number}/coolerpower':\n    get:\n      summary: Returns the present cooler power level\n      description: 'Returns the present cooler power level, in percent.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/electronsperadu':\n    get:\n      summary: Returns the gain of the camera\n      description: Returns the gain of the camera in photoelectrons per A/D unit.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/exposuremax':\n    get:\n      summary: Returns the maximum exposure time supported by StartExposure.\n      description: Returns the maximum exposure time supported by StartExposure.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/exposuremin':\n    get:\n      summary: Returns the Minimium exposure time\n      description: \u003e-\n        Returns the Minimium exposure time in seconds that the camera supports\n        through StartExposure.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/exposureresolution':\n    get:\n      summary: \u003e-\n        Returns the smallest increment in exposure time supported by\n        StartExposure.\n      description: \u003e-\n        Returns the smallest increment in exposure time supported by\n        StartExposure.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/fastreadout':\n    get:\n      summary: Returns whenther Fast Readout Mode is enabled.\n      description: Returns whenther Fast Readout Mode is enabled.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets whether Fast Readout Mode is enabled.\n      description: Sets whether Fast Readout Mode is enabled.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                FastReadout:\n                  description: True to enable fast readout mode\n                  type: boolean\n                  default: false\n              required:\n                - FastReadout\n  '/camera/{device_number}/fullwellcapacity':\n    get:\n      summary: Reports the full well capacity of the camera\n      description: \u003e-\n        Reports the full well capacity of the camera in electrons, at the\n        current camera settings (binning, SetupDialog settings, etc.).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/gain':\n    get:\n      summary: Returns the camera's gain\n      description: The camera's gain (GAIN VALUE MODE) OR the index of the selected camera gain description in the Gains array (GAINS INDEX MODE).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the camera's gain.\n      description: The camera's gain (GAIN VALUE MODE) OR the index of the selected camera gain description in the Gains array (GAINS INDEX MODE).\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Gain:\n                  description: Index of the current camera gain in the Gains string array.\n                  type: integer\n                  format: int32\n                  default: 0\n              required:\n                - Gain\n  '/camera/{device_number}/gainmax':\n    get:\n      summary: Maximum Gain value of that this camera supports\n      description: Returns the maximum value of Gain.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/gainmin':\n    get:\n      summary: Minimum Gain value of that this camera supports \n      description: Returns the Minimum value of Gain.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/gains':\n    get:\n      summary: List of Gain names supported by the camera \n      description: Returns the Gains supported by the camera.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringArrayResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/camera/{device_number}/hasshutter':\n    get:\n      summary: Indicates whether the camera has a mechanical shutter\n      description: Returns a flag indicating whether this camera has a mechanical shutter.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/heatsinktemperature':\n    get:\n      summary: Returns the current heat sink temperature.\n      description: \u003e-\n        Returns the current heat sink temperature (called \"ambient temperature\"\n        by some manufacturers) in degrees Celsius.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/imagearray':\n    get:\n      summary: Returns an array of integers containing the exposure pixel values\n      description: \u003e\n        Returns an array of 32bit integers containing the pixel values from the last exposure. This call can return either a 2 dimension (monochrome images) or 3 dimension (colour or multi-plane images) array \n        of size NumX \\* NumY or NumX \\* NumY \\* NumPlanes. Where applicable, the size of NumPlanes has to be determined by inspection of the returned Array.\n        \n        \n        Since 32bit integers are always returned by this call, the returned JSON Type value (0 = Unknown, 1 = short(16bit), 2 = int(32bit), 3 = Double) is always 2.\n        \n        \n        When de-serialising to an object it is essential to know the array Rank beforehand so that the correct data class can be used. This can be achieved through a regular expression or by direct parsing \n        of the returned JSON string to extract the Type and Rank values before de-serialising.\n        \n        \n        This regular expression accomplishes the extraction into two named groups Type and Rank, which can then be used to select the correct de-serialisation data class:\n        \n        \n        __`^*\"Type\":(?\u003cType\u003e\\d*),\"Rank\":(?\u003cRank\u003e\\d*)`__\n        \n        \n        When the SensorType is Monochrome, RGGB, CMYG, CMYG2 or LRGB, the serialised JSON array should have 2 dimensions. For example, the returned array should appear as below if NumX = 7, NumY = 5 \n        and Pxy represents the pixel value at the zero based position x across and y down the image with the origin in the top left corner of the image.  \n        \n        \n        Please note that this is \"column-major\" order (column changes most rapidly)\n        from the image's row and column perspective, while, from the array's perspective, serialisation is actually effected in \"row-major\" order (rightmost index changes most rapidly). \n        This unintuitive outcome arises because the ASCOM Camera Interface specification defines the image column dimension as the rightmost array dimension.\n        \n        \n        [\n        \n        \n        [P00,P01,P02,P03,P04],\n        \n        \n        [P10,P11,P12,P13,P14],\n        \n        \n        [P20,P21,P22,P23,P24],\n        \n        \n        [P30,P31,P32,P33,P34],\n        \n        \n        [P40,P41,P42,P43,P44],\n        \n        \n        [P50,P51,P52,P53,P54],\n        \n        \n        [P60,P61,P62,P63,P64]\n        \n        \n        ]\n        \n        \n        When the SensorType is Color, the serialised JSON array will have 3 dimensions. For example, the returned array should appear as below if NumX = 7, NumY = 5 \n        and Rxy, Gxy and Bxy represent the red, green and blue pixel values at the zero based position x across and y down the image with the origin in the top left corner of the image.  Please see note above regarding element ordering.\n        \n        \n        [\n        \n\n        [[R00,G00,B00],[R01,G01,B01],[R02,G02,B02],[R03,G03,B03],[R04,G04,B04]],\n\n\n        [[R10,G10,B10],[R11,G11,B11],[R12,G12,B12],[R13,G13,B13],[R14,G14,B14]],\n\n\n        [[R20,G20,B20],[R21,G21,B21],[R22,G22,B22],[R23,G23,B23],[R24,G24,B24]],\n\n\n        [[R30,G30,B30],[R31,G31,B31],[R32,G32,B32],[R33,G33,B33],[R34,G34,B34]],\n\n\n        [[R40,G40,B40],[R41,G41,B41],[R42,G42,B42],[R43,G43,B43],[R44,G44,B44]],\n\n\n        [[R50,G50,B50],[R51,G51,B51],[R52,G52,B52],[R53,G53,B53],[R54,G54,B54]],\n\n\n        [[R60,G60,B60],[R61,G61,B61],[R62,G62,B62],[R63,G63,B63],[R64,G64,B64]],\n\n\n        ]\n        \n        \n        __`Performance`__\n\n        \n        Returning an image from an Alpaca device as a JSON array is very inefficient and can result in delays of 30 or more seconds while client and device process and send the huge JSON string over the network. \n        A new, much faster mechanic called ImageBytes - [Alpaca ImageBytes Concepts and Implementation](https://www.ascom-standards.org/Developer/AlpacaImageBytes.pdf) has been developed that sends data as a binary byte stream and can offer a 10 to 20 fold reduction in transfer time. \n        It is strongly recommended that Alpaca Cameras implement the ImageBytes mechanic as well as the JSON mechanic.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/ImageArrayResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/imagearrayvariant':\n    get:\n      summary: Returns an array of int containing the exposure pixel values\n      description: \u003e\n        Returns an array containing the pixel values from the last exposure.\n        This call can return either a 2 dimension (monochrome images) or a 3\n        dimension (colour or multi-plane images) array of size NumX \\* NumY  or\n        NumX \\* NumY \\* NumPlanes. Where applicable, the size of NumPlanes has\n        to be determined by inspection of the returned Array.\n        \n        \n        This call can return values as short(16bit) integers, int(32bit)\n        integers or double floating point values. The nature of the returned\n        values is given in the Type parameter: 0 = Unknown, 1 = short(16bit), 2\n        = int(32bit), 3 = Double.\n        \n        \n        When deserialising to an object it helps enormously to know the Type and\n        Rank beforehand so that the correct data class can be used. This can be\n        achieved through a regular expression or by direct parsing of the\n        returned JSON string to extract the Type and Rank values before\n        deserialising.\n        \n        \n        This regular expression accomplishes the extraction into two named groups Type and Rank, which can then be used to select the correct de-serialisation data class:\n        \n        \n        __`^*\"Type\":(?\u003cType\u003e\\d*),\"Rank\":(?\u003cRank\u003e\\d*)`__\n        \n        \n        When the SensorType is Monochrome, RGGB, CMYG, CMYG2 or LRGB, the serialised JSON array should have 2 dimensions. For example, the returned array should appear as below if NumX = 7, NumY = 5 \n        and Pxy represents the pixel value at the zero based position x across and y down the image with the origin in the top left corner of the image.  \n        \n        \n        Please note that this is \"column-major\" order (column changes most rapidly)\n        from the image's row and column perspective, while, from the array's perspective, serialisation is actually effected in \"row-major\" order (rightmost index changes most rapidly). \n        This unintuitive outcome arises because the ASCOM Camera Interface specification defines the image column dimension as the rightmost array dimension.\n        \n        \n        [\n        \n        \n        [P00,P01,P02,P03,P04],\n        \n        \n        [P10,P11,P12,P13,P14],\n        \n        \n        [P20,P21,P22,P23,P24],\n        \n        \n        [P30,P31,P32,P33,P34],\n        \n        \n        [P40,P41,P42,P43,P44],\n        \n        \n        [P50,P51,P52,P53,P54],\n        \n        \n        [P60,P61,P62,P63,P64]\n        \n        \n        ]\n        \n        \n        When the SensorType is Color, the serialised JSON array should have 3 dimensions. For example, the returned array should appear as below if NumX = 7, NumY = 5 \n        and Rxy, Gxy and Bxy represent the red, green and blue pixel values at the zero based position x across and y down the image with the origin in the top left corner of the image.  Please see note above regarding element ordering.\n        \n        \n        [\n        \n\n        [[R00,G00,B00],[R01,G01,B01],[R02,G02,B02],[R03,G03,B03],[R04,G04,B04]],\n\n\n        [[R10,G10,B10],[R11,G11,B11],[R12,G12,B12],[R13,G13,B13],[R14,G14,B14]],\n\n\n        [[R20,G20,B20],[R21,G21,B21],[R22,G22,B22],[R23,G23,B23],[R24,G24,B24]],\n\n\n        [[R30,G30,B30],[R31,G31,B31],[R32,G32,B32],[R33,G33,B33],[R34,G34,B34]],\n\n\n        [[R40,G40,B40],[R41,G41,B41],[R42,G42,B42],[R43,G43,B43],[R44,G44,B44]],\n\n\n        [[R50,G50,B50],[R51,G51,B51],[R52,G52,B52],[R53,G53,B53],[R54,G54,B54]],\n\n\n        [[R60,G60,B60],[R61,G61,B61],[R62,G62,B62],[R63,G63,B63],[R64,G64,B64]],\n\n\n        ]\n        \n        \n        __`Performance`__\n\n        \n        Returning an image from an Alpaca device as a JSON array is very inefficient and can result in delays of 30 or more seconds while client and device process and send the huge JSON string over the network. \n        A new, much faster mechanic called ImageBytes - [Alpaca ImageBytes Concepts and Implementation](https://www.ascom-standards.org/Developer/AlpacaImageBytes.pdf) has been developed that sends data as a binary byte stream and can offer a 10 to 20 fold reduction in transfer time. \n        It is strongly recommended that Alpaca Cameras implement the ImageBytes mechanic as well as the JSON mechanic.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/ImageArrayVariantResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/imageready':\n    get:\n      summary: Indicates that an image is ready to be downloaded\n      description: \u003e-\n        Returns a flag indicating whether the image is ready to be downloaded\n        from the camera.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/ispulseguiding':\n    get:\n      summary: Indicates that the camera is pulse guideing.\n      description: \u003e-\n        Returns a flag indicating whether the camera is currrently in a\n        PulseGuide operation.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/lastexposureduration':\n    get:\n      summary: Duration of the last exposure\n      description: \u003e-\n        Reports the actual exposure duration in seconds (i.e. shutter open\n        time).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/lastexposurestarttime':\n    get:\n      summary: Start time of the last exposure in FITS standard format.\n      description: \u003e-\n        Reports the actual exposure start in the FITS-standard\n        CCYY-MM-DDThh:mm:ss[.sss...] format.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/maxadu':\n    get:\n      summary: Camera's maximum ADU value\n      description: Reports the maximum ADU value the camera can produce.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/maxbinx':\n    get:\n      summary: Maximum  binning for the camera X axis\n      description: Returns the maximum allowed binning for the X camera axis\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/maxbiny':\n    get:\n      summary: Maximum  binning for the camera Y axis\n      description: Returns the maximum allowed binning for the Y camera axis\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/numx':\n    get:\n      summary: Returns the current subframe width\n      description: \u003e-\n        Returns the current subframe width, if binning is active, value is in\n        binned pixels.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the current subframe width\n      description: Sets the current subframe width.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                NumX:\n                  description: \u003e-\n                        Sets the subframe width, if binning is active, value is in binned\n                        pixels.\n                  type: integer\n                  format: int32\n                  default: 0\n              required:\n                - NumX\n  '/camera/{device_number}/numy':\n    get:\n      summary: Returns the current subframe height\n      description: \u003e-\n        Returns the current subframe height, if binning is active, value is in\n        binned pixels.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the current subframe height\n      description: Sets the current subframe height.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                NumY:\n                  description: \u003e-\n                        Sets the subframe height, if binning is active, value is in binned\n                        pixels.\n                  type: integer\n                  format: int32\n                  default: 0\n              required:\n                - NumY\n  '/camera/{device_number}/offset':\n    get:\n      summary: Returns the camera's offset\n      description: Returns the camera's offset (OFFSET VALUE MODE) OR the index of the selected camera offset description in the offsets array (OFFSETS INDEX MODE).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the camera's offset.\n      description: Sets the camera's offset (OFFSET VALUE MODE) OR the index of the selected camera offset description in the offsets array (OFFSETS INDEX MODE).\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                    Offset:\n                      description: Index of the current camera offset in the offsets string array.\n                      type: integer\n                      format: int32\n                      default: 0\n                  required:\n                    - Offset\n  '/camera/{device_number}/offsetmax':\n    get:\n      summary: Maximum offset value of that this camera supports\n      description: Returns the maximum value of offset.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/offsetmin':\n    get:\n      summary: Minimum offset value of that this camera supports \n      description: Returns the Minimum value of offset.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/offsets':\n    get:\n      summary: List of offset names supported by the camera \n      description: Returns the offsets supported by the camera.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringArrayResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/percentcompleted':\n    get:\n      summary: Indicates percentage completeness of the current operation\n      description: \u003e-\n        Returns the percentage of the current operation that is complete. If\n        valid, returns an integer between 0 and 100, where 0 indicates 0%\n        progress (function just started) and 100 indicates 100% progress (i.e.\n        completion).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/pixelsizex':\n    get:\n      summary: Width of CCD chip pixels (microns)\n      description: Returns the width of the CCD chip pixels in microns.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/pixelsizey':\n    get:\n      summary: Height of CCD chip pixels (microns)\n      description: Returns the Height of the CCD chip pixels in microns.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/readoutmode':\n    get:\n      summary: \u003e-\n        Indicates the canera's readout mode as an index into the array\n        ReadoutModes\n      description: \u003e-\n        ReadoutMode is an index into the array ReadoutModes and returns the\n        desired readout mode for the camera. Defaults to 0 if not set.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Set the camera's readout mode\n      description: Sets the ReadoutMode as an index into the array ReadoutModes.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                ReadoutMode:\n                  description: \u003e-\n                        Index into the ReadoutModes array of string readout mode names\n                        indicating the camera's current readout mode.\n                  type: integer\n                  format: int32\n                  default: 0\n              required:\n                - ReadoutMode\n  '/camera/{device_number}/readoutmodes':\n    get:\n      summary: List of available readout modes\n      description: \u003e-\n        This property provides an array of strings, each of which describes an\n        available readout mode of the camera. At least one string must be\n        present in the list.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringArrayResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/sensorname':\n    get:\n      summary: Sensor name\n      description: The name of the sensor used within the camera.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/sensortype':\n    get:\n      summary: \u003e-\n        Type of information returned by the the camera sensor (monochrome or\n        colour)\n      description: \u003e\n        Returns a value indicating whether the sensor is monochrome, or what\n        Bayer matrix it encodes. Where: \n\n        - 0 = Monochrome,\n\n        - 1 = Colour not requiring Bayer decoding\n\n        - 2 = RGGB Bayer encoding\n\n        - 3 = CMYG Bayer encoding\n\n        - 4 = CMYG2 Bayer encoding\n\n        - 5 = LRGB TRUESENSE Bayer encoding.\n\n\n        Please see the ASCOM Help fie for more informaiton on the SensorType.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/camera/{device_number}/setccdtemperature':\n    get:\n      summary: Returns the current camera cooler setpoint in degrees Celsius.\n      description: Returns the current camera cooler setpoint in degrees Celsius.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Set the camera's cooler setpoint (degrees Celsius).\n      description: Set's the camera's cooler setpoint in degrees Celsius.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                SetCCDTemperature:\n                  description: Temperature set point (degrees Celsius).\n                  type: number\n                  default: -10\n              required:\n                - SetCCDTemperature\n  '/camera/{device_number}/startx':\n    get:\n      summary: Return the current subframe X axis start position\n      description: \u003e-\n        Sets the subframe start position for the X axis (0 based) and returns\n        the current value. If binning is active, value is in binned pixels.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the current subframe X axis start position\n      description: Sets the current subframe X axis start position in binned pixels.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                StartX:\n                  description: The subframe X axis start position in binned pixels.\n                  type: integer\n                  format: int32\n                  default: 0\n              required:\n                - StartX\n  '/camera/{device_number}/starty':\n    get:\n      summary: Return the current subframe Y axis start position\n      description: \u003e-\n        Sets the subframe start position for the Y axis (0 based) and returns\n        the current value. If binning is active, value is in binned pixels.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the current subframe Y axis start position\n      description: Sets the current subframe Y axis start position in binned pixels.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                StartY:\n                  description: The subframe Y axis start position in binned pixels.\n                  type: integer\n                  format: int32\n                  default: 0\n              required:\n                - StartY\n  '/camera/{device_number}/subexposureduration':\n    get:\n      summary: Camera's sub-exposure interval\n      description: \u003e-\n        The Camera's sub exposure duration in seconds. Only available in Camera Interface Version 3 and later.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the current Sub Exposure Duration\n      description: Sets image sub exposure duration in seconds. Only available in Camera Interface Version 3 and later.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                SubExposureDuration:\n                  description: The request sub exposure duration in seconds\n                  type: number\n                  default: 0\n              required:\n                - SubExposureDuration          \n  '/camera/{device_number}/abortexposure':\n    put:\n      summary: Aborts the current exposure\n      description: \u003e-\n        Aborts the current exposure, if any, and returns the camera to Idle\n        state.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/camera/{device_number}/pulseguide':\n    put:\n      summary: Pulse guide in the specified direction for the specified time.\n      description: \u003e-\n        Activates the Camera's mount control sytem to instruct the mount to move\n        in a particular direction for a given period of time\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Direction:\n                      description: 'Direction of movement (0 = North, 1 = South, 2 = East, 3 = West)'\n                  type: integer\n                  format: int32\n                Duration:\n                  description: Duration of movement in milli-seconds\n                  type: integer\n                  format: int32\n              required:\n                - Direction\n                - Duration\n  '/camera/{device_number}/startexposure':\n    put:\n      summary: Starts an exposure\n      description: \u003e-\n        Starts an exposure. Use ImageReady to check when the exposure is\n        complete.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Duration:\n                  description: Duration of exposure in seconds\n                  type: number\n                Light:\n                  description: 'True if light frame, false if dark frame.'\n                  type: boolean\n              required:\n                - Duration\n                - Light\n  '/camera/{device_number}/stopexposure':\n    put:\n      summary: Stops the current exposure\n      description: \u003e-\n        Stops the current exposure, if any. If an exposure is in progress, the\n        readout process is initiated. Ignored if readout is already in process.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n\n\n  '/covercalibrator/{device_number}/brightness':\n    get:\n      summary: Returns the current calibrator brightness\n      description: Returns the current calibrator brightness in the range 0 (completely off) to MaxBrightness (fully on) \n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/covercalibrator/{device_number}/calibratorstate':\n    get:\n      summary: Returns the state of the calibration device\n      description: \u003e-\n        Returns the state of the calibration device, if present, otherwise returns \"NotPresent\". \n        The calibrator state mode is specified as an integer value from the\n        CalibratorStatus Enum.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/covercalibrator/{device_number}/coverstate':\n    get:\n      summary: Returns the state of the device cover\" \n      description: \u003e-\n        Returns the state of the device cover, if present, otherwise returns \"NotPresent\". \n        The cover state mode is specified as an integer value from the\n        CoverStatus Enum.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/covercalibrator/{device_number}/maxbrightness':\n    get:\n      summary: Returns the calibrator's maximum Brightness value.\n      description: The Brightness value that makes the calibrator deliver its maximum illumination. \n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/covercalibrator/{device_number}/calibratoroff':\n    put:\n      summary: Turns the calibrator off\n      description: 'Turns the calibrator off if the device has calibration capability.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/covercalibrator/{device_number}/calibratoron':\n    put:\n      summary: Turns the calibrator on at the specified brightness\n      description: \u003e-\n        Turns the calibrator on at the specified brightness if the device has calibration capability.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Brightness:\n                      description: The required brightness in the range 0 to MaxBrightness\n                  type: integer\n                  format: int32\n              required:\n                    - Brightness\n  '/covercalibrator/{device_number}/closecover':\n    put:\n      summary: Initiates cover closing \n      description: 'Initiates cover closing if a cover is present.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/covercalibrator/{device_number}/haltcover':\n    put:\n      summary: Stops any cover movement that may be in progress\n      description: 'Stops any cover movement that may be in progress if a cover is present and cover movement can be interrupted.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/covercalibrator/{device_number}/opencover':\n    put:\n      summary: Initiates cover opening\n      description: 'Initiates cover opening if a cover is present.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - CoverCalibrator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/dome/{device_number}/altitude':\n    get:\n      summary: The dome altitude\n      description: \u003e-\n        The dome altitude (degrees, horizon zero and increasing positive to 90\n        zenith).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/athome':\n    get:\n      summary: Indicates whether the dome is in the home position.\n      description: \u003e-\n        Indicates whether the dome is in the home position. This is normally\n        used following a FindHome()  operation. The value is reset with any\n        azimuth slew operation that moves the dome away from the home position.\n        AtHome may also become true durng normal slew operations, if the dome\n        passes through the home position and the dome controller hardware is\n        capable of detecting that; or at the end of a slew operation if the dome\n        comes to rest at the home position.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/atpark':\n    get:\n      summary: Indicates whether the dome is at the park position\n      description: \u003e-\n        True if the dome is in the programmed park position. Set only following\n        a Park() operation and reset with any slew operation.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/azimuth':\n    get:\n      summary: The dome azimuth\n      description: \u003e-\n        Returns the dome azimuth (degrees, North zero and increasing clockwise,\n        i.e., 90 East, 180 South, 270 West)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/canfindhome':\n    get:\n      summary: Indicates whether the dome can find the home position.\n      description: True if the dome can move to the home position.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/canpark':\n    get:\n      summary: Indicates whether the dome can be parked.\n      description: True if the dome is capable of programmed parking (Park() method)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/cansetaltitude':\n    get:\n      summary: Indicates whether the dome altitude can be set\n      description: True if driver is capable of setting the dome altitude.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/cansetazimuth':\n    get:\n      summary: Indicates whether the dome azimuth can be set\n      description: True if driver is capable of setting the dome azimuth.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/cansetpark':\n    get:\n      summary: Indicates whether the dome park position can be set\n      description: True if driver is capable of setting the dome park position.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/cansetshutter':\n    get:\n      summary: Indicates whether the dome shutter can be opened\n      description: True if driver is capable of automatically operating shutter\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/canslave':\n    get:\n      summary: Indicates whether the dome supports slaving to a telescope\n      description: True if driver is capable of slaving to a telescope.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/cansyncazimuth':\n    get:\n      summary: Indicates whether the dome azimuth position can be synched\n      description: \u003e-\n        True if driver is capable of synchronizing the dome azimuth position\n        using the SyncToAzimuth(Double) method.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/shutterstatus':\n    get:\n      summary: Status of the dome shutter or roll-off roof\n      description: \u003e-\n        Returns the status of the dome shutter or roll-off roof. 0 = Open, 1 =\n        Closed, 2 = Opening, 3 = Closing, 4 = Shutter status error\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/slaved':\n    get:\n      summary: Indicates whether the dome is slaved to the telescope\n      description: 'True if the dome is slaved to the telescope in its hardware, else False.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets whether the dome is slaved to the telescope\n      description: Sets the current subframe height.\n      tags:\n        - Dome Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Slaved:\n                  description: 'True if telescope is slaved to dome, otherwise false'\n                  type: boolean\n                  default: false\n              required:\n                - Slaved\n  '/dome/{device_number}/slewing':\n    get:\n      summary: Indicates whether the any part of the dome is moving\n      description: \u003e-\n        True if any part of the dome is currently moving, False if all dome\n        components are steady.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/dome/{device_number}/abortslew':\n    put:\n      summary: Immediately cancel current dome operation.\n      description: \u003e-\n        Calling this method will immediately disable hardware slewing (Slaved\n        will become False).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/dome/{device_number}/closeshutter':\n    put:\n      summary: Close the shutter or otherwise shield telescope from the sky.\n      description: Close the shutter or otherwise shield telescope from the sky.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/dome/{device_number}/findhome':\n    put:\n      summary: Start operation to search for the dome home position.\n      description: \u003e-\n        After Home position is established initializes Azimuth to the default\n        value and sets the AtHome flag.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/dome/{device_number}/openshutter':\n    put:\n      summary: Open shutter or otherwise expose telescope to the sky.\n      description: Open shutter or otherwise expose telescope to the sky.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/dome/{device_number}/park':\n    put:\n      summary: Rotate dome in azimuth to park position.\n      description: 'After assuming programmed park position, sets AtPark flag.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/dome/{device_number}/setpark':\n    put:\n      summary: \u003e-\n        Set the current azimuth, altitude position of dome to be the park\n        position\n      description: \u003e-\n        Set the current azimuth, altitude position of dome to be the park\n        position.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/dome/{device_number}/slewtoaltitude':\n    put:\n      summary: Slew the dome to the given altitude position.\n      description: Slew the dome to the given altitude position.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Altitude:\n                  description: \u003e-\n                        Target dome altitude (degrees, horizon zero and increasing positive to 90\n                        zenith)\n                  type: number\n              required:\n                - Altitude\n  '/dome/{device_number}/slewtoazimuth':\n    put:\n      summary: Slew the dome to the given azimuth position.\n      description: Slew the dome to the given azimuth position.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_slewtoazimuth'\n  '/dome/{device_number}/synctoazimuth':\n    put:\n      summary: Synchronize the current position of the dome to the given azimuth.\n      description: Synchronize the current position of the dome to the given azimuth.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_slewtoazimuth'\n  '/filterwheel/{device_number}/focusoffsets':\n    get:\n      summary: Filter focus offsets\n      description: An integer array of filter focus offsets.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - FilterWheel Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntArrayResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/filterwheel/{device_number}/names':\n    get:\n      summary: Filter wheel filter names\n      description: The names of the filters\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - FilterWheel Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringArrayResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/filterwheel/{device_number}/position':\n    get:\n      summary: Returns the current filter wheel position\n      description: Returns the current filter wheel position\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - FilterWheel Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the filter wheel position\n      description: Sets the filter wheel position\n      tags:\n        - FilterWheel Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Position:\n                  description: The number of the filter wheel position to select\n                  type: integer\n                  format: int32\n              required:\n                - Position\n  '/focuser/{device_number}/absolute':\n    get:\n      summary: Indicates whether the focuser is capable of absolute position.\n      description: \u003e-\n        True if the focuser is capable of absolute position; that is, being\n        commanded to a specific step location.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/focuser/{device_number}/ismoving':\n    get:\n      summary: Indicates whether the focuser is currently moving.\n      description: \u003e-\n        True if the focuser is currently moving to a new position. False if the\n        focuser is stationary.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/focuser/{device_number}/maxincrement':\n    get:\n      summary: Returns the focuser's maximum increment size.\n      description: \u003e-\n        Maximum increment size allowed by the focuser; i.e. the maximum number\n        of steps allowed in one move operation.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/focuser/{device_number}/maxstep':\n    get:\n      summary: Returns the focuser's maximum step size.\n      description: Maximum step position permitted.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/focuser/{device_number}/position':\n    get:\n      summary: Returns the focuser's current position.\n      description: 'Current focuser position, in steps.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/focuser/{device_number}/stepsize':\n    get:\n      summary: Returns the focuser's step size.\n      description: Step size (microns) for the focuser.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/focuser/{device_number}/tempcomp':\n    get:\n      summary: Retrieves the state of temperature compensation mode\n      description: \u003e-\n        Gets the state of temperature compensation mode (if available), else\n        always False.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the device's temperature compensation mode.\n      description: Sets the state of temperature compensation mode.\n      tags:\n        - Focuser Specific Methods\n      parameters:\n        - name: device_number\n          description: Zero based device number as set on the server\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                TempComp:\n                  description: \u003e-\n                        Set true to enable the focuser's temperature compensation mode, otherwise\n                        false for normal operation.\n                  type: boolean\n              required:\n                - TempComp\n  '/focuser/{device_number}/tempcompavailable':\n    get:\n      summary: Indicates whether the focuser has temperature compensation.\n      description: True if focuser has temperature compensation available.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/focuser/{device_number}/temperature':\n    get:\n      summary: Returns the focuser's current temperature.\n      description: Current ambient temperature as measured by the focuser.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/focuser/{device_number}/halt':\n    put:\n      summary: Immediatley stops focuser motion.\n      description: \u003e-\n        Immediately stop any focuser motion due to a previous Move(Int32) method\n        call.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/focuser/{device_number}/move':\n    put:\n      summary: Moves the focuser to a new position.\n      description: \u003e-\n        Moves the focuser by the specified amount or to the specified position\n        depending on the value of the Absolute property.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Position:\n                  description: \u003e-\n                        Step distance or absolute position, depending on the value of the Absolute\n                        property\n                  type: integer\n                  format: int32\n              required:\n                - Position\n  '/observingconditions/{device_number}/averageperiod':\n    get:\n      summary: Returns the time period over which observations will be averaged\n      description: Gets the time period over which observations will be averaged\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the time period over which observations will be averaged\n      description: Sets the time period over which observations will be averaged\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                AveragePeriod:\n                  description: Time period (hours) over which to average sensor readings\n                  type: number\n                  default: 0.15\n              required:\n                - AveragePeriod\n  '/observingconditions/{device_number}/cloudcover':\n    get:\n      summary: Returns the amount of sky obscured by cloud\n      description: Gets the percentage of the sky obscured by cloud\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/dewpoint':\n    get:\n      summary: Returns the atmospheric dew point at the observatory\n      description: Gets the atmospheric dew point at the observatory reported in °C.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/humidity':\n    get:\n      summary: Returns the atmospheric humidity at the observatory\n      description: Gets the atmospheric  humidity (%) at the observatory\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/pressure':\n    get:\n      summary: Returns the atmospheric pressure at the observatory.\n      description: \u003e-\n        Gets the atmospheric pressure in hectoPascals at the observatory's\n        altitude - NOT reduced to sea level.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/rainrate':\n    get:\n      summary: Returns the rain rate at the observatory.\n      description: Gets the rain rate (mm/hour) at the observatory.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/skybrightness':\n    get:\n      summary: Returns the sky brightness at the observatory\n      description: Gets the sky brightness at the observatory (Lux)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/skyquality':\n    get:\n      summary: Returns the sky quality at the observatory\n      description: \u003e-\n        Gets the sky quality at the observatory (magnitudes per square arc\n        second)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/skytemperature':\n    get:\n      summary: Returns the sky temperature at the observatory\n      description: Gets the sky temperature(°C) at the observatory.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/starfwhm':\n    get:\n      summary: Returns the seeing at the observatory\n      description: \u003e-\n        Gets the seeing at the observatory measured as star full width half\n        maximum (FWHM) in arc secs.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/temperature':\n    get:\n      summary: Returns the temperature at the observatory\n      description: Gets the temperature(°C) at the observatory.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/winddirection':\n    get:\n      summary: Returns the wind direction at the observatory\n      description: \u003e-\n        Gets the wind direction. The returned value must be between 0.0 and\n        360.0, interpreted according to the metereological standard, where a\n        special value of 0.0 is returned when the wind speed is 0.0. Wind\n        direction is measured clockwise from north, through east, where\n        East=90.0, South=180.0, West=270.0 and North=360.0.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/windgust':\n    get:\n      summary: \u003e-\n        Returns the peak 3 second wind gust at the observatory over the last 2\n        minutes\n      description: \u003e-\n        Gets the peak 3 second wind gust(m/s) at the observatory over the last 2\n        minutes.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/windspeed':\n    get:\n      summary: Returns the wind speed at the observatory.\n      description: Gets the wind speed(m/s) at the observatory.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/refresh':\n    put:\n      summary: Refreshes sensor values from hardware.\n      description: \u003e-\n        Forces the driver to immediately query its attached hardware to refresh\n        sensor values.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/observingconditions/{device_number}/sensordescription':\n    get:\n      summary: Return a sensor description\n      description: \u003e-\n        Gets a description of the sensor with the name specified in the\n        SensorName parameter\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - name: SensorName\n          description: Name of the sensor whose description is required\n          in: query\n          required: true\n          schema:\n            type: string\n            default: Pressure\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/observingconditions/{device_number}/timesincelastupdate':\n    get:\n      summary: Return the time since the sensor value was last updated\n      description: \u003e-\n        Gets the time since the sensor specified in the SensorName\n        parameter was last updated\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - name: SensorName\n          description: Name of the sensor whose last update time is required\n          in: query\n          required: true\n          schema:\n            type: string\n            default: Pressure\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/rotator/{device_number}/canreverse':\n    get:\n      summary: IIndicates whether the Rotator supports the Reverse method.\n      description: True if the Rotator supports the Reverse method.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/rotator/{device_number}/ismoving':\n    get:\n      summary: Indicates whether the rotator is currently moving.\n      description: \u003e-\n        True if the rotator is currently moving to a new position. False if the\n        focuser is stationary.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/rotator/{device_number}/mechanicalposition':\n    get:\n      summary: Returns the rotator's mechanical current position.\n      description: 'Returns the raw mechanical position of the rotator in degrees.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/rotator/{device_number}/position':\n    get:\n      summary: Returns the rotator's current position.\n      description: 'Current instantaneous Rotator position, in degrees.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/rotator/{device_number}/reverse':\n    get:\n      summary: Returns the rotator’s Reverse state.\n      description: Returns the rotator’s Reverse state.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the rotator’s Reverse state.\n      description: Sets the rotator’s Reverse state.\n      tags:\n        - Rotator Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Reverse:\n                  description: \u003e-\n                        True if the rotation and angular direction must be reversed to match the\n                        optical characteristcs\n                  type: boolean\n              required:\n                - Reverse\n  '/rotator/{device_number}/stepsize':\n    get:\n      summary: Returns the minimum StepSize\n      description: 'The minimum StepSize, in degrees.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/rotator/{device_number}/targetposition':\n    get:\n      summary: Returns the destination position angle.\n      description: The destination position angle for Move() and MoveAbsolute().\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/rotator/{device_number}/halt':\n    put:\n      summary: Immediatley stops rotator motion.\n      description: \u003e-\n        Immediately stop any Rotator motion due to a previous Move or\n        MoveAbsolute method call.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/rotator/{device_number}/move':\n    put:\n      summary: Moves the rotator to a new relative position.\n      description: \u003e-\n        Causes the rotator to move Position degrees relative to the current\n        Position value.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Position:\n                  description: Relative position to move in degrees from current Position.\n                  type: number\n                  format: double\n              required:\n                - Position\n  '/rotator/{device_number}/moveabsolute':\n    put:\n      summary: Moves the rotator to a new absolute position.\n      description: Causes the rotator to move the absolute position of Position degrees.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Position:\n                  description: Absolute position in degrees.\n                  type: number\n                  format: double\n              required:\n                - Position\n  '/rotator/{device_number}/movemechanical':\n    put:\n      summary: Moves the rotator to a new raw mechanical position.\n      description: Causes the rotator to move the mechanical position of Position degrees.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Position:\n                  description: Absolute position in degrees.\n                  type: number\n                  format: double\n              required:\n                - Position\n  '/rotator/{device_number}/sync':\n    put:\n      summary: Syncs the rotator to the specified position angle without moving it.\n      description: Causes the rotator to sync to the position of Position degrees.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Position:\n                  description: Absolute position in degrees.\n                  type: number\n                  format: double\n              required:\n                - Position\n  '/safetymonitor/{device_number}/issafe':\n    get:\n      summary: Indicates whether the monitored state is safe for use.\n      description: \u003e-\n        Indicates whether the monitored state is safe for use. True if the state\n        is safe, False if it is unsafe.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - SafetyMonitor Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/maxswitch':\n    get:\n      summary: The number of switch devices managed by this driver\n      description: \u003e-\n        Returns the number of switch devices managed by this driver. Devices are\n        numbered from 0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/canwrite':\n    get:\n      summary: Indicates whether the specified switch device can be written to\n      description: \u003e-\n        Reports if the specified switch device can be written to, default true.\n        This is false if the device cannot be written to, for example a limit\n        switch or a sensor.  Devices are numbered from 0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/getswitch':\n    get:\n      summary: Return the state of switch device id as a boolean\n      description: \u003e-\n        Return the state of switch device id as a boolean.  Devices are numbered\n        from 0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/getswitchdescription':\n    get:\n      summary: Gets the description of the specified switch device\n      description: \u003e-\n        Gets the description of the specified switch device. This is to allow a\n        fuller description of the device to be returned, for example for a tool\n        tip. Devices are numbered from 0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/getswitchname':\n    get:\n      summary: Gets the name of the specified switch device\n      description: \u003e-\n        Gets the name of the specified switch device. Devices are numbered from\n        0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/getswitchvalue':\n    get:\n      summary: Gets the value of the specified switch device as a double\n      description: \u003e-\n        Gets the value of the specified switch device as a double. Devices are\n        numbered from 0 to MaxSwitch - 1, The value of this switch is expected\n        to be between MinSwitchValue and MaxSwitchValue.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/minswitchvalue':\n    get:\n      summary: Gets the minimum value of the specified switch device as a double\n      description: \u003e-\n        Gets the minimum value of the specified switch device as a double.\n        Devices are numbered from 0 to MaxSwitch - 1.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/maxswitchvalue':\n    get:\n      summary: Gets the maximum value of the specified switch device as a double\n      description: \u003e-\n        Gets the maximum value of the specified switch device as a double.\n        Devices are numbered from 0 to MaxSwitch - 1.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/switch/{device_number}/setswitch':\n    put:\n      summary: 'Sets a switch controller device to the specified state, true or false'\n      description: 'Sets a switch controller device to the specified state, true or false.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Id:\n                  description: The device number (0 to MaxSwitch - 1)\n                  type: integer\n                  format: int32\n                State:\n                  description: The required control state (True or False)\n                  type: boolean\n              required:\n                - Id\n                - State\n  '/switch/{device_number}/setswitchname':\n    put:\n      summary: Sets a switch device name to the specified value\n      description: Sets a switch device name to the specified value.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Id:\n                  description: The device number (0 to MaxSwitch - 1)\n                  type: integer\n                Name:\n                  description: The name of the device\n                  type: string\n              required:\n                - Id\n                - Name\n  '/switch/{device_number}/setswitchvalue':\n    put:\n      summary: Sets a switch device value to the specified value\n      description: Sets a switch device value to the specified value.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Id:\n                  description: The device number (0 to MaxSwitch - 1)\n                  type: integer\n                  format: int32\n                Value:\n                      description: 'The value to be set, between MinSwitchValue and MaxSwitchValue'\n                  type: number\n              required:\n                - Id\n                - Value\n  '/switch/{device_number}/switchstep':\n    get:\n      summary: \u003e-\n        Returns the step size that this device supports (the difference between\n        successive values of the device).\n      description: \u003e-\n        Returns the step size that this device supports (the difference between\n        successive values of the device). Devices are numbered from 0 to\n        MaxSwitch - 1.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/alignmentmode':\n    get:\n      summary: Returns the current mount alignment mode\n      description: \u003e-\n        Returns the alignment mode of the mount (Alt/Az, Polar, German Polar). \n        The alignment mode is specified as an integer value from the\n        AlignmentModes Enum.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/altitude':\n    get:\n      summary: Returns the mount's altitude above the horizon.\n      description: \u003e-\n        The altitude above the local horizon of the mount's current position\n        (degrees, positive up)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/aperturearea':\n    get:\n      summary: Returns the telescope's aperture.\n      description: \u003e-\n        The area of the telescope's aperture, taking into account any\n        obstructions (square meters)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/aperturediameter':\n    get:\n      summary: Returns the telescope's effective aperture.\n      description: The telescope's effective aperture diameter (meters)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/athome':\n    get:\n      summary: Indicates whether the mount is at the home position.\n      description: \u003e-\n        True if the mount is stopped in the Home position. Set only following a\n        FindHome()  operation, and reset with any slew operation. This property\n        must be False if the telescope does not support homing.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/atpark':\n    get:\n      summary: Indicates whether the telescope is at the park position.\n      description: \u003e-\n        True if the telescope has been put into the parked state by the seee\n        Park()  method. Set False by calling the Unpark() method.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/azimuth':\n    get:\n      summary: Returns the mount's azimuth.\n      description: \u003e-\n        The azimuth at the local horizon of the mount's current position\n        (degrees, North-referenced, positive East/clockwise).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canfindhome':\n    get:\n      summary: Indicates whether the mount can find the home position.\n      description: \u003e-\n        True if this telescope is capable of programmed finding its home\n        position (FindHome()  method).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canpark':\n    get:\n      summary: Indicates whether the telescope can be parked.\n      description: True if this telescope is capable of programmed parking (Park() method)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canpulseguide':\n    get:\n      summary: Indicates whether the telescope can be pulse guided.\n      description: \u003e-\n        True if this telescope is capable of software-pulsed guiding (via the\n        PulseGuide(GuideDirections, Int32) method)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/cansetdeclinationrate':\n    get:\n      summary: Indicates whether the DeclinationRate property can be changed.\n      description: \u003e-\n        True if the DeclinationRate property can be changed to provide offset\n        tracking in the declination axis.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/cansetguiderates':\n    get:\n      summary: Indicates whether the DeclinationRate property can be changed.\n      description: \u003e-\n        True if the guide rate properties used for PulseGuide(GuideDirections,\n        Int32) can ba adjusted.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/cansetpark':\n    get:\n      summary: Indicates whether the telescope park position can be set.\n      description: \u003e-\n        True if this telescope is capable of programmed setting of its park\n        position (SetPark() method)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/cansetpierside':\n    get:\n      summary: Indicates whether the telescope SideOfPier can be set.\n      description: \u003e-\n        True if the SideOfPier property can be set, meaning that the mount can\n        be forced to flip.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/cansetrightascensionrate':\n    get:\n      summary: Indicates whether the RightAscensionRate property can be changed.\n      description: \u003e-\n        True if the RightAscensionRate property can be changed to provide offset\n        tracking in the right ascension axis. .\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/cansettracking':\n    get:\n      summary: Indicates whether the Tracking property can be changed.\n      description: \u003e-\n        True if the Tracking property can be changed, turning telescope sidereal\n        tracking on and off.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canslew':\n    get:\n      summary: Indicates whether the telescope can slew synchronously.\n      description: \u003e-\n        True if this telescope is capable of programmed slewing (synchronous or\n        asynchronous) to equatorial coordinates\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canslewaltaz':\n    get:\n      summary: \u003e-\n        Indicates whether the telescope can slew synchronously to AltAz\n        coordinates.\n      description: \u003e-\n        True if this telescope is capable of programmed slewing (synchronous or\n        asynchronous) to local horizontal coordinates\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canslewaltazasync':\n    get:\n      summary: \u003e-\n        Indicates whether the telescope can slew asynchronously to AltAz\n        coordinates.\n      description: \u003e-\n        True if this telescope is capable of programmed asynchronous slewing to\n        local horizontal coordinates\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canslewasync':\n    get:\n      summary: Indicates whether the telescope can slew asynchronously.\n      description: \u003e-\n        True if this telescope is capable of programmed asynchronous slewing to\n        equatorial coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/cansync':\n    get:\n      summary: Indicates whether the telescope can sync to equatorial coordinates.\n      description: \u003e-\n        True if this telescope is capable of programmed synching to equatorial\n        coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/cansyncaltaz':\n    get:\n      summary: \u003e-\n        Indicates whether the telescope can sync to local horizontal\n        coordinates.\n      description: \u003e-\n        True if this telescope is capable of programmed synching to local\n        horizontal coordinates\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canunpark':\n    get:\n      summary: Indicates whether the telescope can be unparked.\n      description: True if this telescope is capable of programmed unparking (UnPark() method)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/declination':\n    get:\n      summary: Returns the mount's declination.\n      description: \u003e-\n        The declination (degrees) of the mount's current equatorial\n        coordinates, in the coordinate system given by the EquatorialSystem\n        property. Reading the property will raise an error if the value is\n        unavailable.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/declinationrate':\n    get:\n      summary: Returns the telescope's declination tracking rate.\n      description: 'The declination tracking rate (arcseconds per SI second, default = 0.0). Please note that rightascensionrate units are arcseconds per sidereal second.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the telescope's declination tracking rate.\n      description: 'Sets the declination tracking rate (arcseconds per SI second). Please note that rightascensionrate units are arcseconds per sidereal second.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                DeclinationRate:\n                  description: Declination tracking rate (arcseconds per SI second). Please note that rightascensionrate units are arcseconds per sidereal second.\n                  type: number\n                  format: double\n              required:\n                - DeclinationRate\n  '/telescope/{device_number}/doesrefraction':\n    get:\n      summary: Indicates whether atmospheric refraction is applied to coordinates.\n      description: \u003e-\n        True if the telescope or driver applies atmospheric refraction to\n        coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Determines whether atmospheric refraction is applied to coordinates.\n      description: \u003e-\n        Causes the rotator to move Position degrees relative to the current\n        Position value.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                DoesRefraction:\n                  description: \u003e-\n                        Set True to make the telescope or driver applie atmospheric refraction to\n                        coordinates.\n                  type: boolean\n              required:\n                - DoesRefraction\n  '/telescope/{device_number}/equatorialsystem':\n    get:\n      summary: Returns the current equatorial coordinate system used by this telescope.\n      description: \u003e-\n        Returns the current equatorial coordinate system used by this telescope\n        (e.g. Topocentric or J2000).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/focallength':\n    get:\n      summary: Returns the telescope's focal length in meters.\n      description: The telescope's focal length in meters\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/guideratedeclination':\n    get:\n      summary: Returns the  current Declination rate offset for telescope guiding\n      description: \u003e-\n        The current Declination movement rate offset for telescope guiding\n        (degrees/sec)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the  current Declination rate offset for telescope guiding.\n      description: \u003e-\n        Sets the current Declination movement rate offset for telescope guiding\n        (degrees/sec).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                GuideRateDeclination:\n                  description: Declination movement rate offset degrees/sec).\n                  type: number\n                  format: double\n              required:\n                - GuideRateDeclination\n  '/telescope/{device_number}/guideraterightascension':\n    get:\n      summary: Returns the  current RightAscension rate offset for telescope guiding\n      description: \u003e-\n        The current RightAscension movement rate offset for telescope guiding\n        (degrees/sec)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the  current RightAscension rate offset for telescope guiding.\n      description: \u003e-\n        Sets the current RightAscension movement rate offset for telescope\n        guiding (degrees/sec).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                GuideRateRightAscension:\n                  description: RightAscension movement rate offset degrees/sec).\n                  type: number\n                  format: double\n              required:\n                - GuideRateRightAscension\n  '/telescope/{device_number}/ispulseguiding':\n    get:\n      summary: \u003e-\n        Indicates whether the telescope is currently executing a PulseGuide\n        command\n      description: \u003e-\n        True if a PulseGuide(GuideDirections, Int32) command is in progress,\n        False otherwise\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/rightascension':\n    get:\n      summary: Returns the mount's right ascension coordinate.\n      description: \u003e-\n        The right ascension (hours) of the mount's current equatorial\n        coordinates, in the coordinate system given by the EquatorialSystem\n        property\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/rightascensionrate':\n    get:\n      summary: Returns the telescope's right ascension tracking rate.\n      description: 'The right ascension tracking rate (arcseconds per sidereal second, default = 0.0). Please note that the declinationrate units are arcseconds per SI second.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the telescope's right ascension tracking rate.\n      description: 'Sets the right ascension tracking rate (arcseconds per sidereal second). Please note that the declinationrate units are arcseconds per SI second.'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                RightAscensionRate:\n                  description: Right ascension tracking rate (arcseconds per sideral second). Please note that the declinationrate units are arcseconds per SI second.\n                  type: number\n                  format: double\n              required:\n                - RightAscensionRate\n  '/telescope/{device_number}/sideofpier':\n    get:\n      summary: Returns the mount's pointing state.\n      description: \u003e-\n        Indicates the pointing state of the mount. 0 = pierEast, 1 = pierWest,\n        -1= pierUnknown\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the mount's pointing state.\n      description: 'Sets the pointing state of the mount. 0 = pierEast, 1 = pierWest'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                SideOfPier:\n                  description: New pointing state.\n                  type: integer\n                  format: int32\n              required:\n                - SideOfPier\n  '/telescope/{device_number}/siderealtime':\n    get:\n      summary: Returns the local apparent sidereal time.\n      description: \u003e-\n        The local apparent sidereal time from the telescope's internal clock\n        (hours, sidereal).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/siteelevation':\n    get:\n      summary: Returns the observing site's elevation above mean sea level.\n      description: \u003e-\n        The elevation above mean sea level (meters) of the site at which the\n        telescope is located.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the observing site's elevation above mean sea level.\n      description: \u003e-\n        Sets the elevation above mean sea level (metres) of the site at which\n        the telescope is located.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                SiteElevation:\n                  description: Elevation above mean sea level (metres).\n                  type: number\n                  format: double\n              required:\n                - SiteElevation\n  '/telescope/{device_number}/sitelatitude':\n    get:\n      summary: Returns the observing site's latitude.\n      description: \u003e-\n        The geodetic(map) latitude (degrees, positive North, WGS84) of the site\n        at which the telescope is located.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the observing site's latitude.\n      description: Sets the observing site's latitude (degrees).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                SiteLatitude:\n                  description: Site latitude (degrees)\n                  type: number\n                  format: double\n              required:\n                - SiteLatitude\n  '/telescope/{device_number}/sitelongitude':\n    get:\n      summary: Returns the observing site's longitude.\n      description: \u003e-\n        The longitude (degrees, positive East, WGS84) of the site at which the\n        telescope is located.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the observing site's longitude.\n      description: 'Sets the observing site''s longitude (degrees, positive East, WGS84).'\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                SiteLongitude:\n                  description: 'Site longitude (degrees, positive East, WGS84)'\n                  type: number\n                  format: double\n              required:\n                - SiteLongitude\n  '/telescope/{device_number}/slewing':\n    get:\n      summary: Indicates whether the telescope is currently slewing.\n      description: \u003e-\n        True if telescope is currently moving in response to one of the Slew\n        methods or the MoveAxis(TelescopeAxes, Double) method, False at all\n        other times.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/slewsettletime':\n    get:\n      summary: Returns the post-slew settling time.\n      description: Returns the post-slew settling time (sec.).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the post-slew settling time.\n      description: Sets the  post-slew settling time (integer sec.).\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                SlewSettleTime:\n                  description: Settling time (integer sec.).\n                  type: integer\n                  format: int32\n              required:\n                - SlewSettleTime\n  '/telescope/{device_number}/targetdeclination':\n    get:\n      summary: Returns the current target declination.\n      description: \u003e-\n        The declination (degrees, positive North) for the target of an\n        equatorial slew or sync operation\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the target declination of a slew or sync.\n      description: \u003e-\n        Sets the declination (degrees, positive North) for the target of an\n        equatorial slew or sync operation\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                TargetDeclination:\n                  description: Target declination(degrees)\n                  type: number\n                  format: double\n              required:\n                - TargetDeclination\n  '/telescope/{device_number}/targetrightascension':\n    get:\n      summary: Returns the current target right ascension.\n      description: \u003e-\n        The right ascension (hours) for the target of an equatorial slew or sync\n        operation\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DoubleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the target right ascension of a slew or sync.\n      description: \u003e-\n        Sets the right ascension (hours) for the target of an equatorial slew or\n        sync operation\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                TargetRightAscension:\n                  description: Target right ascension(hours)\n                  type: number\n                  format: double\n              required:\n                - TargetRightAscension\n  '/telescope/{device_number}/tracking':\n    get:\n      summary: Indicates whether the telescope is tracking.\n      description: Returns the state of the telescope's sidereal tracking drive.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Enables or disables telescope tracking.\n      description: Sets the state of the telescope's sidereal tracking drive.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Tracking:\n                  description: Tracking enabled / disabled\n                  type: boolean\n              required:\n                - Tracking\n  '/telescope/{device_number}/trackingrate':\n    get:\n      summary: Returns the current tracking rate.\n      description: The current tracking rate of the telescope's sidereal drive.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the mount's tracking rate.\n      description: \u003e-\n        Sets the tracking rate of the telescope's sidereal drive. 0 =\n        driveSidereal, 1 = driveLunar, 2 = driveSolar, 3 = driveKing\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                TrackingRate:\n                  description: New tracking rate\n                  type: integer\n                  format: int32\n              required:\n                - TrackingRate\n  '/telescope/{device_number}/trackingrates':\n    get:\n      summary: Returns a collection of supported DriveRates values.\n      description: \u003e-\n        Returns an array of supported DriveRates values that describe the\n        permissible values of the TrackingRate property for this telescope type.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/DriveRatesResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/utcdate':\n    get:\n      summary: Returns the UTC date/time of the telescope's internal clock.\n      description: \u003e-\n        The UTC date/time of the telescope's internal clock in ISO 8601 format\n        including fractional seconds. The general format (in Microsoft custom\n        date format style) is yyyy-MM-ddTHH:mm:ss.fffffffZ E.g.\n        2016-03-04T17:45:31.1234567Z or 2016-11-14T07:03:08.1234567Z Please note\n        the compulsary trailing Z indicating the 'Zulu', UTC time zone.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n    put:\n      summary: Sets the UTC date/time of the telescope's internal clock.\n      description: \u003e-\n        The UTC date/time of the telescope's internal clock in ISO 8601 format\n        including fractional seconds. The general format (in Microsoft custom\n        date format style) is yyyy-MM-ddTHH:mm:ss.fffffffZ E.g.\n        2016-03-04T17:45:31.1234567Z or 2016-11-14T07:03:08.1234567Z Please note\n        the compulsary trailing Z indicating the 'Zulu', UTC time zone.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                UTCDate:\n                  description: UTC date/time in ISO 8601 format.\n                  type: string\n              required:\n                - UTCDate\n  '/telescope/{device_number}/abortslew':\n    put:\n      summary: Immediatley stops a slew in progress.\n      description: Immediately Stops a slew in progress.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/telescope/{device_number}/axisrates':\n    get:\n      summary: \u003e-\n        Returns the rates at which the telescope may be moved about the\n        specified axis.\n      description: \u003e-\n        The rates at which the telescope may be moved about the specified axis\n        by the MoveAxis(TelescopeAxes, Double) method.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n        - $ref: '#/components/parameters/AxisQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/AxisRatesResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/canmoveaxis':\n    get:\n      summary: Indicates whether the telescope can move the requested axis.\n      description: True if this telescope can move the requested axis.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/AxisQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/BoolResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/destinationsideofpier':\n    get:\n      summary: \u003e-\n        Predicts the pointing state after a German equatorial mount slews to\n        given coordinates.\n      description: \u003e-\n        Predicts the pointing state that a German equatorial mount will be in if\n        it slews to the given coordinates. The  return value will be one of - 0\n        = pierEast, 1 = pierWest, -1 = pierUnknown\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n        - $ref: '#/components/parameters/RightAscensionQuery'\n        - $ref: '#/components/parameters/DeclinationQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/IntResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n  '/telescope/{device_number}/findhome':\n    put:\n      summary: Moves the mount to the \"home\" position.\n      description: Locates the telescope's \"home\" position (synchronous)\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/telescope/{device_number}/moveaxis':\n    put:\n      summary: Moves a telescope axis at the given rate.\n      description: Move the telescope in one axis at the given rate.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Axis:\n                  description: \u003e-\n                        The axis about which rate information is desired. 0 = axisPrimary, 1 =\n                        axisSecondary, 2 = axisTertiary.\n                  type: integer\n                  default: 0\n                  minimum: 0\n                  maximum: 2\n                Rate:\n                  description: The rate of motion (deg/sec) about the specified axis\n                  type: number\n                  default: 0\n              required:\n                - Axis\n                - Rate\n  '/telescope/{device_number}/park':\n    put:\n      summary: Park the mount\n      description: \u003e-\n        Move the telescope to its park position, stop all motion (or restrict to\n        a small safe range), and set AtPark to True. )\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/telescope/{device_number}/pulseguide':\n    put:\n      summary: Moves the scope in the given direction for the given time.\n      description: \u003e-\n        Moves the scope in the given direction for the given interval or time at\n        the rate given by the corresponding guide rate property\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AlpacaRequest'\n                - properties:\n                Direction:\n                  description: \u003e-\n                        The direction in which the guide-rate motion is to be made. 0 =\n                        guideNorth, 1 = guideSouth, 2 = guideEast, 3 = guideWest\n                  type: integer\n                  format: int32\n                  default: 0\n                Duration:\n                  description: The duration of the guide-rate motion (milliseconds)\n                  type: integer\n                  format: int32\n                  default: 5\n              required:\n                - Direction\n                - Duration\n  '/telescope/{device_number}/setpark':\n    put:\n      summary: Sets the telescope's park position\n      description: Sets the telescope's park position to be its current position.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/telescope/{device_number}/slewtoaltaz':\n    put:\n      summary: Synchronously slew to the given local horizontal coordinates.\n      description: \u003e-\n        Move the telescope to the given local horizontal coordinates, return\n        when slew is complete\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'\n  '/telescope/{device_number}/slewtoaltazasync':\n    put:\n      summary: Asynchronously slew to the given local horizontal coordinates.\n      description: \u003e-\n        Move the telescope to the given local horizontal coordinates, return\n        immediatley after the slew starts. The client can poll the Slewing\n        method to determine when the mount reaches the intended coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'\n  '/telescope/{device_number}/slewtocoordinates':\n    put:\n      summary: Synchronously slew to the given equatorial coordinates.\n      description: \u003e-\n        Move the telescope to the given equatorial coordinates, return when slew\n        is complete\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'\n  '/telescope/{device_number}/slewtocoordinatesasync':\n    put:\n      summary: Asynchronously slew to the given equatorial coordinates.\n      description: \u003e-\n        Move the telescope to the given equatorial coordinates, return\n        immediatley after the slew starts. The client can poll the Slewing\n        method to determine when the mount reaches the intended coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'\n  '/telescope/{device_number}/slewtotarget':\n    put:\n      summary: \u003e-\n        Synchronously slew to the TargetRightAscension and TargetDeclination\n        coordinates.\n      description: \u003e-\n        Move the telescope to the TargetRightAscension and TargetDeclination\n        equatorial coordinates, return when slew is complete\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/telescope/{device_number}/slewtotargetasync':\n    put:\n      summary: \u003e-\n        Asynchronously slew to the TargetRightAscension and TargetDeclination\n        coordinates.\n      description: \u003e-\n        Move the telescope to the TargetRightAscension and TargetDeclination\n        equatorial coordinates, return immediatley after the slew starts. The\n        client can poll the Slewing method to determine when the mount reaches\n        the intended coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/telescope/{device_number}/synctoaltaz':\n    put:\n      summary: Syncs to the given local horizontal coordinates.\n      description: \u003e-\n        Matches the scope's local horizontal coordinates to the given local\n        horizontal coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'\n  '/telescope/{device_number}/synctocoordinates':\n    put:\n      summary: Syncs to the given equatorial coordinates.\n      description: \u003e-\n        Matches the scope's equatorial coordinates to the given equatorial\n        coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'\n  '/telescope/{device_number}/synctotarget':\n    put:\n      summary: Syncs to the TargetRightAscension and TargetDeclination coordinates.\n      description: \u003e-\n        Matches the scope's equatorial coordinates to the TargetRightAscension\n        and TargetDeclination equatorial coordinates.\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\n  '/telescope/{device_number}/unpark':\n    put:\n      summary: Unparks the mount.\n      description: Takes telescope out of the Parked state. )\n      parameters:\n        - $ref: '#/components/parameters/device_number'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n      requestBody:\n        $ref: '#/components/requestBodies/putStandardClientParameters'\ncomponents:\n  parameters:\n    device_type:\n      name: device_type\n      description: One of the recognised ASCOM device types e.g. telescope (must be lower case)\n      in: path\n      required: true\n      schema:\n        type: string\n        default: telescope\n        pattern: '^[a-z]*$'\n    device_number:\n      name: device_number\n      description: Zero based device number as set on the server (0 to 4294967295)\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: uint32\n        default: 0\n        minimum: 0\n        maximum: 4294967295\n    ClientIDQuery:\n      name: ClientID\n      description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: uint32\n        default: 1\n        minimum: 0\n        maximum: 4294967295\n    ClientTransactionIDQuery:\n      name: ClientTransactionID\n      description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: uint32\n        default: 1234\n        minimum: 0\n        maximum: 4294967295\n    RightAscensionQuery:\n      name: RightAscension\n      description: Right Ascension coordinate (0.0 to 23.99999999 hours)\n      in: query\n      required: true\n      schema:\n        type: number\n        default: 3.0\n        minimum: 0.0\n        maximum: 23.9999999999\n    DeclinationQuery:\n      name: Declination\n      description: Declination coordinate (-90.0 to +90.0 degrees)\n      in: query\n      required: true\n      schema:\n        type: number\n        default: 0.0\n        minimum: -90.0\n        maximum: 90.0\n    AxisQuery:\n      name: Axis\n      description: \u003e-\n        The axis about which rate information is desired. 0 = axisPrimary, 1 =\n        axisSecondary, 2 = axisTertiary.\n      in: query\n      required: true\n      schema:\n        type: integer\n        format: int32\n        default: 0\n        minimum: 0\n        maximum: 2\n    SwitchNumberQuery:\n      name: Id\n      description: The device number (0 to MaxSwitch - 1)\n      in: query\n      required: true\n      schema:\n        type: integer\n        format: int32\n        default: 0\n        minimum: 0\n        maximum: 2147483647\n  requestBodies:\n    put_devicetype_Devicenumber_commandblind:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaRequest'\n              - properties:\n              Command:\n                description: The literal command string to be transmitted.\n                type: string\n              Raw:\n                description: \u003e-\n                      If set to true the string is transmitted 'as-is', if set to false then\n                      protocol framing characters may be added prior to transmission\n                type: string\n            required:\n              - Command\n              - Raw\n    putStandardClientParameters:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: '#/components/schemas/AlpacaRequest'\n    putDome_devicenumber_slewtoazimuth:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaRequest'\n              - properties:\n              Azimuth:\n                description: \u003e-\n                      Target dome azimuth (degrees, North zero and increasing clockwise. i.e.,\n                      90 East, 180 South, 270 West)\n                type: number\n            required:\n              - Azimuth\n    putTelescope_devicenumber_slewtoaltaz:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaRequest'\n              - properties:\n              Azimuth:\n                    description: 'Azimuth coordinate (degrees, North-referenced, positive East/clockwise)'\n                type: number\n              Altitude:\n                description: 'Altitude coordinate (degrees, positive up)'\n                type: number\n            required:\n              - Azimuth\n              - Altitude\n    putTelescope_devicenumber_slewtocoordinates:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaRequest'\n              - properties:\n              RightAscension:\n                description: Right Ascension coordinate (hours)\n                type: number\n              Declination:\n                description: Declination coordinate (degrees)\n                type: number\n            required:\n              - RightAscension\n              - Declination\n  responses:\n    MethodResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlpacaResponse'\n    ImageArrayResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n        Type:\n          type: integer\n          format: int32\n          description: \u003e-\n                      Must always be 2 representing a 32bit integer.\n                    minimum: 2\n                    maximum: 2\n                  Rank:\n                    type: integer\n                    format: int32\n                    description: \u003e-\n                      The array's rank, will be 2 (single plane image (monochrome)) or 3\n                      (multi-plane image).\n                    minimum: 2\n                    maximum: 3\n                  Value:\n                    type: array\n                    items:\n                      type: array\n                      items:\n                        type: integer\n                        format: int32\n                        description: Integer pixel values\n    ImageArrayVariantResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n                  Type:\n                    type: integer\n                    format: int32\n                    description: \u003e-\n                      0 = Unknown, 1 = Short(int16), 2 = Integer (int32), 3 = Double (Double\n                      precision real number).\n          minimum: 0\n          maximum: 3\n        Rank:\n          type: integer\n          format: int32\n                    description: \u003e-\n                      The array's rank, will be 2 (single plane image (monochrome)) or 3\n                      (multi-plane image).\n                    minimum: 2\n                    maximum: 3\n                  Value:\n                    type: array\n                    items:\n                      type: array\n                      items:\n                        type: number\n                        description: Integer or double pixel values\n    BoolResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n        Value:\n          type: boolean\n          description: True or False value\n    DoubleResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n        Value:\n          type: number\n          format: double\n          description: Returned double value\n    IntResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n        Value:\n          type: integer\n          format: int32\n          description: Returned integer value\n    IntArrayResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n        Value:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: Array of integer values.\n    StringResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n        Value:\n          type: string\n          description: String response from the device.\n    StringArrayResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n        Value:\n          type: array\n          items:\n            type: string\n          description: Array of string values.\n    AxisRatesResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n        Value:\n          description: Array of AxisRate objects\n          type: array\n          minItems: 0\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/AxisRate'\n    DriveRatesResponse:\n      description: Transaction complete or exception.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/AlpacaResponse'\n              - properties:\n                  Value:\n                    description: Array of DriveRate values\n                    type: array\n                    minItems: 1\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/DriveRate'\n    '400':\n      description: 'Method or parameter value error, check error message'\n      content:\n        text/plain:\n          schema:\n          type: string\n            description: Error message describing why the command cannot be processed\n    '500':\n      description: 'Server internal error, check error message'\n      content:\n        text/plain:\n          schema:\n            type: string\n            description: Error message describing why the command cannot be processed\n  schemas:\n    AxisRate:\n      description: Axis rate object\n      type: object\n      properties:\n        Maximum:\n          description: \u003e-\n            The maximum rate (degrees per second) This must always be a positive\n            number. It indicates the maximum rate in either direction about the\n            axis.\n          type: number\n        Minimum:\n          description: \u003e-\n            The minimum rate (degrees per second) This must always be a positive\n            number. It indicates the maximum rate in either direction about the\n            axis.\n          type: number\n      required:\n        - Maximum\n        - Minimum\n    AlpacaRequest:\n      type: object\n      properties:\n        ClientID:\n          description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.\n          type: integer\n          format: uint32\n        ClientTransactionID:\n          description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.\n          type: integer\n          format: uint32\n    AlpacaResponse:\n      type: object\n      properties:\n        ClientTransactionID:\n          type: integer\n          format: uint32\n          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.\n        ServerTransactionID:\n          type: integer\n          format: uint32\n          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: \u003e- \n            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).\n        ErrorMessage:\n          type: string\n          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.\n    DriveRate:\n      description: \u003e-\n        DriveRate object corresponding to one of the standard drive rates  \n          driveSidereal =  0  - Sidereal tracking rate (15.041 arcseconds per second).  \n          driveLunar = 1 - Lunar tracking rate (14.685 arcseconds per second).  \n          driveSolar = 2 - Solar tracking rate (15.0 arcseconds per second).  \n          driveKing = 3 - King tracking rate (15.0369 arcseconds per second).  \n      type: integer\n      format: int32\n      minimum: 0\n      maximum: 3\n",
			"canonicalURL": "/github.com/ASCOMInitiative/ASCOMRemote@f2f5102c2b5944c6c99c4201ecb2bdbfc4cde810/-/blob/Swagger/AlpacaDeviceAPI_v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ASCOMInitiative/ASCOMRemote/blob/f2f5102c2b5944c6c99c4201ecb2bdbfc4cde810/Swagger/AlpacaDeviceAPI_v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 107:16: did not find expected '-' indicator"
}