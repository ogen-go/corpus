{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chanzuckerberg/napari-hub"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "backend/api/templates/swagger.yml",
			"byteSize": 8610,
			"content": "openapi: 3.0.3\ninfo:\n  version: 0.1.0\n  description: napari hub api\n  title: Napari Hub API\n  contact:\n    email: team@napari-hub.org\n  license:\n    name: MIT License\n    url: https://github.com/chanzuckerberg/napari-hub/blob/main/LICENSE\nservers:\n  {{ local_url }}\n  - url: https://api.napari-hub.org\n  - url: https://api.staging.napari-hub.org\n    description: staging server that may have unreleased features and changes\ntags:\n  - name: plugins\n    description: List, query, and fetch information about plugins\n    externalDocs:\n      description: Find out more\n      url: https://napari.org/plugins/stable/index.html\n  - name: categories\n    description: list, query, and fetch napari hub categories information\n  - name: shields\n    description: Generate json with shields.io integration for plugin\n    externalDocs:\n      description: Find out more\n      url: https://shields.io/\n  - name: manifest\n    description: The manifest file corresponding to npe2 for plugin\npaths:\n  /plugins:\n    get:\n      summary: query all public plugins (excluding hidden and disabled plugins)\n      description: napari hub allows plugin author to specify visibility for their plugins, we only show public plugins on the hub home page, hidden plugins is available through plugin page while disabled plugin is not indexed at all.\n      tags:\n        - plugins\n      responses:\n        200:\n          description: The return json is a mapping between public plugin name and their latest version\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plugins'\n  /plugins/excluded:\n    get:\n      summary: query excluded plugins\n      description: this endpoint can be used to see what plugins that napari hub is currently not indexing and the reason for their exclusion, if you have question on a plugin's visibility, please reach out to the plugin author or team@napari-hub.org\n      tags:\n        - plugins\n      responses:\n        200:\n          description: The return json is a mapping between the excluded plugin name and exclusion status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExcludedPlugin'\n  /plugins/{name}:\n    get:\n      summary: query plugin info by pypi pacakge name\n      tags:\n        - plugins\n      parameters:\n      - name: name\n        in: path\n        description: name of plugin to query\n        required: true\n        schema:\n          type: string\n        example: napari-demo\n      responses:\n        200:\n          description: The return json object maps to plugin metadata, and is empty if the plugin name is invalid or disabled\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plugin'\n  /categories:\n    get:\n      summary: query all categories\n      tags:\n        - categories\n      description: This endpoint returns latest version of napari hub category label mapping\n      responses:\n        200:\n          description: The return json objects maps recognized category name to napari hub label, including their hierarchy and dimension\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Categories'\n  /categories/{category}:\n    get:\n      summary: query category info by edam term\n      description: this endpoint can be used to map edam terms (case sensitive) to napari hub label\n      tags:\n        - categories\n      parameters:\n        - name: category\n          in: path\n          description: name of category to query\n          required: true\n          schema:\n            type: string\n          example: Image segmentation\n      responses:\n        200:\n          description: The returned json is a list of mappings from the given name to napari hub labels\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n  /shields/{name}:\n    get:\n      summary: Get shield by pypi package name\n      tags:\n        - shields\n      description: The return json can be used in shields.io to generate a badge to display in plugin page\n      parameters:\n      - name: name\n        in: path\n        description: name of plugin to create badge\n        required: true\n        schema:\n          type: string\n        example: napari-demo\n      responses:\n        200:\n          description: The return json can be used with shields.io endpoint to generate a napari hub shield for display, if the package is not a valid napari plugin, it would dispaly 'plugin not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Shield'\n  /manifest/{name}:\n    get:\n      summary: Get the manifest file for plugin. Schema here https://napari.org/plugins/manifest.html\n      tags:\n        - manifest\n      parameters:\n      - name: name\n        in: path\n        description: name of plugin to query\n        required: true\n        schema:\n          type: string\n        example: napari-demo\n      responses:\n        200:\n          description: The return yaml object is the plugin's manifest.\n          content:\n            application/yaml:\n              schema:\n                $ref: '#/components/schemas/Manifest'\n        404:\n          description: Either the plugin name is incorrect or the manifest was not found. The latter could happen if the installation failed or if the plugin does not implement npe2 yet.\n        503:\n          description: The manifest is temporarily unavailable. Check back in 5 minutes.\ncomponents:\n  schemas:\n    Categories:\n      type: object\n      properties:\n        \u003cmapping\u003e:\n          $ref: '#/components/schemas/Category'\n    Category:\n      type: array\n      items:\n        type: object\n        properties:\n          dimension:\n            type: string\n          hierarchy:\n            type: array\n            items:\n              type: string\n          label:\n            type: string\n    Plugins:\n      type: object\n      properties:\n        name:\n          type: string\n    Plugin:\n      type: object\n      properties:\n        authors:\n          type: array\n          items:\n            type: object\n            required:\n            - name\n            - email\n            properties:\n              name:\n                type: string\n              email:\n                type: string\n                format: email\n        citations:\n          type: object\n          required:\n          - APA\n          - BibTex\n          - RIS\n          - citation\n          properties:\n            APA:\n              type: string\n            BibTex:\n              type: string\n            RIS:\n              type: string\n            citation:\n              type: string\n        code_repository:\n          type: string\n        description:\n          type: string\n        description_content_type:\n          type: string\n        description_text:\n          type: string\n        development_status:\n          type: array\n          items:\n            type: string\n        first_released:\n          type: string\n        license:\n          type: string\n        name:\n          type: string\n        operating_system:\n          type: array\n          items:\n            type: string\n        project_site:\n          type: string\n        python_version:\n          type: string\n        release_date:\n          type: string\n        report_issues:\n          type: string\n        requirements:\n          type: array\n          items:\n            type: string\n        summary:\n          type: string\n        support:\n          type: string\n        twitter:\n          type: string\n        version:\n          type: string\n        visibility:\n          type: string\n    ExcludedPlugin:\n      type: object\n      properties:\n        \u003cname\u003e:\n          type: string\n    Shield:\n      type: object\n      required:\n      - name\n      - version\n      properties:\n        color:\n          type: string\n        label:\n          type: string\n        logoSvg:\n          type: string\n        message:\n          type: string\n        schemaVersion:\n          type: integer\n        style:\n          type: string\n    Manifest:\n      type: object\n      properties:\n        name:\n          type: string\n        display_name:\n          type: string\n        process_count:\n          type: integer\n        schema_version:\n          type: integer\n        on_activate:\n          type: string\n        on_deactivate:\n          type: string\n        contributions:\n          type: array\n          items:\n            type: string\n",
			"canonicalURL": "/github.com/chanzuckerberg/napari-hub@3e714bd1b264c69763a580e7d6a6c00a63f113ac/-/blob/backend/api/templates/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/chanzuckerberg/napari-hub/blob/3e714bd1b264c69763a580e7d6a6c00a63f113ac/backend/api/templates/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 12: did not find expected key"
}