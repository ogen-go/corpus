{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lujian213/SmartSimulator"
		},
		"file": {
			"name": "servicemanagement.yaml",
			"size": 0,
			"path": "scripts/servicemanagement/servicemanagement.yaml",
			"byteSize": 9352,
			"content": "openapi: 3.0.0\r\n# Added by API Auto Mocking Plugin\r\nservers:\r\n  - description: Smart Simulator Service Manager\r\n    url: http://apaccnshlzw0328:8200/servicemanagement/v1\r\ninfo:\r\n  description: |\r\n    Smart Simulator Service Management API.  You can find\r\n    out more about Smart Simulator\r\n    [https://github.com/lujian213/SmartSimulator](https://github.com/lujian213/SmartSimulator).\r\n  version: \"1.0.1\"\r\n  title: Smart Simulator Service Manager\r\n  termsOfService: 'http://swagger.io/terms/'\r\n  contact:\r\n    email: lujian213@msn.com\r\n  license:\r\n    name: Apache 2.0\r\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\r\ntags:\r\n  - name: service\r\n    description: Everything about service\r\npaths:\r\n  /simulators:\r\n    get:\r\n      tags:\r\n        - service\r\n      summary: Get all simulators\r\n      operationId: getAllSimulatorStatus\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/SimulatorStatus'\r\n  /{simulatorName}/info:\r\n    get:\r\n      tags:\r\n        - service\r\n      summary: get simulator information\r\n      description: get simulator detailed information by its name\r\n      operationId: getSimulatorInfo\r\n      parameters:\r\n        - name: simulatorName\r\n          in: path\r\n          description: simulator name\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/SimulatorDetail'\r\n        '500':\r\n          description: operation failure\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n  '/{simulatorName}/rawinfo':\r\n    get:\r\n      tags:\r\n        - service\r\n      summary: get simulator raw information\r\n      description: get simulator detailed raw information by its name\r\n      operationId: getSimulatorRawInfo\r\n      parameters:\r\n        - name: simulatorName\r\n          in: path\r\n          description: simulator name\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/SimulatorDetail'\r\n        '500':\r\n          description: operation failure\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n  '/{simulatorName}/start':\r\n    get:\r\n      tags:\r\n        - service\r\n      summary: start simulator\r\n      description: start simulator by its name\r\n      operationId: startSimulator\r\n      parameters:\r\n        - name: simulatorName\r\n          in: path\r\n          description: simulator name\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n        '500':\r\n          description: operation failure\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n  '/{simulatorName}/stop':\r\n    get:\r\n      tags:\r\n        - service\r\n      summary: stop simulator\r\n      description: stop simulator by its name\r\n      operationId: stopSimulator\r\n      parameters:\r\n        - name: simulatorName\r\n          in: path\r\n          description: simulator name\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n        '500':\r\n          description: operation failure\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n  /refresh:\r\n    get:\r\n      tags:\r\n        - service\r\n      summary: refresh all non-started simulator configuration\r\n      operationId: refresh\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n  '/{simulatorName}/restart':\r\n    get:\r\n      tags:\r\n        - service\r\n      summary: restart simulator\r\n      description: restart simulator by its name\r\n      operationId: restartSimulator\r\n      parameters:\r\n        - name: simulatorName\r\n          in: path\r\n          description: simulator name\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n        '500':\r\n          description: operation failure\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n  '/{simulatorName}/structure':\r\n    get:\r\n      tags:\r\n        - service\r\n      summary: get simulator folder structure\r\n      description: get simulator folder structure by its name\r\n      operationId: getSimulatorStructure\r\n      parameters:\r\n        - name: simulatorName\r\n          in: path\r\n          description: simulator name\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/SimulatorFolder'\r\n        '500':\r\n          description: operation failure\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n  '/evaluate':\r\n    post:\r\n      tags:\r\n        - service\r\n      summary: evaluate the given simulator folder structure\r\n      description: evaluate by the given simulator folder structure\r\n      operationId: evaluateSimulatorStructure\r\n\r\n      requestBody:\r\n        description: Simulator folder structure\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/SimulatorFolder'\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/SimulatorDetail'\r\n        '500':\r\n          description: operation failure\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: stringcomponents:\r\n  schemas:\r\n    SimulatorStatus:\r\n      type: object\r\n      required:\r\n        - name\r\n        - type\r\n      properties:\r\n        name:\r\n          type: string\r\n          example: SimpleEcho\r\n        type:\r\n          type: string\r\n          example: http/https\r\n        runningURL:\r\n          type: string\r\n        status:\r\n          type: string\r\n          description: simulator status\r\n          enum:\r\n            - running\r\n            - stopped\r\n        startTime:\r\n          type: string\r\n          format: yyyy-MM-dd HH:mm:ss\r\n          example: 2019-05-09 01:26:46\r\n        duration:\r\n          type: integer\r\n          format: int32\r\n    SimulatorDetail:\r\n      type: object\r\n      required:\r\n        - name\r\n      properties:\r\n        name:\r\n          type: string\r\n          example: SimpleEcho\r\n        type:\r\n          type: string\r\n          example: http/https\r\n        scriptInfo:\r\n          $ref: '#/components/schemas/ScriptInfo'\r\n    ScriptInfo:\r\n      type: object\r\n      required:\r\n        - name\r\n      properties:\r\n        name:\r\n          type: string\r\n          example: root\r\n        templatePairs:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/TemplatePairInfo'\r\n        scriptInfo:\r\n          $ref: '#/components/schemas/ScriptInfo'\r\n    TemplatePairInfo:\r\n      type: object\r\n      properties:\r\n        requestTemplate:\r\n          $ref: '#/components/schemas/RequestTemplateInfo'\r\n        responseTemplates:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/ResponseTemplateInfo'\r\n    RequestTemplateInfo:\r\n      type: object\r\n      properties:\r\n        topLine:\r\n          type: string\r\n        headers:\r\n          type: array\r\n          items:\r\n            type: integer\r\n        body:\r\n          type: string\r\n    ResponseTemplateInfo:\r\n      type: object\r\n      properties:\r\n        code:\r\n          type: integer\r\n        headers:\r\n          type: array\r\n          items:\r\n            type: integer\r\n        body:\r\n          type: string\r\n    SimulatorFolder:\r\n      type: object\r\n      required:\r\n        - name\r\n      properties:\r\n        name:\r\n          type: string\r\n        subFolders:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/SimulatorFolder'\r\n        files:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/SimulatorFile'\r\n    SimulatorFile:\r\n      type: object\r\n      required:\r\n        - name\r\n      properties:\r\n        name:\r\n          type: string\r\n        content:\r\n          type: string\r\n",
			"canonicalURL": "/github.com/lujian213/SmartSimulator@76bff8a50823cf729b1c0d8f0a39fde0f5f45c17/-/blob/scripts/servicemanagement/servicemanagement.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/lujian213/SmartSimulator/blob/76bff8a50823cf729b1c0d8f0a39fde0f5f45c17/scripts/servicemanagement/servicemanagement.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 240:38: mapping values are not allowed in this context"
}