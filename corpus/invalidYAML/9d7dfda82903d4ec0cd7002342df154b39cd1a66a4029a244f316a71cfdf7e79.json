{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws-samples/api-gateway-dynamic-publish"
		},
		"file": {
			"name": "api_definition.yaml",
			"size": 0,
			"path": "stacks/resources/api_creation/api_definition.yaml",
			"byteSize": 4772,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: @@API_NAME@@\n  version: \"v1.0\"\nx-amazon-apigateway-request-validators:\n  all:\n    validateRequestBody: true\n    validateRequestParameters: true\n  params-only:\n    validateRequestBody: false\n    validateRequestParameters: true\nx-amazon-apigateway-request-validator: all\npaths:\n  /ping:\n    get:\n      summary: \"Simulates an API Ping\"\n      description: |\n        ## Simulates an API Ping\n\n        The purpose of this endpoint is to simulate a Ping request and respond with a Pong answer.\n        \n        ### Sample invocation\n        \n        ```bash\n        #!/bin/bash\n\n        # set the desired AWS region below\n        AWS_REGION=\"us-east-1\"\n\n        STACK_NAME=\"ApiGatewayDynamicPublish\"\n\n        # Get the API Endpoint\n        API_ENDPOINT_URL_EXPORT_NAME=\"api-gateway-dynamic-publish-url\"\n        API_ENDPOINT_URL=$(aws cloudformation --region ${AWS_REGION} describe-stacks --stack-name ${STACK_NAME} --query \"Stacks[0].Outputs[?ExportName=='${API_ENDPOINT_URL_EXPORT_NAME}'].OutputValue\" --output text)\n        API_GATEWAY_URL=\"${API_ENDPOINT_URL}\"\n\n        ################################################\n        # TEST Ping API\n        ################################################\n\n        echo \"Testing GET ${API_GATEWAY_URL}/ping\"\n        API_RESPONSE=$(curl -sX GET ${API_GATEWAY_URL}/ping)\n\n        echo \"\"\n        echo ${API_RESPONSE}\n        echo \"\"\n        ```\n        \n        ### Sample response\n        \n        ```json\n        {\n          \"ping\": \"Pong\"\n        }\n        ```\n      operationId: \"pingIntegration\"\n      x-amazon-apigateway-request-validator: all\n      responses:\n        200:\n          description: \"OK\"\n          content: \n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PingResponse\"\n        500:\n          description: \"Internal Server Error\"\n      x-amazon-apigateway-integration:\n        uri: @@API_INTEGRATION_PING_LAMBDA@@\n        payloadFormatVersion: \"2.0\"\n        httpMethod: \"POST\"\n        type: \"aws_proxy\"\n        connectionType: \"INTERNET\"\n  /greeting:\n    get:\n      summary: \"Get a greeting message\"\n      description: |\n        ## Get a greeting message\n\n        The purpose of this endpoint is send a greeting string and receive a greeting message.\n        \n        ### Sample invocation\n        \n        ```bash\n        #!/bin/bash\n\n        # set the desired AWS region below\n        AWS_REGION=\"us-east-1\"\n\n        # set the greeting you would like to send, ensure it is a single word with no spaces\n        GREETING=\"world\"\n\n        STACK_NAME=\"ApiGatewayDynamicPublish\"\n\n        # Get the API Endpoint\n        API_ENDPOINT_URL_EXPORT_NAME=\"api-gateway-dynamic-publish-url\"\n        API_ENDPOINT_URL=$(aws cloudformation --region ${AWS_REGION} describe-stacks --stack-name ${STACK_NAME} --query \"Stacks[0].Outputs[?ExportName=='${API_ENDPOINT_URL_EXPORT_NAME}'].OutputValue\" --output text)\n        API_GATEWAY_URL=\"${API_ENDPOINT_URL}\"\n\n        ################################################\n        # TEST Greetings API\n        ################################################\n\n        echo \"Testing GET ${API_GATEWAY_URL}/greetings?greeting=${GREETING}\"\n        API_RESPONSE=$(curl -sX GET ${API_GATEWAY_URL}/greetings?greeting=${GREETING})\n\n        echo \"\"\n        echo ${API_RESPONSE} | jq .\n        echo \"\"\n        ```\n        \n        ### Sample response\n        \n        ```json\n        {\n          \"greeting\": \"Hello World\"\n        }\n        ```\n      operationId: \"greetingIntegration\"\n      x-amazon-apigateway-request-validator: all\n      parameters:\n      - in: query\n        name: greeting\n        schema:\n          type: string\n        description: |\n            A greeting string which the API will combine to form a greeting message\n      responses:\n        200:\n          description: \"OK\"\n          content: \n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/GreetingResponse\"\n        500:\n          description: \"Internal Server Error\"\n      x-amazon-apigateway-integration:\n        uri: @@API_INTEGRATION_GREETING_LAMBDA@@\n        payloadFormatVersion: \"2.0\"\n        httpMethod: \"POST\"\n        type: \"aws_proxy\"\n        connectionType: \"INTERNET\"\ncomponents:\n  schemas:\n    PingResponse:\n      type: object\n      properties:\n        ping:\n          type: string\n          description: |\n            Response to the ping request.\n    GreetingResponse:\n      type: object\n      properties:\n        greeting:\n          type: string\n          description: |\n            The greeting response which concatenates the incoming greeting to form a greeting message.",
			"canonicalURL": "/github.com/aws-samples/api-gateway-dynamic-publish@a176f240f2de5a4c6aa3a7cc4b490788e3fce6a6/-/blob/stacks/resources/api_creation/api_definition.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aws-samples/api-gateway-dynamic-publish/blob/a176f240f2de5a4c6aa3a7cc4b490788e3fce6a6/stacks/resources/api_creation/api_definition.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidYAML: yaml: line 3: found character that cannot start any token"
}