{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/algolia/api-clients-automation"
		},
		"file": {
			"name": "query-suggestions.yml",
			"size": 0,
			"path": "specs/bundled/query-suggestions.yml",
			"byteSize": 20330,
			"content": "openapi: 3.0.2\ninfo:\n  title: Query Suggestions API\n  description: API powering the Query Suggestions feature of Algolia.\n  version: 1.0.0\ncomponents:\n  securitySchemes:\n    appId:\n      type: apiKey\n      in: header\n      name: X-Algolia-Application-Id\n    apiKey:\n      type: apiKey\n      in: header\n      name: X-Algolia-API-Key\n  parameters:\n    PathInPath:\n      name: path\n      in: path\n      description: \u003e-\n        The path of the API endpoint to target, anything after the /1 needs to\n        be specified.\n      required: true\n      schema:\n        type: string\n        example: /keys\n    Parameters:\n      name: parameters\n      in: query\n      description: Query parameters to be applied to the current query.\n      schema:\n        type: object\n        additionalProperties: true\n    IndexName:\n      name: indexName\n      in: path\n      description: The index in which to perform the request.\n      required: true\n      schema:\n        type: string\n        example: myIndexName\n  schemas:\n    ErrorBase:\n      description: Error.\n      type: object\n      additionalProperties: true\n      properties:\n        message:\n          type: string\n          example: Invalid Application-Id or API-Key\n    indexName:\n      type: string\n      description: Source index name.\n    analyticsTags:\n      type: array\n      items:\n        type: string\n      default: []\n      description: List of analytics tags to filter the popular searches per tag.\n    facets:\n      type: array\n      items:\n        type: object\n      default: []\n      description: List of facets to define as categories for the query suggestions.\n    minHits:\n      type: integer\n      description: \u003e-\n        Minimum number of hits (e.g., matching records in the source index) to\n        generate a suggestions.\n    minLetters:\n      type: integer\n      description: Minimum number of required letters for a suggestion to remain.\n    generate:\n      type: array\n      items:\n        type: array\n        items:\n          type: string\n      default: []\n      description: \u003e-\n        List of facet attributes used to generate Query Suggestions. The\n        resulting suggestions are every combination of the facets in the nested\n        list (e.g., (facetA and facetB) and facetC).\n      example: '[[facetA, facetB], [facetC]]'\n    SourceIndexExternal:\n      type: object\n      additionalProperties: false\n      required:\n        - query\n        - count\n      properties:\n        query:\n          type: string\n          description: The suggestion you would like to add.\n        count:\n          type: integer\n          description: The measure of the suggestion relative popularity.\n    external:\n      type: array\n      items:\n        $ref: '#/components/schemas/SourceIndexExternal'\n      description: List of external indices to use to generate custom Query Suggestions.\n    SourceIndexWithReplicas:\n      type: object\n      additionalProperties: false\n      description: Source index with replicas used to generate a Query Suggestions index.\n      required:\n        - replicas\n        - indexName\n        - analyticsTags\n        - facets\n        - minHits\n        - minLetters\n        - generate\n        - external\n      properties:\n        replicas:\n          type: boolean\n          description: true if the Query Suggestions index is a replicas.\n        indexName:\n          $ref: '#/components/schemas/indexName'\n        analyticsTags:\n          $ref: '#/components/schemas/analyticsTags'\n        facets:\n          $ref: '#/components/schemas/facets'\n        minHits:\n          $ref: '#/components/schemas/minHits'\n        minLetters:\n          $ref: '#/components/schemas/minLetters'\n        generate:\n          $ref: '#/components/schemas/generate'\n        external:\n          $ref: '#/components/schemas/external'\n    SourceIndicesWithReplicas:\n      type: array\n      description: List of source indices used to generate a Query Suggestions index.\n      items:\n        $ref: '#/components/schemas/SourceIndexWithReplicas'\n    QuerySuggestionsIndex:\n      type: object\n      additionalProperties: false\n      required:\n        - indexName\n        - sourceIndices\n        - languages\n        - exclude\n      properties:\n        indexName:\n          type: string\n          description: Index name to target.\n        sourceIndices:\n          $ref: '#/components/schemas/SourceIndicesWithReplicas'\n        languages:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            De-duplicate singular and plural suggestions. For example, let's say\n            your index contains English content, and that two suggestions “shoe”\n            and “shoes” end up in your Query Suggestions index. If the English\n            language is configured, only the most popular of those two\n            suggestions would remain.\n        exclude:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            List of words and patterns to exclude from the Query Suggestions\n            index.\n    SourceIndex:\n      type: object\n      additionalProperties: false\n      required:\n        - indexName\n      properties:\n        indexName:\n          $ref: '#/components/schemas/indexName'\n        analyticsTags:\n          $ref: '#/components/schemas/analyticsTags'\n        facets:\n          $ref: '#/components/schemas/facets'\n        minHits:\n          $ref: '#/components/schemas/minHits'\n        minLetters:\n          $ref: '#/components/schemas/minLetters'\n        generate:\n          $ref: '#/components/schemas/generate'\n        external:\n          $ref: '#/components/schemas/external'\n    SourceIndices:\n      type: array\n      items:\n        $ref: '#/components/schemas/SourceIndex'\n      description: List of source indices used to generate a Query Suggestions index.\n    QuerySuggestionsIndexParam:\n      type: object\n      additionalProperties: false\n      required:\n        - sourceIndices\n      properties:\n        sourceIndices:\n          $ref: '#/components/schemas/SourceIndices'\n        languages:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            De-duplicate singular and plural suggestions. For example, let's say\n            your index contains English content, and that two suggestions “shoe”\n            and “shoes” end up in your Query Suggestions index. If the English\n            language is configured, only the most popular of those two\n            suggestions would remain.\n        exclude:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            List of words and patterns to exclude from the Query Suggestions\n            index.\n    QuerySuggestionsIndexWithIndexParam:\n      allOf:\n        - $ref: '#/components/schemas/QuerySuggestionsIndexParam'\n        - type: object\n          title: IndexName\n          additionalProperties: false\n          required:\n            - indexName\n          properties:\n            indexName:\n              type: string\n              description: Index name to target.\n    logLevel:\n      type: string\n      enum:\n        - INFO\n        - SKIP\n        - ERROR\n      description: type of the record, can be one of three values (INFO, SKIP or ERROR).\n  responses:\n    BadRequest:\n      description: Bad request or request arguments.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    FeatureNotEnabled:\n      description: This feature is not enabled on your Algolia account.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    MethodNotAllowed:\n      description: Method not allowed with this API key.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    IndexNotFound:\n      description: Index not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    StatusUnprocessableEntity:\n      description: Status unprocessable entity.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    InternalError:\n      description: Internal error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    Success:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            title: SuccessResponse\n            additionalProperties: false\n            required:\n              - status\n              - message\n            properties:\n              status:\n                type: integer\n                example: 200\n                description: The status code.\n              message:\n                type: string\n                example: Success\n                description: Message of the response.\nservers:\n  - url: https://query-suggestions.{region}.algolia.com\n    variables:\n      region:\n        enum:\n          - us\n          - eu\n        default: us\nsecurity:\n  - appId: []\n    apiKey: []\ntags:\n  - name: advanced\n    x-displayName: Advanced\n    description: Advanced operations.\n  - name: configurations\n    x-displayName: Configurations\n    description: Manage Query Suggestions configurations.\nx-tagGroups:\n  - name: General\n    tags:\n      - configurations\n  - name: Others\n    tags:\n      - advanced\npaths:\n  /1{path}:\n    get:\n      operationId: get\n      summary: Send requests to the Algolia REST API.\n      description: This method allow you to send requests to the Algolia REST API.\n      parameters:\n        - $ref: '#/components/parameters/PathInPath'\n        - $ref: '#/components/parameters/Parameters'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '402':\n          $ref: '#/components/responses/FeatureNotEnabled'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n      tags:\n        - query-suggestions\n    post:\n      operationId: post\n      requestBody:\n        description: The parameters to send with the custom request.\n        content:\n          application/json:\n            schema:\n              type: object\n      summary: Send requests to the Algolia REST API.\n      description: This method allow you to send requests to the Algolia REST API.\n      parameters:\n        - $ref: '#/components/parameters/PathInPath'\n        - $ref: '#/components/parameters/Parameters'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '402':\n          $ref: '#/components/responses/FeatureNotEnabled'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n      tags:\n        - query-suggestions\n    put:\n      operationId: put\n      requestBody:\n        description: The parameters to send with the custom request.\n        content:\n          application/json:\n            schema:\n              type: object\n      summary: Send requests to the Algolia REST API.\n      description: This method allow you to send requests to the Algolia REST API.\n      parameters:\n        - $ref: '#/components/parameters/PathInPath'\n        - $ref: '#/components/parameters/Parameters'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '402':\n          $ref: '#/components/responses/FeatureNotEnabled'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n      tags:\n        - query-suggestions\n    delete:\n      operationId: del\n      summary: Send requests to the Algolia REST API.\n      description: This method allow you to send requests to the Algolia REST API.\n      parameters:\n        - $ref: '#/components/parameters/PathInPath'\n        - $ref: '#/components/parameters/Parameters'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '402':\n          $ref: '#/components/responses/FeatureNotEnabled'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n      tags:\n        - query-suggestions\n  /1/configs:\n    get:\n      tags:\n        - query-suggestions\n      operationId: getAllConfigs\n      summary: List configurations.\n      description: \u003e\n        Get all the configurations of Query Suggestions.\n\n        For each index, you get a block of JSON with a list of its configuration\n        settings.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/QuerySuggestionsIndex'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '422':\n          $ref: '#/components/responses/StatusUnprocessableEntity'\n        '500':\n          $ref: '#/components/responses/InternalError'\n    post:\n      tags:\n        - query-suggestions\n      operationId: createConfig\n      summary: Create a configuration.\n      description: \u003e-\n        Create a configuration of a Query Suggestions index. There's a limit of\n        100 configurations per application.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QuerySuggestionsIndexWithIndexParam'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '422':\n          $ref: '#/components/responses/StatusUnprocessableEntity'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /1/configs/{indexName}:\n    get:\n      tags:\n        - query-suggestions\n      operationId: getConfig\n      summary: Get a single configuration.\n      description: Get the configuration of a single Query Suggestions index.\n      parameters:\n        - $ref: '#/components/parameters/IndexName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QuerySuggestionsIndex'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n        '500':\n          $ref: '#/components/responses/InternalError'\n    put:\n      tags:\n        - query-suggestions\n      operationId: updateConfig\n      summary: Update a configuration.\n      description: Update the configuration of a Query Suggestions index.\n      parameters:\n        - $ref: '#/components/parameters/IndexName'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QuerySuggestionsIndexParam'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalError'\n    delete:\n      tags:\n        - query-suggestions\n      operationId: deleteConfig\n      summary: Delete a configuration.\n      description: \u003e\n        Delete a configuration of a Query Suggestion's index.\n\n        By deleting a configuration, you stop all updates to the underlying\n        query suggestion index.\n\n        Note that when doing this, the underlying index does not change -\n        existing suggestions remain untouched.\n      parameters:\n        - $ref: '#/components/parameters/IndexName'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /1/configs/{indexName}/status:\n    get:\n      tags:\n        - query-suggestions\n      operationId: getConfigStatus\n      summary: Get configuration status.\n      description: \u003e\n        Get the status of a Query Suggestion's index.\n\n        The status includes whether the Query Suggestions index is currently in\n        the process of being built, and the last build time.\n      parameters:\n        - $ref: '#/components/parameters/IndexName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                title: Status\n                additionalProperties: false\n                required:\n                  - indexName\n                  - isRunning\n                  - lastBuiltAt\n                properties:\n                  indexName:\n                    type: string\n                    description: The targeted index name.\n                  isRunning:\n                    type: boolean\n                    description: true if the Query Suggestions index is running.\n                  lastBuiltAt:\n                    type: string\n                    format: data-time\n                    description: Date and time of the last build.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /1/logs/{indexName}:\n    get:\n      tags:\n        - query-suggestions\n      operationId: getLogFile\n      summary: Get a log file.\n      description: Get the log file of the last build of a single Query Suggestion index.\n      parameters:\n        - $ref: '#/components/parameters/IndexName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  title: LogFile\n                  additionalProperties: false\n                  required:\n                    - timestamp\n                    - level\n                    - message\n                    - contextLevel\n                  properties:\n                    timestamp:\n                      type: string\n                      description: date and time of creation of the record.\n                    level:\n                      $ref: '#/components/schemas/logLevel'\n                    message:\n                      type: string\n                      description: detailed description of what happened.\n                    contextLevel:\n                      type: integer\n                      description: \u003e-\n                        indicates the hierarchy of the records. For example, a\n                        record with contextLevel=1 belongs to a preceding record\n                        with contextLevel=0.\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n        '500':\n          $ref: '#/components/responses/InternalError'\n",
			"canonicalURL": "/github.com/algolia/api-clients-automation@e53e145f69089dedcda5d63066e9cdae23142044/-/blob/specs/bundled/query-suggestions.yml",
			"externalURLs": [
				{
					"url": "https://github.com/algolia/api-clients-automation/blob/e53e145f69089dedcda5d63066e9cdae23142044/specs/bundled/query-suggestions.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "template: defaults: execute template \"defaults\" for \"oas_defaults_gen.go\": template: set.tmpl:26:4: executing \"defaults/set\" at \u003cerrorf \"unsupported %#v: %s\" $.Default.Value $t\u003e: error calling errorf: unsupported []interface {}(nil): pointer(*AnalyticsTags)",
	"NotImplemented": [
		"allOf additionalProperties merging",
		"object with additionalProperties"
	]
}