{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/theovassiliou/doctrans"
		},
		"file": {
			"name": "dtaservice.swagger.json",
			"path": "dtaservice/dtaservice.swagger.json",
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"DTA API v1\",\n    \"description\": \"The Document Transformation Application (DTA) API.\",\n    \"version\": \"1.0.0\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"service\",\n      \"description\": \"Retrieves information about service(s).\"\n    },\n    {\n      \"name\": \"document\",\n      \"description\": \"Operations on document.\"\n    }\n  ],\n  \"paths\": {\n    \"/v1/service/options\": {\n      \"get\": {\n        \"tags\": [\n          \"service\"\n        ],\n        \"summary\": \"Retrieves available options of the service.\",\n        \"description\": \"The response **has to** be a valid [JSON Schema](http://json-schema.org/draft-07/schema#).\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"type\": \"object\"\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"code\": 504,\n                  \"message\": \"Gateway Timeout\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/service/list\": {\n      \"get\": {\n        \"tags\": [\n          \"service\"\n        ],\n        \"summary\": \"Lists available services.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListServicesResponse\"\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"code\": 504,\n                  \"message\": \"Gateway Timeout\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/document/transform\": {\n      \"post\": {\n        \"tags\": [\n          \"document\"\n        ],\n        \"summary\": \"Transforms a plain document.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TransformDocumentRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TransformDocumentResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OptionsErrorResponse\"\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"code\": 504,\n                  \"message\": \"Gateway Timeout\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/document/transform-pipe\": {\n      \"post\": {\n        \"tags\": [\n          \"document\"\n        ],\n        \"summary\": \"Executes a given sequence of transforms on a plain document.\",\n        \"description\": \"The services inside the list (`[0, 1, ..., n]`) **has to** be handled in ascending order from the first (`0`) to the last (`n`) element.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TransformDocumentPipeRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TransformDocumentPipeResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Validation Error (from called service)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OptionsErrorResponse\"\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                },\n                \"example\": {\n                  \"code\": 504,\n                  \"message\": \"Gateway Timeout\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ServiceInfo\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ListServicesResponse\": {\n        \"required\": [\n          \"services\"\n        ],\n        \"properties\": {\n          \"services\": {\n            \"type\": \"array\",\n            \"description\": \"Available services.\",\n            \"example\": [\n              {\n                \"name\": \"DE.TU-BERLIN.QDS.COUNT\"\n              },\n              {\n                \"name\": \"DE.TU-BERLIN.QDS.ECHO\"\n              },\n              {\n                \"name\": \"DE.TU-BERLIN.QDS.HTML2TEXT\"\n              },\n              {\n                \"name\": \"DE.TU-BERLIN.QDS.TEXT2HTML\"\n              },\n              {\n                \"name\": \"DE.TU-BERLIN.QDS.COUNT_GENERIC\"\n              }\n            ],\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceInfo\"\n            }\n          }\n        }\n      },\n      \"TransformDocumentResponse\": {\n        \"required\": [\n          \"document\",\n          \"error\",\n          \"output\"\n        ],\n        \"properties\": {\n          \"document\": {\n            \"type\": \"string\",\n            \"description\": \"Transformed Base64 encoded document.\",\n            \"format\": \"byte\",\n            \"example\": \"SGFsbG8gZGFzIGlzdCBlaW4gVGVzdCBEb2N1bWVudCE=\"\n          },\n          \"output\": {\n            \"type\": \"array\",\n            \"description\": \"Standard output from the specified service.\",\n            \"example\": [\n              \"transforming document \u003csimpletext.txt\u003e ...\"\n            ],\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"error\": {\n            \"type\": \"array\",\n            \"description\": \"Standard error from the specified service.\",\n            \"example\": [\n              \"Unknown Exception\"\n            ],\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"TransformDocumentRequest\": {\n        \"required\": [\n          \"document\",\n          \"service_name\"\n        ],\n        \"properties\": {\n          \"document\": {\n            \"type\": \"string\",\n            \"description\": \"Base64 encoded document.\",\n            \"format\": \"byte\",\n            \"example\": \"SGFsbG8gZGFzIGlzdCBlaW4gVGVzdCBEb2N1bWVudCE=\"\n          },\n          \"service_name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the service which performs the transformation.\",\n            \"example\": \"DE.TU-BERLIN.QDS.COUNT\"\n          },\n          \"file_name\": {\n            \"type\": \"string\",\n            \"description\": \"The filename of the document.\",\n            \"example\": \"simpletext.txt\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"description\": \"Service options.\",\n            \"example\": {\n              \"offset\": 5,\n              \"debug\": true\n            }\n          }\n        }\n      },\n      \"PipeService\": {\n       \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"DE.TU-BERLIN.QDS.COUNT\"\n          },\n          \"options\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"TransformDocumentPipeRequest\": {\n        \"required\": [\n          \"document\",\n          \"services\"\n        ],\n        \"properties\": {\n          \"document\": {\n            \"type\": \"string\",\n            \"description\": \"Base64 encoded document.\",\n            \"format\": \"byte\",\n            \"example\": \"SGFsbG8gZGFzIGlzdCBlaW4gVGVzdCBEb2N1bWVudCE=\"\n          },\n          \"services\": {\n            \"type\": \"array\",\n            \"description\": \"Sequence of services that are used to transform the document. (Each service can have options)\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PipeService\"\n            }\n          },\n          \"file_name\": {\n            \"type\": \"string\",\n            \"example\": \"simpletext.txt\",\n            \"description\": \"The filename of the document.\"\n          }\n        }\n      },\n      \"TransformDocumentPipeResponse\": {\n        \"required\": [\n          \"document\",\n          \"error\",\n          \"output\"\n        ],\n        \"properties\": {\n          \"document\": {\n            \"type\": \"string\",\n            \"description\": \"Transformed Base64 encoded document.\",\n            \"format\": \"byte\",\n            \"example\": \"SGFsbG8gZGFzIGlzdCBlaW4gVGVzdCBEb2N1bWVudCE=\"\n          },\n          \"output\": {\n            \"type\": \"array\",\n            \"description\": \"Standard output from the specified service.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\n              \"transforming document \u003csimpletext.txt\u003e ...\"\n            ]\n          },\n          \"error\": {\n            \"type\": \"array\",\n            \"description\": \"Standard error from the specified service.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\n              \"Unknown Exception\"\n            ]\n          },\n          \"last_transformer\": {\n            \"type\": \"string\",\n            \"example\": \"DE.TU-BERLIN.QDS.COUNT\",\n            \"description\": \"Name of the last service which transformed the document.\"\n          }\n        }\n      },\n      \"OptionsPropertyError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"OptionsErrorResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"number\"\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OptionsPropertyError\"\n            }\n          }\n        },\n        \"example\": {\n          \"code\": 400,\n          \"properties\": [\n            {\n              \"name\": \"offset\",\n              \"message\": \"Must be between 0 and 27\"\n            }\n          ]\n        }\n      },\n      \"ErrorResponse\": {\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"number\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"example\": {\n          \"code\": 500,\n          \"message\": \"Internal Server Error\"\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "validators: failed to execute template validators for oas_validators_gen.go: template: validators.tmpl:137:21: executing \"validators\" at \u003c$f.Spec.Name\u003e: nil pointer evaluating *jsonschema.Property.Name"
}