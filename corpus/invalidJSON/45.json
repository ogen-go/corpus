{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "read_service.yaml.old",
			"path": "Specification/GA4GH_BrAPI/Reads/read_service.yaml.old",
			"content": "openapi: 3.0.0\ninfo:\n  title: ga4gh/read_service.proto\n  version: version not set\npaths:\n  /v0.6.0a10/readgroupsets/search:\n    post:\n      summary: Gets a list of `ReadGroupSet` matching the search criteria.\n      description: |-\n        `POST /readgroupsets/search` must accept a JSON version of\n        `SearchReadGroupSetsRequest` as the post body and will return a JSON\n        version of `SearchReadGroupSetsResponse` . Only readgroups that\n        match an optionally supplied biosampleId will be included in the\n        response.\n      operationId: SearchReadGroupSets\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchReadGroupSetsResponse'\n      tags:\n        - ReadService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchReadGroupSetsRequest'\n        required: true\n  '/v0.6.0a10/readgroupsets/{read_group_set_id}':\n    get:\n      summary: Gets a `ReadGroupSet` by ID.\n      description: |-\n        `GET /readgroupsets/{read_group_set_id}` will return a JSON version of\n        `ReadGroupSet`.\n      operationId: GetReadGroupSet\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadGroupSet'\n      parameters:\n        - name: read_group_set_id\n          description: The ID of the `ReadGroupSet` to be retrieved.\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ReadService\n  /v0.6.0a10/reads/search:\n    post:\n      summary: Gets a list of `ReadAlignment` s for one or more `ReadGroup` s.\n      description: \u003e-\n        `searchReads` operates over a genomic coordinate space of reference\n        sequence\n\n        and position defined by the `Reference` s to which the requested\n        `ReadGroup` s are\n\n        aligned.\n\n\n        If a target positional range is specified, search returns all reads\n        whose\n\n        alignment to the reference genome *overlap* the range. A query which\n        specifies\n\n        only read group IDs yields all reads in those read groups, including\n        unmapped\n\n        reads.\n\n\n        All reads returned (including reads on subsequent pages) are ordered by\n        genomic\n\n        coordinate (by reference sequence, then position). Reads with equivalent\n        genomic\n\n        coordinates are returned in an unspecified order. This order must be\n        consistent\n\n        for a given repository, such that two queries for the same content\n        (regardless\n\n        of page size) yield reads in the same order across their respective\n        streams of\n\n        paginated responses.\n\n\n        `POST /reads/search` must accept a JSON version of `SearchReadsRequest`\n        as\n\n        the post body and will return a JSON version of `SearchReadsResponse`.\n      operationId: SearchReads\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchReadsResponse'\n      tags:\n        - ReadService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchReadsRequest'\n        required: true\ncomponents:\n  schemas:\n    CigarUnitOperation:\n      type: string\n      enum:\n        - OPERATION_UNSPECIFIED\n        - ALIGNMENT_MATCH\n        - INSERT\n        - DELETE\n        - SKIP\n        - CLIP_SOFT\n        - CLIP_HARD\n        - PAD\n        - SEQUENCE_MATCH\n        - SEQUENCE_MISMATCH\n      default: OPERATION_UNSPECIFIED\n      description: \u003e-\n        Describes the different types of CIGAR alignment operations that exist.\n\n        Used wherever CIGAR alignments are used.\n\n         - OPERATION_UNSPECIFIED: The null operation.\n         - ALIGNMENT_MATCH: An alignment match indicates that a sequence can be aligned to the\n        reference without evidence of an INDEL. Unlike the\n\n        `SEQUENCE_MATCH` and `SEQUENCE_MISMATCH` operators,\n\n        the `ALIGNMENT_MATCH` operator does not indicate whether the\n\n        reference and read sequences are an exact match. This operator is\n\n        equivalent to SAM's `M`.\n         - INSERT: The insert operator indicates that the read contains evidence of bases\n        being inserted into the reference. This operator is equivalent to SAM's\n\n        `I`.\n         - DELETE: The delete operator indicates that the read contains evidence of bases\n        being deleted from the reference. This operator is equivalent to SAM's\n\n        `D`.\n         - SKIP: The skip operator indicates that this read skips a long segment of the\n        reference, but the bases have not been deleted. This operator is\n        commonly\n\n        used when working with RNA-seq data, where reads may skip long segments\n\n        of the reference between exons. This operator is equivalent to SAM's\n\n        `N`.\n         - CLIP_SOFT: The soft clip operator indicates that bases at the start/end of a read\n        have not been considered during alignment. This may occur if the\n        majority\n\n        of a read maps, except for low quality bases at the start/end of a read.\n\n        This operator is equivalent to SAM's `S`. Bases that are soft\n\n        clipped will still be stored in the read.\n         - CLIP_HARD: The hard clip operator indicates that bases at the start/end of a read\n        have been omitted from this alignment. This may occur if this linear\n\n        alignment is part of a chimeric alignment, or if the read has been\n\n        trimmed (for example, during error correction or to trim poly-A tails\n        for\n\n        RNA-seq). This operator is equivalent to SAM's `H`.\n         - PAD: The pad operator indicates that there is padding in an alignment. This\n        operator is equivalent to SAM's `P`.\n         - SEQUENCE_MATCH: This operator indicates that this portion of the aligned sequence exactly\n        matches the reference. This operator is equivalent to SAM's `=`.\n         - SEQUENCE_MISMATCH: This operator indicates that this portion of the aligned sequence is an\n        alignment match to the reference, but a sequence mismatch. This can\n\n        indicate a SNP or a read error. This operator is equivalent to SAM's\n\n        `X`.\n    ga4ghAnalysis:\n      type: object\n      properties:\n        id:\n          type: string\n          description: |-\n            Formats of id | name | description | accessions are described in the\n            documentation on general attributes and formats.\n        name:\n          type: string\n        description:\n          type: string\n        created:\n          type: string\n          description: 'The time at which this record was created, in ISO 8601 format.'\n        updated:\n          type: string\n          description: 'The time at which this record was last updated, in ISO 8601 format.'\n        type:\n          type: string\n          description: The type of analysis.\n        software:\n          type: array\n          items:\n            type: string\n          description: The software run to generate this analysis.\n        attributes:\n          $ref: '#/components/schemas/Attributes'\n      description: \u003e-\n        An analysis contains an interpretation of one or several experiments.\n        (e.g.\n\n        SNVs, copy number variations, methylation status) together with\n        information\n\n        about the methodology used.\n    ga4ghAttributeValue:\n      type: object\n      properties:\n        string_value:\n          type: string\n        int64_value:\n          type: string\n          format: int64\n        int32_value:\n          type: integer\n          format: int32\n        bool_value:\n          type: boolean\n          format: boolean\n        double_value:\n          type: number\n          format: double\n        external_identifier:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        ontology_term:\n          $ref: '#/components/schemas/OntologyTerm'\n        experiment:\n          $ref: '#/components/schemas/Experiment'\n        program:\n          $ref: '#/components/schemas/Program'\n        analysis:\n          $ref: '#/components/schemas/Analysis'\n        null_value:\n          $ref: '#/components/schemas/NullValue'\n        attributes:\n          $ref: '#/components/schemas/Attributes'\n        attribute_list:\n          $ref: '#/components/schemas/AttributeValueList'\n      description: \u003e-\n        Type defining a collection of attributes associated with various\n        protocol\n\n        records. Each attribute is a name that maps to an array of one or more\n\n        values. Values are chosen from both internal protobuf types and GA4GH.\n         Values should be split into array elements instead of using a separator\n        syntax that needs to parsed.\n    ga4ghAttributeValueList:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/AttributeValue'\n    ga4ghAttributes:\n      type: object\n      properties:\n        attr:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/AttributeValueList'\n    ga4ghCigarUnit:\n      type: object\n      properties:\n        operation:\n          $ref: '#/components/schemas/CigarUnitOperation'\n        operation_length:\n          type: string\n          format: int64\n          description: The number of genomic bases that the operation runs for. Required.\n        reference_sequence:\n          type: string\n          description: \u003e-\n            `referenceSequence` is only used at mismatches\n\n            (`SEQUENCE_MISMATCH`) and deletions (`DELETE`).\n\n            Filling this field replaces SAM's MD tag. If the relevant\n            information is\n\n            not available, this field is unset.\n      description: A single CIGAR operation.\n    ga4ghExperiment:\n      type: object\n      properties:\n        id:\n          type: string\n          title: The experiment ID\n        name:\n          type: string\n          description: The name of the experiment.\n        description:\n          type: string\n          description: A description of the experiment.\n        message_create_time:\n          type: string\n          title: \u003e-\n            The time at which this message was created.\n\n            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g.\n            2015-02-10T00:03:42.123Z)\n        message_update_time:\n          type: string\n          title: \u003e-\n            The time at which this message was last updated.\n\n            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g.\n            2015-02-10T00:03:42.123Z)\n        run_time:\n          type: string\n          title: |-\n            The time at which this experiment was performed.\n            Granularity here is variable (e.g. date only).\n            Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)\n        molecule:\n          type: string\n          title: \u003e-\n            The molecule examined in this experiment. (e.g. genomics DNA, total\n            RNA)\n        strategy:\n          type: string\n          title: |-\n            The experiment technique or strategy applied to the sample.\n            (e.g. whole genome sequencing, RNA-seq, RIP-seq)\n        selection:\n          type: string\n          title: \u003e-\n            The method used to enrich the target. (e.g. immunoprecipitation,\n            size\n\n            fractionation, MNase digestion)\n        library:\n          type: string\n          description: The name of the library used as part of this experiment.\n        library_layout:\n          type: string\n          description: The configuration of sequenced reads. (e.g. Single or Paired).\n        instrument_model:\n          type: string\n          description: |-\n            The instrument model used as part of this experiment.\n            This maps to sequencing technology in BAM.\n        instrument_data_file:\n          type: string\n          title: |-\n            The data file generated by the instrument.\n            TODO: This isn't actually a file is it?\n            Should this be `instrumentData` instead?\n        sequencing_center:\n          type: string\n          description: The sequencing center used as part of this experiment.\n        platform_unit:\n          type: string\n          description: |-\n            The platform unit used as part of this experiment. This is a\n            flowcell-barcode\n            or slide unique identifier.\n        attributes:\n          $ref: '#/components/schemas/Attributes'\n      description: An experimental preparation of a sample.\n    ga4ghExternalIdentifier:\n      type: object\n      properties:\n        database:\n          type: string\n          description: 'The source of the identifier, e.g. `Ensembl`.'\n        identifier:\n          type: string\n          description: 'The ID defined by the external database, e.g. `ENST00000000000`.'\n        version:\n          type: string\n          description: 'The version of the object or the database, e.g. `78`.'\n      title: Identifier from a public database\n    ga4ghLinearAlignment:\n      type: object\n      properties:\n        position:\n          $ref: '#/components/schemas/Position'\n        mapping_quality:\n          type: integer\n          format: int32\n          description: \u003e-\n            The mapping quality of this alignment, meaning the likelihood that\n            the read\n\n            maps to this position.\n\n\n            Specifically, this is -10 log10 Pr(mapping position is wrong),\n            rounded to\n\n            the nearest integer.\n        cigar:\n          type: array\n          items:\n            $ref: '#/components/schemas/CigarUnit'\n          description: \u003e-\n            Represents the local alignment of this sequence (alignment matches,\n            indels,\n\n            etc)\n\n            versus the reference.\n      description: \u003e-\n        A linear alignment describes the alignment of a read to a Reference,\n        using a\n\n        position and CIGAR array.\n    ga4ghNullValue:\n      type: string\n      enum:\n        - NULL_VALUE\n      default: NULL_VALUE\n      description: ' - NULL_VALUE: Null value.'\n    ga4ghOntologyTerm:\n      type: object\n      properties:\n        term_id:\n          type: string\n          description: \u003e-\n            Ontology term identifier - the CURIE for an ontology term. It\n\n            differs from the standard GA4GH schema's :ref:`id\n            `\n\n            in that it is a CURIE pointing to an information resource outside of\n            the\n\n            scope of the schema or its resource implementation.\n        term:\n          type: string\n          description: \u003e-\n            Ontology term - the label of the ontology term the termId is\n            pointing to.\n      title: |-\n        An ontology term describing an attribute. (e.g. the phenotype attribute\n        'polydactyly' from HPO)\n    ga4ghPosition:\n      type: object\n      properties:\n        reference_name:\n          type: string\n          description: The name of the `Reference` on which the `Position` is located.\n        position:\n          type: string\n          format: int64\n          description: |-\n            The 0-based offset from the start of the forward strand for that\n            `Reference`. Genomic positions are non-negative integers less than\n            `Reference` length.\n        strand:\n          $ref: '#/components/schemas/Strand'\n      description: |-\n        A `Position` is an unoriented base in some `Reference`. A `Position` is\n        represented by a `Reference` name, and a base number on that `Reference`\n        (0-based).\n    ga4ghProgram:\n      type: object\n      properties:\n        command_line:\n          type: string\n          description: The command line used to run this program.\n        id:\n          type: string\n          description: The user specified ID of the program.\n        name:\n          type: string\n          description: The name of the program.\n        prev_program_id:\n          type: string\n          description: The ID of the program run before this one.\n        version:\n          type: string\n          description: The version of the program run.\n      description: A Program describes software used in data processing or analysis.\n    ga4ghReadAlignment:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            The read alignment ID. This ID is unique within the read group this\n\n            alignment belongs to.\n\n\n            For performance reasons, this field may be omitted by a backend.\n\n            If provided, its intended use is to make caching and UI display\n            easier for\n\n            genome browsers and other lightweight clients.\n        read_group_id:\n          type: string\n          title: |-\n            The ID of the read group this read belongs to.\n            (Every read must belong to exactly one read group.)\n        fragment_name:\n          type: string\n          description: The fragment name. Equivalent to QNAME (query template name) in SAM.\n        improper_placement:\n          type: boolean\n          format: boolean\n          description: |-\n            The orientation and the distance between reads from the fragment are\n            inconsistent with the sequencing protocol (inverse of SAM flag 0x2).\n        duplicate_fragment:\n          type: boolean\n          format: boolean\n          description: The fragment is a PCR or optical duplicate (SAM flag 0x400).\n        number_reads:\n          type: integer\n          format: int32\n          description: The number of reads in the fragment (extension to SAM flag 0x1).\n        fragment_length:\n          type: integer\n          format: int32\n          description: 'The observed length of the fragment, equivalent to TLEN in SAM.'\n        read_number:\n          type: integer\n          format: int32\n          description: \u003e-\n            The read ordinal in the fragment, 0-based and less than numberReads.\n            This\n\n            field replaces SAM flag 0x40 and 0x80 and is intended to more\n            cleanly\n\n            represent multiple reads per fragment.\n        failed_vendor_quality_checks:\n          type: boolean\n          format: boolean\n          description: The read fails platform or vendor quality checks (SAM flag 0x200).\n        alignment:\n          $ref: '#/components/schemas/LinearAlignment'\n        secondary_alignment:\n          type: boolean\n          format: boolean\n          description: \u003e-\n            Whether this alignment is secondary. Equivalent to SAM flag 0x100.\n\n            A secondary alignment represents an alternative to the primary\n            alignment\n\n            for this read. Aligners may return secondary alignments if a read\n            can map\n\n            ambiguously to multiple coordinates in the genome.\n\n\n            By convention, each read has one and only one alignment where both\n\n            secondaryAlignment and supplementaryAlignment are false.\n        supplementary_alignment:\n          type: boolean\n          format: boolean\n          description: \u003e-\n            Whether this alignment is supplementary. Equivalent to SAM flag\n            0x800.\n\n            Supplementary alignments are used in the representation of a\n            chimeric\n\n            alignment. In a chimeric alignment, a read is split into multiple\n\n            linear alignments that map to different reference contigs. The first\n\n            linear alignment in the read will be designated as the\n            representative\n\n            alignment; the remaining linear alignments will be designated as\n\n            supplementary alignments. These alignments may have different\n            mapping\n\n            quality scores.\n\n\n            In each linear alignment in a chimeric alignment, the read will be\n            hard\n\n            clipped. The `alignedSequence` and `alignedQuality` fields in the\n            alignment\n\n            message will only represent the bases for its respective linear\n            alignment.\n        aligned_sequence:\n          type: string\n          description: \u003e-\n            The bases of the read sequence contained in this alignment record\n\n            (equivalent to SEQ in SAM).\n\n\n            `alignedSequence` and `alignedQuality` may be shorter than the full\n            read\n\n            sequence and quality. This will occur if the alignment is part of a\n\n            chimeric alignment, or if the read was trimmed. When this occurs,\n            the CIGAR\n\n            for this read will begin/end with a hard clip operator that will\n            indicate\n\n            the length of the excised sequence.\n        aligned_quality:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: \u003e-\n            The quality of the read sequence contained in this alignment message\n\n            (equivalent to QUAL in SAM).\n\n\n            `alignedSequence` and `alignedQuality` may be shorter than the full\n            read\n\n            sequence and quality. This will occur if the alignment is part of a\n\n            chimeric alignment, or if the read was trimmed. When this occurs,\n            the CIGAR\n\n            for this read will begin/end with a hard clip operator that will\n            indicate\n\n            the length of the excised sequence.\n        next_mate_position:\n          $ref: '#/components/schemas/Position'\n        attributes:\n          $ref: '#/components/schemas/Attributes'\n      description: \u003e-\n        Each read alignment describes an alignment with additional information\n\n        about the fragment and the read. A read alignment object is equivalent\n        to a\n\n        line in a SAM file.\n    ga4ghReadGroup:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The read group ID.\n        dataset_id:\n          type: string\n          description: The ID of the dataset this read group belongs to.\n        name:\n          type: string\n          description: The read group name.\n        description:\n          type: string\n          description: The read group description.\n        sample_name:\n          type: string\n          description: |-\n            A name for the sample this read group's data were generated from.\n            This field contains an arbitrary string, typically\n            corresponding to the SM tag in a BAM file.\n        biosample_id:\n          type: string\n          description: The Biosample this read group's data was generated from.\n        experiment:\n          $ref: '#/components/schemas/Experiment'\n        predicted_insert_size:\n          type: integer\n          format: int32\n          description: The predicted insert size of this read group.\n        created:\n          type: string\n          format: int64\n          description: \u003e-\n            The time at which this read group was created in milliseconds from\n            the\n\n            epoch.\n        updated:\n          type: string\n          format: int64\n          description: |-\n            The time at which this read group was last updated in milliseconds\n            from the epoch.\n        stats:\n          $ref: '#/components/schemas/ReadStats'\n        programs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Program'\n        reference_set_id:\n          type: string\n          description: \u003e-\n            The ID of the reference set to which the reads in this read group\n            are\n\n            aligned. Required if there are any read alignments.\n        attributes:\n          $ref: '#/components/schemas/Attributes'\n      description: \u003e-\n        A ReadGroup is a set of reads derived from one physical sequencing\n        process.\n    ga4ghReadGroupSet:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The read group set ID.\n        dataset_id:\n          type: string\n          description: The ID of the dataset this read group set belongs to.\n        name:\n          type: string\n          description: The read group set name.\n        stats:\n          $ref: '#/components/schemas/ReadStats'\n        read_groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReadGroup'\n        attributes:\n          $ref: '#/components/schemas/Attributes'\n      description: |-\n        A ReadGroupSet is a logical collection of ReadGroups. Typically one\n        ReadGroupSet represents all the reads from one experimental sample.\n    ga4ghReadStats:\n      type: object\n      properties:\n        aligned_read_count:\n          type: string\n          format: int64\n          description: The number of aligned reads.\n        unaligned_read_count:\n          type: string\n          format: int64\n          description: The number of unaligned reads.\n        base_count:\n          type: string\n          format: int64\n          description: \u003e-\n            The total number of bases.\n\n            This is equivalent to the sum of `alignedSequence.length` for all\n            reads.\n      description: ReadStats can be used to provide summary statistics about read data.\n    ga4ghSearchReadGroupSetsRequest:\n      type: object\n      properties:\n        dataset_id:\n          type: string\n          description: The dataset to search.\n        name:\n          type: string\n          description: \u003e-\n            Only return read group sets with this name (case-sensitive, exact\n            match).\n        biosample_id:\n          type: string\n          description: |-\n            Specifying the id of a Biosample record will return only readgroups\n             with the given biosampleId.\n        page_size:\n          type: integer\n          format: int32\n          description: |-\n            Specifies the maximum number of results to return in a single page.\n            If unspecified, a system default will be used.\n        page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            To get the next page of results, set this parameter to the value of\n\n            `next_page_token` from the previous response.\n      description: \u003e-\n        This request maps to the body of `POST /readgroupsets/search` as JSON.\n\n\n        TODO: Factor this out to a common API patterns section.\n\n        - If searching by a resource ID, and that resource is not found, the\n        method\n          will return a `404` HTTP status code (`NOT_FOUND`).\n        - If searching by other attributes, e.g. `name`, and no matches are\n        found, the\n          method will return a `200` HTTP status code (`OK`) with an empty result list.\n    ga4ghSearchReadGroupSetsResponse:\n      type: object\n      properties:\n        read_group_sets:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReadGroupSet'\n          description: The list of matching read group sets.\n        next_page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            Provide this value in a subsequent request to return the next page\n            of\n\n            results. This field will be empty if there aren't any additional\n            results.\n      description: \u003e-\n        This is the response from `POST /readgroupsets/search` expressed as\n        JSON.\n    ga4ghSearchReadsRequest:\n      type: object\n      properties:\n        read_group_ids:\n          type: array\n          items:\n            type: string\n          description: The ReadGroups to search. At least one id must be specified.\n        reference_id:\n          type: string\n          description: |-\n            The reference to query. Leaving blank returns results from all\n            references, including unmapped reads - this could be very large.\n        start:\n          type: string\n          format: int64\n          description: \u003e-\n            The start position (0-based) of this query.\n\n            If a reference is specified, this defaults to 0.\n\n            Genomic positions are non-negative integers less than reference\n            length.\n\n            Requests spanning the join of circular genomes are represented as\n\n            two requests one on each side of the join (position 0).\n        end:\n          type: string\n          format: int64\n          description: |-\n            The end position (0-based, exclusive) of this query.\n            If a reference is specified, this defaults to the\n            reference's length.\n        page_size:\n          type: integer\n          format: int32\n          description: |-\n            Specifies the maximum number of results to return in a single page.\n            If unspecified, a system default will be used.\n        page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            To get the next page of results, set this parameter to the value of\n\n            `next_page_token` from the previous response.\n      description: |-\n        ******************  /reads  *********************\n        This request maps to the body of `POST /reads/search` as JSON.\n\n        If a reference is specified, all queried `ReadGroup`s must be aligned\n        to `ReferenceSet`s containing that same `Reference`. If no reference is\n        specified, all `ReadGroup`s must be aligned to the same `ReferenceSet`.\n    ga4ghSearchReadsResponse:\n      type: object\n      properties:\n        alignments:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReadAlignment'\n          description: |-\n            The list of matching alignment messages, sorted by position.\n            Unmapped reads, which have no position, are returned last.\n        next_page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            Provide this value in a subsequent request to return the next page\n            of\n\n            results. This field will be empty if there aren't any additional\n            results.\n      description: This is the response from `POST /reads/search` expressed as JSON.\n    ga4ghStrand:\n      type: string\n      enum:\n        - STRAND_UNSPECIFIED\n        - NEG_STRAND\n        - POS_STRAND\n      default: STRAND_UNSPECIFIED\n      description: |-\n        Indicates the associated DNA strand for some data item.\n\n         - STRAND_UNSPECIFIED: If no strand data is available.\n         - NEG_STRAND: The negative (-) strand.\n         - POS_STRAND: The postive (+) strand."
		}
	},
	"Error": "invalid json"
}