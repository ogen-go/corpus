{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/everything2/everything2"
		},
		"file": {
			"name": "everything2-production.json",
			"size": 0,
			"path": "cf/everything2-production.json",
			"byteSize": 71486,
			"content": "{\n  \"AWSTemplateFormatVersion\": \"2010-09-09\",\n  \"Description\": \"E2 production resources\",\n  \"Mappings\" : {\n    \"RegionMap\" : {\n      \"us-east-1\" : { \"S3hostedzoneID\" : \"Z3AQBSTGFYJSTF\", \"websiteendpoint\" : \"s3-website-us-east-1.amazonaws.com\", \"ELBAccountID\": \"127311923021\"},\n      \"us-west-1\" : { \"S3hostedzoneID\" : \"Z2F56UZL2M1ACD\", \"websiteendpoint\" : \"s3-website-us-west-1.amazonaws.com\", \"ELBAccountID\": \"027434742980\"},\n      \"us-west-2\" : { \"S3hostedzoneID\" : \"Z3BJ6K6RIION7M\", \"websiteendpoint\" : \"s3-website-us-west-2.amazonaws.com\", \"ELBAccountID\": \"797873946194\"},\n      \"eu-west-1\" : { \"S3hostedzoneID\" : \"Z1BKCTXD74EZPE\", \"websiteendpoint\" : \"s3-website-eu-west-1.amazonaws.com\", \"ELBAccountID\": \"156460612806\"},\n      \"ap-southeast-1\" : { \"S3hostedzoneID\" : \"Z3O0J2DXBE1FTB\", \"websiteendpoint\" : \"s3-website-ap-southeast-1.amazonaws.com\",\"ELBAccountID\": \"114774131450\"},\n      \"ap-southeast-2\" : { \"S3hostedzoneID\" : \"Z1WCIGYICN2BYD\", \"websiteendpoint\" : \"s3-website-ap-southeast-2.amazonaws.com\",\"ELBAccountID\": \"783225319266\"},\n      \"ap-northeast-1\" : { \"S3hostedzoneID\" : \"Z2M4EHUR26P7ZW\", \"websiteendpoint\" : \"s3-website-ap-northeast-1.amazonaws.com\",\"ELBAccountID\": \"582318560864\"},\n      \"sa-east-1\" : { \"S3hostedzoneID\" : \"Z31GFT0UA1I2HV\", \"websiteendpoint\" : \"s3-website-sa-east-1.amazonaws.com\", \"ELBAccountID\": \"507241528517\"}\n    },\n    \"SESIdentity\": {\n      \"us-west-2\": { \"arn\": \"arn:aws:ses:us-west-2:254865750963:identity/accounthelp@everything2.com\" }\n    }\n  },\n  \"Resources\": {\n    \"AssetsS3Bucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"assets.everything2.com\",\n        \"AccessControl\": \"PublicRead\"\n      }\n    },\n    \"CFBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"cloudformation.everything2.com\",\n        \"AccessControl\": \"PublicRead\"\n      }\n    },\n    \"OutageBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"outage.everything2.com\"\n      }\n    },\n    \"NodeBackupBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"nodebackup.everything2.com\"\n      }\n    },\n    \"StaticAssetBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"static-uswest2.everything2.com\"\n      }\n    },\n    \"LambdaSourceBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"lambdasource.everything2.com\"\n      }\n    },\n    \"HomenodeImagesS3Bucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"hnimagew.everything2.com\",\n        \"AccessControl\": \"PublicRead\"\n      }\n    },\n    \"PrivateStorageS3Bucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"e2configprivate.everything2.com\"\n      }\n    },\n    \"GlacierS3Bucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"glacierstorage.everything2.com\"\n      }\n    },\n    \"SitemapS3Bucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"sitemap.everything2.com\",\n        \"AccessControl\": \"PublicRead\"\n      }\n    },\n    \"JSCSSBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"jscssw.everything2.com\",\n        \"AccessControl\": \"PublicRead\"\n      }\n    },\n    \"E2AppRDSAddOnly\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"Properties\": {\n        \"Description\": \"Allows E2 machines to enable ingress to RDS\",\n        \"ManagedPolicyName\": \"E2AppRDSAddOnly\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"rds:AuthorizeDBSecurityGroupIngress\",\n            \"Resource\": \"*\"\n          }]\n        }\n      }\n    },\n    \"E2DotComR53Zone\": {\n      \"Type\": \"AWS::Route53::HostedZone\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Name\": \"everything2.com\"\n      }\n    },\n    \"E2DotComJSCSSWR53RR\": {\n      \"Type\": \"AWS::Route53::RecordSet\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Name\": \"jscssw.everything2.com\",\n        \"HostedZoneName\": \"everything2.com.\",\n        \"AliasTarget\": {\n          \"HostedZoneId\": {\"Fn::FindInMap\" : [ \"RegionMap\", { \"Ref\" : \"AWS::Region\" }, \"S3hostedzoneID\"]},\n          \"DNSName\": {\"Fn::FindInMap\" : [ \"RegionMap\", { \"Ref\" : \"AWS::Region\" }, \"websiteendpoint\"]}\n        },\n        \"Type\": \"A\"\n      }\n    },\n    \"AppVPC\": {\n      \"Type\": \"AWS::EC2::VPC\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"CidrBlock\": \"10.0.0.0/16\",\n        \"EnableDnsHostnames\": true,\n        \"EnableDnsSupport\": true\n      }\n    },\n    \"AppVPCIGW\": {\n      \"Type\": \"AWS::EC2::InternetGateway\",\n      \"DeletionPolicy\": \"Retain\"\n    },\n    \"AppVPCIGWAttach\": {\n      \"Type\": \"AWS::EC2::VPCGatewayAttachment\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"InternetGatewayId\": { \"Ref\": \"AppVPCIGW\" },\n        \"VpcId\": {\"Ref\": \"AppVPC\"}\n      }\n    },\n    \"ELBFrontendSecurityGroup\": {\n      \"Type\": \"AWS::EC2::SecurityGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"GroupDescription\": \"E2 App Frontend Security Group\",\n        \"GroupName\": \"E2-App-Frontend-Security-Group\",\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"SecurityGroupIngress\": [\n          {\n             \"FromPort\": \"80\",\n             \"ToPort\": \"80\",\n             \"CidrIp\": \"0.0.0.0/0\",\n             \"IpProtocol\": \"tcp\"\n          },\n          {\n              \"FromPort\": \"443\",\n              \"ToPort\": \"443\",\n              \"CidrIp\": \"0.0.0.0/0\",\n              \"IpProtocol\": \"tcp\"\n          }\n        ]\n      }\n    },\n    \"VPCEndpointSecurityGroup\": {\n      \"Type\": \"AWS::EC2::SecurityGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"GroupDescription\": \"VPC Service Endpoint Security Group\",\n        \"GroupName\": \"VPC-Service-Endpoint-Security-Group\",\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"SecurityGroupIngress\": [\n          {\n              \"FromPort\": \"443\",\n              \"ToPort\": \"443\",\n              \"SourceSecurityGroupId\": { \"Fn::GetAtt\": [ \"LambdaSecurityGroup\", \"GroupId\"] },\n              \"IpProtocol\": \"tcp\"\n          },\n          {\n              \"FromPort\": \"443\",\n              \"ToPort\": \"443\",\n              \"SourceSecurityGroupId\": { \"Fn::GetAtt\": [\"E2AppWebheadSecurityGroup\", \"GroupId\"] },\n              \"IpProtocol\": \"tcp\"\n          },\n          {\n              \"FromPort\": \"443\",\n              \"ToPort\": \"443\",\n              \"CidrIp\": \"10.0.0.0/8\",\n              \"IpProtocol\": \"tcp\"\n          }\n        ]\n      }\n    },\n    \"MainDBSecurityGroup\": {\n      \"Type\": \"AWS::EC2::SecurityGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"GroupDescription\": \"Main Database Security Group\",\n        \"GroupName\": \"DB-Ingress-Security-Group\",\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"SecurityGroupIngress\": [\n          {\n             \"FromPort\": \"3306\",\n             \"ToPort\": \"3306\",\n             \"SourceSecurityGroupId\": { \"Fn::GetAtt\": [ \"ELBFrontendSecurityGroup\", \"GroupId\"] },\n             \"IpProtocol\": \"tcp\"\n          },\n          {\n            \"FromPort\": \"3306\",\n            \"ToPort\": \"3306\",\n            \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"LambdaSecurityGroup\", \"GroupId\"]},\n            \"IpProtocol\": \"tcp\"\n          }\n        ]\n      }\n    },\n    \"AppVPCSubnet1\": {\n      \"Type\": \"AWS::EC2::Subnet\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"MapPublicIpOnLaunch\": true,\n        \"CidrBlock\": \"10.0.1.0/24\",\n        \"AvailabilityZone\": \"us-west-2a\"\n      }\n    },\n    \"AppVPCSubnet2\": {\n      \"Type\": \"AWS::EC2::Subnet\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"MapPublicIpOnLaunch\": true,\n        \"CidrBlock\": \"10.0.2.0/24\",\n        \"AvailabilityZone\": \"us-west-2b\"\n      }\n    },\n    \"AppVPCSubnet3\": {\n      \"Type\": \"AWS::EC2::Subnet\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"MapPublicIpOnLaunch\": false,\n        \"CidrBlock\": \"10.0.3.0/24\",\n        \"AvailabilityZone\": \"us-west-2a\"\n      }\n    },\n    \"AppVPCSubnet4\": {\n      \"Type\": \"AWS::EC2::Subnet\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"MapPublicIpOnLaunch\": false,\n        \"CidrBlock\": \"10.0.4.0/24\",\n        \"AvailabilityZone\": \"us-west-2b\"\n      }\n    },\n    \"E2ELBCertificate\": {\n      \"Type\": \"AWS::CertificateManager::Certificate\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DomainName\": \"everything2.com\",\n        \"ValidationMethod\": \"DNS\",\n        \"SubjectAlternativeNames\": [\"everything2.net\",\"everything2.org\",\"*.everything2.net\",\"*.everything2.org\",\"*.everything2.com\"]\n      }\n    },\n    \"E2AppMailerPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows the app server to send email from accounthelp@everything2.com\",\n        \"ManagedPolicyName\": \"E2AppMailerPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ses:SendEmail\",\n            \"Resource\": {\"Fn::FindInMap\" : [ \"SESIdentity\", { \"Ref\" : \"AWS::Region\" }, \"arn\"]}\n          }]\n        }\n      }\n    },\n    \"CloudWatchEventsWritePolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows the app components to write to the events buses\",\n        \"ManagedPolicyName\": \"CloudWatchEventsWritePolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"events:PutEvents\",\n            \"Resource\": \"*\"\n          }]\n        }\n      }\n    },\n    \"SecretsS3Bucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"secrets.everything2.com\"\n      }\n    },\n    \"E2AppWebheadSecurityGroup\": {\n      \"Type\": \"AWS::EC2::SecurityGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"GroupDescription\": \"E2 App Webhead Security Group\",\n        \"GroupName\": \"E2-App-Webhead-Security-Group\",\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"SecurityGroupIngress\": [\n          {\n            \"FromPort\": \"443\",\n            \"ToPort\": \"443\",\n            \"SourceSecurityGroupId\": { \"Fn::GetAtt\": [ \"ELBFrontendSecurityGroup\", \"GroupId\"] },\n            \"IpProtocol\": \"tcp\"\n          }\n        ]\n      }\n    },\n    \"E2AppS3Policy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows E2 machines to interact with various S3 buckets\",\n        \"ManagedPolicyName\": \"E2AppS3Policy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": [\"s3:PutObject\",\"s3:DeleteObject\",\"s3:GetObject\"],\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"NodeBackupBucket\", \"Arn\"] }, \"/*\"]]}\n          },\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"HomenodeImagesS3Bucket\", \"Arn\"] }, \"/*\"]]}\n          },\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"JSCSSBucket\", \"Arn\"] }, \"/*\"]]}\n          }]\n        }\n      }\n    },\n    \"DatabaseBackupSNSTopic\": {\n      \"Type\": \"AWS::SNS::Topic\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DisplayName\": \"Database backup complete\",\n        \"TopicName\": \"database-backup-complete\"\n      }\n    },\n    \"E2AppSecretsAccessPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows app worker to read the appropriate secrets\",\n        \"ManagedPolicyName\": \"E2AppSecretsAccessPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"SecretsS3Bucket\", \"Arn\"] }, \"/recaptcha_v3_secret\"]]}\n            },\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"SecretsS3Bucket\", \"Arn\"] }, \"/infected_ips_secret\"]]}\n            },\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"SecretsS3Bucket\", \"Arn\"] }, \"/banned_user_agents_secret\"]]}\n            },\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"SecretsS3Bucket\", \"Arn\"] }, \"/banned_ips_secret\"]]}\n            },\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"SecretsS3Bucket\", \"Arn\"] }, \"/banned_ipblocks_secret\"]]}\n            },\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"secretsmanager:GetSecretValue\",\n              \"Resource\": {\"Ref\": \"E2DBMasterPassword\"}\n            },\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"secretsmanager:ListSecrets\",\n              \"Resource\": \"*\"\n            }\n          ]\n        }\n      }\n    },\n    \"E2AppServerSNSPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows E2 machines to list all SNS topics and signal appropriate ones\",\n        \"ManagedPolicyName\": \"E2AppServerSNSPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"sns:ListTopics\",\n            \"Resource\": \"*\"\n          },\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"sns:Publish\",\n            \"Resource\": { \"Ref\": \"DatabaseBackupSNSTopic\"}\n          }]\n        }\n      }\n    },\n    \"EverythingDBSubnetGroup\": {\n      \"Type\": \"AWS::RDS::DBSubnetGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DBSubnetGroupName\": \"e2-app-db-subnet-group-2\",\n        \"DBSubnetGroupDescription\": \"E2 VPC RDS DB Subnet Group\",\n        \"SubnetIds\": [{\"Ref\": \"AppVPCSubnet3\"}, {\"Ref\": \"AppVPCSubnet4\"}]\n      }\n    },\n    \"EverythingDB\": {\n      \"Type\": \"AWS::RDS::DBInstance\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AllocatedStorage\": \"100\",\n        \"AllowMajorVersionUpgrade\": true,\n        \"AvailabilityZone\": {\"Fn::Join\": [\"\", [{\"Ref\": \"AWS::Region\"},\"a\"]]},\n        \"BackupRetentionPeriod\": 7,\n        \"DBInstanceClass\": \"db.t3.medium\",\n        \"DBInstanceIdentifier\": \"everything2vpc\",\n        \"Engine\": \"mysql\",\n        \"EngineVersion\": \"5.7.37\",\n        \"MultiAZ\": false,\n        \"CACertificateIdentifier\": \"rds-ca-2019\",\n        \"DeletionProtection\": true,\n        \"DBSubnetGroupName\": {\"Ref\": \"EverythingDBSubnetGroup\"},\n        \"OptionGroupName\": {\"Ref\": \"DB57OptionGroup\"},\n        \"StorageType\": \"gp2\",\n        \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"AppVPC\",\"DefaultSecurityGroup\"]}, {\"Ref\": \"MainDBSecurityGroup\"}],\n        \"DBParameterGroupName\": {\"Ref\": \"EverythingDB57Parameters\"},\n        \"MasterUsername\": \"everyuser\",\n        \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"E2DBMasterPassword\"}, \"::password}}\"]]}\n      }\n    },\n    \"EverythingDB57Parameters\": {\n      \"Type\": \"AWS::RDS::DBParameterGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Enables stored procedures for E2 on mysql 5.7\",\n        \"Family\": \"mysql5.7\",\n        \"Parameters\": {\n          \"innodb_flush_log_at_trx_commit\": 1,\n          \"log_bin_trust_function_creators\": 1,\n          \"explicit_defaults_for_timestamp\": 0,\n          \"long_query_time\": 3\n        }\n      }\n    },\n    \"DB56OptionGroup\": {\n      \"Type\": \"AWS::RDS::OptionGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"EngineName\": \"mysql\",\n        \"MajorEngineVersion\": \"5.6\",\n        \"OptionGroupDescription\": \"mysql-5.6 default option group\",\n        \"OptionConfigurations\": []\n      }\n    },\n    \"DB57OptionGroup\": {\n      \"Type\": \"AWS::RDS::OptionGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"EngineName\": \"mysql\",\n        \"MajorEngineVersion\": \"5.7\",\n        \"OptionGroupDescription\": \"mysql-5.7 default option group\",\n        \"OptionConfigurations\": []\n      }\n    },\n    \"E2DBMasterPassword\": {\n      \"Type\": \"AWS::SecretsManager::Secret\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Username and password for the E2 database\",\n        \"Name\": \"E2DBMasterPassword\",\n        \"GenerateSecretString\": {\n          \"SecretStringTemplate\": \"{\\\"username\\\": \\\"everyuser\\\"}\",\n          \"GenerateStringKey\": \"password\",\n          \"PasswordLength\": 16,\n          \"ExcludeCharacters\": \"\\\"@/\\\\\"\n        }\n      }\n    },\n    \"E2MasterPasswordAttachment\": {\n      \"Type\" : \"AWS::SecretsManager::SecretTargetAttachment\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"SecretId\": {\"Ref\": \"E2DBMasterPassword\" },\n        \"TargetId\": {\"Ref\": \"EverythingDB\"},\n        \"TargetType\": \"AWS::RDS::DBInstance\"\n      }\n    },\n    \"ZipsBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"githubzips.everything2.com\"\n      }\n    },\n    \"ZipsBucketWritePolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows E2 processes to upload to the zips bucket\",\n        \"ManagedPolicyName\": \"ZipsBucketWritePolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"ZipsBucket\", \"Arn\"] }, \"/*\"]]}\n          }]\n        }\n      }\n    },\n    \"ZipsBucketReadPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows E2 process to read from the zips bucket\",\n        \"ManagedPolicyName\": \"ZipsBucketReadPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"ZipsBucket\", \"Arn\"] }, \"/*\"]]}\n          }]\n        }\n      }\n    },\n    \"ZipsLambdaInvokerPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows the webhooks receiver lambda to call the github pull handler\",\n        \"ManagedPolicyName\": \"ZipsLambdaInvokerPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"lambda:InvokeFunction\",\n            \"Resource\": {\"Fn::GetAtt\" : [\"LambdaZipsPuller\", \"Arn\"]}\n          }]\n        }\n      }\n    },\n    \"ReadGithubSecretPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows worker to read the current Github Webhook secret\",\n        \"ManagedPolicyName\": \"ReadGithubSecretPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": {\"Fn::Join\" : [\"\",[{\"Fn::GetAtt\": [\"SecretsS3Bucket\", \"Arn\"]}, \"/github_webhook_secret\"]]}\n            }\n          ]\n        }\n      }\n    },\n    \"InvokeWebhookReceiverPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows worker to invoke the webhooks receiver function\",\n        \"ManagedPolicyName\": \"InvokeWebhookReceiverPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"lambda:InvokeFunction\",\n              \"Resource\": {\"Fn::GetAtt\" : [\"LambdaWebhookReceiver\", \"Arn\"]}\n            }\n          ]\n        }\n      }\n    },\n    \"WebhooksAPIGatewayRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\"Service\": \"apigateway.amazonaws.com\"},\n            \"Action\": \"sts:AssumeRole\"\n          }\n        },\n        \"Description\": \"CI/CD webhook receiver for build pipeline\",\n        \"ManagedPolicyArns\": [\n            {\"Ref\": \"InvokeWebhookReceiverPolicy\"}\n        ],\n        \"Path\": \"/\",\n        \"RoleName\": \"Webhooks-APIGateway-Role\"\n      }\n    },\n    \"LambdaZipsWriterRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n           \"Statement\": {\n             \"Effect\": \"Allow\",\n             \"Principal\": {\"Service\": \"lambda.amazonaws.com\"},\n             \"Action\": \"sts:AssumeRole\"\n           }\n        },\n        \"Description\": \"CI/CD zips creater for build pipeline\",\n        \"ManagedPolicyArns\": [\n          {\"Ref\": \"ZipsBucketWritePolicy\"},\n          {\"Ref\": \"InvokeEverything2ZipfileProcessorPolicy\"},\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Path\": \"/\",\n        \"RoleName\": \"CICD-Zips-Role\"\n      }\n    },\n    \"LambdaWebhookReceiverRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n           \"Statement\": {\n             \"Effect\": \"Allow\",\n             \"Principal\": {\"Service\": \"lambda.amazonaws.com\"},\n             \"Action\": \"sts:AssumeRole\"\n           }\n        },\n        \"Description\": \"CI/CD zips creater for build pipeline\",\n        \"ManagedPolicyArns\": [\n          {\"Ref\": \"ZipsLambdaInvokerPolicy\"},\n          {\"Ref\": \"ReadGithubSecretPolicy\"},\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Path\": \"/\",\n        \"RoleName\": \"Webhook-Receiver-Role\"\n      }\n    },\n    \"LambdaZipsPuller\": {\n      \"Type\": \"AWS::Lambda::Function\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Code\": {\n          \"S3Bucket\": \"lambdasource.everything2.com\",\n          \"S3Key\": \"cicd-zips-puller.zip\"\n        },\n        \"FunctionName\": \"cicd-zips-puller\",\n        \"Role\": {\"Fn::GetAtt\" : [\"LambdaZipsWriterRole\", \"Arn\"]},\n        \"Runtime\": \"ruby2.7\",\n        \"Timeout\": \"120\",\n        \"MemorySize\": 512,\n        \"Handler\": \"handler.lambda_handler\"\n      }\n    },\n    \"LambdaWebhookReceiverPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"FunctionName\": {\"Fn::GetAtt\": [\"LambdaWebhookReceiver\",\"Arn\"]},\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"Action\": \"lambda:InvokeFunction\",\n        \"SourceArn\": { \"Fn::Join\": [ \"\", [\"arn:aws:execute-api:\", { \"Ref\": \"AWS::Region\" }, \":\",{ \"Ref\": \"AWS::AccountId\" }, \":\",{ \"Ref\": \"WebhooksAPIGateway\" },\"/*/*/newpush\"] ] }\n      }\n    },\n    \"WebhooksAPIGateway\": {\n      \"Type\": \"AWS::ApiGatewayV2::Api\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"FailOnWarnings\": true,\n        \"Body\": {\n          \"openapi\": \"3.0.3\",\n          \"info\": {\n            \"title\": \"E2 CICD Webhooks API\",\n            \"description\": \"This is the Webhooks frontend for GitHub integration into E2 deployment\",\n            \"contact\": {\n              \"name\": \"Account Help\",\n              \"email\": \"accounthelp@everything2.com\"\n            },\n            \"version\": \"1.0.1\"\n          },\n          \"servers\": [\n          {\n            \"url\": \"https://webhooks.everything2.com\",\n            \"description\": \"Production server\"\n          }],\n          \"paths\": {\n            \"/newpush\": {\n              \"post\": {\n                \"description\": \"Accepts a webhook from GitHub\",\n                \"responses\": {\n                  \"200\": {\n                    \"description\": \"Acceptance of request\"\n                  }\n                },\n                \"x-amazon-apigateway-integration\": {\n                  \"credentials\": {\"Fn::GetAtt\" : [\"WebhooksAPIGatewayRole\", \"Arn\"]},\n                  \"type\": \"AWS_PROXY\",\n                  \"httpMethod\": \"POST\",\n                  \"uri\": {\"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaWebhookReceiver.Arn}/invocations\"},\n                  \"payloadFormatVersion\": \"1.0\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"WebhooksAPIGatewayCertificate\": {\n      \"Type\": \"AWS::CertificateManager::Certificate\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DomainName\": \"webhooks.everything2.com\",\n        \"ValidationMethod\": \"DNS\"\n      }\n    },\n    \"WebhooksAPIGatewayDomain\": {\n      \"Type\": \"AWS::ApiGatewayV2::DomainName\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DomainName\": \"webhooks.everything2.com\",\n        \"DomainNameConfigurations\": [\n          {\n            \"CertificateArn\": {\"Ref\": \"WebhooksAPIGatewayCertificate\"},\n            \"CertificateName\": \"webhooks.everything2.com\",\n            \"EndpointType\": \"REGIONAL\"\n          }\n        ]\n      }\n    },\n    \"WebhooksAPIBasePath\": {\n      \"Type\": \"AWS::ApiGatewayV2::ApiMapping\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DomainName\": {\"Ref\": \"WebhooksAPIGatewayDomain\"},\n        \"ApiId\": {\"Ref\": \"WebhooksAPIGateway\"},\n        \"Stage\": {\"Ref\": \"WebhooksAPIProduction\"},\n        \"ApiMappingKey\": \"\"\n      }\n    },\n     \"WebhooksAPIGatewayRR\": {\n      \"Type\": \"AWS::Route53::RecordSet\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Name\": \"webhooks.everything2.com\",\n        \"HostedZoneName\": \"everything2.com.\",\n        \"AliasTarget\": {\n          \"DNSName\": {\"Fn::GetAtt\": [\"WebhooksAPIGatewayDomain\", \"RegionalDomainName\"]},\n          \"HostedZoneId\": {\"Fn::GetAtt\": [\"WebhooksAPIGatewayDomain\", \"RegionalHostedZoneId\"]},\n          \"EvaluateTargetHealth\": false\n        },\n        \"Type\": \"A\"\n      }\n    },\n    \"LambdaWebhookReceiver\": {\n      \"Type\": \"AWS::Lambda::Function\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Code\": {\n          \"S3Bucket\": \"lambdasource.everything2.com\",\n          \"S3Key\": \"webhooks-receiver.zip\"\n        },\n        \"FunctionName\": \"webhooks-receiver\",\n        \"Role\": {\"Fn::GetAtt\" : [\"LambdaWebhookReceiverRole\", \"Arn\"]},\n        \"Runtime\": \"ruby2.7\",\n        \"Timeout\": \"30\",\n        \"Handler\": \"handler.lambda_handler\"\n      }\n    },\n    \"WebhooksAPILogGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/lambda/\", {\"Ref\": \"LambdaWebhookReceiver\"}]]},\n        \"RetentionInDays\": 3\n      }\n    },\n    \"WebhooksAPIGatewayLogGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"LogGroupName\": \"/aws/apigateway/webhooks-production\",\n        \"RetentionInDays\": 3\n      }\n    },\n    \"CICDLambdaLogGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/lambda/\", {\"Ref\": \"LambdaZipsPuller\"}]]},\n        \"RetentionInDays\": 3\n      }\n    },\n    \"Everything2ZipfileProcessorGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/lambda/\", {\"Ref\": \"Everything2ZipfileProcessorLambda\"}]]},\n        \"RetentionInDays\": 3\n      }\n    },\n    \"WebhooksAPIProduction\": {\n      \"Type\": \"AWS::ApiGatewayV2::Stage\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Production Stage\",\n        \"StageName\": \"production\",\n        \"ApiId\": {\"Ref\": \"WebhooksAPIGateway\"},\n        \"AutoDeploy\": true,\n        \"AccessLogSettings\": {\n          \"DestinationArn\": {\"Fn::GetAtt\": [\"WebhooksAPIGatewayLogGroup\",\"Arn\"]},\n          \"Format\": \"{\\\"requestId\\\":\\\"$context.requestId\\\", \\\"domain\\\": \\\"$context.domainName\\\", \\\"ip\\\": \\\"$context.identity.sourceIp\\\", \\\"requestTime\\\":\\\"$context.requestTime\\\", \\\"routeKey\\\":\\\"$context.routeKey\\\", \\\"status\\\":\\\"$context.status\\\", \\\"error\\\":\\\"$context.error.message\\\", \\\"int_error\\\":\\\"$context.integrationErrorMessage\\\"}\"\n        }\n      }\n    },\n    \"WebhooksAPIGatewayDeployment\": {\n      \"Type\" : \"AWS::ApiGatewayV2::Deployment\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\" : {\n        \"Description\" : \"Production Deployment\",\n        \"ApiId\" : {\"Ref\": \"WebhooksAPIGateway\"},\n        \"StageName\" : {\"Ref\": \"WebhooksAPIProduction\"}\n      }\n    },\n    \"WebhookReceivedSNSTopic\": {\n      \"Type\": \"AWS::SNS::Topic\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DisplayName\": \"Github Webhook Received\",\n        \"TopicName\": \"webhook-received\"\n      }\n    },\n    \"Everything2ZipfileProcessorRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\"Service\": \"lambda.amazonaws.com\"},\n            \"Action\": \"sts:AssumeRole\"\n          }\n        },\n        \"Description\": \"Everything2 Zipfile Processor Lambda Role\",\n        \"ManagedPolicyArns\": [\n            {\"Ref\": \"ZipsBucketReadPolicy\"},\n            \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Path\": \"/\",\n        \"RoleName\": \"Everything2-Zipfile-Processor-Role\"\n      }\n    },\n    \"Everything2ZipfileProcessorLambda\": {\n      \"Type\": \"AWS::Lambda::Function\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Code\": {\n          \"S3Bucket\": \"lambdasource.everything2.com\",\n          \"S3Key\": \"everything2-zipfile-processor.zip\"\n        },\n        \"FunctionName\": \"everything2-zipfile-processor\",\n        \"Role\": {\"Fn::GetAtt\" : [\"Everything2ZipfileProcessorRole\", \"Arn\"]},\n        \"Runtime\": \"ruby2.7\",\n        \"MemorySize\": 350,\n        \"Timeout\": \"600\",\n        \"Handler\": \"handler.lambda_handler\"\n      }\n    },\n    \"InvokeEverything2ZipfileProcessorPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows the zipfile handler lambda to call the everything2 specific jobs\",\n        \"ManagedPolicyName\": \"InvokeEverything2ZipfileProcessorPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"lambda:InvokeFunction\",\n            \"Resource\": {\"Fn::GetAtt\" : [\"Everything2ZipfileProcessorLambda\", \"Arn\"]}\n          }]\n        }\n      }\n    },\n    \"SitemapBucketWritePolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows entites to write to the sitemaps bucket\",\n        \"ManagedPolicyName\": \"SitemapBucketWritePolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": [\"s3:PutObject\",\"s3:DeleteObject\"],\n              \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"SitemapS3Bucket\", \"Arn\"] }, \"/*\"]]}\n            }\n          ]\n        }\n      }\n    },\n    \"LambdaSecurityGroup\": {\n      \"Type\": \"AWS::EC2::SecurityGroup\",\n      \"Properties\": {\n        \"GroupDescription\": \"E2 Lambda Security Group\",\n        \"GroupName\": \"E2-Lambda-Security-Group\",\n        \"VpcId\": {\"Ref\": \"AppVPC\"}\n      }\n    },\n    \"AppErrorsEventBus\": {\n      \"Type\": \"AWS::Events::EventBus\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Name\": \"com.everything2.errors\"\n      }\n    },\n    \"AppUninitializedValuesEventBus\": {\n      \"Type\": \"AWS::Events::EventBus\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Name\": \"com.everything2.uninitialized\"\n      }\n    },\n    \"ApplicationUninitializedValuesArchive\": {\n      \"Type\": \"AWS::Events::Archive\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"ArchiveName\": \"e2-app-uninitialized-archive\",\n        \"Description\": \"Archiving app uninits\",\n        \"RetentionDays\": 3,\n        \"SourceArn\": {\"Fn::GetAtt\": [\"AppUninitializedValuesEventBus\", \"Arn\"]}\n      }\n    },\n    \"ApplicationUninitializedValueLoggingRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Subscribing to E2 app uninitialized values\",\n        \"Name\": \"e2-app-uninitialized-values-rule\",\n        \"EventBusName\": {\"Fn::GetAtt\": [\"AppUninitializedValuesEventBus\", \"Name\"]},\n        \"EventPattern\": {\"source\": [\"e2.webapp\"], \"detail-type\": [\"E2 Application Error\"]},\n        \"Targets\": [{\n          \"Arn\": {\"Fn::GetAtt\": [\"AppUninitializedLogGroup\",\"Arn\"]},\n          \"Id\": \"app-uninitialized-values-rule\"\n        }]\n      }\n    },\n    \"AppErrorsLogGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"LogGroupName\": \"/aws/events/e2-app-errors\",\n        \"RetentionInDays\": 3\n      }\n    },\n    \"AppUninitializedLogGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"LogGroupName\": \"/aws/events/e2-uninitialized-errors\",\n        \"RetentionInDays\": 3\n      }\n    },\n    \"ApplicationErrorLoggingRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Subscribing to E2 app errors\",\n        \"Name\": \"e2-app-errors-rule\",\n        \"EventBusName\": {\"Fn::GetAtt\": [\"AppErrorsEventBus\", \"Name\"]},\n        \"EventPattern\": {\"source\": [\"e2.webapp\"], \"detail-type\": [\"E2 Application Error\"]},\n        \"Targets\": [{\n          \"Arn\": {\"Fn::GetAtt\": [\"AppErrorsLogGroup\",\"Arn\"]},\n          \"Id\": \"Id1844360018781\"\n        }]\n      }\n    },\n    \"ApplicationEventsArchive\": {\n      \"Type\": \"AWS::Events::Archive\",\n      \"Properties\": {\n        \"ArchiveName\": \"e2-app-errors-archive\",\n        \"Description\": \"Archiving app errors\",\n        \"RetentionDays\": 3,\n        \"SourceArn\": {\"Fn::GetAtt\": [\"AppErrorsEventBus\", \"Arn\"]}\n      }\n    },\n    \"AppVPCRouteTable\": {\n      \"Type\": \"AWS::EC2::RouteTable\",\n      \"Properties\": {\n        \"VpcId\": {\"Ref\": \"AppVPC\"}\n      }\n    },\n    \"AppVPCS3SubnetAssociation3\": {\n      \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\",\n      \"Properties\": {\n        \"RouteTableId\": {\"Ref\": \"AppVPCRouteTable\"},\n        \"SubnetId\": {\"Ref\": \"AppVPCSubnet3\"}\n      }\n    },\n    \"AppVPCS3SubnetAssociation4\": {\n      \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\",\n      \"Properties\": {\n        \"RouteTableId\": {\"Ref\": \"AppVPCRouteTable\"},\n        \"SubnetId\": {\"Ref\": \"AppVPCSubnet4\"}\n      }\n    },\n    \"E2AppECRRegistry\": {\n      \"Type\": \"AWS::ECR::Repository\",\n      \"Properties\": {\n        \"RepositoryName\": \"everything2/e2app\",\n        \"LifecyclePolicy\": {\n          \"LifecyclePolicyText\": \"{\\\"rules\\\": [{\\\"rulePriority\\\": 1, \\\"description\\\": \\\"Expire images older than 3 days\\\", \\\"selection\\\": {\\\"tagStatus\\\": \\\"untagged\\\", \\\"countType\\\": \\\"sinceImagePushed\\\",\\\"countUnit\\\": \\\"days\\\", \\\"countNumber\\\": 3 }, \\\"action\\\": {\\\"type\\\": \\\"expire\\\"}}]}\"\n        }\n      }\n    },\n    \"CodeBuildUpdateApplicationECRRegistry\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows the codebuild job to update the ECR Registry\",\n        \"ManagedPolicyName\": \"CodeBuildECRPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n              \"ecr:BatchCheckLayerAvailability\",\n              \"ecr:BatchGetImage\",\n              \"ecr:GetDownloadUrlForLayer\",\n              \"ecr:GetRepositoryPolicy\",\n              \"ecr:Describe*\",\n              \"ecr:List*\",\n              \"ecr:CompleteLayerUpload\",\n              \"ecr:GetAuthorizationToken\",\n              \"ecr:InitiateLayerUpload\",\n              \"ecr:PutImage\",\n              \"ecr:UploadLayerPart\"\n            ],\n            \"Resource\": \"*\"\n          }]\n        }\n      }\n    },\n    \"ApplicationDockerCodeBuildRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"},\n            \"Action\": \"sts:AssumeRole\"\n          }\n        },\n        \"Description\": \"Docker builder CodeBuild role\",\n        \"ManagedPolicyArns\": [\n            {\"Ref\": \"CodeBuildUpdateApplicationECRRegistry\"},\n            {\"Ref\": \"DockerCodeBuildLogWritePolicy\"},\n            {\"Ref\": \"ZipsBucketReadPolicy\"},\n            {\"Ref\": \"BuildcacheAccessPolicy\"},\n            {\"Ref\": \"DockerHubSecretsAccessPolicy\"},\n            {\"Ref\": \"DeployedAssetsManagement\"},\n            \"arn:aws:iam::aws:policy/AWSCodeCommitReadOnly\"\n        ],\n        \"Path\": \"/\",\n        \"RoleName\": \"Docker-Builder-CodeBuild-Role\"\n      }\n    },\n    \"DockerCodeBuildProject\": {\n      \"Type\": \"AWS::CodeBuild::Project\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Artifacts\": {\n          \"Type\": \"NO_ARTIFACTS\"\n        },\n        \"LogsConfig\": {\n          \"CloudWatchLogs\": {\n            \"Status\": \"ENABLED\",\n            \"GroupName\": {\"Ref\": \"DockerCodeBuildLogGroup\"}\n          }\n        },\n        \"Name\": \"E2-Application-Builder\",\n        \"ServiceRole\": {\"Ref\": \"ApplicationDockerCodeBuildRole\"},\n        \"Source\": {\n          \"Type\": \"CODECOMMIT\",\n          \"BuildSpec\": \"docker/buildspec.yml\",\n          \"Location\": {\"Fn::GetAtt\": [\"Everything2CodeCommitRepo\",\"CloneUrlHttp\"]}\n        },\n        \"TimeoutInMinutes\": 90,\n        \"Environment\": {\n          \"ComputeType\": \"BUILD_GENERAL1_SMALL\",\n          \"Image\": \"aws/codebuild/standard:4.0\",\n          \"Type\": \"LINUX_CONTAINER\",\n          \"EnvironmentVariables\": [\n            {\n              \"Name\": \"AWS_REGION\",\n              \"Value\": {\"Ref\": \"AWS::Region\"}\n            },\n            {\n              \"Name\": \"AWS_ACCOUNT_ID\",\n              \"Value\": {\"Ref\": \"AWS::AccountId\"}\n            },\n            {\n              \"Name\": \"IMAGE_TAG\",\n              \"Value\": \"latest\"\n            },\n            {\n              \"Name\": \"BUILDCACHE_BUCKET\",\n              \"Value\": {\"Ref\": \"BuildcacheBucket\"}\n            },\n            {\n              \"Name\": \"SECRETS_BUCKET\",\n              \"Value\": {\"Ref\": \"SecretsS3Bucket\"} \n            },\n            {\n              \"Name\": \"ASSETS_BUCKET\",\n              \"Value\": {\"Ref\": \"DeployedAssetsBucket\"}\n            }\n          ],\n          \"PrivilegedMode\": true\n        },\n        \"Cache\": {\n          \"Location\": \"LOCAL\",\n          \"Type\": \"LOCAL\",\n          \"Modes\": [LOCAL_DOCKER_LAYER_CACHE]\n        }\n      }\n    },\n    \"DockerCodeBuildLogGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"LogGroupName\": \"/aws/codebuild/dockerbuild\",\n        \"RetentionInDays\": 3\n      }\n    },\n    \"DockerCodeBuildLogWritePolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows CodeBuild to write to the log group\",\n        \"ManagedPolicyName\": \"DockerCodeBuildLogWritePolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"logs:PutLogEvents\",\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"DockerCodeBuildLogGroup\", \"Arn\"] }, \":*\"]]}\n          },\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"logs:CreateLogStream\",\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"DockerCodeBuildLogGroup\", \"Arn\"] }, \":*\"]]}\n          }]\n        }\n      }\n    },\n    \"DockerHubSecretsAccessPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows CodeBuild worker to read the Docker Hub secrets so it can fetch the Ubuntu secret\",\n        \"ManagedPolicyName\": \"DockerHubSecretsAccessPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"SecretsS3Bucket\", \"Arn\"] }, \"/docker_hub_password\"]]}\n            }\n          ]\n        }\n      }\n    },\n    \"BuildcacheBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"buildcache.everything2.com\"\n      }\n    },\n    \"BuildcacheAccessPolicy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Ability to access the buildcache bucket\",\n        \"ManagedPolicyName\": \"BuildcacheAccessPolicy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": [\"s3:GetObject\",\"s3:DeleteObject\",\"s3:PutObject\"],\n              \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"BuildcacheBucket\", \"Arn\"] }, \"/*\"]]}\n            },\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": [\"s3:ListBucket\"],\n              \"Resource\": {\"Fn::GetAtt\": [\"BuildcacheBucket\", \"Arn\"]}\n            }\n          ]\n        }\n      }\n    },\n    \"ECSServiceLinkedRole\": {\n      \"Type\": \"AWS::IAM::ServiceLinkedRole\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AWSServiceName\": \"ecs.amazonaws.com\",\n        \"Description\": \"Role to enable Amazon ECS to manage your cluster.\"\n      }\n    },\n    \"ECSAppCluster\": {\n      \"Type\": \"AWS::ECS::Cluster\",\n      \"Properties\": {\n        \"CapacityProviders\": [\"FARGATE\",\"FARGATE_SPOT\"],\n        \"ClusterName\": \"E2-App-ECS-Cluster\" \n      }\n    },\n    \"ELBLogsBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"elblogs.everything2.com\",\n        \"LifecycleConfiguration\": {\n          \"Rules\": [{\n            \"Id\": \"DeleteAfter30\",\n            \"Status\": \"Enabled\",\n            \"ExpirationInDays\": \"30\"\n          }]\n        }\n      }\n    },\n    \"ELBLogsSystemAccessPolicy\": {\n      \"Type\": \"AWS::S3::BucketPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Bucket\": {\"Ref\": \"ELBLogsBucket\"},\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n              \"AWS\": {\"Fn::Join\": [\"\",[\"arn:aws:iam::\",{\"Fn::FindInMap\" : [ \"RegionMap\", { \"Ref\" : \"AWS::Region\" }, \"ELBAccountID\"]},\":root\"]]}\n            },\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": {\"Fn::Join\": [\"\",[\"arn:aws:s3:::\",{\"Ref\": \"ELBLogsBucket\"},\"/AWSLogs/\",{\"Ref\": \"AWS::AccountId\"},\"/*\"]]}\n          },\n          {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n              \"Service\": \"delivery.logs.amazonaws.com\"\n            },\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": {\"Fn::Join\": [\"\",[\"arn:aws:s3:::\",{\"Ref\": \"ELBLogsBucket\"}, \"/AWSLogs/\",{\"Ref\": \"AWS::AccountId\"},\"/*\"]]},\n            \"Condition\": {\n              \"StringEquals\": {\n                \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n              }\n            }\n          },\n          {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n              \"Service\": \"delivery.logs.amazonaws.com\"\n            },\n            \"Action\": \"s3:GetBucketAcl\",\n            \"Resource\": {\"Fn::Join\": [\"\",[\"arn:aws:s3:::\",{\"Ref\": \"ELBLogsBucket\"}]]}\n          }]\n        } \n      }\n    },\n    \"NodepackBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"nodepack.everything2.com\"\n      }\n    },\n    \"NodepackS3Policy\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Allows nodepack lambda jobs to interact with the nodepack bucket\",\n        \"ManagedPolicyName\": \"NodepackS3Policy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": [\"s3:PutObject\",\"s3:DeleteObject\",\"s3:GetObject\"],\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"NodepackBucket\", \"Arn\"] }, \"/*\"]]}\n          },\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:ListBucket\",\n            \"Resource\": {\"Fn::GetAtt\": [\"NodepackBucket\", \"Arn\"]}\n          }]\n        }\n      }\n    },\n    \"E2AppFargateTaskDefinition\": {\n      \"Type\": \"AWS::ECS::TaskDefinition\",\n      \"Properties\": {\n        \"Cpu\": 1024,\n        \"Memory\": 3072,\n        \"Family\": \"e2app-family\",\n        \"ExecutionRoleArn\": {\"Ref\": \"E2TaskExecutionRole\"},\n        \"RequiresCompatibilities\": [\"FARGATE\"],\n        \"NetworkMode\": \"awsvpc\",\n        \"RuntimePlatform\": {\n          \"CpuArchitecture\": \"X86_64\",\n          \"OperatingSystemFamily\": \"LINUX\"\n        },\n        \"TaskRoleArn\": {\"Ref\": \"AppFargateTaskRole\"},\n        \"ContainerDefinitions\": [{\n          \"Name\": \"e2app\",\n          \"Image\": {\"Fn::Join\": [\":\",[{\"Fn::GetAtt\": [\"E2AppECRRegistry\",\"RepositoryUri\"]},\"latest\"]]},\n          \"Memory\": 3072,\n          \"Essential\": true,\n          \"HealthCheck\": {\n            \"Interval\": 30,\n            \"Retries\": 3,\n            \"StartPeriod\": 20,\n            \"Timeout\": 5,\n            \"Command\": [\"CMD-SHELL\",\"curl -f http://localhost/ || exit 1\" ]\n          },\n          \"LogConfiguration\": {\n            \"LogDriver\": \"awslogs\",\n            \"Options\": {\n              \"awslogs-group\": \"/aws/fargate/fargate-app-awslogs\",\n              \"awslogs-region\": {\"Ref\": \"AWS::Region\"},\n              \"awslogs-stream-prefix\": \"e2-fargate\"\n            }\n          },\n          \"PortMappings\": [{\n            \"ContainerPort\": 443,\n            \"HostPort\": 443\n          }]\n        }]\n      }\n    },\n    \"E2CronFargateTaskDefinition\": {\n      \"Type\": \"AWS::ECS::TaskDefinition\",\n      \"Properties\": {\n        \"Cpu\": 512,\n        \"Memory\": 1024,\n        \"Family\": \"e2cron-family\",\n        \"ExecutionRoleArn\": {\"Ref\": \"E2TaskExecutionRole\"},\n        \"RequiresCompatibilities\": [\"FARGATE\"],\n        \"NetworkMode\": \"awsvpc\",\n        \"RuntimePlatform\": {\n          \"CpuArchitecture\": \"X86_64\",\n          \"OperatingSystemFamily\": \"LINUX\"\n        },\n        \"TaskRoleArn\": {\"Ref\": \"AppFargateTaskRole\"},\n        \"ContainerDefinitions\": [{\n          \"Name\": \"e2app\",\n          \"Image\": {\"Fn::Join\": [\":\",[{\"Fn::GetAtt\": [\"E2AppECRRegistry\",\"RepositoryUri\"]},\"latest\"]]},\n          \"Memory\": 1024,\n          \"Essential\": true,\n          \"LogConfiguration\": {\n            \"LogDriver\": \"awslogs\",\n            \"Options\": {\n              \"awslogs-group\": \"/aws/fargate/fargate-cron-awslogs\",\n              \"awslogs-region\": {\"Ref\": \"AWS::Region\"},\n              \"awslogs-stream-prefix\": \"e2-fargate\"\n            }\n          }\n        }]\n      }\n    },\n    \"FargateServiceLogGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"Properties\": {\n        \"LogGroupName\": \"/aws/fargate/fargate-app-awslogs\",\n        \"RetentionInDays\": 3\n      }\n    },\n    \"FargateCronLogGroup\": {\n      \"Type\": \"AWS::Logs::LogGroup\",\n      \"Properties\": {\n        \"LogGroupName\": \"/aws/fargate/fargate-cron-awslogs\",\n        \"RetentionInDays\": 3\n      }\n    },\n    \"ECSFargateAppService\": {\n      \"Type\": \"AWS::ECS::Service\",\n      \"Properties\": {\n        \"Cluster\": {\"Ref\": \"ECSAppCluster\"},\n        \"EnableECSManagedTags\": true,\n        \"ServiceName\": \"E2-App-Fargate-Service\",\n        \"DeploymentController\": {\n          \"Type\": \"ECS\"\n        },\n        \"DeploymentConfiguration\": {\n          \"MaximumPercent\": 200,\n          \"MinimumHealthyPercent\": 100\n        },\n        \"NetworkConfiguration\": {\n          \"AwsvpcConfiguration\": {\n            \"AssignPublicIp\": \"ENABLED\",\n            \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n            \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n          }\n        },\n        \"DesiredCount\": 1,\n        \"TaskDefinition\": {\"Ref\": \"E2AppFargateTaskDefinition\"},\n        \"CapacityProviderStrategy\": [{\n          \"CapacityProvider\": \"FARGATE\",\n          \"Base\": 1,\n          \"Weight\": 1\n        },{\n          \"CapacityProvider\": \"FARGATE_SPOT\",\n          \"Weight\": 4\n        }],\n        \"LoadBalancers\": [{\n          \"ContainerName\": \"e2app\",\n          \"ContainerPort\": 443,\n          \"TargetGroupArn\": {\"Ref\": \"FargateTargetGroup\"} \n        }]\n      }\n    },\n    \"ContainerizedFrontendELB\": {\n      \"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Name\": \"E2-Containerized-Frontend-ELB\",\n        \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"},{\"Ref\": \"AppVPCSubnet2\"}],\n        \"SecurityGroups\": [{\"Ref\": \"ELBFrontendSecurityGroup\"}],\n        \"LoadBalancerAttributes\": [\n          {\n            \"Key\": \"access_logs.s3.enabled\",\n            \"Value\": true\n          },\n          {\n            \"Key\": \"access_logs.s3.bucket\",\n            \"Value\": {\"Ref\": \"ELBLogsBucket\"}\n          }\n        ]\n      }\n    },\n    \"FargateTargetGroup\": {\n      \"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Name\": \"E2-App-Fargate-HTTPS-TG\",\n        \"VpcId\": {\"Ref\": \"AppVPC\"},\n        \"Protocol\": \"HTTPS\",\n        \"Port\": \"443\",\n        \"HealthCheckEnabled\": true,\n        \"HealthCheckPort\": \"443\",\n        \"HealthCheckProtocol\": \"HTTPS\",\n        \"Matcher\": {\n          \"HttpCode\": \"200\"\n        },\n        \"TargetType\": \"ip\",\n        \"TargetGroupAttributes\": [\n          {\n            \"Key\": \"deregistration_delay.timeout_seconds\",\n            \"Value\": \"10\"\n          }\n        ]\n      }\n    },\n    \"ELBContainerizedAppHTTPSListener\": {\n      \"Type\": \"AWS::ElasticLoadBalancingV2::Listener\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DefaultActions\": [\n          {\n            \"TargetGroupArn\": {\"Ref\": \"FargateTargetGroup\"},\n            \"Type\": \"forward\"\n          }\n        ],\n        \"Certificates\": [{\"CertificateArn\": {\"Ref\": \"E2ELBCertificate\"}}],\n        \"LoadBalancerArn\": {\"Ref\": \"ContainerizedFrontendELB\"},\n        \"Port\": \"443\",\n        \"Protocol\": \"HTTPS\",\n        \"SslPolicy\": \"ELBSecurityPolicy-TLS-1-2-Ext-2018-06\"\n      }\n    },\n    \"ELBContainerizedAppHTTPListener\": {\n      \"Type\": \"AWS::ElasticLoadBalancingV2::Listener\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"DefaultActions\": [\n          {\n            \"Type\": \"redirect\",\n            \"RedirectConfig\": {\n              \"Protocol\": \"HTTPS\",\n              \"Port\": \"443\",\n              \"Host\": \"#{host}\",\n              \"Path\": \"/#{path}\",\n              \"Query\": \"#{query}\",\n              \"StatusCode\": \"HTTP_301\"\n            }\n          }\n        ],\n        \"LoadBalancerArn\": {\"Ref\": \"ContainerizedFrontendELB\"},\n        \"Port\": \"80\",\n        \"Protocol\": \"HTTP\"\n      }\n    },\n    \"AppFargateTaskRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"},\n            \"Action\": \"sts:AssumeRole\"\n          }\n        },\n        \"Description\": \"Role for Fargate App workloads\",\n        \"ManagedPolicyArns\": [\n            {\"Ref\": \"E2AppS3Policy\"},\n            {\"Ref\": \"E2AppMailerPolicy\"},\n            {\"Ref\": \"E2AppSecretsAccessPolicy\"},\n            {\"Ref\": \"E2AppServerSNSPolicy\"},\n            {\"Ref\": \"CloudWatchEventsWritePolicy\"},\n            {\"Ref\": \"NodepackS3Policy\"},\n            {\"Ref\": \"SitemapBucketWritePolicy\"}\n        ],\n        \"Path\": \"/\",\n        \"RoleName\": \"E2-App-Fargate-Task-Role\"\n      }\n    },\n    \"E2TaskExecutionRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"},\n            \"Action\": \"sts:AssumeRole\"\n          }\n        },\n        \"Description\": \"Role for E2 Task Execution Role inside of the container\",\n        \"ManagedPolicyArns\": [\n            \"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\"\n        ],\n        \"Path\": \"/\",\n        \"RoleName\": \"E2-Task-Execution-Role\"\n      }\n    },\n    \"AppAutoScalingRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"RoleName\": \"e2-fargate-auto-scaling-role\",\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\"Service\": \"application-autoscaling.amazonaws.com\"},\n            \"Action\": \"sts:AssumeRole\"\n          }\n        },\n        \"Policies\": [{\n          \"PolicyName\": \"service-auto-scaling-policy\",\n          \"PolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": {\n              \"Effect\": \"Allow\",\n              \"Action\": [\"ecs:DescribeServices\",\"ecs:UpdateServices\",\"cloudwatch:PutMetricAlarm\",\"cloudwatch:DescribeAlarms\",\"cloudwatch:DeleteAlarms\"],\n              \"Resource\": \"*\"\n            }\n          }\n        }]\n      }\n    },\n    \"FargateAppScalableTarget\": {\n      \"Type\": \"AWS::ApplicationAutoScaling::ScalableTarget\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"RoleARN\": {\"Fn::GetAtt\": [\"AppAutoScalingRole\",\"Arn\"]},\n        \"ResourceId\": {\"Fn::Join\": [\"/\",[\"service\",{\"Ref\": \"ECSAppCluster\"},{\"Fn::GetAtt\": [\"ECSFargateAppService\",\"Name\"]}]]},\n        \"ServiceNamespace\": \"ecs\",\n        \"ScalableDimension\": \"ecs:service:DesiredCount\",\n        \"MinCapacity\": 1,\n        \"MaxCapacity\": 10\n      }\n    },\n    \"FargateAppAutoScalingPolicy\": {\n      \"Type\": \"AWS::ApplicationAutoScaling::ScalingPolicy\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"PolicyName\": \"FargateAppCPUAutoScalingPolicy\",\n        \"PolicyType\": \"TargetTrackingScaling\",\n        \"ScalingTargetId\": {\"Ref\": \"FargateAppScalableTarget\"},\n        \"TargetTrackingScalingPolicyConfiguration\": {\n          \"DisableScaleIn\": true,\n          \"TargetValue\": 60,\n          \"ScaleInCooldown\": 60,\n          \"ScaleOutCooldown\": 60,\n          \"PredefinedMetricSpecification\": {\n            \"PredefinedMetricType\": \"ECSServiceAverageCPUUtilization\"\n          }\n        }\n      }\n    },\n    \"ECSEventsRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"RoleName\": \"e2-ecs-events-role\",\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\"Service\": \"events.amazonaws.com\"},\n            \"Action\": \"sts:AssumeRole\"\n          }\n        },\n        \"Policies\": [{\n          \"PolicyName\": \"e2-ecs-pass-any-role\",\n          \"PolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": {\n              \"Effect\": \"Allow\",\n              \"Action\": [\"iam:PassRole\"],\n              \"Resource\": \"*\"\n            }\n          }\n        },\n        {\n          \"PolicyName\": \"e2-ecs-run-any-task\",\n          \"PolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": {\n              \"Effect\": \"Allow\",\n              \"Action\": [\"ecs:RunTask\"],\n              \"Resource\": \"*\"\n            }\n          }\n        }]\n      }\n    },\n    \"CronChatterboxCleanupRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Cron rule to call chatterbox-cleanup\",\n        \"Name\": \"cron-chatterbox-cleanup\",\n        \"State\": \"ENABLED\",\n        \"ScheduleExpression\": \"cron(50 * * * ? *)\",\n        \"Targets\": [{\n          \"Id\": \"chatterbox-cleanup-task-arn\",\n          \"Input\": \"{\\\"containerOverrides\\\": [{\\\"name\\\": \\\"e2app\\\", \\\"command\\\": [\\\"/usr/bin/perl\\\",\\\"/var/everything/cron/cron_clean_cbox.pl\\\"]}]}\",\n          \"Arn\": {\"Fn::Sub\": \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSAppCluster}\"},\n          \"RoleArn\": {\"Fn::GetAtt\": [\"ECSEventsRole\",\"Arn\"]},\n          \"EcsParameters\": {\n            \"TaskCount\": 1,\n            \"TaskDefinitionArn\": {\"Ref\": \"E2CronFargateTaskDefinition\"},\n            \"NetworkConfiguration\": {\n              \"AwsVpcConfiguration\": {\n                \"AssignPublicIp\": \"ENABLED\",\n                \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n                \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n              }\n            },\n            \"CapacityProviderStrategy\": [\n              {\n                \"Base\": 1,\n                \"CapacityProvider\": \"FARGATE_SPOT\",\n                \"Weight\": 4\n              },\n              {\n                \"CapacityProvider\": \"FARGATE\",\n                \"Weight\": 1\n              }\n            ]\n          }\n        }]\n      }\n    },\n    \"CronGenerateSitemapRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Cron rule to call generate-sitemap\",\n        \"Name\": \"cron-generate-sitemap\",\n        \"State\": \"ENABLED\",\n        \"ScheduleExpression\": \"cron(0 0 * * ? *)\",\n        \"Targets\": [{\n          \"Id\": \"cron-sitemap-task-arn\",\n          \"Input\": \"{\\\"containerOverrides\\\": [{\\\"name\\\": \\\"e2app\\\", \\\"command\\\": [\\\"/usr/bin/perl\\\",\\\"/var/everything/cron/cron_generate_sitemap.pl\\\"]}]}\",\n          \"Arn\": {\"Fn::Sub\": \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSAppCluster}\"},\n          \"RoleArn\": {\"Fn::GetAtt\": [\"ECSEventsRole\",\"Arn\"]},\n          \"EcsParameters\": {\n            \"TaskCount\": 1,\n            \"TaskDefinitionArn\": {\"Ref\": \"E2CronFargateTaskDefinition\"},\n            \"NetworkConfiguration\": {\n              \"AwsVpcConfiguration\": {\n                \"AssignPublicIp\": \"ENABLED\",\n                \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n                \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n              }\n            },\n            \"CapacityProviderStrategy\": [\n              {\n                \"Base\": 1,\n                \"CapacityProvider\": \"FARGATE_SPOT\",\n                \"Weight\": 4\n              },\n              {\n                \"CapacityProvider\": \"FARGATE\",\n                \"Weight\": 1\n              }\n            ]\n          }\n        }]\n      }\n    },\n    \"CronDatastashRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Cron rule to call datastash\",\n        \"Name\": \"cron-datastash\",\n        \"State\": \"ENABLED\",\n        \"ScheduleExpression\": \"rate(2 minutes)\",\n        \"Targets\": [{\n          \"Id\": \"datastash-task-arn\",\n          \"Input\": \"{\\\"containerOverrides\\\": [{\\\"name\\\": \\\"e2app\\\", \\\"command\\\": [\\\"/usr/bin/perl\\\",\\\"/var/everything/cron/cron_datastash.pl\\\"]}]}\",\n          \"Arn\": {\"Fn::Sub\": \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSAppCluster}\"},\n          \"RoleArn\": {\"Fn::GetAtt\": [\"ECSEventsRole\",\"Arn\"]},\n          \"EcsParameters\": {\n            \"TaskCount\": 1,\n            \"TaskDefinitionArn\": {\"Ref\": \"E2CronFargateTaskDefinition\"},\n            \"NetworkConfiguration\": {\n              \"AwsVpcConfiguration\": {\n                \"AssignPublicIp\": \"ENABLED\",\n                \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n                \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n              }\n            },\n            \"CapacityProviderStrategy\": [\n              {\n                \"Base\": 1,\n                \"CapacityProvider\": \"FARGATE_SPOT\",\n                \"Weight\": 4\n              },\n              {\n                \"CapacityProvider\": \"FARGATE\",\n                \"Weight\": 1\n              }\n            ]\n          }\n        }]\n      }\n    },\n    \"CronDatastashLengthyRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Cron rule to call datastash lengthy\",\n        \"Name\": \"cron-datastash-lengthy\",\n        \"State\": \"ENABLED\",\n        \"ScheduleExpression\": \"rate(6 hours)\",\n        \"Targets\": [{\n          \"Id\": \"datastash-lengthy-task-arn\",\n          \"Input\": \"{\\\"containerOverrides\\\": [{\\\"name\\\": \\\"e2app\\\", \\\"command\\\": [\\\"/usr/bin/perl\\\",\\\"/var/everything/cron/cron_datastash.pl\\\",\\\"--lengthy\\\"]}]}\",\n          \"Arn\": {\"Fn::Sub\": \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSAppCluster}\"},\n          \"RoleArn\": {\"Fn::GetAtt\": [\"ECSEventsRole\",\"Arn\"]},\n          \"EcsParameters\": {\n            \"TaskCount\": 1,\n            \"TaskDefinitionArn\": {\"Ref\": \"E2CronFargateTaskDefinition\"},\n            \"NetworkConfiguration\": {\n              \"AwsVpcConfiguration\": {\n                \"AssignPublicIp\": \"ENABLED\",\n                \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n                \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n              }\n            },\n            \"CapacityProviderStrategy\": [\n              {\n                \"Base\": 1,\n                \"CapacityProvider\": \"FARGATE_SPOT\",\n                \"Weight\": 4\n              },\n              {\n                \"CapacityProvider\": \"FARGATE\",\n                \"Weight\": 1\n              }\n            ]\n          }\n        }]\n      }\n    },\n    \"CronIQMRecalcRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Cron rule to call IQM Recalculate\",\n        \"Name\": \"cron-iqm-recalc\",\n        \"State\": \"ENABLED\",\n        \"ScheduleExpression\": \"rate(1 day)\",\n        \"Targets\": [{\n          \"Id\": \"iqm-recalc-task-arn\",\n          \"Input\": \"{\\\"containerOverrides\\\": [{\\\"name\\\": \\\"e2app\\\", \\\"command\\\": [\\\"/usr/bin/perl\\\",\\\"/var/everything/cron/cron_iqm_recalculate.pl\\\"]}]}\",\n          \"Arn\": {\"Fn::Sub\": \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSAppCluster}\"},\n          \"RoleArn\": {\"Fn::GetAtt\": [\"ECSEventsRole\",\"Arn\"]},\n          \"EcsParameters\": {\n            \"TaskCount\": 1,\n            \"TaskDefinitionArn\": {\"Ref\": \"E2CronFargateTaskDefinition\"},\n            \"NetworkConfiguration\": {\n              \"AwsVpcConfiguration\": {\n                \"AssignPublicIp\": \"ENABLED\",\n                \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n                \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n              }\n            },\n            \"CapacityProviderStrategy\": [\n              {\n                \"Base\": 1,\n                \"CapacityProvider\": \"FARGATE_SPOT\",\n                \"Weight\": 4\n              },\n              {\n                \"CapacityProvider\": \"FARGATE\",\n                \"Weight\": 1\n              }\n            ]\n          }\n        }]\n      }\n    },\n    \"CronRefreshRoomsRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Cron rule to call refresh rooms\",\n        \"Name\": \"cron-refresh-rooms\",\n        \"State\": \"ENABLED\",\n        \"ScheduleExpression\": \"rate(5 minutes)\",\n        \"Targets\": [{\n          \"Id\": \"refresh-rooms-task-arn\",\n          \"Input\": \"{\\\"containerOverrides\\\": [{\\\"name\\\": \\\"e2app\\\", \\\"command\\\": [\\\"/usr/bin/perl\\\",\\\"/var/everything/cron/cron_refresh_rooms.pl\\\"]}]}\",\n          \"Arn\": {\"Fn::Sub\": \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSAppCluster}\"},\n          \"RoleArn\": {\"Fn::GetAtt\": [\"ECSEventsRole\",\"Arn\"]},\n          \"EcsParameters\": {\n            \"TaskCount\": 1,\n            \"TaskDefinitionArn\": {\"Ref\": \"E2CronFargateTaskDefinition\"},\n            \"NetworkConfiguration\": {\n              \"AwsVpcConfiguration\": {\n                \"AssignPublicIp\": \"ENABLED\",\n                \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n                \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n              }\n            },\n            \"CapacityProviderStrategy\": [\n              {\n                \"Base\": 1,\n                \"CapacityProvider\": \"FARGATE_SPOT\",\n                \"Weight\": 4\n              },\n              {\n                \"CapacityProvider\": \"FARGATE\",\n                \"Weight\": 1\n              }\n            ]\n          }\n        }]\n      }\n    },\n    \"CronCleanOldRoomsRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Cron rule to call clean old rooms\",\n        \"Name\": \"cron-clean-old-rooms\",\n        \"State\": \"ENABLED\",\n        \"ScheduleExpression\": \"rate(1 day)\",\n        \"Targets\": [{\n          \"Id\": \"clean-old-rooms-task-arn\",\n          \"Input\": \"{\\\"containerOverrides\\\": [{\\\"name\\\": \\\"e2app\\\", \\\"command\\\": [\\\"/usr/bin/perl\\\",\\\"/var/everything/cron/cron_clean_old_rooms.pl\\\"]}]}\",\n          \"Arn\": {\"Fn::Sub\": \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSAppCluster}\"},\n          \"RoleArn\": {\"Fn::GetAtt\": [\"ECSEventsRole\",\"Arn\"]},\n          \"EcsParameters\": {\n            \"TaskCount\": 1,\n            \"TaskDefinitionArn\": {\"Ref\": \"E2CronFargateTaskDefinition\"},\n            \"NetworkConfiguration\": {\n              \"AwsVpcConfiguration\": {\n                \"AssignPublicIp\": \"ENABLED\",\n                \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n                \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n              }\n            },\n            \"CapacityProviderStrategy\": [\n              {\n                \"Base\": 1,\n                \"CapacityProvider\": \"FARGATE_SPOT\",\n                \"Weight\": 4\n              },\n              {\n                \"CapacityProvider\": \"FARGATE\",\n                \"Weight\": 1\n              }\n            ]\n          }\n        }]\n      }\n    },\n    \"CronWriteupReaperRule\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Description\": \"Cron rule to call legacy writeup reaper\",\n        \"Name\": \"cron-writeup-reaper\",\n        \"State\": \"ENABLED\",\n        \"ScheduleExpression\": \"rate(1 day)\",\n        \"Targets\": [{\n          \"Id\": \"writeup-reaper-task-arn\",\n          \"Input\": \"{\\\"containerOverrides\\\": [{\\\"name\\\": \\\"e2app\\\", \\\"command\\\": [\\\"/usr/bin/perl\\\",\\\"/var/everything/cron/cron_writeup_reaper.pl\\\"]}]}\",\n          \"Arn\": {\"Fn::Sub\": \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ECSAppCluster}\"},\n          \"RoleArn\": {\"Fn::GetAtt\": [\"ECSEventsRole\",\"Arn\"]},\n          \"EcsParameters\": {\n            \"TaskCount\": 1,\n            \"TaskDefinitionArn\": {\"Ref\": \"E2CronFargateTaskDefinition\"},\n            \"NetworkConfiguration\": {\n              \"AwsVpcConfiguration\": {\n                \"AssignPublicIp\": \"ENABLED\",\n                \"SecurityGroups\": [{\"Ref\": \"E2AppWebheadSecurityGroup\"}],\n                \"Subnets\": [{\"Ref\": \"AppVPCSubnet1\"}]\n              }\n            },\n            \"CapacityProviderStrategy\": [\n              {\n                \"Base\": 1,\n                \"CapacityProvider\": \"FARGATE_SPOT\",\n                \"Weight\": 4\n              },\n              {\n                \"CapacityProvider\": \"FARGATE\",\n                \"Weight\": 1\n              }\n            ]\n          }\n        }]\n      }\n    },\n    \"Everything2CodeCommitRepo\": {\n      \"Type\": \"AWS::CodeCommit::Repository\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"RepositoryName\": \"everything2\",\n        \"RepositoryDescription\": \"Mirror of GitHub everything2/everything2 repo\"\n      }\n    },\n    \"ExtGithubCodeCommitUser\": {\n      \"Type\": \"AWS::IAM::User\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"Policies\": [\n          {\n            \"PolicyName\": \"external-github-codecommit-access\",\n            \"PolicyDocument\": {\n              \"Version\": \"2012-10-17\",\n              \"Statement\": [\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": \"codecommit:*\",\n                \"Resource\": {\"Fn::GetAtt\": [\"Everything2CodeCommitRepo\",\"Arn\"]}\n              }]\n            }\n          }\n        ],\n        \"UserName\": \"External-GitHub-Actions-User\"\n      }\n    },\n    \"DeployedAssetsBucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"DeletionPolicy\": \"Retain\",\n      \"Properties\": {\n        \"BucketName\": \"deployed.everything2.com\",\n        \"AccessControl\": \"PublicRead\",\n        \"PublicAccessBlockConfiguration\": {\n          \"BlockPublicAcls\": false,\n          \"BlockPublicPolicy\": false,\n          \"IgnorePublicAcls\": false,\n          \"RestrictPublicBuckets\": false\n        }\n      }\n    },\n    \"DeployedAssetsBucketReadPolicy\": {\n      \"Type\": \"AWS::S3::BucketPolicy\",\n      \"Properties\": {\n        \"Bucket\": {\"Ref\": \"DeployedAssetsBucket\"},\n        \"PolicyDocument\": {\n          \"Id\": \"DeployedAssetsRead\",\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Sid\": \"PublicReadForGetObject\",\n              \"Effect\": \"Allow\",\n              \"Principal\": \"*\",\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": {\"Fn::Join\": [\"\",[\"arn:aws:s3:::\",{\"Ref\": \"DeployedAssetsBucket\"},\"/*\"]]}\n            }\n          ]\n        }\n      }\n    },\n    \"DeployedAssetsManagement\": {\n      \"Type\": \"AWS::IAM::ManagedPolicy\",\n      \"Properties\": {\n        \"Description\": \"Allows CodeBuild to deploy git-tagged assets\",\n        \"ManagedPolicyName\": \"DeployedAssetsS3Policy\",\n        \"PolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": [\"s3:PutObject\",\"s3:DeleteObject\",\"s3:GetObject\"],\n            \"Resource\": {\"Fn::Join\" : [\"\",[{ \"Fn::GetAtt\": [ \"DeployedAssetsBucket\", \"Arn\"] }, \"/*\"]]}\n          },\n          {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:ListBucket\",\n            \"Resource\": {\"Fn::GetAtt\": [\"DeployedAssetsBucket\", \"Arn\"]}\n          }]\n        }\n      }\n    },\n    \"DeployedAssetsRS\": {\n      \"Type\": \"AWS::Route53::RecordSet\",\n      \"Properties\": {\n        \"Name\": \"deployed.everything2.com\",\n        \"HostedZoneName\": \"everything2.com.\",\n        \"AliasTarget\": {\n          \"HostedZoneId\": {\"Fn::FindInMap\" : [ \"RegionMap\", { \"Ref\" : \"AWS::Region\" }, \"S3hostedzoneID\"]},\n          \"DNSName\": {\"Fn::FindInMap\" : [ \"RegionMap\", { \"Ref\" : \"AWS::Region\" }, \"websiteendpoint\"]}\n        },\n        \"Type\": \"A\"\n      }\n    }\n\n  }\n}\n"
		}
	},
	"Error": "invalidJSON: consume: object: object: object: object: object: array: unexpected byte 76 'L'"
}