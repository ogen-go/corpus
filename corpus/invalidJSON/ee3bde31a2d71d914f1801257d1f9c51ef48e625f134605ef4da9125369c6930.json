{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Forceu/Gokapi"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "internal/webserver/web/static/apidocumentation/openapi.json",
			"byteSize": 14998,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Gokapi\",\n    \"description\": \"[https://github.com/Forceu/Gokapi](https://github.com/Forceu/Gokapi)\\n\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/\",\n      \"description\": \"Target Server\"\n    }\n  ],\n  \"security\": [\n    {\n      \"apikey\": []\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"files\"\n    },\n    {\n      \"name\": \"auth\"\n    }\n  ],\n  \"paths\": {\n    \"/files/list\": {\n      \"get\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"summary\": \"Lists all files\",\n        \"description\": \"This API call lists all files that are not expired.\",\n        \"operationId\": \"list\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/File\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API key provided or not logged in as admin\"\n          }\n        }\n      }\n    },\n    \"/chunk/add\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"summary\": \"Uploads a new chunk\",\n        \"description\": \"Uploads a file in chunks, in case a reverse proxy does not support upload of larger files. Parallel uploading is supported. Must call /chunk/complete after all chunks have been uploaded. WARNING: Does not support end-to-end encryption! If server is setup to utilise end-to-end encryption, file will be stored in plain-text!\",\n        \"operationId\": \"chunkadd\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/chunking\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/chunkUploadResult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API key provided or not logged in as admin\"\n          }\n        }\n      }\n    },\n    \"/chunk/complete\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"summary\": \"Finalises uploaded chunks\",\n        \"description\": \"Needs to be called after all chunks have been uploaded. Adds the uploaded file to Gokapi.\",\n        \"operationId\": \"chunkcomplete\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/chunkingcomplete\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UploadResult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API key provided or not logged in as admin\"\n          }\n        }\n      }\n    },\n    \"/files/add\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"summary\": \"Adds a new file without chunking\",\n        \"description\": \"Uploads the submitted file to Gokapi. Please note: This method does not use chunking, therefore if you are behind a reverse proxy or have a provider that limits upload filesizes, this might not work for bigger files (e.g. Cloudflare). WARNING: Does not support end-to-end encryption! If server is setup to utilise end-to-end encryption, file will be stored in plain-text!\",\n        \"operationId\": \"add\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/body\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UploadResult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API key provided or not logged in as admin\"\n          }\n        }\n      }\n    },\n    \"/files/duplicate\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"summary\": \"Duplicates an existing file\",\n        \"description\": \"This API call duplicates an existing file with new parameters\",\n        \"operationId\": \"duplicate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/duplicate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UploadResult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid input\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API key provided or not logged in as admin\"\n          }\n        }\n      }\n    },\n    \"/files/delete\": {\n      \"delete\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"summary\": \"Deletes the selected file\",\n        \"description\": \"This API call deletes the selected file and runs the clean-up procedure which purges all expired files from the data directory immediately\",\n        \"operationId\": \"delete\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"header\",\n            \"description\": \"The ID of the file to be deleted\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation successful\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API key provided or not logged in as admin\"\n          }\n        }\n      }\n    },\n    \"/auth/friendlyname\": {\n      \"put\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Changes the name of the API key\",\n        \"description\": \"This API call changes the name of the API key that is shown in the API overview\",\n        \"operationId\": \"friendlyname\",\n        \"parameters\": [\n          {\n            \"name\": \"apiKeyToModify\",\n            \"in\": \"header\",\n            \"description\": \"The API key to change the name of\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"friendlyName\",\n            \"in\": \"header\",\n            \"description\": \"The new name of the API key\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation successful\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"401\": {\n            \"description\": \"Invalid API key provided or not logged in as admin\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"File\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Id\": {\n            \"type\": \"string\"\n          },\n          \"Name\": {\n            \"type\": \"string\"\n          },\n          \"Size\": {\n            \"type\": \"string\"\n          },\n          \"SizeBytes\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"HotlinkId\": {\n            \"type\": \"string\"\n          },\n          \"ContentType\": {\n            \"type\": \"string\"\n          },\n          \"ExpireAt\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"ExpireAtString\": {\n            \"type\": \"string\"\n          },\n          \"DownloadsRemaining\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"DownloadCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"UnlimitedDownloads\": {\n            \"type\": \"boolean\"\n          },\n          \"UnlimitedTime\": {\n            \"type\": \"boolean\"\n          },\n          \"RequiresClientSideDecryption\": {\n            \"type\": \"boolean\"\n          },\n          \"IsEncrypted\": {\n            \"type\": \"boolean\"\n          },\n          \"IsPasswordProtected\": {\n            \"type\": \"boolean\"\n          },\n          \"IsSavedOnLocalStorage\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"description\": \"File is a struct used for saving information about an uploaded file\",\n        \"x-go-package\": \"Gokapi/internal/models\"\n      },\n      \"chunkUploadResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Result\": {\n            \"type\": \"string\"\n            }\n        },\n        \"description\": \"Result after uploading a chunk\",\n        \"x-go-package\": \"Gokapi/internal/models\"\n      },\n      \"UploadResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Result\": {\n            \"type\": \"string\"\n          },\n          \"FileInfo\": {\n            \"$ref\": \"#/components/schemas/File\"\n          },\n          \"HotlinkUrl\": {\n            \"type\": \"string\"\n          },\n          \"Url\": {\n            \"type\": \"string\"\n          },\n          \"GenericHotlinkUrl\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"UploadResult is the struct used for the result after an upload\",\n        \"x-go-package\": \"Gokapi/internal/models\"\n      },\n      \"body\": {\n        \"required\": [\n          \"file\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"file\": {\n            \"type\": \"string\",\n            \"description\": \"The file to be uploaded\",\n            \"format\": \"binary\"\n          },\n          \"allowedDownloads\": {\n            \"type\": \"integer\",\n            \"description\": \"How many downloads are allowed. Last used value from web interface will be used if empty. Unlimited if 0 is passed.\"\n          },\n          \"expiryDays\": {\n            \"type\": \"integer\",\n            \"description\": \"How many days the file will be stored. Last used value from web interface will be used if empty. Unlimited if 0 is passed.\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password for this file to be set. No password will be used if empty\"\n          }\n        }\n      },\"duplicate\": {\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"ID of file to be duplicated\",\n          },\n          \"allowedDownloads\": {\n            \"type\": \"integer\",\n            \"description\": \"How many downloads are allowed. Original value from web interface will be used if empty. Unlimited if 0 is passed.\"\n          },\n          \"expiryDays\": {\n            \"type\": \"integer\",\n            \"description\": \"How many days the file will be stored. Original value from web interface will be used if empty. Unlimited if 0 is passed.\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password for this file to be set. No password will be used if empty.\"\n          },\n          \"originalPassword\": {\n            \"type\": \"boolean\",\n            \"description\": \"Set to true to use original password. Field \\\"password\\\" will be ignored if set.\"\n          },\n          \"filename\": {\n            \"type\": \"string\",\n            \"description\": \"Sets a new filename. Filename will be unchanged if empty.\"\n          }\n        }\n    },\"chunking\": {\n        \"required\": [\n          \"file\",\"uuid\",\"filesize\",\"offset\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"file\": {\n            \"type\": \"string\",\n            \"description\": \"The file to be uploaded\",\n            \"format\": \"binary\"\n          },\n          \"uuid\": {\n            \"type\": \"string\",\n            \"description\": \"A unique ID that has to be the same for all chunks of a single file. Needs to be at least 10 characters long.\",\n          },\n          \"filesize\": {\n            \"type\": \"integer\",\n            \"description\": \"The total filesize of the final file in bytes\"\n          },\n          \"offset\": {\n            \"type\": \"integer\",\n            \"description\": \"The chunk's offset starting at the beginning of the file\"\n          }\n        }\n    },\"chunkingcomplete\": {\n        \"required\": [\n          \"uuid\",\"filename\",\"filesize\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"uuid\": {\n            \"type\": \"string\",\n            \"description\": \"The unique ID that was used for the uploaded chunks\",\n          },\n          \"filename\": {\n            \"type\": \"string\",\n            \"description\": \"The filename of the uploaded file\",\n          },\n          \"filesize\": {\n            \"type\": \"integer\",\n            \"description\": \"The total filesize of the uploaded file in bytes\"\n          },\n          \"contenttype\": {\n            \"type\": \"string\",\n            \"description\": \"The MIME content type. If empty, application/octet-stream will be used.\"\n          },\n          \"allowedDownloads\": {\n            \"type\": \"integer\",\n            \"description\": \"How many downloads are allowed. Last used value from web interface will be used if empty. Unlimited if 0 is passed.\"\n          },\n          \"expiryDays\": {\n            \"type\": \"integer\",\n            \"description\": \"How many days the file will be stored. Last used value from web interface will be used if empty. Unlimited if 0 is passed.\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password for this file to be set. No password will be used if empty\"\n          }\n        }\n    }\n    },\n    \"securitySchemes\": {\n      \"apikey\": {\n        \"type\": \"apiKey\",\n        \"name\": \"apikey\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/Forceu/Gokapi@74b5d3572a041709fb299ed41a1e17fd5ba4ac87/-/blob/internal/webserver/web/static/apidocumentation/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/Forceu/Gokapi/blob/74b5d3572a041709fb299ed41a1e17fd5ba4ac87/internal/webserver/web/static/apidocumentation/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "invalidJSON: consume: object: object: object: object: object: object: unexpected byte 125 '}'"
}