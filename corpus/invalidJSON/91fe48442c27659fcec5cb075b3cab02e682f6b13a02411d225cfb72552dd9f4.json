{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mczachurski/Swiftgger"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "Tests/SwiftggerTests/openapi.json",
			"byteSize": 25722,
			"content": "{\n   \"tags\":[\n      {\n         \"description\":\"Controller which returns service health information.\",\n         \"name\":\"Health\"\n      },\n      {\n         \"description\":\"Controller for managing tasks.\",\n         \"name\":\"Tasks\"\n      },\n      {\n         \"description\":\"Controller for managing users.\",\n         \"name\":\"Users\"\n      },\n      {\n         \"description\":\"Controller for managing user accout (registering/signing in/password).\",\n         \"name\":\"Account\"\n      },\n      {\n         \"description\":\"Controller for OpenAPI metadata\",\n         \"name\":\"OpenAPI\"\n      }\n   ],\n   \"servers\":[\n      {\n         \"url\":\"http://localhost:8181\",\n         \"description\":\"Main server\"\n      },\n      {\n         \"url\":\"http://localhost:{port}/{basePath}\",\n         \"variables\":{\n            \"basePath\":{\n               \"description\":\"Base path to the server API\",\n               \"default\":\"v1\"\n            },\n            \"port\":{\n               \"default\":\"80\",\n               \"description\":\"Port to the API\",\n               \"enum\":[\n                  \"80\",\n                  \"443\"\n               ]\n            }\n         },\n         \"description\":\"Secure server\"\n      }\n   ],\n   \"info\":{\n      \"license\":{\n         \"url\":\"http://mit.license\",\n         \"name\":\"MIT\"\n      },\n      \"title\":\"Tasker server\",\n      \"contact\":{\n         \"email\":\"john.doe@some-email.org\",\n         \"url\":\"http://example-domain.com/@john\",\n         \"name\":\"John Doe\"\n      },\n      \"termsOfService\":\"http://example.com/terms/\",\n      \"version\":\"1.0.0\",\n      \"description\":\"This is a sample server for task server application. Authorization is done by `JWT` token. You can register in the system, then sign-in and use token from response for authorization.\"\n   },\n   \"components\":{\n      \"schemas\":{\n         \"ValidationErrorResponseDto\":{\n            \"properties\":{\n               \"errors\":{\n                  \"type\":\"object\",\n                  \"additionalProperties\":{\n                      \"type\":\"string\"\n                  }\n               },\n               \"message\":{\n                  \"example\":\"Object is invalid\",\n                  \"type\":\"string\"\n               }\n            },\n            \"required\":[\n               \"message\",\n               \"errors\"\n            ],\n            \"type\":\"object\"\n         },\n         \"UserDto\":{\n            \"properties\":{\n               \"email\":{\n                  \"example\":\"email@test.com\",\n                  \"type\":\"string\"\n               },\n               \"createDate\":{\n                  \"example\":\"2021-01-23 11:48:00 +0000\",\n                  \"type\" : \"string\",\n                  \"format\" : \"date-time\"\n               },\n               \"isLocked\":{\n                  \"example\":\"false\",\n                  \"type\":\"boolean\"\n               },\n               \"name\":{\n                  \"example\":\"John Doe\",\n                  \"type\":\"string\"\n               },\n               \"id\":{\n                  \"example\":\"BAE63FDC-A633-4D3A-BD7D-A51EC87B071F\",\n                  \"type\":\"string\"\n               },\n               \"roles\":{\n                   \"items\":{\n                      \"type\":\"string\"\n                   }\n               }\n            },\n            \"required\":[\n               \"name\",\n               \"email\",\n               \"isLocked\"\n            ],\n            \"type\":\"object\"\n         },\n         \"RegisterUserDto\":{\n            \"properties\":{\n               \"email\":{\n                  \"example\":\"john.doe@email.com\",\n                  \"type\":\"string\"\n               },\n               \"createDate\":{\n                  \"example\":\"2021-01-23 11:48:00 +0000\",\n                  \"type\" : \"string\",\n                  \"format\" : \"date-time\"\n               },\n               \"isLocked\":{\n                  \"example\":\"false\",\n                  \"type\":\"boolean\"\n               },\n               \"password\":{\n                  \"example\":\"fds\",\n                  \"type\":\"string\"\n               },\n               \"id\":{\n                  \"example\":\"80E8CE27-6AC9-4C38-B83F-2A2C53A24129\",\n                  \"type\":\"string\"\n               },\n               \"name\":{\n                  \"example\":\"John Doe\",\n                  \"type\":\"string\"\n               }\n            },\n            \"required\":[\n               \"name\",\n               \"email\",\n               \"isLocked\",\n               \"password\"\n            ],\n            \"type\":\"object\"\n         },\n         \"HealthStatusDto\":{\n            \"properties\":{\n               \"message\":{\n                  \"example\":\"I'm fine and running!\",\n                  \"type\":\"string\"\n               }\n            },\n            \"required\":[\n               \"message\"\n            ],\n            \"type\":\"object\"\n         },\n         \"SignInDto\":{\n            \"properties\":{\n               \"email\":{\n                  \"example\":\"john.doe@email.com\",\n                  \"type\":\"string\"\n               },\n               \"password\":{\n                  \"example\":\"234efsge\",\n                  \"type\":\"string\"\n               }\n            },\n            \"required\":[\n               \"email\",\n               \"password\"\n            ],\n            \"type\":\"object\"\n         },\n         \"TaskDto\":{\n            \"properties\":{\n               \"createDate\":{\n                  \"example\":\"2021-01-23 11:48:00 +0000\",\n                  \"type\" : \"string\",\n                  \"format\" : \"date-time\"\n               },\n               \"isFinished\":{\n                  \"example\":\"true\",\n                  \"type\":\"boolean\"\n               },\n               \"id\":{\n                  \"example\":\"DA9D17D1-9C27-4E96-AD3D-DF232C7E8680\",\n                  \"type\":\"string\"\n               },\n               \"name\":{\n                  \"example\":\"Net task\",\n                  \"type\":\"string\"\n               },\n               \"user\":{\n                   \"$ref\":\"#\\/components\\/schemas\\/UserDto\"\n               },\n               \"subtasks\":{\n                  \"type\":\"object\",\n                  \"additionalProperties\":{\n                      \"$ref\":\"#\\/components\\/schemas\\/TaskDto\"\n                  }\n               },\n            },\n            \"required\":[\n               \"name\",\n               \"isFinished\"\n            ],\n            \"type\":\"object\"\n         },\n         \"JwtTokenResponseDto\":{\n            \"properties\":{\n               \"token\":{\n                  \"example\":\"13r4qtfrq4t5egrf4qt5tgrfw45tgrafsdfgty54twgrthg\",\n                  \"type\":\"string\"\n               }\n            },\n            \"required\":[\n               \"token\"\n            ],\n            \"type\":\"object\"\n         }\n      },\n      \"securitySchemes\":{\n         \"auth_jwt\":{\n            \"type\":\"http\",\n            \"bearerFormat\":\"jwt\",\n            \"scheme\":\"bearer\",\n            \"description\":\"You can get token from *sign-in* action from *Account* controller.\",\n            \"in\":\"header\"\n         }\n      }\n   },\n   \"openapi\":\"3.0.1\",\n   \"paths\":{\n      \"/openapi\":{\n         \"get\":{\n            \"tags\":[\n               \"OpenAPI\"\n            ],\n            \"deprecated\":false,\n            \"description\":\"Action for getting OpenAPI document.\",\n            \"summary\":\"OpenAPI endpoint\"\n         }\n      },\n      \"/users\":{\n         \"get\":{\n            \"tags\":[\n               \"Users\"\n            ],\n            \"responses\":{\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               },\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"items\":{\n                              \"$ref\":\"#/components/schemas/UserDto\"\n                           },\n                           \"type\":\"array\"\n                        }\n                     }\n                  },\n                  \"description\":\"List of users\"\n               }\n            },\n            \"deprecated\":false,\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for getting all users from server\",\n            \"summary\":\"All users\"\n         },\n         \"post\":{\n            \"requestBody\":{\n               \"content\":{\n                  \"application/json\":{\n                     \"schema\":{\n                        \"$ref\":\"#/components/schemas/UserDto\"\n                     }\n                  }\n               },\n               \"description\":\"Object with user information.\",\n               \"required\":false\n            },\n            \"summary\":\"New user\",\n            \"deprecated\":false,\n            \"tags\":[\n               \"Users\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for adding new user to the server\",\n            \"responses\":{\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/UserDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"User data after adding to the system\"\n               },\n               \"400\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/ValidationErrorResponseDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"There was issues during adding new user\"\n               },\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               }\n            }\n         }\n      },\n      \"/account/sign-in\":{\n         \"post\":{\n            \"requestBody\":{\n               \"content\":{\n                  \"application/json\":{\n                     \"schema\":{\n                        \"$ref\":\"#/components/schemas/SignInDto\"\n                     }\n                  }\n               },\n               \"description\":\"Object for signing in user.\",\n               \"required\":false\n            },\n            \"tags\":[\n               \"Account\"\n            ],\n            \"deprecated\":false,\n            \"responses\":{\n               \"404\":{\n                  \"description\":\"User credentials are invalid\"\n               },\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/JwtTokenResponseDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"Response with user token for authorization\"\n               }\n            },\n            \"description\":\"Action for signing in user to the system\",\n            \"summary\":\"Signinig in to the system\"\n         }\n      },\n      \"/health\":{\n         \"get\":{\n            \"tags\":[\n               \"Health\"\n            ],\n            \"responses\":{\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/HealthStatusDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"Information about health\"\n               }\n            },\n            \"deprecated\":false,\n            \"description\":\"Action for getting status of health\",\n            \"summary\":\"Helth checking\"\n         }\n      },\n      \"/account/register\":{\n         \"post\":{\n            \"requestBody\":{\n               \"content\":{\n                  \"application/json\":{\n                     \"schema\":{\n                        \"$ref\":\"#/components/schemas/RegisterUserDto\"\n                     }\n                  }\n               },\n               \"description\":\"Object with registration information.\",\n               \"required\":false\n            },\n            \"tags\":[\n               \"Account\"\n            ],\n            \"deprecated\":false,\n            \"responses\":{\n               \"400\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/ValidationErrorResponseDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"User information are invalid\"\n               },\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/RegisterUserDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"Response with user token for authorization\"\n               }\n            },\n            \"description\":\"Action for registering new user in system\",\n            \"summary\":\"Registering new user\"\n         }\n      },\n      \"/users/{id}\":{\n         \"get\":{\n            \"responses\":{\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               },\n               \"404\":{\n                  \"description\":\"User with entered id not exists\"\n               },\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/UserDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"Specific user\"\n               }\n            },\n            \"summary\":\"User by id\",\n            \"deprecated\":false,\n            \"tags\":[\n               \"Users\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for getting specific user from server\",\n            \"parameters\":[\n               {\n                  \"name\":\"id\",\n                  \"deprecated\":false,\n                  \"required\":true,\n                  \"allowEmptyValue\":false,\n                  \"description\":\"User id\",\n                  \"in\":\"path\"\n               }\n            ]\n         },\n         \"put\":{\n            \"requestBody\":{\n               \"content\":{\n                  \"application/json\":{\n                     \"schema\":{\n                        \"$ref\":\"#/components/schemas/UserDto\"\n                     }\n                  }\n               },\n               \"description\":\"Object with user information.\",\n               \"required\":false\n            },\n            \"responses\":{\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               },\n               \"404\":{\n                  \"description\":\"User with entered id not exists\"\n               },\n               \"400\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/ValidationErrorResponseDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"There was issues during updating user\"\n               },\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/UserDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"User data after adding to the system\"\n               }\n            },\n            \"deprecated\":false,\n            \"parameters\":[\n               {\n                  \"name\":\"id\",\n                  \"deprecated\":false,\n                  \"required\":true,\n                  \"allowEmptyValue\":false,\n                  \"description\":\"User id\",\n                  \"in\":\"path\"\n               }\n            ],\n            \"tags\":[\n               \"Users\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for updating specific user in the server\",\n            \"summary\":\"Update user\"\n         },\n         \"delete\":{\n            \"responses\":{\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               },\n               \"404\":{\n                  \"description\":\"User with entered id not exists\"\n               },\n               \"200\":{\n                  \"description\":\"User was deleted\"\n               }\n            },\n            \"summary\":\"Delete user\",\n            \"deprecated\":false,\n            \"tags\":[\n               \"Users\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for deleting user from the database\",\n            \"parameters\":[\n               {\n                  \"name\":\"id\",\n                  \"deprecated\":false,\n                  \"required\":true,\n                  \"allowEmptyValue\":false,\n                  \"description\":\"User id\",\n                  \"in\":\"path\"\n               }\n            ]\n         }\n      },\n      \"/tasks/{id}\":{\n         \"get\":{\n            \"responses\":{\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               },\n               \"404\":{\n                  \"description\":\"Task with entered id not exists\"\n               },\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/TaskDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"Specific task\"\n               }\n            },\n            \"summary\":\"Task by id\",\n            \"deprecated\":false,\n            \"tags\":[\n               \"Tasks\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for getting specific task from server\",\n            \"parameters\":[\n               {\n                  \"name\":\"id\",\n                  \"deprecated\":false,\n                  \"required\":true,\n                  \"allowEmptyValue\":false,\n                  \"description\":\"Task id\",\n                  \"in\":\"path\"\n               }\n            ]\n         },\n         \"put\":{\n            \"requestBody\":{\n               \"content\":{\n                  \"application/json\":{\n                     \"schema\":{\n                        \"$ref\":\"#/components/schemas/TaskDto\"\n                     }\n                  }\n               },\n               \"description\":\"Object with task information.\",\n               \"required\":false\n            },\n            \"responses\":{\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               },\n               \"404\":{\n                  \"description\":\"Task with entered id not exists\"\n               },\n               \"400\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/ValidationErrorResponseDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"There was issues during updating task\"\n               },\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/TaskDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"Task data after adding to the system\"\n               }\n            },\n            \"deprecated\":false,\n            \"parameters\":[\n               {\n                  \"name\":\"id\",\n                  \"deprecated\":false,\n                  \"required\":true,\n                  \"allowEmptyValue\":false,\n                  \"description\":\"Task id\",\n                  \"in\":\"path\"\n               }\n            ],\n            \"tags\":[\n               \"Tasks\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for updating specific task in the server\",\n            \"summary\":\"Update task\"\n         },\n         \"delete\":{\n            \"responses\":{\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               },\n               \"404\":{\n                  \"description\":\"Task with entered id not exists\"\n               },\n               \"200\":{\n                  \"description\":\"Task was deleted\"\n               }\n            },\n            \"summary\":\"Delete task\",\n            \"deprecated\":false,\n            \"tags\":[\n               \"Tasks\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for deleting task from the database\",\n            \"parameters\":[\n               {\n                  \"name\":\"id\",\n                  \"deprecated\":false,\n                  \"required\":true,\n                  \"allowEmptyValue\":false,\n                  \"description\":\"Task id\",\n                  \"in\":\"path\"\n               }\n            ]\n         }\n      },\n      \"/account/change-password\":{\n         \"post\":{\n            \"requestBody\":{\n               \"content\":{\n                  \"application/json\":{\n                     \"schema\":{\n                        \"$ref\":\"#/components/schemas/ChangePasswordRequestDto\"\n                     }\n                  }\n               },\n               \"description\":\"Object with new user password.\",\n               \"required\":false\n            },\n            \"summary\":\"Changing password\",\n            \"deprecated\":false,\n            \"tags\":[\n               \"Account\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for changing password\",\n            \"responses\":{\n               \"200\":{\n                  \"description\":\"Password was changed\"\n               },\n               \"400\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/ValidationErrorResponseDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"There was issues during changing password\"\n               },\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               }\n            }\n         }\n      },\n      \"/tasks\":{\n         \"get\":{\n            \"tags\":[\n               \"Tasks\"\n            ],\n            \"responses\":{\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               },\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"items\":{\n                              \"$ref\":\"#/components/schemas/TaskDto\"\n                           },\n                           \"type\":\"array\"\n                        }\n                     }\n                  },\n                  \"description\":\"List of users\"\n               }\n            },\n            \"deprecated\":false,\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for getting all tasks from server\",\n            \"summary\":\"All tasks\"\n         },\n         \"post\":{\n            \"requestBody\":{\n               \"content\":{\n                  \"application/json\":{\n                     \"schema\":{\n                        \"$ref\":\"#/components/schemas/TaskDto\"\n                     }\n                  }\n               },\n               \"description\":\"Object with task information.\",\n               \"required\":false\n            },\n            \"responses\":{\n               \"200\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/TaskDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"Task data after adding to the system\"\n               },\n               \"400\":{\n                  \"content\":{\n                     \"application/json\":{\n                        \"schema\":{\n                           \"$ref\":\"#/components/schemas/ValidationErrorResponseDto\"\n                        }\n                     }\n                  },\n                  \"description\":\"There was issues during adding new task\"\n               },\n               \"401\":{\n                  \"description\":\"User not authorized\"\n               }\n            },\n            \"deprecated\":false,\n            \"parameters\":[\n               {\n                  \"name\":\"id\",\n                  \"deprecated\":false,\n                  \"required\":true,\n                  \"allowEmptyValue\":false,\n                  \"description\":\"Task id\",\n                  \"in\":\"path\"\n               }\n            ],\n            \"tags\":[\n               \"Tasks\"\n            ],\n            \"security\":[\n               {\n                  \"auth_jwt\":[\n                     \n                  ]\n               }\n            ],\n            \"description\":\"Action for adding new task to the server\",\n            \"summary\":\"New task\"\n         }\n      }\n   }\n}\n"
		}
	},
	"Error": "invalidJSON: invalid json"
}