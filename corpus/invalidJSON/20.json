{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/api3dao/airnode"
		},
		"file": {
			"name": "apigateway.yaml.tpl",
			"path": "packages/airnode-deployer/terraform/airnode/aws/templates/apigateway.yaml.tpl",
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: Airnode API Gateway\n  version: \"1.0\"\n\nx-amazon-apigateway-request-validators:\n  all:\n    validateRequestBody: true\n    validateRequestParameters: true\nx-amazon-apigateway-request-validator: all\n\n# 2 MB\nx-amazon-apigateway-minimum-compression-size: 2097152\n\ncomponents:\n  schemas:\n    TestEndpointRequest:\n      type: object\n      required:\n        - parameters\n      properties:\n        parameters:\n          type: object\n    TestEndpointResponse:\n      type: object\n      required:\n        - response\n      properties:\n        response: {}\n\n  examples:\n    EndpointIdParameterExample:\n      summary: Endpoint name\n      value: 0xeddc421714e1b46ef350e8ecf380bd0b38a40ce1a534e7ecdf4db7dbc9319353\n\n    TestEndpointRequestExample:\n      summary: Test endpoint request example\n      value: { \"parameters\": { \"from\": \"EUR\", \"amount\": 5 } }\n    TestEndpointResponseExample:\n      summary: Test endpoint response example\n      value: { \"response\": 20 }\n\n  parameters:\n    endpointId:\n      name: endpointId\n      in: path\n      description: Endpoint ID\n      required: true\n      schema:\n        type: string\n      examples:\n        example:\n          $ref: \"#/components/examples/EndpointIdParameterExample\"\n\n  securitySchemes:\n    apiKey:\n      description: Airnode API Gateway API key\n      type: apiKey\n      name: x-api-key\n      in: header\n\nsecurity:\n  - apiKey: []\n\npaths:\n  /test/{endpointId}:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/endpointId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TestEndpointRequest\"\n            examples:\n              example:\n                $ref: \"#/components/examples/TestEndpointRequestExample\"\n      responses:\n        \"200\":\n          description: Test request called\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TestEndpointResponse\"\n              examples:\n                example:\n                  $ref: \"#/components/examples/TestEndpointResponseExample\"\n      security:\n        - apiKey: []\n      x-amazon-apigateway-integration:\n        type: aws_proxy\n        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${proxy_lambda}/invocations\n        credentials: ${role}\n        httpMethod: POST\n        payloadFormatVersion: \"1.0\"\n        responses:\n          default:\n            statusCode: 200\n"
		}
	},
	"Error": "invalid json"
}