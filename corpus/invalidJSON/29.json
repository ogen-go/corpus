{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fairhopeweb/CCP"
		},
		"file": {
			"name": "openapi.yaml.hbs",
			"path": ".skaffolder/template/openapi.yaml.hbs",
			"content": "**** PROPERTIES SKAFFOLDER ****\r\n{\n    \"forEachObj\": \"oneTime\",\n    \"overwrite\": true,\n    \"extra\": {\n        \"merge\": \"yaml\"\n    },\n    \"_partials\": []\n}\r\n**** END PROPERTIES SKAFFOLDER ****\r\nopenapi: 3.0.0\ninfo:\n  x-skaffolder-id-project: {{project._id}}\n  title: {{project.name}}\n  description: You can obtain JWT token from login API\n  version: 0.1\nservers:\n  - url: http://localhost:3000/api\n    description: Local server for testing\npaths:\n  /login:\n    post:\n      x-skaffolder-ignore: true\n      summary: Login API\n      security: []\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n              example:\n                username: admin\n                password: 62f264d7ad826f02a8af714c0a54b197935b717656b80461686d450f7b3abde4c553541515de2052b9af70f710f0cd8a1a2d3f4d60aa72608d71a63a9a93c0f5\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n  /verifyToken:\n    post:\n      x-skaffolder-ignore: true\n      summary: Verify token API\n      security: []\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n  /changePassword:\n    post:\n      x-skaffolder-ignore: true\n      summary: Change password API\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                passwordNew:\n                  type: string\n                passwordOld:\n                  type: string\n      responses:\n        \"200\":\n          description: OK{{#each resources}}{{#each _resources}}{{#group _services by=\"url\"}}\n  {{#equal value \"/\"}}{{../url}}{{/equal}}{{#notEqual value \"/\"}}\"{{../url}}{{value}}\"{{/notEqual}}:\n    {{#each items}}{{lowercase method}}:\n      x-skaffolder-id: {{_id}}\n      x-skaffolder-name: {{name}}\n      x-skaffolder-id-resource: {{./../../_id}}\n      x-skaffolder-resource: {{./../../name}}\n      x-skaffolder-crudAction: {{crudAction}}\n      x-skaffolder-crudType: {{crudType}}\n      x-skaffolder-description: {{multiline description 3}}\n      x-skaffolder-returnDesc: {{multiline returnDesc 3}}\n      x-skaffolder-returnType: {{multiline returnType 3}}\n      x-skaffolder-url: {{url}}\n      x-skaffolder-roles:{{#notNull _roles}}{{#each _roles}}\n        - {{_id}}{{/each}}{{#equal _roles.length 0}} []{{/equal}}{{/notNull}}\n      summary: {{multiline description 3}}\n      tags:\n        - {{../../name}}{{#notEmpty _params}}\n      parameters:{{#each _params}}\n        - name: {{name}}\n          x-skaffolder-type: {{type}}\n          in: path\n          description: {{description}}\n          required: true\n          schema:\n            type: {{toSwaggerType type}}{{/each}}{{/notEmpty}}\n      responses:\n        \"200\":\n          description: OK{{#or (equal crudAction 'list') (startWith crudAction 'findBy') (startWith crudAction 'addTo') (startWith crudAction 'removeFrom') (startWith crudAction 'linkTo') (startWith crudAction 'unlinkFrom')}}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/{{../../name}}\"{{/or}}{{#or (equal crudAction 'get') (equal crudAction 'update') (equal crudAction 'create') }}\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/{{../../name}}\"{{/or}}{{#or (equal crudAction 'update') }}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/{{../../name}}\"{{/or}}{{#or (equal crudAction 'create') }}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:{{#each ../../_entity._attrs}}\n                {{name}}:\n                  type: {{toSwaggerType type}}{{/each}}{{/or}}{{#unless @last}}\n    {{/unless}}{{/each}}{{/group}}{{/each}}{{/each}}\nsecurity:\n  - bearerAuth: []\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:{{#each resources}}{{#each _resources}}\n    {{name}}:\n      x-skaffolder-id: {{_id}}\n      x-skaffolder-id-db: {{./../_id}}\n      x-skaffolder-id-entity: {{_entity._id}}\n      x-skaffolder-url: {{url}}{{#if type}}\n      x-skaffolder-type: {{type}}{{/if}}\n      properties:\n        _id:\n          type: string\n          x-skaffolder-required: true{{#each _entity._attrs}}\n        {{name}}:\n          type: {{toSwaggerType type}}\n          x-skaffolder-id-attr: {{_id}}\n          x-skaffolder-type: {{type}}{{#if description}}\n          x-skaffolder-description: {{multiline description 4}}{{/if}}{{#if required}}\n          x-skaffolder-required: {{required}}{{/if}}{{#if unique}}\n          x-skaffolder-unique: true{{unique}}{{/if}}{{#if _enum}}\n          x-skaffolder-enumeration:{{#each _enum}}\n            - {{name}}{{/each}}{{/if}}{{/each}}\n      x-skaffolder-relations:{{#unless (hasRelation1m this)}}{{#unless (hasRelationmm this)}} {{/unless}}{{/unless}}{{#each _entity._relations}}{{#equal ../_entity._id _ent1._id}}\n        {{name}}:\n          x-skaffolder-id: {{_id}}\n          x-skaffolder-type: {{type}}{{#if required}}\n          x-skaffolder-required: {{required}}{{/if}}\n          x-skaffolder-ent1: {{_ent1._id}}\n          x-skaffolder-ent2: {{_ent2._id}}{{/equal}}{{#equal ../_entity._id _ent2._id}}{{#equal @index 0}}{{/equal}}{{/equal}}{{/each}}\n      required:\n        - _id{{#each _entity._attrs}}{{#equal required true}}\n        - {{name}}{{/equal}}{{/each}}{{/each}}{{/each}}\n  x-skaffolder-db:{{#each resources}}\n    - x-skaffolder-id: {{_id}}\n      x-skaffolder-name: {{name}}{{/each}}\n  x-skaffolder-page:\n{{#each modules}}\n    - x-skaffolder-id: {{_id}}\n      x-skaffolder-name: {{name}}\n      x-skaffolder-url: {{url}}\n      x-skaffolder-template: {{template}}\n      x-skaffolder-resource: {{_template_resource}}\n      x-skaffolder-services:{{#unless _services}} {{/unless}}{{#each _services}}\n        - {{_id}}{{/each}}\n      x-skaffolder-nesteds:{{#unless _nesteds}} {{/unless}}{{#each _nesteds}}\n        - {{_id}}{{/each}}\n      x-skaffolder-links:{{#unless _links}} {{/unless}}{{#each _links}}\n        - {{_id}}{{/each}}{{#notNull _roles}}\n      x-skaffolder-roles:{{#each _roles}}\n        - {{_id}}{{/each}}{{#equal _roles.length 0}} []{{/equal}}{{/notNull}}\n{{/each}}\n  x-skaffolder-roles: \n{{#each roles}}\n    - x-skaffolder-id: {{_id}}\n      x-skaffolder-name: {{name}}\n{{/each}}"
		}
	},
	"Error": "invalid json"
}