{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/teamdigitale/api-starter-kit"
		},
		"file": {
			"name": "simple.yaml.src",
			"path": "openapi/simple.yaml.src",
			"content": "#\n# Questo e' un progetto d'esempio in formato OpenAPI 3.0 API Starter Kit.\n#\n# Stai per sviluppare un API? Segui attentamente questo template e\n#   potrai integrarla facilmente in Developers Italia.\n#\n# Se usi componenti in modo ricorrente, yaml\n#   permette di definirle e riusarle.\n#   Puoi metterle nell'oggetto x-commons e rimuoverlo\n#   prima di pubblicarle.\nx-commons:\n  ratelimit-headers: \u0026ratelimit-headers\n    X-RateLimit-Limit:\n      $ref: '#/components/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: '#/components/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: '#/components/headers/X-RateLimit-Reset'\n  common-responses: \u0026common-responses\n    '400':\n      $ref: '#/components/responses/400BadRequest'\n    '429':\n      $ref: '#/components/responses/429TooManyRequests'\n    '503':\n      $ref: '#/components/responses/503ServiceUnavailable'\n    default:\n      $ref: '#/components/responses/default'\n\nopenapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  # Il `title` e' il nome del tuo prodotto/servizio!\n  # E' la prima cosa ad apparire in pagine web e cataloghi.\n  # Dev'essere chiaro e conciso.\n  title: |-\n    Ora esatta.\n  x-summary: \u003e-\n    Questo servizio ritorna la data e l'ora attuali in UTC.\n  description: |\n    #### Documentazione\n    Il servizio Ora esatta ritorna l'ora del server in formato RFC5424 (syslog).\n\n    `2018-12-30T12:23:32Z`\n\n    Qui va' inserita la documentazione principale del servizio.\n    Il testo dev'essere diviso in piu' parti, tutte scritte in Markdown.\n\n    Questa sezione e' informativa. Ricordati di inserire:\n\n      * cosa fanno queste API?\n      * chi puo' beneficiarne?\n      * perche' sono utili?\n\n    ##### Sottosezioni\n    E' possibile utilizzare - con criterio - delle sottosezioni.\n\n    #### Note\n\n    Il servizio non richiede autenticazione, ma va' usato rispettando gli\n    header di throttling esposti in conformita' alle Linee Guida del Modello di interoperabilita'.\n\n    Usa questa sezione per annotazioni specifiche, riferimenti normativi e/o\n    per manleve ed esclusioni di responsabilita' eventualmente non incluse in `termsOfService`.\n\n    #### Informazioni tecniche ed esempi\n\n    Esempio:\n\n    ```\n    http http://localhost:8443/datetime/v1/echo\n    {\n      'datetime': '2018-12-30T12:23:32Z'\n    }\n    ```\n\n    Qui e' possibile introdurre brevi informazioni tecniche ed esempi.\n    Attenzione: la `description` non sostituisce la documentazione di progetto,\n    deve pero' facilitare l'esecuzione delle prime richieste.\n\n\n  # I termini del servizio contengono un riferimento\n  #   a tutte le indicazioni e le note legali per l'utilizzo\n  #   del servizio, inclusi gli eventuali riferimenti utili al GDPR.\n  termsOfService: 'http://swagger.io/terms/'\n  # Chi posso contattare per informazioni sul servizio e sul suo stato?\n  contact:\n    email: robipolli@gmail.com\n    name: Roberto Polli\n    url: https://twitter.com/ioggstream\n  # L'audience delle API. Attualmente e' definito solamente\n  #   la tipologia `public`.\n  x-audience:\n    - public\n  # Ogni API deve avere un UUID, invariante nel tempo e\n  #   rispetto al `title`.\n  x-api-id: 00000000-0000-0000-0000-000000000000\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\n  # Per dare indicazioni sul ciclo di vita dell'API\n  # si puo' usare un parametro come:\n  x-lifecycle:\n    published: 1970-01-01\n    deprecated: 2050-01-01\n    retired: 2050-06-01\n    maturity: published\n\n# Una lista di `tag` utili a raggruppare le varie operazioni\n#   eseguite dalle API. Ogni `tag` puo' referenziare un link\n#   alla sua descrizione.\ntags:\n  - name: public\n    description: Retrieve informations\n    externalDocs:\n      url: http://docs.my-api.com/pet-operations.htm\n# Uno o piu' server di erogazione.\n#   Puo' essere utile indicare gli indirizzi di collaudo,\n#   sviluppo e test.\n#   Di seguito mostriamo come indicare se il server\n#   e' una sandbox o meno con dei tag custom.\nservers:\n  - description: Development server\n    url: https://localhost:8443/datetime/v1\n  - description: Test server\n    url: https://api.example.com/datetime/v1\n    x-sandbox: true\n    # Questo parametro indica come testare il servizio.\n    x-healthCheck:\n      url: https://api.example.com/datetime/v1/status\n      interval: 300\n      timeout: 15\n\n#\n# Qui vanno tutti i path.\n#\npaths:\n  /echo:\n    get:\n      summary: Ritorna un timestamp in formato RFC5424.\n      description: |\n        Ritorna un timestamp in formato RFC5424\n        prendendola dal server attuale.\n      operationId: get_echo\n      tags:\n        - public\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            Il server ha ritornato il timestamp.\n          # Questi header di throttling sono obbligatori e definiti\n          #   nel Nuovo modello di interoperabilità.\n          headers:\n            \u003c\u003c: *ratelimit-headers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timestamps'\n  /status:\n    get:\n      summary: Ritorna lo stato dell'applicazione.\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: get_status\n      tags:\n        - public\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n          # Questi header di throttling sono obbligatori e definiti\n          #   nel Nuovo modello di interoperabilità.\n          headers:\n            \u003c\u003c: *ratelimit-headers\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n\ncomponents:\n\n  headers:\n    X-RateLimit-Limit:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Reset'\n    Retry-After:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/Retry-After'\n\n  responses:\n    # Predefined error codes for this API\n    400BadRequest:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/400BadRequest'\n    404NotFound:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/404NotFound'\n    429TooManyRequests:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/429TooManyRequests'\n    503ServiceUnavailable:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/503ServiceUnavailable'\n    default:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/default'\n\n  schemas:\n    Problem:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/schemas/Problem'\n    Timestamps:\n      type: object\n      description: Un Timestamp in RFC5424\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n          example: '2018-12-30T12:23:32Z'\n"
		}
	},
	"Error": "invalid json"
}