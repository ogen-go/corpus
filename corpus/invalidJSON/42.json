{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "genotype_phenotype_service.yaml.old",
			"path": "Specification/GA4GH_BrAPI/GenotypePhenotypeService/genotype_phenotype_service.yaml.old",
			"content": "openapi: 3.0.0\ninfo:\n  title: ga4gh/genotype_phenotype_service.proto\n  version: version not set\npaths:\n  /v0.6.0a10/featurephenotypeassociations/search:\n    post:\n      summary: \u003e-\n        Gets a list of genotype-phenotype assoications accessible through the\n        API.\n\n        `POST /featurephenotypeassociations/search` must accept a JSON version\n        of\n\n        `SearchPhenotypesRequest` as the post body and will return a JSON\n        version\n\n        of `SearchPhenotypeAssociationSetsResponse`.\n      operationId: SearchPhenotypeAssociations\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchGenotypePhenotypeResponse'\n      tags:\n        - GenotypePhenotypeService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchGenotypePhenotypeRequest'\n        required: true\n  /v0.6.0a10/phenotypeassociationsets/search:\n    post:\n      summary: \u003e-\n        Gets a list of association sets accessible through the API.\n\n        `POST /phenotypeassociationsets/search` must accept a JSON version of\n\n        `SearchPhenotypeAssociationSetsRequest` as the post body and will return\n        a JSON version\n\n        of `SearchPhenotypeAssociationSetsResponse`.\n      operationId: SearchPhenotypeAssociationSets\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \u003e-\n                  #/components/schemas/SearchPhenotypeAssociationSetsResponse\n      tags:\n        - GenotypePhenotypeService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchPhenotypeAssociationSetsRequest'\n        required: true\n  /v0.6.0a10/phenotypes/search:\n    post:\n      summary: \u003e-\n        Gets a list of phenotypes accessible through the API.\n\n        `POST /phenotypes/search` must accept a JSON version of\n\n        `SearchPhenotypesRequest` as the post body and will return a JSON\n        version\n\n        of `SearchPhenotypeAssociationSetsResponse`.\n      operationId: SearchPhenotype\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchPhenotypesResponse'\n      tags:\n        - GenotypePhenotypeService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchPhenotypesRequest'\n        required: true\ncomponents:\n  schemas:\n    ga4ghEnvironmentalContext:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The Environment ID.\n        environment_type:\n          $ref: '#/components/schemas/OntologyTerm'\n        description:\n          type: string\n          title: |-\n            A textual description of the environment. This is used to complement\n            the structured description in the environmentType field\n      description: |-\n        The context in which a genotype gives rise to a phenotype.\n        This is fairly open-ended; as a stub we have a simple ontology term.\n        For example, a controlled term for a drug, or perhaps an instance of a\n        complex environment including temperature and air quality, or perhaps\n        the anatomical environment (gut vs tissue type vs whole organism).\n    ga4ghEvidence:\n      type: object\n      properties:\n        evidence_type:\n          $ref: '#/components/schemas/OntologyTerm'\n        description:\n          type: string\n          title: \u003e-\n            A textual description of the evidence. This is used to complement\n            the\n\n            structured description in the evidence_type field\n        info:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ListValue'\n          description: Additional annotation data in key-value pairs.\n      description: \u003e-\n        Evidence for the phenotype association.\n\n        This is also a stub for further expansion.  We should consider moving\n        this into\n\n        it's own schema.\n    ga4ghEvidenceQuery:\n      type: object\n      properties:\n        evidenceType:\n          $ref: '#/components/schemas/OntologyTerm'\n        description:\n          type: string\n          title: \u003e-\n            The system may support regex.\n            https://www.w3.org/TR/xpath-functions/#regex-syntax\n        external_identifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExternalIdentifier'\n          title: \u003e-\n            Only match Evidence messages that have any of these external\n            identifiers\n      description: Evidence for the phenotype association.\n    ga4ghExternalIdentifier:\n      type: object\n      properties:\n        database:\n          type: string\n          description: 'The source of the identifier, e.g. `Ensembl`.'\n        identifier:\n          type: string\n          description: 'The ID defined by the external database, e.g. `ENST00000000000`.'\n        version:\n          type: string\n          description: 'The version of the object or the database, e.g. `78`.'\n      title: Identifier from a public database\n    ga4ghFeaturePhenotypeAssociation:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique identifier for the association.\n        phenotype_association_set_id:\n          type: string\n          description: \u003e-\n            The ID of the PhenotypeAssociationSet this\n            FeaturePhenotypeAssociation\n\n            belongs to.\n        feature_ids:\n          type: array\n          items:\n            type: string\n          description: |-\n            The set of features of the organism that bears the phenotype.\n            This could be as complete as a full complement of variants,\n            or as minimal as the confirmed variants that are known causation\n            for the annotated phenotype.\n            Examples of features could be variations at the nucleotide level,\n            large rearrangements at the chromosome level, or relevant epigenetic\n            markers.  Relevant genomic feature types are suggested to be\n            those typed in the Sequence Ontology (SO).\n            The feature set can have only one item, and must not be null.\n        evidence:\n          type: array\n          items:\n            $ref: '#/components/schemas/Evidence'\n          description: |-\n            The evidence for this specific instance of association between the\n            features and the phenotype.\n        phenotype:\n          $ref: '#/components/schemas/PhenotypeInstance'\n        description:\n          type: string\n          description: A textual description of the association.\n        environmental_contexts:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnvironmentalContext'\n          title: \u003e-\n            The context in which the phenotype arises.\n\n            Multiple contexts can be specified - these are assumed to all hold\n            together\n        info:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ListValue'\n          description: Additional annotation data in key-value pairs.\n      description: |-\n        An association between one or more genomic features and a phenotype.\n        The instance of association allows us to link a feature to a phenotype,\n        multiple times, each bearing potentially different levels of confidence,\n        such as resulting from alternative experiments and analysis.\n    ga4ghOntologyTerm:\n      type: object\n      properties:\n        term_id:\n          type: string\n          description: \u003e-\n            Ontology term identifier - the CURIE for an ontology term. It\n\n            differs from the standard GA4GH schema's :ref:`id\n            `\n\n            in that it is a CURIE pointing to an information resource outside of\n            the\n\n            scope of the schema or its resource implementation.\n        term:\n          type: string\n          description: \u003e-\n            Ontology term - the label of the ontology term the termId is\n            pointing to.\n      title: |-\n        An ontology term describing an attribute. (e.g. the phenotype attribute\n        'polydactyly' from HPO)\n    ga4ghPhenotypeAssociationSet:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The phenotype association set ID.\n        name:\n          type: string\n          description: The phenotype association set name.\n        dataset_id:\n          type: string\n          description: The ID of the dataset this phenotype association set belongs to.\n        info:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ListValue'\n          description: Optional additional information for this phenotype association set.\n      description: The top level container for phenotype association data.\n    ga4ghPhenotypeInstance:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The Phenotype ID.\n        type:\n          $ref: '#/components/schemas/OntologyTerm'\n        qualifier:\n          type: array\n          items:\n            $ref: '#/components/schemas/OntologyTerm'\n          title: \u003e-\n            PATO is recommended.  Often this qualifier might be for\n            abnormal/normal,\n\n            or severity.\n\n            For example, severe: http://purl.obolibrary.org/obo/PATO_0000396\n\n            or abnormal: http://purl.obolibrary.org/obo/PATO_0000460\n        age_of_onset:\n          $ref: '#/components/schemas/OntologyTerm'\n        description:\n          type: string\n          description: \u003e-\n            A textual description of the phenotype. This is used to complement\n            the\n\n            structured phenotype description in the type field.\n        info:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ListValue'\n          description: Additional annotation data in key-value pairs.\n      title: \u003e-\n        An association to a phenotype and related information.\n\n        This record is intended primarily to be used in conjunction with\n        variants, but\n\n        the record can also be composed with other kinds of entities such as\n        diseases\n    ga4ghSearchGenotypePhenotypeRequest:\n      type: object\n      properties:\n        phenotype_association_set_id:\n          type: string\n          title: The `PhenotypeAssociationSet` to search. Mandatory\n        feature_ids:\n          type: array\n          items:\n            type: string\n          description: At least one feature_id or phenotype_id must be provided.\n        phenotype_ids:\n          type: array\n          items:\n            type: string\n          title: Phenotype IDs\n        evidence:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidenceQuery'\n          title: evidence\n        page_size:\n          type: string\n          format: int64\n          description: |-\n            Specifies the maximum number of results to return in a single page.\n            If unspecified, a system default will be used.\n        page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            To get the next page of results, set this parameter to the value of\n\n            `nextPageToken` from the previous response.\n      description: \u003e-\n        This request maps to the body of `POST\n        /featurephenotypeassociations/search` as JSON.\n\n\n        The goal here is to allow users to query using one or more of\n\n        Genotype, Phenotype, Environment, and Evidence.\n\n\n        A query using one of the above items is to mean, by default,\n\n        that the remainder of the query is as a \"wildcard\", such\n\n        that all matches to just that query term would come back.\n\n        Combinations of the above are to act like AND rather than OR.\n\n\n        The \"genotype\" part of the query methods can be one or more\n\n        genomic features.  Associations can be made at many\n\n        levels of granularity (from whole genotypes down to individual\n\n        SNVs), but users may use these methods with partial or\n\n        inexact information.  Therefore, the query methods must be\n\n        able to support query of some or all of the associated features.\n\n        Furthermore, use of the relationships between genomic features\n\n        means that when querying for a gene, any variants to that\n\n        gene are also returned.  For example, a query with\n\n        BRCA2 would mean that in addition to any direct associations\n\n        to the BRCA2, all associations to sequence variants of BRCA2 would also\n\n        be returned.  Similarly, queries with OntologyTerms should perform\n\n        the subclass closure.\n\n\n        Each query can be made against a string, an array of external\n\n        identifers (such as for gene or SNP ids), ontology term ids, or\n\n        full feature/phenotype/evidence objects.\n    ga4ghSearchGenotypePhenotypeResponse:\n      type: object\n      properties:\n        associations:\n          type: array\n          items:\n            $ref: '#/components/schemas/FeaturePhenotypeAssociation'\n          description: The list of matching FeaturePhenotypeAssociation.\n        next_page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            Provide this value in a subsequent request to return the next page\n            of\n\n            results. This field will be empty if there aren't any additional\n            results.\n      description: \u003e-\n        This is the response from `POST /genotypephenotype/search` expressed as\n        JSON.\n    ga4ghSearchPhenotypeAssociationSetsRequest:\n      type: object\n      properties:\n        dataset_id:\n          type: string\n          title: The `Dataset` to search. Mandatory\n        page_size:\n          type: string\n          format: int64\n          description: |-\n            Specifies the maximum number of results to return in a single page.\n            If unspecified, a system default will be used.\n        page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            To get the next page of results, set this parameter to the value of\n\n            `nextPageToken` from the previous response.\n      description: \u003e-\n        This request maps to the body of `POST /phenotypeassociationsets/search`\n        as JSON.\n    ga4ghSearchPhenotypeAssociationSetsResponse:\n      type: object\n      properties:\n        phenotype_association_sets:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhenotypeAssociationSet'\n          description: The list of matching phenotype association sets.\n        next_page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            Provide this value in a subsequent request to return the next page\n            of\n\n            results. This field will be empty if there aren't any additional\n            results.\n      description: \u003e-\n        This is the response from `POST /phenotypeassociationsets/search`\n        expressed as JSON.\n    ga4ghSearchPhenotypesRequest:\n      type: object\n      properties:\n        phenotype_association_set_id:\n          type: string\n          title: The `PhenotypeAssociationSet` to search. Mandatory\n        id:\n          type: string\n          title: |-\n            Phenotype ID\n            TODO remove if a get-by-phenotype ID endpoint is added\n        description:\n          type: string\n          title: \u003e-\n            The system may support regex.\n            https://www.w3.org/TR/xpath-functions/#regex-syntax\n        type:\n          $ref: '#/components/schemas/OntologyTerm'\n        qualifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/OntologyTerm'\n          title: terms should be OR'd together. e.g. (severe OR abnormal)\n        age_of_onset:\n          $ref: '#/components/schemas/OntologyTerm'\n        page_size:\n          type: string\n          format: int64\n          description: |-\n            Specifies the maximum number of results to return in a single page.\n            If unspecified, a system default will be used.\n        page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            To get the next page of results, set this parameter to the value of\n\n            `next_page_token` from the previous response.\n    ga4ghSearchPhenotypesResponse:\n      type: object\n      properties:\n        phenotypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhenotypeInstance'\n          description: The list of matching PhenotypeInstances.\n        next_page_token:\n          type: string\n          description: \u003e-\n            The continuation token, which is used to page through large result\n            sets.\n\n            Provide this value in a subsequent request to return the next page\n            of\n\n            results. This field will be empty if there aren't any additional\n            results.\n      description: This is the response from `POST /phenotypes/search` expressed as JSON.\n    NullValue:\n      type: string\n      enum:\n        - NULL_VALUE\n      default: NULL_VALUE\n      description: \u003e-\n        `NullValue` is a singleton enumeration to represent the null value for\n        the\n\n        `Value` type union.\n\n         The JSON representation for `NullValue` is JSON `null`.\n\n         - NULL_VALUE: Null value.\n    ListValue:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/Value'\n          description: Repeated field of dynamically typed values.\n      description: |-\n        `ListValue` is a wrapper around a repeated field of values.\n\n        The JSON representation for `ListValue` is JSON array.\n    Struct:\n      type: object\n      properties:\n        fields:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Value'\n          description: Unordered map of dynamically typed values.\n      description: |-\n        `Struct` represents a structured data value, consisting of fields\n        which map to dynamically typed values. In some languages, `Struct`\n        might be supported by a native representation. For example, in\n        scripting languages like JS a struct is represented as an\n        object. The details of that representation are described together\n        with the proto support for the language.\n\n        The JSON representation for `Struct` is JSON object.\n    Value:\n      type: object\n      properties:\n        null_value:\n          $ref: '#/components/schemas/NullValue'\n        number_value:\n          type: number\n          format: double\n          description: Represents a double value.\n        string_value:\n          type: string\n          description: Represents a string value.\n        bool_value:\n          type: boolean\n          format: boolean\n          description: Represents a boolean value.\n        struct_value:\n          $ref: '#/components/schemas/Struct'\n        list_value:\n          $ref: '#/components/schemas/ListValue'\n      description: |-\n        `Value` represents a dynamically typed value which can be either\n        null, a number, a string, a boolean, a recursive struct value, or a\n        list of values. A producer of value is expected to set one of that\n        variants, absence of any variant indicates an error.\n\n        The JSON representation for `Value` is JSON value."
		}
	},
	"Error": "invalid json"
}