{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/monadicstack/frodo"
		},
		"file": {
			"name": "openapi.yml.tmpl",
			"path": "generate/templates/openapi.yml.tmpl",
			"content": "# Code generated by Frodo - DO NOT EDIT.\n#\n#   Timestamp: {{ .TimestampString }}\n#   Source:    {{ .Path }}\n#   Generator: https:#github.com/monadicstack/frodo\n#\nopenapi: 3.0.0\ninfo:\n    title: {{ .Service.Name }}\n    version: \"{{ .Service.Version }}\"\n\nservers:\n    - url: {{ .Service.Gateway.PathPrefix | LeadingSlash }}\n\npaths:\n    {{ range $method := .Service.Functions }}\n    {{ $pathFields := .Gateway.PathParameters }}\n    {{ $queryFields := .Gateway.QueryParameters }}\n    \"{{ .Gateway.Path | OpenAPIPath }}\":\n        {{ .Gateway.Method | ToLower }}:\n            description: \u003e {{ range .Documentation }}\n                {{ . }}{{ end }}\n            {{ if or $pathFields.NotEmpty $queryFields.NotEmpty }}\n            parameters:\n                {{ range $pathFields }}\n                - in: path\n                  name: {{ .Name }}\n                  required: true\n                  {{ if .Field.Documentation.NotEmpty }}\n                  description:  \u003e {{ range .Field.Documentation }}\n                      {{ . }}{{ end }}\n                  {{ end }}\n                  schema:\n                      type: {{ .Field.Type | JSONType }}\n                {{ end }}\n                {{ range $queryFields }}\n                - in: query\n                  name: {{ .Name }}\n                  {{ if .Field.Documentation.NotEmpty }}\n                  description:  \u003e {{ range .Field.Documentation }}\n                      {{ . }}{{ end }}\n                  {{ end }}\n                  schema:\n                      type: {{ .Field.Type | JSONType }}\n                {{ end }}\n            {{ end }}\n\n            {{ if .Gateway.SupportsBody }}\n            requestBody:\n                content:\n                     application/json:\n                         schema:\n                             $ref: '#/components/schemas/{{ .Request.Name }}'\n            {{ end }}\n\n            responses:\n                {{ .Gateway.Status }}:\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/{{ .Response.Name }}'\n    {{ end }}\n\ncomponents:\n    schemas:\n        {{ range .Types.NonBasicTypes }}\n        {{ .Name | NoPointer }}:\n            type: {{ . | JSONType }}\n            {{ if .Fields.NotEmpty }}\n            properties:\n                {{ range $field := .NonOmittedFields }}\n                {{ .Binding.Name | NoPointer }}:\n                    {{ if .Type.Basic }}type: {{ .Type | JSONType }}{{ end }}\n                    {{ if not .Type.Basic }}$ref: \"#/components/schemas/{{ .Type.Name | NoPointer }}\"{{ end }}\n                    {{ if and .Type.Basic .Type.SliceLike }}\n                    items:\n                        {{ if .Type.Elem.Basic }}type: {{ .Type.Elem | JSONType }}{{ end }}\n                        {{ if not .Type.Elem.Basic }}$ref: \"#/components/schemas/{{ .Type.Elem.Name | NoPointer }}\"{{ end }}\n                    {{ end }}\n                    {{ if .Documentation.NotEmpty }}description: \u003e {{ range .Documentation }}\n                        {{ . }}{{ end }}\n                    {{ end }}\n                {{ end }}\n            {{ end }}\n        {{ end }}\n"
		}
	},
	"Error": "invalid json"
}