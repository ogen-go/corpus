{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/railwaymen/timetable"
		},
		"file": {
			"name": "index.yaml.erb",
			"path": "app/views/api/docs/index.yaml.erb",
			"content": "openapi: 3.0.1\nservers:\n  - url: \u003c%= [request.protocol, request.host_with_port, '/api'].join %\u003e\ntags:\n  - name: Session\n\npaths:\n  /users/sign_in:\n    post:\n      tags:\n        - Session\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - email\n                - password\n              properties:\n                email:\n                  type: string\n                  example: admin@example.com\n                password:\n                  type: string\n                  example: password\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - id\n                  - first_name\n                  - last_name\n                  - token\n                  - is_leader\n                  - admin\n                  - manger\n                  - staff_manager\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  first_name:\n                    type: string\n                    example: John\n                  last_name:\n                    type: string\n                    example: Smith\n                  token:\n                    type: string\n                    example: eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NH0.P3BMpG0CHZArdYBrzWHxuu7zQlT4j9WZNY0qkqtxmJ0\n                  is_leader:\n                    type: boolean\n                    example: false\n                  admin:\n                    type: boolean\n                    example: false\n                  manager:\n                    type: boolean\n                    example: false\n                    required: true\n                  staff_manager:\n                    type: boolean\n                    example: false\n        422:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: object\n                example:\n                  errors:\n                    base:\n                      - error: invalid_email_or_password\n                      - error: inactive\n  /projects:\n    get:\n      tags:\n        - Projects\n      security:\n        - authentication: []\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - project_id\n                    - name\n                    - color\n                    - users\n                  properties:\n                    project_id:\n                      type: integer\n                      example: 1\n                    name:\n                      type: string\n                      example: Project\n                    color:\n                      type: string\n                      example: 08e51a\n                    leader_first_name:\n                      type: string\n                      example: John\n                    leader_last_name:\n                      type: string\n                      example: Smith\n                    users:\n                      type: array\n                      items:\n                        type: object\n                        required:\n                          - id\n                          - first_name\n                          - last_name\n                        properties:\n                          id:\n                            type: integer\n                            example: 1\n                          first_name:\n                            type: string\n                            example: John\n                          last_name:\n                            type: string\n                            example: Smith\n  /projects/simple:\n    get:\n      tags:\n        - Projects\n      security:\n        - authentication: []\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - id\n                    - name\n                    - internal\n                    - active\n                    - work_times_allows_task\n                    - color\n                    - lunch\n                    - autofill\n                    - count_duration\n                    - taggable\n                  properties:\n                    id:\n                      type: integer\n                      example: 1\n                    name:\n                      type: string\n                      example: Project 1\n                    internal:\n                      type: boolean\n                      example: false\n                    active:\n                      type: boolean\n                      example: true\n                    work_times_allows_task:\n                      type: boolean\n                      example: true\n                    color:\n                      type: string\n                      example: 0c0c0c\n                    lunch:\n                      type: boolean\n                      example: false\n                    autofill:\n                      type: boolean\n                      example: false\n                    count_duration:\n                      type: boolean\n                      example: false\n                    taggable:\n                      type: boolean\n                      example: false\n  /projects/tags:\n    get:\n      tags:\n        - Projects\n      security:\n        - authentication: []\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                example: [\"dev\", \"im\", \"cc\", \"res\"]\n  /work_times:\n    get:\n      tags:\n        - Work times\n      security:\n        - authentication: []\n      parameters:\n        - name: project_id\n          in: query\n          schema:\n            type: integer\n        - name: from\n          in: query\n          schema:\n            type: string\n            example: \"2020-03-01T00:00:00.000Z\"\n        - name: to\n          in: query\n          schema:\n            type: string\n            example: \"2020-03-31T23:59:59.000Z\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkTime'\n    post:\n      tags:\n        - Work times\n      security:\n        - authentication: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - project_id\n                - starts_at\n                - ends_at\n              properties:\n                project_id:\n                  type: integer\n                  example: 2\n                body:\n                  type: string\n                  example: My work\n                task:\n                  type: string\n                  example: https//jira.com/TASK-XXX\n                tag:\n                  type: string\n                  example: dev\n                  default: dev\n                  enum: ['dev', 'im', 'cc', 'res']\n                starts_at:\n                  type: string\n                  example: \"2020-03-04T08:00:00.000Z\"\n                ends_at:\n                  type: string\n                  example: \"2020-03-04T010:00:00.000Z\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkTime'\n        422:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkTimeValidation'\n        403:\n          description:\n  /work_times/create_filling_gaps:\n    post:\n      tags:\n        - Work times\n      security:\n        - authentication: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - project_id\n                - starts_at\n                - ends_at\n              properties:\n                project_id:\n                  type: integer\n                  example: 2\n                body:\n                  type: string\n                  example: My work\n                task:\n                  type: string\n                  example: https//jira.com/TASK-XXX\n                tag:\n                  type: string\n                  example: dev\n                  default: dev\n                  enum: ['dev', 'im', 'cc', 'res']\n                starts_at:\n                  type: string\n                  example: \"2020-03-04T08:00:00.000Z\"\n                ends_at:\n                  type: string\n                  example: \"2020-03-04T010:00:00.000Z\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkTime'\n        422:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkTimeValidation'\n        403:\n          description:\n  /work_times/{id}:\n    get:\n      tags:\n        - Work times\n      security:\n        - authentication: []\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/WorkTime'\n                  - type: object\n                    properties:\n                      sum_duration:\n                        type: integer\n                        example: 3600\n                      versions:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: '#/components/schemas/WorkTime'\n                            - type: object\n                              properties:\n                                event:\n                                  type: string\n                                  enum: ['create', 'update']\n                                updated_by:\n                                  type: string\n                                  example: John Smith\n                                created_at:\n                                  type: string\n                                  format: date-time\n                                changeset:\n                                  type: array\n                                  example: [\"project_id\", \"start_at\", \"ends_at\"]\n    put:\n      tags:\n        - Work times\n      security:\n        - authentication: []\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - project_id\n                - starts_at\n                - ends_at\n              properties:\n                project_id:\n                  type: integer\n                  example: 2\n                body:\n                  type: string\n                  example: My work\n                task:\n                  type: string\n                  example: https//jira.com/TASK-XXX\n                tag:\n                  type: string\n                  example: dev\n                  default: dev\n                  enum: ['dev', 'im', 'cc', 'res']\n                starts_at:\n                  type: string\n                  example: \"2020-03-04T08:00:00.000Z\"\n                ends_at:\n                  type: string\n                  example: \"2020-03-04T010:00:00.000Z\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkTime'\n        422:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkTimeValidation'\n        403:\n          description:\n    delete:\n      tags:\n        - Work times\n      security:\n        - authentication: []\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        204:\n          description:\n        403:\n          description:\n  /accounting_periods:\n    get:\n      tags:\n        - Accounting periods\n      security:\n        - authentication: []\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n        - name: per_page\n          description: Records per page. By default it is 24\n          in: query\n          schema:\n            type: integer\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - total_pages\n                  - recounting\n                  - accounting_periods\n                properties:\n                  total_pages:\n                    type: integer\n                    example: 20\n                  recounting:\n                    type: boolean\n                    example: false\n                  records:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/AccountingPeriod'\n  /accounting_periods/matching_fulltime:\n    get:\n      tags:\n        - Accounting periods\n      security:\n        - authentication: []\n      parameters:\n        - name: date\n          description: Date for which it should calculate work time statistics based on accounting periods\n          in: query\n          schema:\n            type: string\n            example: \"\u003c%= Date.today %\u003e\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  accounting_period:\n                    $ref: '#/components/schemas/AccountingPeriod'\n                  should_worked:\n                    type: integer\n                    example: 604800\n  /vacation_periods:\n    get:\n      tags:\n        - Vacations\n      security:\n        - authentication: []\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n        - name: per_page\n          description: Records per page. By default it is 24\n          in: query\n          schema:\n            type: integer\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - total_pages\n                  - records\n                properties:\n                  total_pages:\n                    type: integer\n                    example: 20\n                  records:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/VacationPeriod'\n  /vacations:\n    get:\n      tags:\n        - Vacations\n      security:\n        - authentication: []\n      parameters:\n        - name: year\n          in: query\n          schema:\n            type: integer\n            example: \"\u003c%= Date.current.year %\u003e\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - available_vacation_days\n                  - used_vacation_days\n                  - vacations\n                properties:\n                  available_vacation_days:\n                    type: integer\n                    example: 0\n                  used_vacation_days:\n                    type: object\n                    properties:\n                      care:\n                        type: integer\n                        example: 0\n                      compassionate:\n                        type: integer\n                        example: 0\n                      illness:\n                        type: integer\n                        example: 0\n                      parental:\n                        type: integer\n                        example: 0\n                      paternity:\n                        type: integer\n                        example: 0\n                      planned:\n                        type: integer\n                        example: 0\n                      rehabilitation:\n                        type: integer\n                        example: 0\n                      requested:\n                        type: integer\n                        example: 0\n                      unpaid:\n                        type: integer\n                        example: 0\n                      upbringing:\n                        type: integer\n                        example: 0\n                  records:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Vacation'\n    post:\n      tags:\n        - Vacations\n      security:\n        - authentication: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - vacation_type\n                - start_date\n                - end_date\n              properties:\n                vacation_type:\n                  type: string\n                  enum: ['planned', 'requested', 'compassionate', 'others']\n                description:\n                  type: string\n                  example:\n                  description: Required when vacation_type equals 'others'\n                start_date:\n                  type: string\n                  example: \"2020-04-22\"\n                end_date:\n                  type: string\n                  example: \"2020-04-24\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Vacation'\n        422:\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - errors\n                properties:\n                  errors:\n                    type: object\n                example:\n                  errors:\n                    base:\n                      - error: work_time_exists\n                      - error: vacation_exists\n                    description:\n                      - error: blank\n                    start_date:\n                      - error: greater_than_end_date\n                      - error: blank\n                    end_date:\n                      - error: blank\n                    vacation_type:\n                      - error: blank\n                      - error: inclusion\n  /vacations/{id}/self_decline:\n    put:\n      tags:\n        - Vacations\n      security:\n        - authentication: []\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        204:\n          description:\n        404:\n          description:\n  /remote_works:\n    get:\n      tags:\n        - Remote work\n      security:\n        - authentication: []\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n        - name: per_page\n          description: Records per page. By default it is 24\n          in: query\n          schema:\n            type: integer\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                required:\n                  - total_pages\n                  - records\n                properties:\n                  total_pages:\n                    type: integer\n                    example: 20\n                  records:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/RemoteWork'\n    post:\n      tags:\n        - Remote work\n      security:\n        - authentication: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - starts_at\n                - ends_at\n              properties:\n                note:\n                  type: string\n                starts_at:\n                  type: string\n                  example: \"2020-03-04T08:00:00.000Z\"\n                ends_at:\n                  type: string\n                  example: \"2020-03-04T010:00:00.000Z\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RemoteWork'\n        422:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: object\n                example:\n                  errors:\n                    starts_at:\n                      - error: overlap\n                      - error: too_old\n                      - error: blank\n                      - error: incorrect_hours\n                    ends_at:\n                      - error: blank\n  /remote_works/{id}:\n    put:\n      tags:\n        - Remote work\n      security:\n        - authentication: []\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - starts_at\n                - ends_at\n              properties:\n                note:\n                  type: string\n                starts_at:\n                  type: string\n                  example: \"2020-03-04T08:00:00.000Z\"\n                ends_at:\n                  type: string\n                  example: \"2020-03-04T010:00:00.000Z\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteWork'\n        422:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: object\n                example:\n                  errors:\n                    starts_at:\n                      - error: overlap\n                      - error: overlap_midnight\n                      - error: too_old\n                      - error: blank\n                      - error: incorrect_hours\n                    ends_at:\n                      - error: blank\n    delete:\n      tags:\n        - Remote work\n      security:\n        - authentication: []\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        204:\n          description:\n        404:\n          description:\n        422:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: object\n                example:\n                  errors:\n                    starts_at:\n                      - error: too_old\ncomponents:\n  schemas:\n    AccountingPeriod:\n      type: object\n      required:\n        - id\n        - user_id\n        - duration\n        - count_duration\n        - closed\n        - protected\n        - full_time\n        - position\n      properties:\n        id:\n          type: integer\n          example: 1\n        user_id:\n          type: integer\n          example: 1\n        starts_at:\n          type: \n          example: null\n        ends_at:\n          type: \n          example: null\n        counted_duration:\n          type: integer\n          example: 0\n        duration:\n          type: integer\n          example: 604800\n        closed:\n          type: boolean\n          example: false\n        note:\n          type: string\n          example: Some note\n        position:\n          type: integer\n          example: 3\n        full_time:\n          type: boolean\n          example: false\n        protected:\n          type: boolean\n          example: false\n    VacationPeriod:\n      type: object\n      required:\n        - id\n        - user_id\n        - vacation_days\n        - closed\n        - starts_at\n        - ends_at\n      properties:\n        id:\n          type: integer\n          example: 1\n        user_id:\n          type: integer\n          example: 1\n        starts_at:\n          type: string\n          example: \"2020-01-01\"\n        ends_at:\n          type: string\n          example: \"2020-12-31\"\n        vacation_days:\n          type: integer\n          example: 26\n        note:\n          type: string\n          example: Lorem ipsum\n        closed:\n          type: boolean\n          example: false\n    RemoteWork:\n      type: object\n      required:\n        - id\n        - user_id\n        - creator_id\n        - duration\n        - starts_at\n        - ends_at\n        - updated_by_admin\n      properties:\n        id:\n          type: integer\n          example: 1\n        creator_id:\n          type: integer\n          example: 1\n        starts_at:\n          type: string\n          example: \"2020-03-04T08:00:00.000Z\"\n        ends_at:\n          type: string\n          example: \"2020-03-04T010:00:00.000Z\"\n        duration:\n          type: integer\n          example: 604800\n        note:\n          type: string\n        updated_by_admin:\n          type: boolean\n          example: false\n        user_id:\n          type: integer\n          example: 3\n    WorkTime:\n      type: object\n      required:\n        - id\n        - updated_by_admin\n        - project_id\n        - starts_at\n        - ends_at\n        - duration\n        - tag\n        - user_id\n        - date\n        - project\n      properties:\n        id:\n          type: integer\n          example: 1\n        updated_by_admin:\n          type: boolean\n          example: false\n        project_id:\n          type: integer\n          example: 2\n        starts_at:\n          type: string\n          example: \"2020-03-04T08:00:00.000Z\"\n        ends_at:\n          type: string\n          example: \"2020-03-04T010:00:00.000Z\"\n        duration:\n          type: integer\n          example: 7200\n        body:\n          type: string\n          example: My work\n        task:\n          type: string\n          example: https//jira.com/TASK-XXX\n        tag:\n          type: string\n          example: dev\n          default: dev\n          description: dev - default value for development work time. im - internal metting. cc - client communication. res - research.\n          enum: ['dev', 'im', 'cc', 'res']\n        task_preview:\n          type: string\n          example: TASK-XXX\n        user_id:\n          type: integer\n          example: 1\n        date:\n          type: string\n          example: \"2020-03-04\"\n        editable:\n          type: boolean\n          example: true\n        project:\n          type: object\n          required:\n            - id\n            - name\n            - color\n            - work_times_allows_task\n            - lunch\n            - count_duration\n            - taggable\n          properties:\n            id:\n              type: integer\n              example: 2\n            name:\n              type: string\n              example: Foo\n            color:\n              type: string\n              example: 08e51a\n            work_times_allows_task:\n              type: boolean\n              example: true\n            lunch:\n              type: boolean\n              example: false\n            count_duration:\n              type: boolean\n              example: true\n            taggable:\n              type: boolean\n              example: true\n    WorkTimeValidation:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: object\n      example:\n        errors:\n          body:\n            - error: body_or_task_blank\n          task:\n            - error: invalid_uri\n            - error: invalid_external\n          starts_at:\n            - error: overlap\n            - error: too_old\n            - error: overlap_midnight\n            - error: no_gaps_to_fill\n          duration:\n            - error: greater_than\n          project_id:\n            - error: blank\n    Vacation:\n      type: object\n      required:\n        - id\n        - start_date\n        - end_date\n        - vacation_type\n        - status\n        - full_name\n        - business_days_count\n      properties:\n        id:\n          type: integer\n          example: 1\n        start_date:\n          type: string\n          example: \"2020-04-22\"\n        end_date:\n          type: string\n          example: \"2020-04-24\"\n        vacation_type:\n          type: string\n          example: planned\n          enum: ['planned', 'requested', 'compassionate', 'others']\n        status:\n          type: string\n          example: unconfirmed\n          enum: ['unconfirmed', 'declined', 'approved', 'accepted']\n        full_name:\n          type: string\n          example: Harber Vanda\n        business_days_count:\n          type: integer\n          example: 2\n  securitySchemes:\n    authentication:\n      type: apiKey\n      name: token\n      in: header\n"
		}
	},
	"Error": "invalid json"
}