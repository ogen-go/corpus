{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jhipster/generator-jhipster"
		},
		"file": {
			"name": "api.yml.ejs",
			"path": "generators/server/templates/src/main/resources/swagger/api.yml.ejs",
			"content": "\u003c%#\n Copyright 2013-2022 the original author or authors from the JHipster project.\n\n This file is part of the JHipster project, see https://www.jhipster.tech/\n for more information.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      https://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-%\u003e\n# API-first development with OpenAPI\n# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator\nopenapi: \"3.0.1\"\ninfo:\n  title: \"\u003c%= baseName %\u003e\"\n  version: 0.0.1\nservers:\n  - url: http://localhost:\u003c%= serverPort %\u003e/api\n    description: Development server\n  - url: https://localhost:\u003c%= serverPort %\u003e/api\n    description: Development server with TLS Profile\npaths: {}\ncomponents:\n  responses:\n    Problem:\n      description: error occurred - see status code and problem object for more information.\n      content:\n        \"application/problem+json\":\n          schema:\n            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'\n\u003c% if (authenticationTypeJwt) { %\u003e\n  securitySchemes:\n    jwt:\n      type: http\n      description: JWT Authentication\n      scheme: bearer\n      bearerFormat: JWT\n  \u003c%_ if (applicationTypeMonolith) { _%\u003e\n    basic:\n      type: http\n      description: Basic Authentication\n      scheme: basic\n  \u003c%_ } _%\u003e\nsecurity:\n  - jwt: []\n  \u003c%_ if (applicationTypeMonolith) { _%\u003e\n  - basic: []\n  \u003c%_ } _%\u003e\n\u003c% } %\u003e\n\u003c% if (authenticationTypeOauth2) { %\u003e\n  securitySchemes:\n    oauth:\n      type: oauth2\n      description: OAuth2 authentication with KeyCloak\n      flows:\n        authorizationCode:\n          authorizationUrl: http://localhost:9080/auth/realms/jhipster/protocol/openid-connect/auth\n          tokenUrl: http://localhost:9080/auth/realms/jhipster/protocol/openid-connect/token\n          scopes:\n            jhipster: Jhipster specific claims\n            email: Email claims\n            profile: Profile claims\n    openId:\n      type: openIdConnect\n      description: OpenID Connect authentication with KeyCloak\n      openIdConnectUrl: http://localhost:9080/auth/realms/jhipster/.well-known/openid-configuration\nsecurity:\n  - oauth: [jhipster, email, profile]\n  - openId: [jhipster, email, profile]\n\u003c% } %\u003e\n\u003c% if (authenticationTypeSession) { %\u003e\n  securitySchemes:\n    sessionId:\n      type: apiKey\n      name: JSESSIONID\n      in: cookie\n    csrf:\n      type: apiKey\n      name: XSRF-TOKEN\n      in: cookie\nsecurity:\n  - sessionId: []\n  - csrf: []\n\u003c% } %\u003e\n"
		}
	},
	"Error": "invalid json"
}