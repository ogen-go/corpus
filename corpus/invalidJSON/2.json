{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/enseadaio/enseada"
		},
		"file": {
			"name": "index.yml.njk",
			"path": "api/docs/index.yml.njk",
			"content": "openapi: 3.0.1\ninfo:\n  title: Enseada\n  description: A Cloud native multi-package registry\n  x-logo:\n    url: https://enseada.io/images/enseada-logo.png\n    backgroundColor: \"#FFFFFF\"\n    altText: Enseada logo\n  contact:\n    email: enseada@pm.me\n    url: https://enseada.io\n  license:\n    name: MPL 2.0\n    url: https://opensource.org/licenses/MPL-2.0\n  version: 0.1.0\nexternalDocs:\n  description: Find out more about Enseada\n  url: https://enseada.io\ntags:\n  - name: oauth\n    description: OAuth 2.0 endpoints\n  - name: monitoring\n    description: Monitoring and observability endpoints\n  - name: rbac\n    description: RBAC management endpoints\n  - name: users\n    description: User management endpoints\n  - name: containers\n    description: OCI container registry endpoints\npaths:\n  $ref: paths/index.yml.njk\n\ncomponents:\n  parameters:\n    $ref: components/parameters/index.yml.njk\n  schemas:\n    $ref: components/schemas/index.yml.njk\n  securitySchemes:\n    oauth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth/authorize\n          tokenUrl: /oauth/token\n          scopes:\n            # Users\n            profile: access user profile information\n            users:read: read-only access to registered users\n            users:manage: read-write access to registered users\n\n            # RBAC\n            roles: read-write access to user roles\n            permissions: read-write access to user permissions\n\n            # PAT\n            pat:read: read-only access to PATs\n            pat:manage: read-write access to PATs\n\n\n    {{\n  inject([{\n    toAllOperations: {\n      content: {\n        responses: {\n          '401': {\n            description: 'Authentication failed',\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/Error'\n                }\n              }\n            }\n          },\n          '403': {\n            description: 'Insufficient permissions',\n            content: {\n              'application/json': {\n                schema: {\n                  $ref: '#/components/schemas/Error'\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }])\n}}"
		}
	},
	"Error": "invalid json"
}