{"File":{"__typename":"FileMatch","repository":{"name":"github.com/BrickSchema/brick-example-server"},"file":{"name":"openapi.json","path":"openapi.json","content":"{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Brick Server\",\n    \"version\": \"0.1.0\"\n  },\n  \"paths\": {\n    \"/brickapi/v1/data/timeseries\": {\n      \"get\": {\n        \"tags\": [\n          \"Data\",\n          \"Data\"\n        ],\n        \"summary\": \"Get\",\n        \"operationId\": \"get_brickapi_v1_data_timeseries_get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Entity Id\",\n              \"type\": \"string\"\n            },\n            \"name\": \"entity_id\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"Starting time of the data in UNIX timestamp in seconds (float). If not given, the beginning of the data will be assumed.\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Start Time\",\n              \"type\": \"number\",\n              \"description\": \"Starting time of the data in UNIX timestamp in seconds (float). If not given, the beginning of the data will be assumed.\"\n            },\n            \"name\": \"start_time\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"Ending time of the data in UNIX timestamp in seconds (float). If not given, the end of the data will be assumed.\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"End Time\",\n              \"type\": \"number\",\n              \"description\": \"Ending time of the data in UNIX timestamp in seconds (float). If not given, the end of the data will be assumed.\"\n            },\n            \"name\": \"end_time\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"The type of value. Currently, there are numbers (for both floating points and integers), texts, and locations (blobs are under dev.)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ValueType\"\n              },\n              \"description\": \"The type of value. Currently, there are numbers (for both floating points and integers), texts, and locations (blobs are under dev.)\",\n              \"default\": [\n                \"number\"\n              ]\n            },\n            \"name\": \"value_types\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TimeseriesData\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Data\",\n          \"Data\"\n        ],\n        \"summary\": \"Post\",\n        \"description\": \"Post data. If fields are not given, default values are assumed.\",\n        \"operationId\": \"post_brickapi_v1_data_timeseries_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"Data\",\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/TimeseriesData\"\n                  }\n                ],\n                \"description\": \"A table of data where each row represents a value tuple. `data` field contains actual data and `columns` field contains information about the columns of the data.\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IsSuccess\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Data\",\n          \"Data\"\n        ],\n        \"summary\": \"Delete\",\n        \"description\": \"Delete data of an entity with in a time range or all the data if a time range is not given.\",\n        \"operationId\": \"delete_brickapi_v1_data_timeseries_delete\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Entity Id\",\n              \"type\": \"string\"\n            },\n            \"name\": \"entity_id\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"Starting time of the data in UNIX timestamp in seconds (float). If not given, the beginning of the data will be assumed.\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Start Time\",\n              \"type\": \"number\",\n              \"description\": \"Starting time of the data in UNIX timestamp in seconds (float). If not given, the beginning of the data will be assumed.\"\n            },\n            \"name\": \"start_time\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"Ending time of the data in UNIX timestamp in seconds (float). If not given, the end of the data will be assumed.\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"End Time\",\n              \"type\": \"number\",\n              \"description\": \"Ending time of the data in UNIX timestamp in seconds (float). If not given, the end of the data will be assumed.\"\n            },\n            \"name\": \"end_time\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IsSuccess\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/entities/upload\": {\n      \"post\": {\n        \"tags\": [\n          \"Entities\",\n          \"Entities\"\n        ],\n        \"summary\": \"Uplaod a Turtle file\",\n        \"description\": \"Upload a Turtle file. An example file: https://gitlab.com/jbkoh/brick-server-dev/blob/dev/examples/data/bldg.ttl\",\n        \"operationId\": \"upload_brickapi_v1_entities_upload_post\",\n        \"parameters\": [\n          {\n            \"description\": \"The name of the graph. This is similar to a database name in relational databases.\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Named Graph\",\n              \"type\": \"string\",\n              \"description\": \"The name of the graph. This is similar to a database name in relational databases.\"\n            },\n            \"name\": \"named_graph\",\n            \"in\": \"query\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Body_upload_brickapi_v1_entities_upload_post\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IsSuccess\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/entities/\": {\n      \"get\": {\n        \"tags\": [\n          \"Entities\",\n          \"Entities\"\n        ],\n        \"summary\": \"Get Entity By Id\",\n        \"description\": \"Get information about an entity including type and its relationships with others. The definition of entity: An entity can be defined in two ways. It's an instance of a (Brick) Class. More specifically, it is either a physical or a virtual thing whose properties are well-maintained to be a thing. Top three Brick Classes are Point (e.g., sensors, setpoints, etc.), Equipment (e.g., VAV, Luminaire, AHU, etc.), and Location (e.g., Room, Floor, etc.)\",\n        \"operationId\": \"get_entity_by_id_brickapi_v1_entities__get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Entity Id\",\n              \"type\": \"string\"\n            },\n            \"name\": \"entity_id\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Entity\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/entities/list\": {\n      \"post\": {\n        \"tags\": [\n          \"Entities\",\n          \"Entities\"\n        ],\n        \"summary\": \"Post\",\n        \"description\": \"List all entities with their types and relations.\",\n        \"operationId\": \"post_brickapi_v1_entities_list_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"Params\",\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ListEntityParams\"\n                  }\n                ],\n                \"description\": \"A list of object URIs for the corresponding predicate. Brick Server will find entities having relations with all the objects with the predicate (i.e., AND operation.)\",\n                \"default\": {\n                  \"hasPoint\": [],\n                  \"isPointOf\": [],\n                  \"hasPart\": [],\n                  \"isPartOf\": [],\n                  \"hasLocation\": [],\n                  \"isLocationOf\": [],\n                  \"feeds\": [],\n                  \"isFedBy\": []\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EntityIds\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/rawqueries/timeseries\": {\n      \"post\": {\n        \"tags\": [\n          \"Raw Queries\",\n          \"Raw Queries\"\n        ],\n        \"summary\": \"Post\",\n        \"description\": \"Raw PostgreSQL query for timeseries. (May not be exposed in the production deployment.)\",\n        \"operationId\": \"post_brickapi_v1_rawqueries_timeseries_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/sql\": {\n              \"schema\": {\n                \"title\": \"Query\",\n                \"type\": \"string\",\n                \"description\": \"A raw SQL query for timeseries data. The table consist of the columns as in `value_types`.\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/rawqueries/sparql\": {\n      \"post\": {\n        \"tags\": [\n          \"Raw Queries\",\n          \"Raw Queries\"\n        ],\n        \"summary\": \"Post\",\n        \"description\": \"Raw SPARQL for Brick metadata. (May not be exposed in the production deployment.\",\n        \"operationId\": \"post_brickapi_v1_rawqueries_sparql_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/sparql-query\": {\n              \"schema\": {\n                \"title\": \"Query\",\n                \"type\": \"string\",\n                \"description\": \"A raw SPARQL query.\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Post Brickapi V1 Rawqueries Sparql Post\",\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/actuation/\": {\n      \"post\": {\n        \"tags\": [\n          \"Actuation\",\n          \"Actuation\"\n        ],\n        \"summary\": \"Post\",\n        \"description\": \"Actuate an entity to a value\",\n        \"operationId\": \"post_brickapi_v1_actuation__post\",\n        \"parameters\": [\n          {\n            \"description\": \"The identifier of an entity. Often a URI. This should be unique across the target systems (i.e., the graphs of the interest.)\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Entity Id\",\n              \"type\": \"string\",\n              \"description\": \"The identifier of an entity. Often a URI. This should be unique across the target systems (i.e., the graphs of the interest.)\"\n            },\n            \"name\": \"entity_id\",\n            \"in\": \"query\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ActuationRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IsSuccess\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/grafana/details\": {\n      \"get\": {\n        \"tags\": [\n          \"Data\",\n          \"Data\"\n        ],\n        \"summary\": \"Get\",\n        \"description\": \"Get dashbaord metadata for the `uid`.\",\n        \"operationId\": \"get_brickapi_v1_grafana_details_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/grafana/\": {\n      \"get\": {\n        \"tags\": [\n          \"Data\",\n          \"Data\"\n        ],\n        \"summary\": \"Get\",\n        \"operationId\": \"get_brickapi_v1_grafana__get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GrafanaDashboardResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Data\",\n          \"Data\"\n        ],\n        \"summary\": \"Post\",\n        \"description\": \"Create or update the Grafana Dashboard. If JSON body is not given, it creates a Dashboard and assign it to the user. If JSON body is given, the body should be same as Grafana's dashboard model as defined at `https://grafana.com/docs/grafana/latest/http_api/dashboard/` except that uid, id, and title should be empty.\",\n        \"operationId\": \"post_brickapi_v1_grafana__post\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GrafanaDashboardResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/auth/login\": {\n      \"get\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Get Login Via Google\",\n        \"operationId\": \"get_login_via_google_brickapi_v1_auth_login_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/brickapi/v1/auth/is_registered\": {\n      \"get\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Get Is Registered\",\n        \"operationId\": \"get_is_registered_brickapi_v1_auth_is_registered_get\",\n        \"responses\": {\n          \"302\": {\n            \"description\": \"Successful Response\"\n          }\n        }\n      }\n    },\n    \"/brickapi/v1/auth/logincallback\": {\n      \"get\": {\n        \"summary\": \"Get Authorize\",\n        \"operationId\": \"get_authorize_brickapi_v1_auth_logincallback_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/brickapi/v1/auth/app_tokens/{app_token}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Del Token\",\n        \"operationId\": \"del_token_brickapi_v1_auth_app_tokens__app_token__delete\",\n        \"parameters\": [\n          {\n            \"description\": \"Token to delete.\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"App Token\",\n              \"type\": \"string\",\n              \"description\": \"Token to delete.\"\n            },\n            \"name\": \"app_token\",\n            \"in\": \"path\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IsSuccess\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/auth/app_tokens\": {\n      \"get\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Get Tokens\",\n        \"operationId\": \"get_tokens_brickapi_v1_auth_app_tokens_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Get Tokens Brickapi V1 Auth App Tokens Get\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TokenResponse\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Gen Token\",\n        \"operationId\": \"gen_token_brickapi_v1_auth_app_tokens_post\",\n        \"parameters\": [\n          {\n            \"description\": \"The name of an app the user needs to generate a token for\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"App Name\",\n              \"type\": \"string\",\n              \"description\": \"The name of an app the user needs to generate a token for\",\n              \"default\": \"\"\n            },\n            \"name\": \"app_name\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"Expiration time of the requested token in seconds.\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Token Lifetime\",\n              \"type\": \"integer\",\n              \"description\": \"Expiration time of the requested token in seconds.\",\n              \"default\": 3600\n            },\n            \"name\": \"token_lifetime\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenResponse\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/brickapi/v1/auth/register\": {\n      \"get\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Post Register User\",\n        \"operationId\": \"post_register_user_brickapi_v1_auth_register_get\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Body_post_register_user_brickapi_v1_auth_register_get\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"302\": {\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ActuationRequest\": {\n        \"title\": \"ActuationRequest\",\n        \"required\": [\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"title\": \"Value\",\n            \"type\": \"number\",\n            \"description\": \"A value to set the target entity.\"\n          }\n        }\n      },\n      \"Body_post_register_user_brickapi_v1_auth_register_get\": {\n        \"title\": \"Body_post_register_user_brickapi_v1_auth_register_get\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"is_admin\": {\n            \"title\": \"Is Admin\",\n            \"type\": \"boolean\",\n            \"description\": \"Designate if the user is going to be an admin or not.\",\n            \"default\": false\n          }\n        }\n      },\n      \"Body_upload_brickapi_v1_entities_upload_post\": {\n        \"title\": \"Body_upload_brickapi_v1_entities_upload_post\",\n        \"required\": [\n          \"file\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"file\": {\n            \"title\": \"File\",\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      },\n      \"ColumnType\": {\n        \"title\": \"ColumnType\",\n        \"enum\": [\n          \"number\",\n          \"text\",\n          \"loc\",\n          \"uuid\",\n          \"timestamp\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"An enumeration.\"\n      },\n      \"Entity\": {\n        \"title\": \"Entity\",\n        \"required\": [\n          \"type\",\n          \"entity_id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"relationships\": {\n            \"title\": \"Relationships\",\n            \"type\": \"array\",\n            \"items\": {\n              \"maxItems\": 2,\n              \"minItems\": 2,\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"description\": \"The list of relationships for the target entity. Assuming the target entity is the subject, each relation consists of the subject's predicate and object.s\",\n            \"default\": []\n          },\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\",\n            \"description\": \"The entity's type, which is often a Brick Class.\"\n          },\n          \"entity_id\": {\n            \"title\": \"Entity Id\",\n            \"type\": \"string\",\n            \"description\": \"The identifier of an entity. Often a URI. This should be unique across the target systems (i.e., the graphs of the interest.)\"\n          },\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"description\": \"An informative name for the entity. This does not have to be unique.\"\n          }\n        }\n      },\n      \"EntityIds\": {\n        \"title\": \"EntityIds\",\n        \"required\": [\n          \"entity_ids\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"entity_ids\": {\n            \"title\": \"Entity Ids\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The list of `entity_id`s\"\n          }\n        }\n      },\n      \"GrafanaDashboardResponse\": {\n        \"title\": \"GrafanaDashboardResponse\",\n        \"required\": [\n          \"url\",\n          \"uid\",\n          \"grafana_id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"url\": {\n            \"title\": \"Url\",\n            \"type\": \"string\",\n            \"description\": \"Grafana dashboard url for the user\"\n          },\n          \"uid\": {\n            \"title\": \"Uid\",\n            \"type\": \"string\",\n            \"description\": \"Grafana dashboard uid for the user\"\n          },\n          \"grafana_id\": {\n            \"title\": \"Grafana Id\",\n            \"type\": \"string\",\n            \"description\": \"Grafana dashboard id for the user\"\n          }\n        }\n      },\n      \"HTTPValidationError\": {\n        \"title\": \"HTTPValidationError\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"detail\": {\n            \"title\": \"Detail\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ValidationError\"\n            }\n          }\n        }\n      },\n      \"IsSuccess\": {\n        \"title\": \"IsSuccess\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"is_success\": {\n            \"title\": \"Is Success\",\n            \"type\": \"boolean\",\n            \"default\": true\n          },\n          \"reason\": {\n            \"title\": \"Reason\",\n            \"type\": \"string\",\n            \"default\": \"\"\n          }\n        }\n      },\n      \"ListEntityParams\": {\n        \"title\": \"ListEntityParams\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"hasPoint\": {\n            \"title\": \"Haspoint\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          },\n          \"isPointOf\": {\n            \"title\": \"Ispointof\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          },\n          \"hasPart\": {\n            \"title\": \"Haspart\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          },\n          \"isPartOf\": {\n            \"title\": \"Ispartof\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          },\n          \"hasLocation\": {\n            \"title\": \"Haslocation\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          },\n          \"isLocationOf\": {\n            \"title\": \"Islocationof\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          },\n          \"feeds\": {\n            \"title\": \"Feeds\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          },\n          \"isFedBy\": {\n            \"title\": \"Isfedby\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          }\n        }\n      },\n      \"TimeseriesData\": {\n        \"title\": \"TimeseriesData\",\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"title\": \"Data\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"array\",\n              \"items\": {}\n            },\n            \"description\": \"A value tuple is actually an array in JSON and consists of different columns such as an identifier, a timestamp, and a number. For example, `[\\\"http://brickserver.com#znt1\\\", 1582412083, 71.4]`. A list of such tuples is a set of data. They share the same type of columns in a set of data, and the columns are explicitly represented in a separate field.\"\n          },\n          \"columns\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ColumnType\"\n            },\n            \"description\": \"Columns explain how to interpret the values in the data. `uuid` and `timestamp` are mandatory, and specific `value_type`s can be specified.\",\n            \"default\": [\n              \"uuid\",\n              \"timestamp\",\n              \"number\"\n            ]\n          }\n        }\n      },\n      \"TokenResponse\": {\n        \"title\": \"TokenResponse\",\n        \"required\": [\n          \"token\",\n          \"name\",\n          \"exp\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"title\": \"Token\",\n            \"type\": \"string\",\n            \"description\": \"JWT token\"\n          },\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"description\": \"Associated name with the token\"\n          },\n          \"exp\": {\n            \"title\": \"Exp\",\n            \"type\": \"integer\",\n            \"description\": \"The token's expiration time in unix timestamp\"\n          }\n        }\n      },\n      \"ValidationError\": {\n        \"title\": \"ValidationError\",\n        \"required\": [\n          \"loc\",\n          \"msg\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"loc\": {\n            \"title\": \"Location\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"msg\": {\n            \"title\": \"Message\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"title\": \"Error Type\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ValueType\": {\n        \"title\": \"ValueType\",\n        \"enum\": [\n          \"number\",\n          \"text\",\n          \"loc\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"An enumeration.\"\n      }\n    },\n    \"securitySchemes\": {\n      \"HTTPBearer\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  }\n}\n"}},"Error":"parse: paths: /brickapi/v1/entities/list: post: post_brickapi_v1_entities_list_post: requestBody: content: application/json: parse schema: parse schema: infer default type: invalid value \"{\\n                  \\\"hasPoint\\\": [],\\n                  \\\"isPointOf\\\": [],\\n                  \\\"hasPart\\\": [],\\n                  \\\"isPartOf\\\": [],\\n                  \\\"hasLocation\\\": [],\\n                  \\\"isLocationOf\\\": [],\\n                  \\\"feeds\\\": [],\\n                  \\\"isFedBy\\\": []\\n                }\""}