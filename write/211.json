{"File":{"__typename":"FileMatch","repository":{"name":"github.com/zerotier/docs"},"file":{"name":"servicev1.json","path":"static/openapi/servicev1.json","content":"{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"ZeroTierOne Service API\",\n    \"version\": \"0.1.0\",\n    \"description\": \"\u003cp\u003e This API controls the ZeroTier service that runs in the background on your computer. This is how zerotier-cli, and the macOS and Windows apps control the service. \u003c/p\u003e \u003cp\u003e API requests must be authenticated via an authentication token. ZeroTier One saves this token in the authtoken.secret file in its working directory. This token may be supplied via the X-ZT1-Auth HTTP request header. \u003c/p\u003e \u003cp\u003e For example: \u003ccode\u003ecurl -H \\\"X-ZT1-Auth: $TOKEN\\\" http://localhost:9993/status\u003c/code\u003e \u003c/p\u003e \u003cp\u003e The token can be found in: \u003cul\u003e \u003cli\u003eMac :: /Library/Application Support/ZeroTier/One\u003c/li\u003e \u003cli\u003eWindows :: \\\\ProgramData\\\\ZeroTier\\\\One\u003c/li\u003e \u003cli\u003eLinux :: /var/lib/zerotier-one\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e \u003cp\u003e You can get the OpenAPI spec here as well: \u003ccode\u003ehttps://docs.zerotier.com/openapi/servicev1.json\u003c/code\u003e\u003c/p\u003e\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:9993\",\n      \"description\": \"Production Server\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"status\",\n      \"description\": \"status\"\n    },\n    {\n      \"name\": \"network\",\n      \"description\": \"settings and status of a joined network\"\n    },\n    {\n      \"name\": \"peer\",\n      \"description\": \"peer status\"\n    }\n  ],\n  \"paths\": {\n    \"/controller\": {\n      \"get\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"Get Controller Status.\",\n        \"operationId\": \"getControllerStatus\",\n        \"description\": \"Check for controller function and return controller status.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Status object.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ControllerStatus\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/controller/network\": {\n      \"get\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"List Networks.\",\n        \"operationId\": \"getControllerNetworks\",\n        \"description\": \"List IDs of all networks hosted by this controller.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of network IDs.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"example\": \"3e245e31af7a726a\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/controller/network/{networkID}\": {\n      \"get\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"Get Network by ID.\",\n        \"description\": \"Get details of a network by it's ID.\",\n        \"operationId\": \"getControllerNetwork\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network.\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"3e245e31af7a726a\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Network Details.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ControllerNetwork\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"Create or Update a Network.\",\n        \"operationId\": \"setControllerNetwork\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network.\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"3e245e31af7a726a\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Network object JSON.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ControllerNetwork\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ControllerNetwork\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/controller/network/{controllerID}______\": {\n      \"post\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"Generate Random Network ID.\",\n        \"operationId\": \"generateControllerNetwork\",\n        \"description\": \"Create a new network with a random ID.\",\n        \"parameters\": [\n          {\n            \"name\": \"controllerID\",\n            \"description\": \"Node ID of the controller.\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Network object JSON.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ControllerNetwork\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ControllerNetwork\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/controller/network/{networkID}/member\": {\n      \"get\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"List Network Members.\",\n        \"operationId\": \"getControllerNetworkMembers\",\n        \"description\": \"JSON object containing all member IDs as keys and their memberRevisionCounter values as values.\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network.\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\"\n                  },\n                  \"example\": { \"03d516a9df\": 5, \"b9d5ad8e13\": 1 }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/controller/network/{networkID}/member{nodeID}\": {\n      \"get\": {\n        \"tags\": [\"controller\"],\n        \"summary\": \"Get Network Member Details by ID.\",\n        \"operationId\": \"getControllerNetworkMember\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network.\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"nodeID\",\n            \"description\": \"ID of the member node.\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ControllerNetworkMember\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/status\": {\n      \"get\": {\n        \"tags\": [\"status\"],\n        \"summary\": \"Node status and addressing info.\",\n        \"operationId\": \"getStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/network\": {\n      \"get\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"Get all network memberships.\",\n        \"operationId\": \"getNetworks\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Network\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/network/{networkID}\": {\n      \"get\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"Get a joined Network membership configuration by Network ID.\",\n        \"operationId\": \"getNetwork\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network to get.\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Network\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"Join a network or update it's configuration by Network ID.\",\n        \"operationId\": \"updateNetwork\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network to change.\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Network membership object\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Network\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Network\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"Leave a network.\",\n        \"operationId\": \"deleteNetwork\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Network deleted.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/peer\": {\n      \"get\": {\n        \"tags\": [\"peer\"],\n        \"summary\": \"Get all peers.\",\n        \"operationId\": \"getPeers\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Array of Peer objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Peer\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/peer/{address}\": {\n      \"get\": {\n        \"tags\": [\"peer\"],\n        \"summary\": \"Get information about a specific peer by Node ID.\",\n        \"operationId\": \"getPeer\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"description\": \"ZeroTier address of the peer to get\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Peer object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Peer\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"ApiKeyAuth\": {\n        \"type\": \"apiKey\",\n        \"in\": \"header\",\n        \"name\": \"X-ZT1-Auth\"\n      }\n    },\n    \"responses\": {\n      \"UnauthorizedError\": {\n        \"description\": \"Authorization required.\"\n      }\n    },\n    \"schemas\": {\n      \"ControllerStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"controller\": {\n            \"type\": \"boolean\",\n            \"readOnly\": true\n          },\n          \"apiVersion\": {\n            \"type\": \"integer\",\n            \"example\": 3,\n            \"readOnly\": true\n          },\n          \"clock\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1623101592,\n            \"readOnly\": true\n          }\n        }\n      },\n      \"ControllerNetwork\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"3e245e31af000001\"\n          },\n          \"nwid\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"3e245e31af000001\"\n          },\n          \"objtype\": {\n            \"type\": \"string\",\n            \"example\": \"network\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"my-cool-network\"\n          },\n          \"creationTime\": {\n            \"type\": \"number\",\n            \"example\": 1623101592,\n            \"readOnly\": true\n          },\n          \"private\": {\n            \"type\": \"boolean\"\n          },\n          \"enableBroadcast\": {\n            \"type\": \"boolean\"\n          },\n          \"v4AssignMode\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"zt\": {\n                \"type\": \"boolean\"\n              }\n            }\n          },\n          \"v6AssignMode\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"6plane\": {\n                \"type\": \"boolean\"\n              },\n              \"rfc4193\": {\n                \"type\": \"boolean\"\n              },\n              \"zt\": {\n                \"type\": \"boolean\"\n              }\n            }\n          },\n          \"mtu\": {\n            \"type\": \"integer\",\n            \"example\": 2800\n          },\n          \"multicastLimit\": {\n            \"type\": \"integer\",\n            \"example\": 32\n          },\n          \"revision\": {\n            \"type\": \"integer\",\n            \"example\": 1,\n            \"readOnly\": true\n          },\n          \"routes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"target\": {\n                  \"type\": \"string\",\n                  \"example\": \"192.168.192.0/24\"\n                },\n                \"via\": {\n                  \"type\": \"string\",\n                  \"example\": \"192.168.192.1\",\n                  \"nullable\": true\n                }\n              }\n            }\n          },\n          \"ipAssignmentPools\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"ipRangeStart\": {\n                  \"type\": \"string\",\n                  \"example\": \"192.168.192.1\"\n                },\n                \"ipRangeEnd\": {\n                  \"type\": \"string\",\n                  \"example\": \"192.168.192.254\"\n                }\n              }\n            }\n          },\n          \"rules\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"capabilities\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"remoteTraceTarget\": {\n            \"type\": \"string\",\n            \"example\": \"7f5d90eb87\"\n          },\n          \"remoteTraceLevel\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"ControllerNetworkMember\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"eb8d45c5c9\"\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"eb8d45c5c9\"\n          },\n          \"nwid\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"3e245e31af000001\"\n          },\n          \"authorized\": {\n            \"type\": \"boolean\"\n          },\n          \"activeBridge\": {\n            \"type\": \"boolean\"\n          },\n          \"identity\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"eb8d45c5c9:0:0279558f1a731cb2f628b3adc9f8915d7c2f3752e07d75f2d75fde08274b9c3a43d8b04115fd30f37043f61758ac874b844cc184fdf51e1022e988c1d093a50d:91a840bcd3fbac910afc56be4222973f675204a0ca9625218352e1c82debaa758b915d948c5fe4bd3c38cf1255904804a5b937f5edaef182ba8d5f3d8a243329\"\n          },\n          \"ipAssignments\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"example\": \"10.147.20.190\"\n            }\n          },\n          \"revision\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"example\": 1\n          },\n          \"vMajor\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"example\": 1\n          },\n          \"vMinor\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"example\": 6\n          },\n          \"vRev\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"example\": 5\n          },\n          \"vProto\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"example\": 5\n          }\n        }\n      },\n      \"Status\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"example\": \"0deadbeef1\"\n          },\n          \"clock\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1618948931097\n          },\n          \"config\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"settings\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"allowTcpFallbackRelay\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"portMappingEnabled\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"primaryPort\": {\n                    \"type\": \"integer\",\n                    \"example\": 9993\n                  }\n                }\n              }\n            }\n          },\n          \"online\": {\n            \"type\": \"boolean\"\n          },\n          \"planetWorldId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 149604618\n          },\n          \"planetWorldTimestamp\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1618339625163\n          },\n          \"publicIdentity\": {\n            \"type\": \"string\",\n            \"example\": \"33c799cb58:0:690b44091ec50a44eb7f7769354b49abb47ac8747d99d547a1ec8c4d47623c5a6e3927f29b8d8443aebebc9ba4d4a812bd8902d71318db34b89d00186e8f4e4e\"\n          },\n          \"tcpFallbackActive\": {\n            \"type\": \"boolean\"\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"example\": \"1.6.4\"\n          },\n          \"versionBuild\": {\n            \"type\": \"integer\",\n            \"example\": 0\n          },\n          \"versionMajor\": {\n            \"type\": \"integer\",\n            \"example\": 1\n          },\n          \"versionMinor\": {\n            \"type\": \"integer\",\n            \"example\": 6\n          },\n          \"versionRev\": {\n            \"type\": \"integer\",\n            \"example\": 4\n          }\n        }\n      },\n      \"Network\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"allowDNS\": {\n                \"type\": \"boolean\",\n                \"readOnly\": false,\n                \"description\": \"Let ZeroTier modify the system's DNS settings.\",\n                \"example\": false\n              },\n              \"allowDefault\": {\n                \"type\": \"boolean\",\n                \"readOnly\": false,\n                \"description\": \"Let ZeroTier modify the system's default route.\",\n                \"example\": false\n              },\n              \"allowGlobal\": {\n                \"type\": \"boolean\",\n                \"readOnly\": false,\n                \"description\": \"Let ZeroTier manage IP addresses and route assignments that aren't in private ranges (rfc1918).\",\n                \"example\": false\n              },\n              \"allowManaged\": {\n                \"type\": \"boolean\",\n                \"readOnly\": false,\n                \"description\": \"Let ZeroTier manage IP addresses and Route assignments.\",\n                \"example\": true\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"allowDNS\": {\n                \"type\": \"boolean\",\n                \"readOnly\": false,\n                \"description\": \"Let ZeroTier modify the system's DNS settings.\"\n              },\n              \"allowDefault\": {\n                \"type\": \"boolean\",\n                \"readOnly\": false,\n                \"description\": \"Let ZeroTier modify the system's default route.\"\n              },\n              \"allowGlobal\": {\n                \"type\": \"boolean\",\n                \"readOnly\": false,\n                \"description\": \"Let ZeroTier manage IP addresses and Route assignments that aren't in private ranges (rfc1918).\"\n              },\n              \"allowManaged\": {\n                \"type\": \"boolean\",\n                \"readOnly\": false,\n                \"description\": \"Let ZeroTier to manage IP addresses and Route assignments.\"\n              },\n              \"assignedAddresses\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"example\": \"10.147.20.190\"\n                }\n              },\n              \"bridge\": {\n                \"type\": \"boolean\"\n              },\n              \"broadcastEnabled\": {\n                \"type\": \"boolean\"\n              },\n              \"dns\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"domain\": {\n                    \"type\": \"string\",\n                    \"example\": \"zt.example.com\"\n                  },\n                  \"servers\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"example\": \"10.147.20.3\"\n                    }\n                  }\n                }\n              },\n              \"id\": {\n                \"type\": \"string\",\n                \"example\": \"565799d8f620c5c5\"\n              },\n              \"mac\": {\n                \"type\": \"string\",\n                \"example\": \"e6:d2:2b:e6:68:73\",\n                \"description\": \"MAC address for this network's interface.\"\n              },\n              \"mtu\": {\n                \"type\": \"integer\",\n                \"example\": 2800\n              },\n              \"multicastSubscriptions\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"adi\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\",\n                      \"example\": 0\n                    },\n                    \"mac\": {\n                      \"type\": \"string\",\n                      \"example\": \"34:34:ff:da:6e:ff\"\n                    }\n                  }\n                }\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"example\": \"clever_krum\"\n              },\n              \"netconfRevision\": {\n                \"type\": \"integer\",\n                \"example\": 123\n              },\n              \"portDeviceName\": {\n                \"type\": \"string\",\n                \"example\": \"ztnnhrtimp\"\n              },\n              \"portError\": {\n                \"type\": \"integer\",\n                \"example\": 0\n              },\n              \"routes\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"properties\": {\n                    \"flags\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"metric\": {\n                      \"type\": \"integer\",\n                      \"example\": 0\n                    },\n                    \"target\": {\n                      \"type\": \"string\",\n                      \"example\": \"10.147.20.0/24\"\n                    },\n                    \"via\": {\n                      \"type\": \"string\",\n                      \"example\": \"192.168.168.5\"\n                    }\n                  }\n                }\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"example\": \"OK\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"example\": \"PRIVATE\"\n              }\n            }\n          }\n        ]\n      },\n      \"Peer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"example\": \"992fcf1db7\"\n          },\n          \"isBonded\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          },\n          \"latency\": {\n            \"type\": \"integer\",\n            \"example\": 40\n          },\n          \"paths\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"active\": {\n                  \"type\": \"boolean\"\n                },\n                \"address\": {\n                  \"type\": \"string\",\n                  \"example\": \"195.181.173.159/9993\"\n                },\n                \"expired\": {\n                  \"type\": \"boolean\",\n                  \"example\": false\n                },\n                \"lastReceive\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\",\n                  \"example\": 1618955164580\n                },\n                \"lastSend\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\",\n                  \"example\": 1618955164596\n                },\n                \"preferred\": {\n                  \"type\": \"boolean\",\n                  \"example\": true\n                },\n                \"trustedPathId\": {\n                  \"type\": \"integer\",\n                  \"example\": 0\n                }\n              }\n            }\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"example\": \"LEAF\"\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"example\": \"1.6.4\"\n          },\n          \"versionMajor\": {\n            \"type\": \"integer\",\n            \"example\": 1\n          },\n          \"versionMinor\": {\n            \"type\": \"integer\",\n            \"example\": 6\n          },\n          \"versionRev\": {\n            \"type\": \"integer\",\n            \"example\": 4\n          }\n        }\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"ApiKeyAuth\": []\n    }\n  ]\n}\n"}},"Error":"schemas: failed to write file oas_schemas_gen.go: 180:4: 'p' exponent requires hexadecimal mantissa (and 1 more errors)"}